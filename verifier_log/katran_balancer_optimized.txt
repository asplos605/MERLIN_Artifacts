libbpf: loading temp2.o
libbpf: elf: section(3) xdp, size 18136, link 0, flags 6, type=1
libbpf: sec 'xdp': found program 'balancer_ingress' at insn offset 0 (0 bytes), code size 2267 insns (18136 bytes)
libbpf: elf: section(4) .relxdp, size 832, link 26, flags 40, type=9
libbpf: elf: section(5) license, size 4, link 0, flags 3, type=1
libbpf: license of temp2.o is GPL
libbpf: elf: section(6) .maps, size 640, link 0, flags 3, type=1
libbpf: elf: section(17) .BTF, size 16840, link 0, flags 0, type=1
libbpf: elf: section(19) .BTF.ext, size 14976, link 0, flags 0, type=1
libbpf: elf: section(21) .eh_frame, size 48, link 0, flags 2, type=1
libbpf: elf: skipping unrecognized data section(21) .eh_frame
libbpf: elf: section(22) .rel.eh_frame, size 16, link 26, flags 40, type=9
libbpf: elf: skipping relo section(22) .rel.eh_frame for section(21) .eh_frame
libbpf: elf: section(26) .symtab, size 3888, link 1, flags 0, type=2
libbpf: looking for externs among 162 symbols...
libbpf: collected 0 externs total
libbpf: map 'ctl_array': at sec_idx 6, offset 0.
libbpf: map 'ctl_array': found type = 2.
libbpf: map 'ctl_array': found key [6], sz = 4.
libbpf: map 'ctl_array': found value [9], sz = 8.
libbpf: map 'ctl_array': found max_entries = 16.
libbpf: map 'ctl_array': found map_flags = 0x0.
libbpf: map 'vip_map': at sec_idx 6, offset 40.
libbpf: map 'vip_map': found type = 1.
libbpf: map 'vip_map': found key [25], sz = 20.
libbpf: map 'vip_map': found value [32], sz = 8.
libbpf: map 'vip_map': found max_entries = 512.
libbpf: map 'vip_map': found map_flags = 0x0.
libbpf: map 'fallback_cache': at sec_idx 6, offset 80.
libbpf: map 'fallback_cache': found type = 9.
libbpf: map 'fallback_cache': found key [40], sz = 40.
libbpf: map 'fallback_cache': found value [46], sz = 16.
libbpf: map 'fallback_cache': found max_entries = 1000.
libbpf: map 'fallback_cache': found map_flags = 0x0.
libbpf: map 'lru_mapping': at sec_idx 6, offset 120.
libbpf: map 'lru_mapping': found type = 12.
libbpf: map 'lru_mapping': found key [6], sz = 4.
libbpf: map 'lru_mapping': found value [6], sz = 4.
libbpf: map 'lru_mapping': found max_entries = 128.
libbpf: map 'lru_mapping': found map_flags = 0x0.
libbpf: map 'lru_mapping': found inner map definition.
libbpf: map 'lru_mapping.inner': found type = 9.
libbpf: map 'lru_mapping.inner': found key [40], sz = 40.
libbpf: map 'lru_mapping.inner': found value [46], sz = 16.
libbpf: map 'lru_mapping.inner': found max_entries = 1000.
libbpf: map 'ch_rings': at sec_idx 6, offset 160.
libbpf: map 'ch_rings': found type = 2.
libbpf: map 'ch_rings': found key [6], sz = 4.
libbpf: map 'ch_rings': found value [6], sz = 4.
libbpf: map 'ch_rings': found max_entries = 33554944.
libbpf: map 'ch_rings': found map_flags = 0x0.
libbpf: map 'reals': at sec_idx 6, offset 200.
libbpf: map 'reals': found type = 2.
libbpf: map 'reals': found key [6], sz = 4.
libbpf: map 'reals': found value [65], sz = 20.
libbpf: map 'reals': found max_entries = 4096.
libbpf: map 'reals': found map_flags = 0x0.
libbpf: map 'reals_stats': at sec_idx 6, offset 240.
libbpf: map 'reals_stats': found type = 6.
libbpf: map 'reals_stats': found key [6], sz = 4.
libbpf: map 'reals_stats': found value [74], sz = 16.
libbpf: map 'reals_stats': found max_entries = 4096.
libbpf: map 'reals_stats': found map_flags = 0x0.
libbpf: map 'lru_miss_stats': at sec_idx 6, offset 280.
libbpf: map 'lru_miss_stats': found type = 6.
libbpf: map 'lru_miss_stats': found key [6], sz = 4.
libbpf: map 'lru_miss_stats': found value [6], sz = 4.
libbpf: map 'lru_miss_stats': found max_entries = 4096.
libbpf: map 'lru_miss_stats': found map_flags = 0x0.
libbpf: map 'vip_miss_stats': at sec_idx 6, offset 320.
libbpf: map 'vip_miss_stats': found type = 2.
libbpf: map 'vip_miss_stats': found key [6], sz = 4.
libbpf: map 'vip_miss_stats': found value [25], sz = 20.
libbpf: map 'vip_miss_stats': found max_entries = 1.
libbpf: map 'vip_miss_stats': found map_flags = 0x0.
libbpf: map 'stats': at sec_idx 6, offset 360.
libbpf: map 'stats': found type = 6.
libbpf: map 'stats': found key [6], sz = 4.
libbpf: map 'stats': found value [74], sz = 16.
libbpf: map 'stats': found max_entries = 1024.
libbpf: map 'stats': found map_flags = 0x0.
libbpf: map 'quic_stats_map': at sec_idx 6, offset 400.
libbpf: map 'quic_stats_map': found type = 6.
libbpf: map 'quic_stats_map': found key [6], sz = 4.
libbpf: map 'quic_stats_map': found value [86], sz = 104.
libbpf: map 'quic_stats_map': found max_entries = 1.
libbpf: map 'quic_stats_map': found map_flags = 0x0.
libbpf: map 'decap_vip_stats': at sec_idx 6, offset 440.
libbpf: map 'decap_vip_stats': found type = 6.
libbpf: map 'decap_vip_stats': found key [6], sz = 4.
libbpf: map 'decap_vip_stats': found value [74], sz = 16.
libbpf: map 'decap_vip_stats': found max_entries = 512.
libbpf: map 'decap_vip_stats': found map_flags = 0x0.
libbpf: map 'server_id_map': at sec_idx 6, offset 480.
libbpf: map 'server_id_map': found type = 2.
libbpf: map 'server_id_map': found key [6], sz = 4.
libbpf: map 'server_id_map': found value [6], sz = 4.
libbpf: map 'server_id_map': found max_entries = 16777214.
libbpf: map 'server_id_map': found map_flags = 0x0.
libbpf: map 'tpr_stats_map': at sec_idx 6, offset 520.
libbpf: map 'tpr_stats_map': found type = 6.
libbpf: map 'tpr_stats_map': found key [6], sz = 4.
libbpf: map 'tpr_stats_map': found value [96], sz = 32.
libbpf: map 'tpr_stats_map': found max_entries = 1.
libbpf: map 'tpr_stats_map': found map_flags = 0x0.
libbpf: map 'server_id_stats': at sec_idx 6, offset 560.
libbpf: map 'server_id_stats': found type = 6.
libbpf: map 'server_id_stats': found key [6], sz = 4.
libbpf: map 'server_id_stats': found value [74], sz = 16.
libbpf: map 'server_id_stats': found max_entries = 512.
libbpf: map 'server_id_stats': found map_flags = 0x0.
libbpf: map 'server_id_flags': at sec_idx 6, offset 600.
libbpf: map 'server_id_flags': found type = 2.
libbpf: map 'server_id_flags': found key [6], sz = 4.
libbpf: map 'server_id_flags': found value [102], sz = 1.
libbpf: map 'server_id_flags': found max_entries = 1.
libbpf: map 'server_id_flags': found map_flags = 0x0.
libbpf: sec '.relxdp': collecting relocation for section(3) 'xdp'
libbpf: sec '.relxdp': relo #0: insn #338 against 'vip_map'
libbpf: prog 'balancer_ingress': found map 1 (vip_map, sec 6, off 40) for insn #338
libbpf: sec '.relxdp': relo #1: insn #346 against 'vip_map'
libbpf: prog 'balancer_ingress': found map 1 (vip_map, sec 6, off 40) for insn #346
libbpf: sec '.relxdp': relo #2: insn #369 against 'stats'
libbpf: prog 'balancer_ingress': found map 9 (stats, sec 6, off 360) for insn #369
libbpf: sec '.relxdp': relo #3: insn #390 against 'lru_mapping'
libbpf: prog 'balancer_ingress': found map 3 (lru_mapping, sec 6, off 120) for insn #390
libbpf: sec '.relxdp': relo #4: insn #398 against 'stats'
libbpf: prog 'balancer_ingress': found map 9 (stats, sec 6, off 360) for insn #398
libbpf: sec '.relxdp': relo #5: insn #405 against 'fallback_cache'
libbpf: prog 'balancer_ingress': found map 2 (fallback_cache, sec 6, off 80) for insn #405
libbpf: sec '.relxdp': relo #6: insn #419 against 'stats'
libbpf: prog 'balancer_ingress': found map 9 (stats, sec 6, off 360) for insn #419
libbpf: sec '.relxdp': relo #7: insn #479 against 'stats'
libbpf: prog 'balancer_ingress': found map 9 (stats, sec 6, off 360) for insn #479
libbpf: sec '.relxdp': relo #8: insn #553 against 'vip_map'
libbpf: prog 'balancer_ingress': found map 1 (vip_map, sec 6, off 40) for insn #553
libbpf: sec '.relxdp': relo #9: insn #561 against 'vip_map'
libbpf: prog 'balancer_ingress': found map 1 (vip_map, sec 6, off 40) for insn #561
libbpf: sec '.relxdp': relo #10: insn #580 against 'stats'
libbpf: prog 'balancer_ingress': found map 9 (stats, sec 6, off 360) for insn #580
libbpf: sec '.relxdp': relo #11: insn #601 against 'lru_mapping'
libbpf: prog 'balancer_ingress': found map 3 (lru_mapping, sec 6, off 120) for insn #601
libbpf: sec '.relxdp': relo #12: insn #610 against 'stats'
libbpf: prog 'balancer_ingress': found map 9 (stats, sec 6, off 360) for insn #610
libbpf: sec '.relxdp': relo #13: insn #617 against 'fallback_cache'
libbpf: prog 'balancer_ingress': found map 2 (fallback_cache, sec 6, off 80) for insn #617
libbpf: sec '.relxdp': relo #14: insn #631 against 'stats'
libbpf: prog 'balancer_ingress': found map 9 (stats, sec 6, off 360) for insn #631
libbpf: sec '.relxdp': relo #15: insn #652 against 'stats'
libbpf: prog 'balancer_ingress': found map 9 (stats, sec 6, off 360) for insn #652
libbpf: sec '.relxdp': relo #16: insn #691 against 'quic_stats_map'
libbpf: prog 'balancer_ingress': found map 10 (quic_stats_map, sec 6, off 400) for insn #691
libbpf: sec '.relxdp': relo #17: insn #722 against 'quic_stats_map'
libbpf: prog 'balancer_ingress': found map 10 (quic_stats_map, sec 6, off 400) for insn #722
libbpf: sec '.relxdp': relo #18: insn #798 against 'server_id_stats'
libbpf: prog 'balancer_ingress': found map 14 (server_id_stats, sec 6, off 560) for insn #798
libbpf: sec '.relxdp': relo #19: insn #854 against 'server_id_map'
libbpf: prog 'balancer_ingress': found map 12 (server_id_map, sec 6, off 480) for insn #854
libbpf: sec '.relxdp': relo #20: insn #898 against 'reals'
libbpf: prog 'balancer_ingress': found map 5 (reals, sec 6, off 200) for insn #898
libbpf: sec '.relxdp': relo #21: insn #909 against 'stats'
libbpf: prog 'balancer_ingress': found map 9 (stats, sec 6, off 360) for insn #909
libbpf: sec '.relxdp': relo #22: insn #930 against 'stats'
libbpf: prog 'balancer_ingress': found map 9 (stats, sec 6, off 360) for insn #930
libbpf: sec '.relxdp': relo #23: insn #1215 against 'ch_rings'
libbpf: prog 'balancer_ingress': found map 4 (ch_rings, sec 6, off 160) for insn #1215
libbpf: sec '.relxdp': relo #24: insn #1227 against 'stats'
libbpf: prog 'balancer_ingress': found map 9 (stats, sec 6, off 360) for insn #1227
libbpf: sec '.relxdp': relo #25: insn #1238 against 'reals'
libbpf: prog 'balancer_ingress': found map 5 (reals, sec 6, off 200) for insn #1238
libbpf: sec '.relxdp': relo #26: insn #1247 against 'stats'
libbpf: prog 'balancer_ingress': found map 9 (stats, sec 6, off 360) for insn #1247
libbpf: sec '.relxdp': relo #27: insn #1277 against 'vip_miss_stats'
libbpf: prog 'balancer_ingress': found map 8 (vip_miss_stats, sec 6, off 320) for insn #1277
libbpf: sec '.relxdp': relo #28: insn #1308 against 'lru_miss_stats'
libbpf: prog 'balancer_ingress': found map 7 (lru_miss_stats, sec 6, off 280) for insn #1308
libbpf: sec '.relxdp': relo #29: insn #1322 against 'ctl_array'
libbpf: prog 'balancer_ingress': found map 0 (ctl_array, sec 6, off 0) for insn #1322
libbpf: sec '.relxdp': relo #30: insn #1330 against 'stats'
libbpf: prog 'balancer_ingress': found map 9 (stats, sec 6, off 360) for insn #1330
libbpf: sec '.relxdp': relo #31: insn #1345 against 'reals_stats'
libbpf: prog 'balancer_ingress': found map 6 (reals_stats, sec 6, off 240) for insn #1345
libbpf: sec '.relxdp': relo #32: insn #1531 against 'reals'
libbpf: prog 'balancer_ingress': found map 5 (reals, sec 6, off 200) for insn #1531
libbpf: sec '.relxdp': relo #33: insn #1541 against 'server_id_flags'
libbpf: prog 'balancer_ingress': found map 15 (server_id_flags, sec 6, off 600) for insn #1541
libbpf: sec '.relxdp': relo #34: insn #1569 against 'server_id_stats'
libbpf: prog 'balancer_ingress': found map 14 (server_id_stats, sec 6, off 560) for insn #1569
libbpf: sec '.relxdp': relo #35: insn #1625 against 'server_id_map'
libbpf: prog 'balancer_ingress': found map 12 (server_id_map, sec 6, off 480) for insn #1625
libbpf: sec '.relxdp': relo #36: insn #1669 against 'reals'
libbpf: prog 'balancer_ingress': found map 5 (reals, sec 6, off 200) for insn #1669
libbpf: sec '.relxdp': relo #37: insn #1680 against 'stats'
libbpf: prog 'balancer_ingress': found map 9 (stats, sec 6, off 360) for insn #1680
libbpf: sec '.relxdp': relo #38: insn #1701 against 'stats'
libbpf: prog 'balancer_ingress': found map 9 (stats, sec 6, off 360) for insn #1701
libbpf: sec '.relxdp': relo #39: insn #1820 against 'ch_rings'
libbpf: prog 'balancer_ingress': found map 4 (ch_rings, sec 6, off 160) for insn #1820
libbpf: sec '.relxdp': relo #40: insn #1831 against 'stats'
libbpf: prog 'balancer_ingress': found map 9 (stats, sec 6, off 360) for insn #1831
libbpf: sec '.relxdp': relo #41: insn #1842 against 'reals'
libbpf: prog 'balancer_ingress': found map 5 (reals, sec 6, off 200) for insn #1842
libbpf: sec '.relxdp': relo #42: insn #1850 against 'stats'
libbpf: prog 'balancer_ingress': found map 9 (stats, sec 6, off 360) for insn #1850
libbpf: sec '.relxdp': relo #43: insn #1885 against 'vip_miss_stats'
libbpf: prog 'balancer_ingress': found map 8 (vip_miss_stats, sec 6, off 320) for insn #1885
libbpf: sec '.relxdp': relo #44: insn #1902 against 'lru_miss_stats'
libbpf: prog 'balancer_ingress': found map 7 (lru_miss_stats, sec 6, off 280) for insn #1902
libbpf: sec '.relxdp': relo #45: insn #1915 against 'ctl_array'
libbpf: prog 'balancer_ingress': found map 0 (ctl_array, sec 6, off 0) for insn #1915
libbpf: sec '.relxdp': relo #46: insn #1923 against 'stats'
libbpf: prog 'balancer_ingress': found map 9 (stats, sec 6, off 360) for insn #1923
libbpf: sec '.relxdp': relo #47: insn #1937 against 'reals_stats'
libbpf: prog 'balancer_ingress': found map 6 (reals_stats, sec 6, off 240) for insn #1937
libbpf: sec '.relxdp': relo #48: insn #2131 against 'reals'
libbpf: prog 'balancer_ingress': found map 5 (reals, sec 6, off 200) for insn #2131
libbpf: sec '.relxdp': relo #49: insn #2144 against 'server_id_flags'
libbpf: prog 'balancer_ingress': found map 15 (server_id_flags, sec 6, off 600) for insn #2144
libbpf: sec '.relxdp': relo #50: insn #2216 against 'server_id_stats'
libbpf: prog 'balancer_ingress': found map 14 (server_id_stats, sec 6, off 560) for insn #2216
libbpf: sec '.relxdp': relo #51: insn #2249 against 'server_id_stats'
libbpf: prog 'balancer_ingress': found map 14 (server_id_stats, sec 6, off 560) for insn #2249
libbpf: map 'ctl_array': created successfully, fd=4
libbpf: map 'vip_map': created successfully, fd=5
libbpf: map 'fallback_cache': created successfully, fd=6
libbpf: map 'lru_mapping': created successfully, fd=8
libbpf: map 'ch_rings': created successfully, fd=7
libbpf: map 'reals': created successfully, fd=9
libbpf: map 'reals_stats': created successfully, fd=10
libbpf: map 'lru_miss_stats': created successfully, fd=11
libbpf: map 'vip_miss_stats': created successfully, fd=12
libbpf: map 'stats': created successfully, fd=13
libbpf: map 'quic_stats_map': created successfully, fd=14
libbpf: map 'decap_vip_stats': created successfully, fd=15
libbpf: map 'server_id_map': created successfully, fd=16
libbpf: map 'tpr_stats_map': created successfully, fd=17
libbpf: map 'server_id_stats': created successfully, fd=18
libbpf: map 'server_id_flags': created successfully, fd=19
libbpf: prog 'balancer_ingress': -- BEGIN PROG LOAD LOG --
func#0 @0
0: R1=ctx(off=0,imm=0) R10=fp0
; int balancer_ingress(struct xdp_md* ctx) {
0: (bf) r6 = r1                       ; R1=ctx(off=0,imm=0) R6_w=ctx(off=0,imm=0)
1: (b7) r9 = 1                        ; R9_w=1
; void* data_end = (void*)(long)ctx->data_end;
2: (61) r8 = *(u32 *)(r6 +4)          ; R6_w=ctx(off=0,imm=0) R8_w=pkt_end(off=0,imm=0)
; void* data = (void*)(long)ctx->data;
3: (61) r7 = *(u32 *)(r6 +0)          ; R6_w=ctx(off=0,imm=0) R7_w=pkt(off=0,r=0,imm=0)
; if (data + nh_off > data_end) {
4: (bf) r1 = r7                       ; R1_w=pkt(off=0,r=0,imm=0) R7_w=pkt(off=0,r=0,imm=0)
5: (07) r1 += 14                      ; R1_w=pkt(off=14,r=0,imm=0)
; if (data + nh_off > data_end) {
6: (2d) if r1 > r8 goto pc+1851       ; R1_w=pkt(off=14,r=14,imm=0) R8_w=pkt_end(off=0,imm=0)
; eth_proto = eth->h_proto;
7: (71) r3 = *(u8 *)(r7 +12)          ; R3_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=0,r=14,imm=0)
8: (71) r2 = *(u8 *)(r7 +13)          ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=0,r=14,imm=0)
9: (67) r2 <<= 8                      ; R2_w=scalar(umax=65280,var_off=(0x0; 0xff00))
10: (4f) r2 |= r3                     ; R2_w=scalar() R3_w=scalar(umax=255,var_off=(0x0; 0xff))
; if (eth_proto == BE_ETH_P_IP) {
11: (15) if r2 == 0xdd86 goto pc+131          ; R2_w=scalar()
12: (b7) r9 = 2                       ; R9=2
13: (55) if r2 != 0x8 goto pc+1844    ; R2=8
14: (05) goto pc+0
; struct packet_description pckt = {};
15: (7a) *(u64 *)(r10 -40) = 0        ; R10=fp0 fp-40_w=mmmmmmmm
16: (7a) *(u64 *)(r10 -48) = 0        ; R10=fp0 fp-48_w=mmmmmmmm
17: (7a) *(u64 *)(r10 -56) = 0        ; R10=fp0 fp-56_w=mmmmmmmm
18: (7a) *(u64 *)(r10 -64) = 0        ; R10=fp0 fp-64_w=mmmmmmmm
19: (7a) *(u64 *)(r10 -72) = 0        ; R10=fp0 fp-72_w=mmmmmmmm
20: (7a) *(u64 *)(r10 -80) = 0        ; R10=fp0 fp-80_w=mmmmmmmm
; struct vip_definition vip = {};
21: (62) *(u32 *)(r10 -88) = 0        ; R10=fp0 fp-88=????mmmm
22: (7a) *(u64 *)(r10 -96) = 0        ; R10=fp0 fp-96_w=mmmmmmmm
23: (7a) *(u64 *)(r10 -104) = 0       ; R10=fp0 fp-104_w=mmmmmmmm
; __u32 mac_addr_pos = 0;
24: (62) *(u32 *)(r10 -112) = 0       ; R10=fp0 fp-112=????mmmm
25: (b7) r9 = 1                       ; R9_w=1
; if (iph + 1 > data_end) {
26: (bf) r3 = r7                      ; R3_w=pkt(off=0,r=14,imm=0) R7=pkt(off=0,r=14,imm=0)
27: (07) r3 += 34                     ; R3=pkt(off=34,r=14,imm=0)
; if (iph + 1 > data_end) {
28: (2d) if r3 > r8 goto pc+1829      ; R3=pkt(off=34,r=34,imm=0) R8=pkt_end(off=0,imm=0)
; if (iph->ihl != 5) {
29: (71) r1 = *(u8 *)(r1 +0)          ; R1_w=scalar(umax=255,var_off=(0x0; 0xff))
30: (57) r1 &= 15                     ; R1_w=scalar(umax=15,var_off=(0x0; 0xf))
; if (iph->ihl != 5) {
31: (55) if r1 != 0x5 goto pc+1826    ; R1_w=5
; pckt->tos = iph->tos;
32: (71) r1 = *(u8 *)(r7 +15)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=34,imm=0)
; pckt->tos = iph->tos;
33: (73) *(u8 *)(r10 -35) = r1        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0 fp-40=mmmmmmmm
; *protocol = iph->protocol;
34: (71) r1 = *(u8 *)(r7 +23)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=34,imm=0)
; pckt->flow.proto = *protocol;
35: (73) *(u8 *)(r10 -44) = r1        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0 fp-48=mmmmmmmm
; if (iph->frag_off & PCKT_FRAGMENTED) {
36: (69) r2 = *(u16 *)(r7 +20)        ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R7=pkt(off=0,r=34,imm=0)
; if (iph->frag_off & PCKT_FRAGMENTED) {
37: (bf) r4 = r2                      ; R2_w=scalar(id=1,umax=65535,var_off=(0x0; 0xffff)) R4_w=scalar(id=1,umax=65535,var_off=(0x0; 0xffff))
38: (57) r4 &= 65343                  ; R4=scalar(umax=65343,var_off=(0x0; 0xff3f))
; if (iph->frag_off & PCKT_FRAGMENTED) {
39: (55) if r4 != 0x0 goto pc+1818    ; R4=0
; 
40: (69) r4 = *(u16 *)(r7 +16)        ; R4_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R7=pkt(off=0,r=34,imm=0)
; if (*protocol == IPPROTO_ICMP) {
41: (7b) *(u64 *)(r10 -136) = r4      ; R4_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-136_w=
42: (bf) r4 = r1                      ; R1=scalar(id=2,umax=255,var_off=(0x0; 0xff)) R4_w=scalar(id=2,umax=255,var_off=(0x0; 0xff))
; if (*protocol == IPPROTO_ICMP) {
43: (55) if r4 != 0x1 goto pc+391     ; R4_w=1
; if (icmp_hdr + 1 > data_end) {
44: (bf) r4 = r7                      ; R4_w=pkt(off=0,r=34,imm=0) R7=pkt(off=0,r=34,imm=0)
45: (07) r4 += 42                     ; R4_w=pkt(off=42,r=34,imm=0)
; if (icmp_hdr + 1 > data_end) {
46: (2d) if r4 > r8 goto pc+1811      ; R4_w=pkt(off=42,r=42,imm=0) R8=pkt_end(off=0,imm=0)
; if (icmp_hdr->type == ICMP_ECHO) {
47: (71) r1 = *(u8 *)(r3 +0)          ; R1=scalar(umax=255,var_off=(0x0; 0xff)) R3=pkt(off=34,r=42,imm=0)
; if (icmp_hdr->type == ICMP_ECHO) {
48: (15) if r1 == 0x3 goto pc+596     ; R1=scalar(umax=255,var_off=(0x0; 0xff))
49: (b7) r9 = 2                       ; R9_w=2
50: (55) if r1 != 0x8 goto pc+1807    ; R1=8
; *csum += *next_iph_u16++;
51: (79) r1 = *(u64 *)(r10 -136)      ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
52: (0f) r2 += r1                     ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R2_w=scalar(umax=131070,var_off=(0x0; 0x1ffff))
53: (05) goto pc+0
; iph->ttl = DEFAULT_TTL;
54: (72) *(u8 *)(r7 +22) = 64         ; R7=pkt(off=0,r=42,imm=0)
; *csum += *next_iph_u16++;
55: (69) r1 = *(u16 *)(r7 +14)        ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R7=pkt(off=0,r=42,imm=0)
; *csum += *next_iph_u16++;
56: (0f) r2 += r1                     ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R2_w=scalar(umax=196605,var_off=(0x0; 0x3ffff))
; tmp_addr = iph->daddr;
57: (61) r1 = *(u32 *)(r7 +30)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R7=pkt(off=0,r=42,imm=0)
; *csum += *next_iph_u16++;
58: (bf) r3 = r1                      ; R1_w=scalar(id=3,umax=4294967295,var_off=(0x0; 0xffffffff)) R3_w=scalar(id=3,umax=4294967295,var_off=(0x0; 0xffffffff))
59: (57) r3 &= 65535                  ; R3_w=scalar(umax=65535,var_off=(0x0; 0xffff))
60: (bf) r4 = r1                      ; R1_w=scalar(id=3,umax=4294967295,var_off=(0x0; 0xffffffff)) R4_w=scalar(id=3,umax=4294967295,var_off=(0x0; 0xffffffff))
61: (77) r4 >>= 16                    ; R4_w=scalar(umax=65535,var_off=(0x0; 0xffff))
; *csum += *next_iph_u16++;
62: (0f) r4 += r3                     ; R3_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R4_w=scalar(umax=131070,var_off=(0x0; 0x1ffff))
; iph->daddr = iph->saddr;
63: (61) r3 = *(u32 *)(r7 +26)        ; R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R7=pkt(off=0,r=42,imm=0)
; *csum += *next_iph_u16++;
64: (bf) r5 = r3                      ; R3_w=scalar(id=4,umax=4294967295,var_off=(0x0; 0xffffffff)) R5_w=scalar(id=4,umax=4294967295,var_off=(0x0; 0xffffffff))
65: (57) r5 &= 65535                  ; R5_w=scalar(umax=65535,var_off=(0x0; 0xffff))
; *csum += *next_iph_u16++;
66: (0f) r4 += r5                     ; R4_w=scalar(umax=196605,var_off=(0x0; 0x3ffff)) R5_w=scalar(umax=65535,var_off=(0x0; 0xffff))
; *csum += *next_iph_u16++;
67: (bf) r5 = r3                      ; R3_w=scalar(id=4,umax=4294967295,var_off=(0x0; 0xffffffff)) R5_w=scalar(id=4,umax=4294967295,var_off=(0x0; 0xffffffff))
68: (77) r5 >>= 16                    ; R5_w=scalar(umax=65535,var_off=(0x0; 0xffff))
; *csum += *next_iph_u16++;
69: (0f) r4 += r5                     ; R4_w=scalar(umax=262140,var_off=(0x0; 0x3ffff)) R5_w=scalar(umax=65535,var_off=(0x0; 0xffff))
70: (0f) r2 += r4                     ; R2_w=scalar(umax=458745,var_off=(0x0; 0x7ffff)) R4_w=scalar(umax=262140,var_off=(0x0; 0x3ffff))
; *csum += *next_iph_u16++;
71: (69) r4 = *(u16 *)(r7 +18)        ; R4_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R7=pkt(off=0,r=42,imm=0)
; *csum += *next_iph_u16++;
72: (0f) r2 += r4                     ; R2_w=scalar(umax=524280,var_off=(0x0; 0x7ffff)) R4_w=scalar(umax=65535,var_off=(0x0; 0xffff))
; *csum += *next_iph_u16++;
73: (69) r4 = *(u16 *)(r7 +22)        ; R4_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R7=pkt(off=0,r=42,imm=0)
; *csum += *next_iph_u16++;
74: (0f) r2 += r4                     ; R2_w=scalar(umax=589815,var_off=(0x0; 0xfffff)) R4_w=scalar(umax=65535,var_off=(0x0; 0xffff))
75: (b7) r4 = 65536                   ; R4=65536
; if (csum >> 16)
76: (2d) if r4 > r2 goto pc+4         ; R2=scalar(umin=65536,umax=589815,var_off=(0x0; 0xfffff)) R4=65536
77: (bf) r5 = r2                      ; R2=scalar(id=5,umin=65536,umax=589815,var_off=(0x0; 0xfffff)) R5_w=scalar(id=5,umin=65536,umax=589815,var_off=(0x0; 0xfffff))
78: (77) r5 >>= 16                    ; R5_w=scalar(umin=1,umax=8,var_off=(0x0; 0xf),s32_min=0,s32_max=15,u32_max=15)
79: (57) r2 &= 65535                  ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff))
80: (0f) r2 += r5                     ; R2_w=scalar(umin=1,umax=65543,var_off=(0x0; 0x1ffff),s32_min=0,s32_max=65550,u32_max=65550) R5_w=scalar(umin=1,umax=8,var_off=(0x0; 0xf),s32_min=0,s32_max=15,u32_max=15)
81: (2d) if r4 > r2 goto pc+4         ; R2_w=scalar(umin=65536,umax=65543,var_off=(0x10000; 0x7)) R4=65536
82: (bf) r5 = r2                      ; R2_w=scalar(id=6,umin=65536,umax=65543,var_off=(0x10000; 0x7)) R5_w=scalar(id=6,umin=65536,umax=65543,var_off=(0x10000; 0x7))
83: (77) r5 >>= 16                    ; R5_w=1
84: (57) r2 &= 65535                  ; R2_w=scalar(umax=7,var_off=(0x0; 0x7))
85: (0f) r2 += r5                     ; R2=scalar(umin=1,umax=8,var_off=(0x0; 0xf)) R5=1
86: (2d) if r4 > r2 goto pc+4         ; R2=scalar(umin=65536,umax=8,var_off=(0x0; 0xf)) R4=65536
87: (bf) r4 = r2                      ; R2=scalar(id=7,umin=65536,umax=8,var_off=(0x0; 0xf)) R4_w=scalar(id=7,umin=65536,umax=8,var_off=(0x0; 0xf))
88: (77) r4 >>= 16                    ; R4_w=0
89: (57) r2 &= 65535                  ; R2_w=scalar(umax=8,var_off=(0x0; 0xf))
90: (0f) r2 += r4                     ; R2_w=scalar() R4_w=0
91: (05) goto pc+0
; icmp_hdr->type = ICMP_ECHOREPLY;
92: (72) *(u8 *)(r7 +34) = 0          ; R7=pkt(off=0,r=42,imm=0)
; iph->daddr = iph->saddr;
93: (63) *(u32 *)(r7 +30) = r3        ; R3=scalar(id=4,umax=4294967295,var_off=(0x0; 0xffffffff)) R7=pkt(off=0,r=42,imm=0)
; iph->saddr = tmp_addr;
94: (63) *(u32 *)(r7 +26) = r1        ; R1=scalar(id=3,umax=4294967295,var_off=(0x0; 0xffffffff)) R7=pkt(off=0,r=42,imm=0)
; icmp_hdr->checksum += 0x0008;
95: (69) r1 = *(u16 *)(r7 +36)        ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R7=pkt(off=0,r=42,imm=0)
96: (07) r1 += 8                      ; R1_w=scalar(umin=8,umax=65543,var_off=(0x0; 0x1ffff))
97: (6b) *(u16 *)(r7 +36) = r1        ; R1_w=scalar(umin=8,umax=65543,var_off=(0x0; 0x1ffff)) R7=pkt(off=0,r=42,imm=0)
; if (csum >> 16)
98: (bf) r1 = r2                      ; R1_w=scalar(id=8) R2_w=scalar(id=8)
99: (77) r1 >>= 16                    ; R1_w=scalar(umax=281474976710655,var_off=(0x0; 0xffffffffffff))
100: (0f) r1 += r2                    ; R1_w=scalar() R2_w=scalar(id=8)
; iph->check = csum;
101: (a7) r1 ^= -1                    ; R1_w=scalar()
; iph->check = csum;
102: (6b) *(u16 *)(r7 +24) = r1       ; R1_w=scalar() R7=pkt(off=0,r=42,imm=0)
; memcpy(tmp_mac, eth->h_source, ETH_ALEN);
103: (71) r1 = *(u8 *)(r7 +11)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=42,imm=0)
104: (67) r1 <<= 8                    ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00))
105: (71) r2 = *(u8 *)(r7 +10)        ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=42,imm=0)
106: (4f) r1 |= r2                    ; R1_w=scalar() R2_w=scalar(umax=255,var_off=(0x0; 0xff))
107: (6b) *(u16 *)(r10 -12) = r1      ; R1_w=scalar() R10=fp0 fp-16=??mm????
108: (71) r1 = *(u8 *)(r7 +7)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=42,imm=0)
109: (67) r1 <<= 8                    ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00))
110: (71) r2 = *(u8 *)(r7 +6)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=42,imm=0)
111: (4f) r1 |= r2                    ; R1_w=scalar() R2_w=scalar(umax=255,var_off=(0x0; 0xff))
112: (71) r2 = *(u8 *)(r7 +8)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=42,imm=0)
113: (67) r2 <<= 16                   ; R2_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
114: (71) r3 = *(u8 *)(r7 +9)         ; R3_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=42,imm=0)
115: (67) r3 <<= 24                   ; R3_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
116: (4f) r3 |= r2                    ; R2_w=scalar(umax=16711680,var_off=(0x0; 0xff0000)) R3_w=scalar()
117: (4f) r3 |= r1                    ; R1_w=scalar() R3_w=scalar()
118: (63) *(u32 *)(r10 -16) = r3      ; R3_w=scalar() R10=fp0 fp-16=??mmmmmm
; memcpy(eth->h_source, eth->h_dest, ETH_ALEN);
119: (71) r1 = *(u8 *)(r7 +2)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=42,imm=0)
120: (73) *(u8 *)(r7 +8) = r1         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=42,imm=0)
121: (71) r1 = *(u8 *)(r7 +3)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=42,imm=0)
122: (73) *(u8 *)(r7 +9) = r1         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=42,imm=0)
123: (71) r1 = *(u8 *)(r7 +0)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=42,imm=0)
124: (73) *(u8 *)(r7 +6) = r1         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=42,imm=0)
125: (71) r1 = *(u8 *)(r7 +1)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=42,imm=0)
126: (73) *(u8 *)(r7 +7) = r1         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=42,imm=0)
127: (71) r1 = *(u8 *)(r7 +4)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=42,imm=0)
128: (73) *(u8 *)(r7 +10) = r1        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=42,imm=0)
129: (71) r1 = *(u8 *)(r7 +5)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=42,imm=0)
130: (73) *(u8 *)(r7 +11) = r1        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=42,imm=0)
; memcpy(eth->h_dest, tmp_mac, ETH_ALEN);
131: (61) r1 = *(u32 *)(r10 -16)      ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
132: (bf) r2 = r1                     ; R1_w=scalar(id=9,umax=4294967295,var_off=(0x0; 0xffffffff)) R2_w=scalar(id=9,umax=4294967295,var_off=(0x0; 0xffffffff))
133: (77) r2 >>= 16                   ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff))
134: (73) *(u8 *)(r7 +2) = r2         ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R7=pkt(off=0,r=42,imm=0)
135: (bf) r2 = r1                     ; R1_w=scalar(id=9,umax=4294967295,var_off=(0x0; 0xffffffff)) R2_w=scalar(id=9,umax=4294967295,var_off=(0x0; 0xffffffff))
136: (77) r2 >>= 24                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
137: (73) *(u8 *)(r7 +3) = r2         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=42,imm=0)
138: (73) *(u8 *)(r7 +0) = r1         ; R1_w=scalar(id=9,umax=4294967295,var_off=(0x0; 0xffffffff)) R7=pkt(off=0,r=42,imm=0)
139: (77) r1 >>= 8                    ; R1_w=scalar(umax=16777215,var_off=(0x0; 0xffffff))
140: (73) *(u8 *)(r7 +1) = r1         ; R1_w=scalar(umax=16777215,var_off=(0x0; 0xffffff)) R7=pkt(off=0,r=42,imm=0)
141: (69) r1 = *(u16 *)(r10 -12)      ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
142: (05) goto pc+106
; 
249: (73) *(u8 *)(r7 +4) = r1         ; R1=scalar(umax=65535,var_off=(0x0; 0xffff)) R7=pkt(off=0,r=42,imm=0)
250: (77) r1 >>= 8                    ; R1_w=scalar(umax=255,var_off=(0x0; 0xff))
251: (73) *(u8 *)(r7 +5) = r1         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=42,imm=0)
252: (b7) r9 = 3                      ; R9_w=3
253: (05) goto pc+1604
; }
1858: (bf) r0 = r9                    ; R0_w=3 R9_w=3
1859: (95) exit

from 86 to 91: R1=scalar(id=3,umax=4294967295,var_off=(0x0; 0xffffffff)) R2=scalar(umin=1,umax=8,var_off=(0x0; 0xf)) R3=scalar(id=4,umax=4294967295,var_off=(0x0; 0xffffffff)) R4=65536 R5=1 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=42,imm=0) R8=pkt_end(off=0,imm=0) R9=2 R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm fp-136=
; if (csum >> 16)
91: (05) goto pc+0
; icmp_hdr->type = ICMP_ECHOREPLY;
92: (72) *(u8 *)(r7 +34) = 0          ; R7=pkt(off=0,r=42,imm=0)
; iph->daddr = iph->saddr;
93: (63) *(u32 *)(r7 +30) = r3        ; R3=scalar(id=4,umax=4294967295,var_off=(0x0; 0xffffffff)) R7=pkt(off=0,r=42,imm=0)
; iph->saddr = tmp_addr;
94: (63) *(u32 *)(r7 +26) = r1        ; R1=scalar(id=3,umax=4294967295,var_off=(0x0; 0xffffffff)) R7=pkt(off=0,r=42,imm=0)
; icmp_hdr->checksum += 0x0008;
95: (69) r1 = *(u16 *)(r7 +36)        ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R7=pkt(off=0,r=42,imm=0)
96: (07) r1 += 8                      ; R1_w=scalar(umin=8,umax=65543,var_off=(0x0; 0x1ffff))
97: (6b) *(u16 *)(r7 +36) = r1        ; R1_w=scalar(umin=8,umax=65543,var_off=(0x0; 0x1ffff)) R7=pkt(off=0,r=42,imm=0)
; if (csum >> 16)
98: (bf) r1 = r2                      ; R1_w=scalar(id=11,umin=1,umax=8,var_off=(0x0; 0xf)) R2=scalar(id=11,umin=1,umax=8,var_off=(0x0; 0xf))
99: (77) r1 >>= 16                    ; R1_w=0
100: (0f) r1 += r2                    ; R1_w=scalar(umin=1,umax=8,var_off=(0x0; 0xf)) R2=scalar(id=11,umin=1,umax=8,var_off=(0x0; 0xf))
; iph->check = csum;
101: (a7) r1 ^= -1                    ; R1_w=scalar(umin=18446744073709551600,var_off=(0xfffffffffffffff0; 0xf),u32_min=-16)
; iph->check = csum;
102: (6b) *(u16 *)(r7 +24) = r1       ; R1_w=scalar(umin=18446744073709551600,var_off=(0xfffffffffffffff0; 0xf),u32_min=-16) R7=pkt(off=0,r=42,imm=0)
; memcpy(tmp_mac, eth->h_source, ETH_ALEN);
103: (71) r1 = *(u8 *)(r7 +11)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=42,imm=0)
104: (67) r1 <<= 8                    ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00))
105: (71) r2 = *(u8 *)(r7 +10)        ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=42,imm=0)
106: (4f) r1 |= r2                    ; R1_w=scalar() R2_w=scalar(umax=255,var_off=(0x0; 0xff))
107: (6b) *(u16 *)(r10 -12) = r1      ; R1_w=scalar() R10=fp0 fp-16=??mm????
108: (71) r1 = *(u8 *)(r7 +7)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=42,imm=0)
109: (67) r1 <<= 8                    ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00))
110: (71) r2 = *(u8 *)(r7 +6)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=42,imm=0)
111: (4f) r1 |= r2                    ; R1_w=scalar() R2_w=scalar(umax=255,var_off=(0x0; 0xff))
112: (71) r2 = *(u8 *)(r7 +8)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=42,imm=0)
113: (67) r2 <<= 16                   ; R2_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
114: (71) r3 = *(u8 *)(r7 +9)         ; R3_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=42,imm=0)
115: (67) r3 <<= 24                   ; R3_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
116: (4f) r3 |= r2                    ; R2_w=scalar(umax=16711680,var_off=(0x0; 0xff0000)) R3_w=scalar()
117: (4f) r3 |= r1                    ; R1_w=scalar() R3_w=scalar()
118: (63) *(u32 *)(r10 -16) = r3      ; R3_w=scalar() R10=fp0 fp-16=??mmmmmm
; memcpy(eth->h_source, eth->h_dest, ETH_ALEN);
119: (71) r1 = *(u8 *)(r7 +2)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=42,imm=0)
120: (73) *(u8 *)(r7 +8) = r1         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=42,imm=0)
121: (71) r1 = *(u8 *)(r7 +3)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=42,imm=0)
122: (73) *(u8 *)(r7 +9) = r1         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=42,imm=0)
123: (71) r1 = *(u8 *)(r7 +0)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=42,imm=0)
124: (73) *(u8 *)(r7 +6) = r1         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=42,imm=0)
125: (71) r1 = *(u8 *)(r7 +1)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=42,imm=0)
126: (73) *(u8 *)(r7 +7) = r1         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=42,imm=0)
127: (71) r1 = *(u8 *)(r7 +4)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=42,imm=0)
128: (73) *(u8 *)(r7 +10) = r1        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=42,imm=0)
129: (71) r1 = *(u8 *)(r7 +5)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=42,imm=0)
130: (73) *(u8 *)(r7 +11) = r1        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=42,imm=0)
; memcpy(eth->h_dest, tmp_mac, ETH_ALEN);
131: (61) r1 = *(u32 *)(r10 -16)      ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
132: (bf) r2 = r1                     ; R1_w=scalar(id=12,umax=4294967295,var_off=(0x0; 0xffffffff)) R2_w=scalar(id=12,umax=4294967295,var_off=(0x0; 0xffffffff))
133: (77) r2 >>= 16                   ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff))
134: (73) *(u8 *)(r7 +2) = r2         ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R7=pkt(off=0,r=42,imm=0)
135: (bf) r2 = r1                     ; R1_w=scalar(id=12,umax=4294967295,var_off=(0x0; 0xffffffff)) R2_w=scalar(id=12,umax=4294967295,var_off=(0x0; 0xffffffff))
136: (77) r2 >>= 24                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
137: (73) *(u8 *)(r7 +3) = r2         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=42,imm=0)
138: (73) *(u8 *)(r7 +0) = r1         ; R1_w=scalar(id=12,umax=4294967295,var_off=(0x0; 0xffffffff)) R7=pkt(off=0,r=42,imm=0)
139: (77) r1 >>= 8                    ; R1_w=scalar(umax=16777215,var_off=(0x0; 0xffffff))
140: (73) *(u8 *)(r7 +1) = r1         ; R1_w=scalar(umax=16777215,var_off=(0x0; 0xffffff)) R7=pkt(off=0,r=42,imm=0)
141: (69) r1 = *(u16 *)(r10 -12)      ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
142: (05) goto pc+106
249: safe

from 81 to 86: safe

from 76 to 81: R1=scalar(id=3,umax=4294967295,var_off=(0x0; 0xffffffff)) R2=scalar(umax=65535,var_off=(0x0; 0xffff)) R3=scalar(id=4,umax=4294967295,var_off=(0x0; 0xffffffff)) R4=65536 R5=scalar(umax=65535,var_off=(0x0; 0xffff)) R6=ctx(off=0,imm=0) R7=pkt(off=0,r=42,imm=0) R8=pkt_end(off=0,imm=0) R9=2 R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm fp-136=
; if (csum >> 16)
81: (2d) if r4 > r2 goto pc+4         ; R2=scalar(umin=65536,umax=65535,var_off=(0x0; 0xffff)) R4=65536
82: (bf) r5 = r2                      ; R2=scalar(id=13,umin=65536,umax=65535,var_off=(0x0; 0xffff)) R5_w=scalar(id=13,umin=65536,umax=65535,var_off=(0x0; 0xffff))
83: (77) r5 >>= 16                    ; R5_w=0
84: (57) r2 &= 65535                  ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff))
85: (0f) r2 += r5
86: safe

from 81 to 86: safe

from 50 to 1858: R1=scalar(umax=255,var_off=(0x0; 0xff)) R2=scalar(id=1,umax=65535,var_off=(0x0; 0xffff)) R3=pkt(off=34,r=42,imm=0) R4=pkt(off=42,r=42,imm=0) R6=ctx(off=0,imm=0) R7=pkt(off=0,r=42,imm=0) R8=pkt_end(off=0,imm=0) R9=2 R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm fp-136=
; }
1858: (bf) r0 = r9                    ; R0_w=2 R9=2
1859: (95) exit

from 48 to 645: R1=3 R2=scalar(id=1,umax=65535,var_off=(0x0; 0xffff)) R3=pkt(off=34,r=42,imm=0) R4=pkt(off=42,r=42,imm=0) R6=ctx(off=0,imm=0) R7=pkt(off=0,r=42,imm=0) R8=pkt_end(off=0,imm=0) R9=1 R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm fp-136=
; if (icmp_hdr->code == ICMP_FRAG_NEEDED) {
645: (71) r1 = *(u8 *)(r7 +35)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=42,imm=0)
; if (icmp_hdr->code == ICMP_FRAG_NEEDED) {
646: (55) if r1 != 0x4 goto pc+23     ; R1_w=4
647: (7b) *(u64 *)(r10 -144) = r4     ; R4=pkt(off=42,r=42,imm=0) R10=fp0 fp-144_w=pkt
648: (05) goto pc+0
; __u32 stats_key = MAX_VIPS + ICMP_PTB_V4_STATS;
649: (62) *(u32 *)(r10 -16) = 525     ; R10=fp0 fp-16=????mmmm
650: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
651: (07) r2 += -16                   ; R2_w=fp-16
; bpf_map_lookup_elem(&stats, &stats_key);
652: (18) r1 = 0xffffa03499be8000     ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
654: (85) call bpf_map_lookup_elem#1          ; R0=map_value_or_null(id=15,off=0,ks=4,vs=16,imm=0)
; if (!icmp_ptb_v4_stats) {
655: (15) if r0 == 0x0 goto pc+1202   ; R0=map_value(off=0,ks=4,vs=16,imm=0)
; icmp_ptb_v4_stats->v1 += 1;
656: (79) r1 = *(u64 *)(r0 +0)        ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
657: (07) r1 += 1                     ; R1_w=scalar()
658: (7b) *(u64 *)(r0 +0) = r1        ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
; __u16 mtu = bpf_ntohs(icmp_hdr->un.frag.mtu);
659: (69) r1 = *(u16 *)(r7 +40)       ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R7=pkt(off=0,r=42,imm=0)
; if (mtu < MAX_MTU_IN_PTB_TO_DROP) {
660: (57) r1 &= 255                   ; R1_w=scalar(umax=255,var_off=(0x0; 0xff))
661: (79) r4 = *(u64 *)(r10 -144)     ; R4_w=pkt(off=42,r=42,imm=0) R10=fp0
; if (mtu < MAX_MTU_IN_PTB_TO_DROP) {
662: (25) if r1 > 0x4 goto pc+3       ; R1_w=scalar(umax=4,var_off=(0x0; 0x7))
; icmp_ptb_v4_stats->v2 += 1;
663: (79) r1 = *(u64 *)(r0 +8)        ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
664: (07) r1 += 1                     ; R1_w=scalar()
665: (7b) *(u64 *)(r0 +8) = r1        ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1=scalar()
666: (bf) r1 = r7                     ; R1_w=pkt(off=0,r=42,imm=0) R7=pkt(off=0,r=42,imm=0)
667: (07) r1 += 62                    ; R1_w=pkt(off=62,r=42,imm=0)
668: (2d) if r1 > r8 goto pc+1189     ; R1_w=pkt(off=62,r=62,imm=0) R8=pkt_end(off=0,imm=0)
669: (05) goto pc+3
; if (iph->ihl != 5) {
673: (71) r1 = *(u8 *)(r4 +0)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R4=pkt(off=42,r=62,imm=0)
674: (57) r1 &= 15                    ; R1_w=scalar(umax=15,var_off=(0x0; 0xf))
; if (iph->ihl != 5) {
675: (15) if r1 == 0x5 goto pc+1      ; R1_w=scalar(umax=15,var_off=(0x0; 0xf))
676: (05) goto pc+1181
1858: safe

from 675 to 677: R0=map_value(off=0,ks=4,vs=16,imm=0) R1=5 R4=pkt(off=42,r=62,imm=0) R6=ctx(off=0,imm=0) R7=pkt(off=0,r=62,imm=0) R8=pkt_end(off=0,imm=0) R9=1 R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm fp-136= fp-144=pkt
; pckt->flow.proto = iph->protocol;
677: (71) r1 = *(u8 *)(r7 +51)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=62,imm=0)
; pckt->flow.proto = iph->protocol;
678: (73) *(u8 *)(r10 -44) = r1       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0 fp-48=mmmmmmmm
; pckt->flags |= F_ICMP;
679: (71) r3 = *(u8 *)(r10 -36)       ; R3_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
680: (47) r3 |= 1                     ; R3_w=scalar(umin=1,umax=255,var_off=(0x1; 0xfe))
681: (73) *(u8 *)(r10 -36) = r3       ; R3_w=scalar(umin=1,umax=255,var_off=(0x1; 0xfe)) R10=fp0 fp-40=mmmmmmmm
; pckt->flow.src = iph->daddr;
682: (61) r2 = *(u32 *)(r7 +58)       ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R7=pkt(off=0,r=62,imm=0)
; pckt->flow.src = iph->daddr;
683: (63) *(u32 *)(r10 -80) = r2      ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-80=
; pckt->flow.src = iph->daddr;
684: (bf) r2 = r7                     ; R2_w=pkt(off=0,r=62,imm=0) R7=pkt(off=0,r=62,imm=0)
685: (07) r2 += 54                    ; R2_w=pkt(off=54,r=62,imm=0)
686: (05) goto pc-247
; 
440: (61) r2 = *(u32 *)(r2 +0)        ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
441: (63) *(u32 *)(r10 -64) = r2      ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-64=
; if (protocol == IPPROTO_TCP) {
442: (bf) r4 = r1                     ; R1_w=scalar(id=16,umax=255,var_off=(0x0; 0xff)) R4_w=scalar(id=16,umax=255,var_off=(0x0; 0xff))
443: (15) if r4 == 0x11 goto pc+83    ; R4_w=scalar(id=16,umax=255,var_off=(0x0; 0xff))
444: (b7) r9 = 2                      ; R9=2
445: (55) if r4 != 0x6 goto pc+1412   ; R4=6
; bool is_icmp = !((pckt->flags & F_ICMP) == 0);
446: (bf) r4 = r3                     ; R3=scalar(id=17,umin=1,umax=255,var_off=(0x1; 0xfe)) R4_w=scalar(id=17,umin=1,umax=255,var_off=(0x1; 0xfe))
447: (57) r4 &= 1                     ; R4_w=1
448: (b7) r0 = 34                     ; R0_w=34
; if (is_ipv6) {
449: (15) if r4 == 0x0 goto pc+1
last_idx 449 first_idx 445
regs=10 stack=0 before 448: (b7) r0 = 34
regs=10 stack=0 before 447: (57) r4 &= 1
regs=10 stack=0 before 446: (bf) r4 = r3
regs=8 stack=0 before 445: (55) if r4 != 0x6 goto pc+1412
parent didn't have regs=8 stack=0 marks: R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar(id=16,umax=255,var_off=(0x0; 0xff)) R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3_rw=Pscalar(umin=1,umax=255,var_off=(0x1; 0xfe)) R4_rw=scalar(id=16,umax=255,var_off=(0x0; 0xff)) R6=ctx(off=0,imm=0) R7=pkt(off=0,r=62,imm=0) R8=pkt_end(off=0,imm=0) R9_w=2 R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm fp-136= fp-144=pkt
last_idx 444 first_idx 677
regs=8 stack=0 before 444: (b7) r9 = 2
regs=8 stack=0 before 443: (15) if r4 == 0x11 goto pc+83
regs=8 stack=0 before 442: (bf) r4 = r1
regs=8 stack=0 before 441: (63) *(u32 *)(r10 -64) = r2
regs=8 stack=0 before 440: (61) r2 = *(u32 *)(r2 +0)
regs=8 stack=0 before 686: (05) goto pc-247
regs=8 stack=0 before 685: (07) r2 += 54
regs=8 stack=0 before 684: (bf) r2 = r7
regs=8 stack=0 before 683: (63) *(u32 *)(r10 -80) = r2
regs=8 stack=0 before 682: (61) r2 = *(u32 *)(r7 +58)
regs=8 stack=0 before 681: (73) *(u8 *)(r10 -36) = r3
regs=8 stack=0 before 680: (47) r3 |= 1
regs=8 stack=0 before 679: (71) r3 = *(u8 *)(r10 -36)
regs=0 stack=10 before 678: (73) *(u8 *)(r10 -44) = r1
regs=0 stack=10 before 677: (71) r1 = *(u8 *)(r7 +51)
parent already had regs=0 stack=0 marks: R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=5 R4=pkt(off=42,r=62,imm=0) R6=ctx(off=0,imm=0) R7_r=pkt(off=0,r=62,imm=0) R8=pkt_end(off=0,imm=0) R9=1 R10=fp0 fp-16=????mmmm fp-40_r=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm fp-136= fp-144=pkt
450: (b7) r0 = 62                     ; R0_w=62
; tcp = data + off;
451: (bf) r5 = r7                     ; R5_w=pkt(off=0,r=62,imm=0) R7=pkt(off=0,r=62,imm=0)
452: (0f) r5 += r0
last_idx 452 first_idx 445
regs=1 stack=0 before 451: (bf) r5 = r7
regs=1 stack=0 before 450: (b7) r0 = 62
453: R0_w=P62 R5_w=pkt(off=62,r=62,imm=0)
; if (tcp + 1 > data_end) {
453: (bf) r0 = r5                     ; R0_w=pkt(off=62,r=62,imm=0) R5_w=pkt(off=62,r=62,imm=0)
454: (07) r0 += 20                    ; R0_w=pkt(off=82,r=62,imm=0)
455: (b7) r9 = 1                      ; R9=1
; if (tcp + 1 > data_end) {
456: (2d) if r0 > r8 goto pc+1401     ; R0=pkt(off=82,r=82,imm=0) R8=pkt_end(off=0,imm=0)
; if (tcp->syn) {
457: (69) r0 = *(u16 *)(r5 +12)       ; R0_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R5=pkt(off=62,r=82,imm=0)
; if (tcp->syn) {
458: (57) r0 &= 512                   ; R0_w=scalar(umax=512,var_off=(0x0; 0x200))
; if (tcp->syn) {
459: (15) if r0 == 0x0 goto pc+2      ; R0_w=scalar(umax=512,var_off=(0x0; 0x200))
; pckt->flags |= F_SYN_SET;
460: (47) r3 |= 2                     ; R3_w=scalar(umin=3,umax=255,var_off=(0x3; 0xfc))
461: (73) *(u8 *)(r10 -36) = r3       ; R3_w=scalar(umin=3,umax=255,var_off=(0x3; 0xfc)) R10=fp0 fp-40=mmmmmmmm
462: (b7) r3 = 1                      ; R3_w=1
; bool is_icmp = !((pckt->flags & F_ICMP) == 0);
463: (15) if r4 == 0x0 goto pc+1      ; R4=P1
464: (b7) r3 = 0                      ; R3=0
465: (67) r4 <<= 1                    ; R4_w=P2
; 
466: (bf) r0 = r5                     ; R0_w=pkt(off=62,r=82,imm=0) R5=pkt(off=62,r=82,imm=0)
467: (0f) r0 += r4                    ; R0_w=pkt(off=64,r=82,imm=0) R4_w=P2
468: (69) r4 = *(u16 *)(r0 +0)        ; R0_w=pkt(off=64,r=82,imm=0) R4_w=scalar(umax=65535,var_off=(0x0; 0xffff))
469: (6b) *(u16 *)(r10 -48) = r4      ; R4_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-48=
470: (67) r3 <<= 1                    ; R3_w=0
471: (0f) r5 += r3
last_idx 471 first_idx 465
regs=8 stack=0 before 470: (67) r3 <<= 1
regs=8 stack=0 before 469: (6b) *(u16 *)(r10 -48) = r4
regs=8 stack=0 before 468: (69) r4 = *(u16 *)(r0 +0)
regs=8 stack=0 before 467: (0f) r0 += r4
regs=8 stack=0 before 466: (bf) r0 = r5
regs=8 stack=0 before 465: (67) r4 <<= 1
parent didn't have regs=8 stack=0 marks: R0_w=scalar(umax=512,var_off=(0x0; 0x200)) R1=6 R2=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3_rw=P0 R4_r=P1 R5_r=pkt(off=62,r=82,imm=0) R6=ctx(off=0,imm=0) R7=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=1 R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm fp-136= fp-144=pkt
last_idx 464 first_idx 456
regs=8 stack=0 before 464: (b7) r3 = 0
472: (69) r3 = *(u16 *)(r5 +0)        ; R3_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R5_w=pkt(off=62,r=82,imm=0)
473: (05) goto pc+73
; 
547: (6b) *(u16 *)(r10 -46) = r3      ; R3_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-48=mmmmmmmm
; vip.proto = pckt.flow.proto;
548: (73) *(u8 *)(r10 -86) = r1       ; R1=6 R10=fp0 fp-88=????mmmm
; vip.port = pckt.flow.port16[1];
549: (6b) *(u16 *)(r10 -88) = r3      ; R3_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-88=
; vip.vip = pckt.flow.dst;
550: (63) *(u32 *)(r10 -104) = r2     ; R2=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-104=
551: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; 
552: (07) r2 += -104                  ; R2_w=fp-104
; vip_info = bpf_map_lookup_elem(&vip_map, &vip);
553: (18) r1 = 0xffffa03557866800     ; R1_w=map_ptr(off=0,ks=20,vs=8,imm=0)
555: (85) call bpf_map_lookup_elem#1          ; R0=map_value_or_null(id=18,off=0,ks=20,vs=8,imm=0)
; if (!vip_info) {
556: (55) if r0 != 0x0 goto pc+14     ; R0=0
557: (05) goto pc+0
; vip.port = 0;
558: (6a) *(u16 *)(r10 -88) = 0       ; R10=fp0 fp-88=????mmmm
559: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
560: (07) r2 += -104                  ; R2_w=fp-104
; vip_info = bpf_map_lookup_elem(&vip_map, &vip);
561: (18) r1 = 0xffffa03557866800     ; R1_w=map_ptr(off=0,ks=20,vs=8,imm=0)
563: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=19,off=0,ks=20,vs=8,imm=0)
564: (b7) r9 = 2                      ; R9=2
; if (!vip_info) {
565: (15) if r0 == 0x0 goto pc+1292   ; R0=map_value(off=0,ks=20,vs=8,imm=0)
; if (!(vip_info->flags & F_HASH_DPORT_ONLY) &&
566: (61) r1 = *(u32 *)(r0 +0)        ; R0=map_value(off=0,ks=20,vs=8,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (!(vip_info->flags & F_HASH_DPORT_ONLY) &&
567: (57) r1 &= 136                   ; R1_w=scalar(umax=136,var_off=(0x0; 0x88))
568: (55) if r1 != 0x0 goto pc+2      ; R1_w=0
569: (05) goto pc+0
; pckt.flow.port16[1] = 0;
570: (6a) *(u16 *)(r10 -46) = 0       ; R10=fp0 fp-48=mmmmmmmm
; if (data_end - data > MAX_PCKT_SIZE) {
571: (bf) r1 = r8                     ; R1_w=pkt_end(off=0,imm=0) R8=pkt_end(off=0,imm=0)
572: (1f) r1 -= r7                    ; R1_w=scalar() R7=pkt(off=0,r=82,imm=0)
573: (b7) r9 = 1                      ; R9=1
; if (data_end - data > MAX_PCKT_SIZE) {
574: (65) if r1 s> 0x5ea goto pc+1283         ; R1=scalar(smax=1514)
575: (7b) *(u64 *)(r10 -144) = r0     ; R0=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-144_w=map_value
576: (05) goto pc+0
; __u32 stats_key = MAX_VIPS + LRU_CNTRS;
577: (62) *(u32 *)(r10 -116) = 512    ; R10=fp0 fp-120=mmmm????
578: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; 
579: (07) r2 += -116                  ; R2_w=fp-116
; data_stats = bpf_map_lookup_elem(&stats, &stats_key);
580: (18) r1 = 0xffffa03499be8000     ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
582: (85) call bpf_map_lookup_elem#1          ; R0=map_value_or_null(id=20,off=0,ks=4,vs=16,imm=0)
; if (!data_stats) {
583: (15) if r0 == 0x0 goto pc+1274   ; R0=map_value(off=0,ks=4,vs=16,imm=0)
; data_stats->v1 += 1;
584: (79) r1 = *(u64 *)(r0 +0)        ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
585: (07) r1 += 1                     ; R1_w=scalar()
586: (7b) *(u64 *)(r10 -160) = r0     ; R0=map_value(off=0,ks=4,vs=16,imm=0) R10=fp0 fp-160_w=map_value
587: (7b) *(u64 *)(r0 +0) = r1        ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
588: (79) r9 = *(u64 *)(r10 -144)     ; R9_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
; if ((vip_info->flags & F_HASH_NO_SRC_PORT)) {
589: (61) r1 = *(u32 *)(r9 +0)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9_w=map_value(off=0,ks=20,vs=8,imm=0)
; if ((vip_info->flags & F_HASH_NO_SRC_PORT)) {
590: (57) r1 &= 1                     ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
; if ((vip_info->flags & F_HASH_NO_SRC_PORT)) {
591: (15) if r1 == 0x0 goto pc+2      ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
592: (05) goto pc+0
; pckt.flow.port16[0] = 0;
593: (6a) *(u16 *)(r10 -48) = 0       ; R10=fp0 fp-48=mmmmmmmm
; vip_num = vip_info->vip_num;
594: (61) r1 = *(u32 *)(r9 +4)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9=map_value(off=0,ks=20,vs=8,imm=0)
595: (7b) *(u64 *)(r10 -168) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-168_w=
; vip_num = vip_info->vip_num;
596: (63) *(u32 *)(r10 -108) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-112=mmmmmmmm
; __u32 cpu_num = bpf_get_smp_processor_id();
597: (85) call bpf_get_smp_processor_id#8     ; R0_w=scalar()
; __u32 cpu_num = bpf_get_smp_processor_id();
598: (63) *(u32 *)(r10 -120) = r0     ; R0_w=scalar() R10=fp0 fp-120=mmmmmmmm
599: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; 
600: (07) r2 += -120                  ; R2_w=fp-120
; void* lru_map = bpf_map_lookup_elem(&lru_mapping, &cpu_num);
601: (18) r1 = 0xffffa0376748a000     ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
603: (85) call bpf_map_lookup_elem#1          ; R0=map_value_or_null(id=21,off=0,ks=4,vs=4,imm=0)
604: (7b) *(u64 *)(r10 -152) = r0     ; R0=map_value_or_null(id=21,off=0,ks=4,vs=4,imm=0) R10=fp0 fp-152_w=map_value_or_null
; if (!lru_map) {
605: (55) if r0 != 0x0 goto pc+15     ; R0=0
606: (05) goto pc+0
; __u32 lru_stats_key = MAX_VIPS + FALLBACK_LRU_CNTR;
607: (62) *(u32 *)(r10 -16) = 515     ; R10=fp0 fp-16=????mmmm
608: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
609: (07) r2 += -16                   ; R2_w=fp-16
; struct lb_stats* lru_stats = bpf_map_lookup_elem(&stats, &lru_stats_key);
610: (18) r1 = 0xffffa03499be8000     ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
612: (85) call bpf_map_lookup_elem#1          ; R0=map_value_or_null(id=22,off=0,ks=4,vs=16,imm=0)
; if (!lru_stats) {
613: (15) if r0 == 0x0 goto pc+1243   ; R0=map_value(off=0,ks=4,vs=16,imm=0)
; lru_stats->v1 += 1;
614: (79) r1 = *(u64 *)(r0 +0)        ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
615: (07) r1 += 1                     ; R1_w=scalar()
616: (7b) *(u64 *)(r0 +0) = r1        ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
617: (18) r1 = 0xffffa03557862800     ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0)
619: (7b) *(u64 *)(r10 -152) = r1     ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0 fp-152_w=map_ptr
620: (79) r9 = *(u64 *)(r10 -144)     ; R9_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
; if ((vip_info->flags & F_QUIC_VIP)) {
621: (61) r1 = *(u32 *)(r9 +0)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9_w=map_value(off=0,ks=20,vs=8,imm=0)
; if ((vip_info->flags & F_QUIC_VIP)) {
622: (57) r1 &= 4                     ; R1_w=scalar(umax=4,var_off=(0x0; 0x4))
; if ((vip_info->flags & F_QUIC_VIP)) {
623: (15) if r1 == 0x0 goto pc+1016   ; R1_w=scalar(umax=4,var_off=(0x0; 0x4))
; bool is_icmp = (pckt.flags & F_ICMP);
624: (71) r1 = *(u8 *)(r10 -36)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; bool is_icmp = (pckt.flags & F_ICMP);
625: (57) r1 &= 1                     ; R1=scalar(umax=1,var_off=(0x0; 0x1))
; if (is_icmp) {
626: (15) if r1 == 0x0 goto pc+91     ; R1=scalar(umax=1,var_off=(0x0; 0x1))
627: (05) goto pc+0
; __u32 stats_key = MAX_VIPS + QUIC_ICMP_STATS;
628: (62) *(u32 *)(r10 -16) = 523     ; R10=fp0 fp-16=????mmmm
629: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
630: (07) r2 += -16                   ; R2_w=fp-16
; struct lb_stats* data_stats = bpf_map_lookup_elem(&stats, &stats_key);
631: (18) r1 = 0xffffa03499be8000     ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
633: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=23,off=0,ks=4,vs=16,imm=0)
; if (!data_stats) {
634: (15) if r0 == 0x0 goto pc+1222   ; R0_w=map_value(off=0,ks=4,vs=16,imm=0)
; data_stats->v1 += 1;
635: (79) r1 = *(u64 *)(r0 +0)        ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
636: (07) r1 += 1                     ; R1_w=scalar()
637: (7b) *(u64 *)(r0 +0) = r1        ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
; (icmp_hdr->code == ICMP_PORT_UNREACH) ||
638: (71) r1 = *(u8 *)(r7 +35)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=82,imm=0)
; (icmp_hdr->code == ICMP_PORT_UNREACH) ||
639: (57) r1 &= 253                   ; R1=scalar(umax=253,var_off=(0x0; 0xfd))
; if (ignorable_quic_icmp_code(data, data_end, is_ipv6)) {
640: (55) if r1 != 0x1 goto pc+998    ; R1=1
; data_stats->v2 += 1;
641: (79) r1 = *(u64 *)(r0 +8)        ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
642: (07) r1 += 1                     ; R1_w=scalar()
643: (7b) *(u64 *)(r0 +8) = r1        ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
644: (05) goto pc+994
; 
1639: (79) r9 = *(u64 *)(r10 -144)    ; R9_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
; original_sport = pckt.flow.port16[0];
1640: (69) r1 = *(u16 *)(r10 -48)     ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
1641: (7b) *(u64 *)(r10 -168) = r1    ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-168_w=
1642: (71) r1 = *(u8 *)(r10 -36)      ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
1643: (57) r1 &= 2                    ; R1=scalar(umax=2,var_off=(0x0; 0x2))
; if (!dst && !(pckt.flags & F_SYN_SET) &&
1644: (55) if r1 != 0x0 goto pc+29    ; R1=0
; !(vip_info->flags & F_LRU_BYPASS)) {
1645: (61) r1 = *(u32 *)(r9 +0)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9=map_value(off=0,ks=20,vs=8,imm=0)
; !(vip_info->flags & F_LRU_BYPASS)) {
1646: (57) r1 &= 2                    ; R1_w=scalar(umax=2,var_off=(0x0; 0x2))
; if (!dst && !(pckt.flags & F_SYN_SET) &&
1647: (55) if r1 != 0x0 goto pc+26    ; R1_w=0
1648: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1649: (07) r2 += -80                  ; R2_w=fp-80
; dst_lru = bpf_map_lookup_elem(lru_map, &pckt->flow);
1650: (79) r1 = *(u64 *)(r10 -152)    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0
1651: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=24,off=0,ks=40,vs=16,imm=0)
1652: (bf) r7 = r0                    ; R0=map_value_or_null(id=24,off=0,ks=40,vs=16,imm=0) R7_w=map_value_or_null(id=24,off=0,ks=40,vs=16,imm=0)
; if (!dst_lru) {
1653: (15) if r7 == 0x0 goto pc+20    ; R7_w=map_value(off=0,ks=40,vs=16,imm=0)
; if (!isGlobalLru && pckt->flow.proto == IPPROTO_UDP) {
1654: (71) r1 = *(u8 *)(r10 -44)      ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (!isGlobalLru && pckt->flow.proto == IPPROTO_UDP) {
1655: (55) if r1 != 0x11 goto pc+8    ; R1_w=17
; cur_time = bpf_ktime_get_ns();
1656: (85) call bpf_ktime_get_ns#5    ; R0_w=scalar()
; if (cur_time - dst_lru->atime > LRU_UDP_TIMEOUT) {
1657: (79) r1 = *(u64 *)(r7 +8)       ; R1_w=scalar() R7_w=map_value(off=0,ks=40,vs=16,imm=0)
; if (cur_time - dst_lru->atime > LRU_UDP_TIMEOUT) {
1658: (bf) r2 = r0                    ; R0_w=scalar(id=25) R2_w=scalar(id=25)
1659: (1f) r2 -= r1                   ; R1_w=scalar() R2_w=scalar()
1660: (18) r1 = 0x6fc23ac00           ; R1=30000000000
; if (cur_time - dst_lru->atime > LRU_UDP_TIMEOUT) {
1662: (2d) if r2 > r1 goto pc+11      ; R1=30000000000 R2=scalar(umax=30000000000,var_off=(0x0; 0x7ffffffff))
; dst_lru->atime = cur_time;
1663: (7b) *(u64 *)(r7 +8) = r0       ; R0=scalar(id=25) R7=map_value(off=0,ks=40,vs=16,imm=0)
; key = dst_lru->pos;
1664: (61) r1 = *(u32 *)(r7 +0)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R7=map_value(off=0,ks=40,vs=16,imm=0)
; pckt->real_index = key;
1665: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
; key = dst_lru->pos;
1666: (63) *(u32 *)(r10 -16) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-16=
1667: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; key = dst_lru->pos;
1668: (07) r2 += -16                  ; R2_w=fp-16
; *real = bpf_map_lookup_elem(&reals, &key);
1669: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1671: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=26,off=0,ks=4,vs=20,imm=0)
1672: (7b) *(u64 *)(r10 -176) = r0    ; R0=map_value_or_null(id=26,off=0,ks=4,vs=20,imm=0) R10=fp0 fp-176_w=map_value_or_null
; if (!dst) {
1673: (55) if r0 != 0x0 goto pc+239   ; R0=0
; if (pckt.flow.proto == IPPROTO_TCP) {
1674: (71) r1 = *(u8 *)(r10 -44)      ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (pckt.flow.proto == IPPROTO_TCP) {
1675: (55) if r1 != 0x6 goto pc+18    ; R1_w=6
1676: (05) goto pc+0
; __u32 lru_stats_key = MAX_VIPS + LRU_MISS_CNTR;
1677: (62) *(u32 *)(r10 -16) = 513    ; R10=fp0 fp-16=????mmmm
1678: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1679: (07) r2 += -16                  ; R2_w=fp-16
; bpf_map_lookup_elem(&stats, &lru_stats_key);
1680: (18) r1 = 0xffffa03499be8000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
1682: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=27,off=0,ks=4,vs=16,imm=0)
; if (!lru_stats) {
1683: (15) if r0 == 0x0 goto pc+173   ; R0=map_value(off=0,ks=4,vs=16,imm=0)
; if (pckt.flags & F_SYN_SET) {
1684: (71) r2 = *(u8 *)(r10 -36)      ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (pckt.flags & F_SYN_SET) {
1685: (57) r2 &= 2                    ; R2_w=scalar(umax=2,var_off=(0x0; 0x2))
1686: (b7) r1 = 1                     ; R1_w=1
1687: (15) if r2 == 0x0 goto pc+1     ; R2_w=scalar(umax=2,var_off=(0x0; 0x2))
1688: (b7) r1 = 0                     ; R1_w=0
; if (pckt.flags & F_SYN_SET) {
1689: (67) r1 <<= 3                   ; R1_w=0
; 
1690: (0f) r0 += r1
last_idx 1690 first_idx 1683
regs=2 stack=0 before 1689: (67) r1 <<= 3
regs=2 stack=0 before 1688: (b7) r1 = 0
1691: R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=P0
1691: (79) r1 = *(u64 *)(r0 +0)       ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1692: (07) r1 += 1                    ; R1_w=scalar()
1693: (7b) *(u64 *)(r0 +0) = r1       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1=scalar()
1694: (b7) r9 = 0                     ; R9_w=0
; struct real_pos_lru new_dst_lru = {};
1695: (7b) *(u64 *)(r10 -8) = r9
last_idx 1695 first_idx 1694
regs=200 stack=0 before 1694: (b7) r9 = 0
1696: R9_w=P0 R10=fp0 fp-8_w=00000000
1696: (7b) *(u64 *)(r10 -16) = r9     ; R9_w=P0 R10=fp0 fp-16_w=00000000
1697: (05) goto pc+0
; __u32 conn_rate_key = MAX_VIPS + NEW_CONN_RATE_CNTR;
1698: (62) *(u32 *)(r10 -28) = 514    ; R10=fp0 fp-32=mmmm????
1699: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1700: (07) r2 += -28                  ; R2_w=fp-28
; bpf_map_lookup_elem(&stats, &conn_rate_key);
1701: (18) r1 = 0xffffa03499be8000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
1703: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=28,off=0,ks=4,vs=16,imm=0)
1704: (bf) r7 = r0                    ; R0=map_value_or_null(id=28,off=0,ks=4,vs=16,imm=0) R7_w=map_value_or_null(id=28,off=0,ks=4,vs=16,imm=0)
1705: (b7) r8 = 1                     ; R8_w=1
; if (!conn_rate_stats) {
1706: (15) if r7 == 0x0 goto pc+16    ; R7_w=map_value(off=0,ks=4,vs=16,imm=0)
; *cur_time = bpf_ktime_get_ns();
1707: (85) call bpf_ktime_get_ns#5    ; R0_w=scalar()
1708: (bf) r9 = r0                    ; R0_w=scalar(id=29) R9_w=scalar(id=29)
; if ((*cur_time - conn_rate_stats->v2) > ONE_SEC) {
1709: (79) r1 = *(u64 *)(r7 +8)       ; R1_w=scalar() R7_w=map_value(off=0,ks=4,vs=16,imm=0)
; if ((*cur_time - conn_rate_stats->v2) > ONE_SEC) {
1710: (bf) r2 = r9                    ; R2_w=scalar(id=29) R9_w=scalar(id=29)
1711: (1f) r2 -= r1                   ; R1_w=scalar() R2_w=scalar()
1712: (b7) r1 = 1000000001            ; R1=1000000001
; if ((*cur_time - conn_rate_stats->v2) > ONE_SEC) {
1713: (2d) if r1 > r2 goto pc+4       ; R1=1000000001 R2=scalar(umin=1000000001)
; conn_rate_stats->v2 = *cur_time;
1714: (7b) *(u64 *)(r7 +8) = r9       ; R7=map_value(off=0,ks=4,vs=16,imm=0) R9=scalar(id=29)
1715: (05) goto pc+0
; conn_rate_stats->v1 = 1;
1716: (7a) *(u64 *)(r7 +0) = 1        ; R7=map_value(off=0,ks=4,vs=16,imm=0)
1717: (05) goto pc+4
; if (conn_rate_stats->v1 > MAX_CONN_RATE) {
1722: (b7) r8 = 0                     ; R8_w=0
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
1723: (79) r1 = *(u64 *)(r10 -144)    ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
1724: (61) r1 = *(u32 *)(r1 +0)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
1725: (57) r1 &= 8                    ; R1=scalar(umax=8,var_off=(0x0; 0x8))
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
1726: (55) if r1 != 0x0 goto pc+2     ; R1=0
; return jhash_2words(pckt->flow.src, pckt->flow.ports, INIT_JHASH_SEED);
1727: (61) r5 = *(u32 *)(r10 -80)     ; R5_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
1728: (05) goto pc+5
; return jhash_2words(pckt->flow.src, pckt->flow.ports, INIT_JHASH_SEED);
1734: (61) r3 = *(u32 *)(r10 -48)     ; R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; b += initval;
1735: (07) r3 += -525483785           ; R3_w=scalar(smin=-525483785,smax=3769483510)
1736: (05) goto pc+0
1737: (05) goto pc+0
1738: (05) goto pc+0
1739: (bc) w2 = w3                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3=scalar(smin=-525483785,smax=3769483510)
; return (word << shift) | (word >> ((-shift) & 31));
1740: (77) r2 >>= 18                  ; R2_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1741: (bf) r4 = r3                    ; R3=scalar(id=30,smin=-525483785,smax=3769483510) R4_w=scalar(id=30,smin=-525483785,smax=3769483510)
1742: (67) r4 <<= 14                  ; R4_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1743: (4f) r4 |= r2                   ; R2_w=scalar(umax=16383,var_off=(0x0; 0x3fff)) R4_w=scalar()
; __jhash_final(a, b, c);
1744: (bf) r2 = r3                    ; R2_w=scalar(id=30,smin=-525483785,smax=3769483510) R3=scalar(id=30,smin=-525483785,smax=3769483510)
1745: (a7) r2 ^= -525483785           ; R2_w=scalar()
1746: (1f) r2 -= r4                   ; R2_w=scalar() R4_w=scalar()
1747: (05) goto pc+0
1748: (05) goto pc+0
1749: (bf) r0 = r2                    ; R0_w=scalar(id=31) R2=scalar(id=31)
1750: (67) r0 <<= 32                  ; R0_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
; return (word << shift) | (word >> ((-shift) & 31));
1751: (77) r0 >>= 53                  ; R0_w=scalar(umax=2047,var_off=(0x0; 0x7ff))
1752: (bf) r7 = r2                    ; R2=scalar(id=31) R7_w=scalar(id=31)
1753: (67) r7 <<= 11                  ; R7_w=scalar(smax=9223372036854773760,umax=18446744073709549568,var_off=(0x0; 0xfffffffffffff800),s32_max=2147481600,u32_max=-2048)
1754: (4f) r7 |= r0                   ; R0_w=scalar(umax=2047,var_off=(0x0; 0x7ff)) R7_w=scalar()
; a += initval;
1755: (07) r5 += -525483785           ; R5_w=scalar(smin=-525483785,smax=3769483510)
; __jhash_final(a, b, c);
1756: (bf) r4 = r2                    ; R2=scalar(id=31) R4_w=scalar(id=31)
1757: (af) r4 ^= r5                   ; R4_w=scalar() R5_w=scalar(smin=-525483785,smax=3769483510)
1758: (1f) r4 -= r7                   ; R4_w=scalar() R7_w=scalar()
1759: (05) goto pc+0
1760: (05) goto pc+0
1761: (05) goto pc+0
1762: (bc) w0 = w4                    ; R0_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R4=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1763: (77) r0 >>= 7                   ; R0_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff))
1764: (bf) r7 = r4                    ; R4=scalar(id=32) R7_w=scalar(id=32)
1765: (67) r7 <<= 25                  ; R7_w=scalar(smax=9223372036821221376,umax=18446744073675997184,var_off=(0x0; 0xfffffffffe000000),s32_max=2113929216,u32_max=-33554432)
1766: (4f) r7 |= r0                   ; R0_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff)) R7_w=scalar()
; __jhash_final(a, b, c);
1767: (bf) r5 = r4                    ; R4=scalar(id=32) R5_w=scalar(id=32)
1768: (af) r5 ^= r3                   ; R3=scalar(id=30,smin=-525483785,smax=3769483510) R5_w=scalar()
1769: (1f) r5 -= r7                   ; R5_w=scalar() R7_w=scalar()
1770: (05) goto pc+0
1771: (05) goto pc+0
1772: (05) goto pc+0
1773: (bc) w0 = w5                    ; R0_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R5=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1774: (77) r0 >>= 16                  ; R0_w=scalar(umax=65535,var_off=(0x0; 0xffff))
1775: (bf) r7 = r5                    ; R5=scalar(id=33) R7_w=scalar(id=33)
1776: (67) r7 <<= 16                  ; R7_w=scalar(smax=9223372036854710272,umax=18446744073709486080,var_off=(0x0; 0xffffffffffff0000),s32_max=2147418112,u32_max=-65536)
1777: (4f) r7 |= r0                   ; R0_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R7_w=scalar()
; __jhash_final(a, b, c);
1778: (bf) r3 = r5                    ; R3_w=scalar(id=33) R5=scalar(id=33)
1779: (af) r3 ^= r2                   ; R2=scalar(id=31) R3_w=scalar()
1780: (1f) r3 -= r7                   ; R3_w=scalar() R7_w=scalar()
1781: (05) goto pc+0
1782: (05) goto pc+0
1783: (05) goto pc+0
1784: (bc) w0 = w3                    ; R0_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1785: (77) r0 >>= 28                  ; R0_w=scalar(umax=15,var_off=(0x0; 0xf))
1786: (bf) r7 = r3                    ; R3=scalar(id=34) R7_w=scalar(id=34)
1787: (67) r7 <<= 4                   ; R7_w=scalar(smax=9223372036854775792,umax=18446744073709551600,var_off=(0x0; 0xfffffffffffffff0),s32_max=2147483632,u32_max=-16)
1788: (4f) r7 |= r0                   ; R0_w=scalar(umax=15,var_off=(0x0; 0xf)) R7_w=scalar()
; __jhash_final(a, b, c);
1789: (bf) r2 = r3                    ; R2_w=scalar(id=34) R3=scalar(id=34)
1790: (af) r2 ^= r4                   ; R2_w=scalar() R4=scalar(id=32)
1791: (1f) r2 -= r7                   ; R2_w=scalar() R7_w=scalar()
1792: (05) goto pc+0
1793: (bc) w4 = w2                    ; R2=scalar() R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1794: (77) r4 >>= 18                  ; R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1795: (bf) r1 = r2                    ; R1_w=scalar(id=35) R2=scalar(id=35)
1796: (67) r1 <<= 14                  ; R1_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1797: (4f) r1 |= r4                   ; R1_w=scalar() R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
; __jhash_final(a, b, c);
1798: (af) r2 ^= r5                   ; R2_w=scalar() R5=scalar(id=33)
1799: (1f) r2 -= r1                   ; R1_w=scalar() R2_w=scalar()
1800: (05) goto pc+0
1801: (05) goto pc+0
1802: (05) goto pc+0
1803: (bc) w4 = w2                    ; R2=scalar() R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1804: (77) r4 >>= 8                   ; R4_w=scalar(umax=16777215,var_off=(0x0; 0xffffff))
1805: (bf) r1 = r2                    ; R1_w=scalar(id=36) R2=scalar(id=36)
1806: (67) r1 <<= 24                  ; R1_w=scalar(smax=9223372036837998592,umax=18446744073692774400,var_off=(0x0; 0xffffffffff000000),s32_max=2130706432,u32_max=-16777216)
1807: (4f) r1 |= r4                   ; R1_w=scalar() R4_w=scalar(umax=16777215,var_off=(0x0; 0xffffff))
; __jhash_final(a, b, c);
1808: (af) r2 ^= r3                   ; R2_w=scalar() R3=scalar(id=34)
1809: (1f) r2 -= r1                   ; R1_w=scalar() R2_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1810: (79) r1 = *(u64 *)(r10 -144)    ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
1811: (61) r1 = *(u32 *)(r1 +4)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; key = RING_SIZE * (vip_info->vip_num) + hash;
1812: (27) r1 *= 65537                ; R1_w=scalar(umax=281479271612415,var_off=(0x0; 0x1ffffffffffff))
; __jhash_final(a, b, c);
1813: (bc) w2 = w2                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
1814: (05) goto pc+0
; hash = get_packet_hash(pckt, hash_16bytes) % RING_SIZE;
1815: (97) r2 %= 65537                ; R2_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1816: (0f) r2 += r1                   ; R1=scalar(umax=281479271612415,var_off=(0x0; 0x1ffffffffffff)) R2_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1817: (63) *(u32 *)(r10 -20) = r2     ; R2_w=scalar() R10=fp0 fp-24=mmmm????
1818: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1819: (07) r2 += -20                  ; R2_w=fp-20
; real_pos = bpf_map_lookup_elem(&ch_rings, &key);
1820: (18) r1 = 0xffffaebaa0631000    ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
1822: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=37,off=0,ks=4,vs=4,imm=0)
; if (!real_pos) {
1823: (15) if r0 == 0x0 goto pc+33    ; R0_w=map_value(off=0,ks=4,vs=4,imm=0)
; key = *real_pos;
1824: (61) r1 = *(u32 *)(r0 +0)       ; R0_w=map_value(off=0,ks=4,vs=4,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; key = *real_pos;
1825: (63) *(u32 *)(r10 -20) = r1     ; R1=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-24=mmmm????
; if (key == 0) {
1826: (55) if r1 != 0x0 goto pc+12    ; R1=0
1827: (05) goto pc+0
; __u32 ch_drop_stats_key = MAX_VIPS + CH_DROP_STATS;
1828: (62) *(u32 *)(r10 -28) = 521    ; R10=fp0 fp-32=mmmm????
1829: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1830: (07) r2 += -28                  ; R2_w=fp-28
; bpf_map_lookup_elem(&stats, &ch_drop_stats_key);
1831: (18) r1 = 0xffffa03499be8000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
1833: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=38,off=0,ks=4,vs=16,imm=0)
; if (!ch_drop_stats) {
1834: (15) if r0 == 0x0 goto pc+3     ; R0_w=map_value(off=0,ks=4,vs=16,imm=0)
; ch_drop_stats->v2 += 1;
1835: (79) r1 = *(u64 *)(r0 +8)       ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1836: (07) r1 += 1                    ; R1_w=scalar()
1837: (7b) *(u64 *)(r0 +8) = r1       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1=scalar()
; pckt->real_index = key;
1838: (61) r1 = *(u32 *)(r10 -20)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; pckt->real_index = key;
1839: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1840: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1841: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1842: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1844: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=39,off=0,ks=4,vs=20,imm=0)
; if (!(*real)) {
1845: (55) if r0 != 0x0 goto pc+14    ; R0_w=0
1846: (05) goto pc+0
; __u32 ch_drop_stats_key = MAX_VIPS + CH_DROP_STATS;
1847: (62) *(u32 *)(r10 -28) = 521    ; R10=fp0 fp-32=mmmm????
1848: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1849: (07) r2 += -28                  ; R2_w=fp-28
; bpf_map_lookup_elem(&stats, &ch_drop_stats_key);
1850: (18) r1 = 0xffffa03499be8000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
1852: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=40,off=0,ks=4,vs=16,imm=0)
; if (!ch_drop_stats) {
1853: (15) if r0 == 0x0 goto pc+3     ; R0_w=map_value(off=0,ks=4,vs=16,imm=0)
; ch_drop_stats->v1 += 1;
1854: (79) r1 = *(u64 *)(r0 +0)       ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1855: (07) r1 += 1                    ; R1_w=scalar()
1856: (7b) *(u64 *)(r0 +0) = r1       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1=scalar()
1857: (b7) r9 = 1
1858: safe

from 1853 to 1857: safe

from 1845 to 1860: R0_w=map_value(off=0,ks=4,vs=20,imm=0) R6=ctx(off=0,imm=0) R7=scalar() R8=0 R9=scalar(id=29) R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0
; }
1860: (7b) *(u64 *)(r10 -176) = r0    ; R0_w=map_value(off=0,ks=4,vs=20,imm=0) R10=fp0 fp-176_w=map_value
; if (lru_map && !(vip_info->flags & F_LRU_BYPASS) && !under_flood) {
1861: (79) r1 = *(u64 *)(r10 -152)    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0
1862: (15) if r1 == 0x0 goto pc+18    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0)
; if (lru_map && !(vip_info->flags & F_LRU_BYPASS) && !under_flood) {
1863: (79) r1 = *(u64 *)(r10 -144)    ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
1864: (61) r1 = *(u32 *)(r1 +0)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (lru_map && !(vip_info->flags & F_LRU_BYPASS) && !under_flood) {
1865: (57) r1 &= 2                    ; R1_w=scalar(umax=2,var_off=(0x0; 0x2))
1866: (77) r1 >>= 1                   ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
; if (lru_map && !(vip_info->flags & F_LRU_BYPASS) && !under_flood) {
1867: (4f) r8 |= r1                   ; R1_w=scalar(umax=1,var_off=(0x0; 0x1)) R8_w=scalar()
1868: (55) if r8 != 0x0 goto pc+12    ; R8_w=0
; if (pckt->flow.proto == IPPROTO_UDP) {
1869: (71) r1 = *(u8 *)(r10 -44)      ; R1=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (pckt->flow.proto == IPPROTO_UDP) {
1870: (55) if r1 != 0x11 goto pc+1    ; R1=17
; new_dst_lru.atime = cur_time;
1871: (7b) *(u64 *)(r10 -8) = r9      ; R9=scalar(id=29) R10=fp0 fp-8_w=mmmmmmmm
; new_dst_lru.pos = key;
1872: (61) r1 = *(u32 *)(r10 -20)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; new_dst_lru.pos = key;
1873: (63) *(u32 *)(r10 -16) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-16=
1874: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; new_dst_lru.pos = key;
1875: (07) r2 += -80                  ; R2_w=fp-80
1876: (bf) r3 = r10                   ; R3_w=fp0 R10=fp0
1877: (07) r3 += -16                  ; R3_w=fp-16
; bpf_map_update_elem(lru_map, &pckt->flow, &new_dst_lru, BPF_ANY);
1878: (79) r1 = *(u64 *)(r10 -152)    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0
1879: (b7) r4 = 0                     ; R4_w=0
1880: (85) call bpf_map_update_elem#2         ; R0=scalar()
1881: (05) goto pc+0
; __u32 vip_miss_stats_key = 0;
1882: (62) *(u32 *)(r10 -16) = 0      ; R10=fp0 fp-16=mmmmmmmm
1883: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1884: (07) r2 += -16                  ; R2_w=fp-16
; bpf_map_lookup_elem(&vip_miss_stats, &vip_miss_stats_key);
1885: (18) r1 = 0xffffa03587067400    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1887: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=41,off=0,ks=4,vs=20,imm=0)
; if (!lru_miss_stat_vip) {
1888: (15) if r0 == 0x0 goto pc-32    ; R0_w=map_value(off=0,ks=4,vs=20,imm=0)
; bool vip_match = address_match && port_match && proto_match;
1889: (69) r2 = *(u16 *)(r10 -88)     ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; 
1890: (61) r3 = *(u32 *)(r10 -104)    ; R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; bool vip_match = address_match && port_match && proto_match;
1891: (71) r1 = *(u8 *)(r10 -86)      ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; bool proto_match = lru_miss_stat_vip->proto = vip->proto;
1892: (73) *(u8 *)(r0 +18) = r1       ; R0_w=map_value(off=0,ks=4,vs=20,imm=0) R1_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
1893: (61) r4 = *(u32 *)(r0 +0)       ; R0=map_value(off=0,ks=4,vs=20,imm=0) R4=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; bool vip_match = address_match && port_match && proto_match;
1894: (5d) if r4 != r3 goto pc+14     ; R3=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R4=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
1895: (69) r3 = *(u16 *)(r0 +16)      ; R0=map_value(off=0,ks=4,vs=20,imm=0) R3_w=scalar(umax=65535,var_off=(0x0; 0xffff))
1896: (5d) if r3 != r2 goto pc+12     ; R2=scalar(umax=65535,var_off=(0x0; 0xffff)) R3_w=scalar(umax=65535,var_off=(0x0; 0xffff))
1897: (15) if r1 == 0x0 goto pc+11    ; R1=scalar(umax=255,var_off=(0x0; 0xff))
; __u32 lru_stats_key = pckt->real_index;
1898: (61) r1 = *(u32 *)(r10 -40)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; __u32 lru_stats_key = pckt->real_index;
1899: (63) *(u32 *)(r10 -28) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmm????
1900: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; __u32 lru_stats_key = pckt->real_index;
1901: (07) r2 += -28                  ; R2_w=fp-28
; __u32* lru_miss_stat = bpf_map_lookup_elem(&lru_miss_stats, &lru_stats_key);
1902: (18) r1 = 0xffffaeba8afdd000    ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
1904: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=42,off=0,ks=4,vs=4,imm=0)
; if (!lru_miss_stat) {
1905: (15) if r0 == 0x0 goto pc-49    ; R0=map_value(off=0,ks=4,vs=4,imm=0)
; *lru_miss_stat += 1;
1906: (61) r1 = *(u32 *)(r0 +0)       ; R0=map_value(off=0,ks=4,vs=4,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
1907: (07) r1 += 1                    ; R1_w=scalar(umin=1,umax=4294967296,var_off=(0x0; 0x1ffffffff))
1908: (63) *(u32 *)(r0 +0) = r1       ; R0=map_value(off=0,ks=4,vs=4,imm=0) R1_w=scalar(umin=1,umax=4294967296,var_off=(0x0; 0x1ffffffff))
1909: (79) r2 = *(u64 *)(r10 -160)    ; R2_w=map_value(off=0,ks=4,vs=16,imm=0) R10=fp0
; data_stats->v2 += 1;
1910: (79) r1 = *(u64 *)(r2 +8)       ; R1_w=scalar() R2_w=map_value(off=0,ks=4,vs=16,imm=0)
1911: (07) r1 += 1                    ; R1_w=scalar()
1912: (7b) *(u64 *)(r2 +8) = r1       ; R1_w=scalar() R2_w=map_value(off=0,ks=4,vs=16,imm=0)
1913: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1914: (07) r2 += -112                 ; R2_w=fp-112
; cval = bpf_map_lookup_elem(&ctl_array, &mac_addr_pos);
1915: (18) r1 = 0xffffa03553eeca00    ; R1_w=map_ptr(off=0,ks=4,vs=8,imm=0)
1917: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=43,off=0,ks=4,vs=8,imm=0)
1918: (bf) r7 = r0                    ; R0=map_value_or_null(id=43,off=0,ks=4,vs=8,imm=0) R7_w=map_value_or_null(id=43,off=0,ks=4,vs=8,imm=0)
1919: (b7) r9 = 1                     ; R9_w=1
; if (!cval) {
1920: (15) if r7 == 0x0 goto pc-63    ; R7_w=map_value(off=0,ks=4,vs=8,imm=0)
1921: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1922: (07) r2 += -108                 ; R2_w=fp-108
; data_stats = bpf_map_lookup_elem(&stats, &vip_num);
1923: (18) r1 = 0xffffa03499be8000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
1925: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=44,off=0,ks=4,vs=16,imm=0)
; if (!data_stats) {
1926: (15) if r0 == 0x0 goto pc-69    ; R0_w=map_value(off=0,ks=4,vs=16,imm=0)
1927: (79) r8 = *(u64 *)(r10 -136)    ; R8_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
1928: (dc) r8 = be16 r8               ; R8_w=scalar()
; data_stats->v1 += 1;
1929: (79) r1 = *(u64 *)(r0 +8)       ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1930: (0f) r1 += r8                   ; R1_w=scalar() R8_w=scalar()
1931: (7b) *(u64 *)(r0 +8) = r1       ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1932: (79) r1 = *(u64 *)(r0 +0)       ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1933: (07) r1 += 1                    ; R1_w=scalar()
1934: (7b) *(u64 *)(r0 +0) = r1       ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
; data_stats = bpf_map_lookup_elem(&reals_stats, &pckt.real_index);
1935: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1936: (07) r2 += -40                  ; R2_w=fp-40
; data_stats = bpf_map_lookup_elem(&reals_stats, &pckt.real_index);
1937: (18) r1 = 0xffffaeba8ae7d000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
1939: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=45,off=0,ks=4,vs=16,imm=0)
; if (!data_stats) {
1940: (15) if r0 == 0x0 goto pc-83    ; R0=map_value(off=0,ks=4,vs=16,imm=0)
; data_stats->v1 += 1;
1941: (79) r1 = *(u64 *)(r0 +8)       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1942: (0f) r1 += r8                   ; R1_w=scalar() R8=scalar()
1943: (7b) *(u64 *)(r0 +8) = r1       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1944: (79) r1 = *(u64 *)(r0 +0)       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1945: (0f) r1 += r9                   ; R1_w=scalar() R9=1
1946: (7b) *(u64 *)(r0 +0) = r1       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
; pckt.flow.port16[0] = original_sport;
1947: (79) r1 = *(u64 *)(r10 -168)    ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
1948: (6b) *(u16 *)(r10 -48) = r1     ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-48=
; if (dst->flags & F_IPV6) {
1949: (79) r1 = *(u64 *)(r10 -176)    ; R1_w=map_value(off=0,ks=4,vs=20,imm=0) R10=fp0
1950: (71) r1 = *(u8 *)(r1 +16)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff))
; if (dst->flags & F_IPV6) {
1951: (57) r1 &= 1                    ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
; if (dst->flags & F_IPV6) {
1952: (15) if r1 == 0x0 goto pc+75    ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
; if (XDP_ADJUST_HEAD_FUNC(xdp, 0 - (int)sizeof(struct ipv6hdr))) {
1953: (bf) r1 = r6                    ; R1_w=ctx(off=0,imm=0) R6=ctx(off=0,imm=0)
1954: (18) r2 = 0xffffffd8            ; R2_w=4294967256
1956: (85) call bpf_xdp_adjust_head#44        ; R0=scalar()
1957: (bc) w0 = w0                    ; R0_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
1958: (05) goto pc+0
; if (XDP_ADJUST_HEAD_FUNC(xdp, 0 - (int)sizeof(struct ipv6hdr))) {
1959: (55) if r0 != 0x0 goto pc-102   ; R0_w=0
; data = (void*)(long)xdp->data;
1960: (61) r1 = *(u32 *)(r6 +0)       ; R1_w=pkt(off=0,r=0,imm=0) R6=ctx(off=0,imm=0)
; data_end = (void*)(long)xdp->data_end;
1961: (61) r2 = *(u32 *)(r6 +4)       ; R2_w=pkt_end(off=0,imm=0) R6=ctx(off=0,imm=0)
; ip6h = data + sizeof(struct ethhdr);
1962: (bf) r3 = r1                    ; R1_w=pkt(off=0,r=0,imm=0) R3_w=pkt(off=0,r=0,imm=0)
1963: (07) r3 += 14                   ; R3_w=pkt(off=14,r=0,imm=0)
; if (new_eth + 1 > data_end || old_eth + 1 > data_end || ip6h + 1 > data_end) {
1964: (2d) if r3 > r2 goto pc-107     ; R2_w=pkt_end(off=0,imm=0) R3_w=pkt(off=14,r=14,imm=0)
1965: (bf) r3 = r1                    ; R1_w=pkt(off=0,r=14,imm=0) R3_w=pkt(off=0,r=14,imm=0)
1966: (07) r3 += 54                   ; R3=pkt(off=54,r=14,imm=0)
1967: (2d) if r3 > r2 goto pc-110     ; R2=pkt_end(off=0,imm=0) R3=pkt(off=54,r=54,imm=0)
; memcpy(new_eth->h_dest, cval->mac, 6);
1968: (71) r2 = *(u8 *)(r7 +0)        ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=map_value(off=0,ks=4,vs=8,imm=0)
1969: (71) r3 = *(u8 *)(r7 +1)        ; R3_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=map_value(off=0,ks=4,vs=8,imm=0)
1970: (71) r4 = *(u8 *)(r7 +2)        ; R4_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=map_value(off=0,ks=4,vs=8,imm=0)
1971: (71) r5 = *(u8 *)(r7 +3)        ; R5_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=map_value(off=0,ks=4,vs=8,imm=0)
1972: (71) r0 = *(u8 *)(r7 +4)        ; R0_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=map_value(off=0,ks=4,vs=8,imm=0)
1973: (71) r6 = *(u8 *)(r7 +5)        ; R6_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=map_value(off=0,ks=4,vs=8,imm=0)
; memcpy(new_eth->h_source, old_eth->h_dest, 6);
1974: (71) r7 = *(u8 *)(r1 +42)       ; R1=pkt(off=0,r=54,imm=0) R7_w=scalar(umax=255,var_off=(0x0; 0xff))
1975: (73) *(u8 *)(r1 +8) = r7        ; R1=pkt(off=0,r=54,imm=0) R7_w=scalar(umax=255,var_off=(0x0; 0xff))
1976: (71) r7 = *(u8 *)(r1 +43)       ; R1=pkt(off=0,r=54,imm=0) R7_w=scalar(umax=255,var_off=(0x0; 0xff))
1977: (73) *(u8 *)(r1 +9) = r7        ; R1=pkt(off=0,r=54,imm=0) R7_w=scalar(umax=255,var_off=(0x0; 0xff))
1978: (71) r7 = *(u8 *)(r1 +40)       ; R1=pkt(off=0,r=54,imm=0) R7_w=scalar(umax=255,var_off=(0x0; 0xff))
1979: (73) *(u8 *)(r1 +6) = r7        ; R1=pkt(off=0,r=54,imm=0) R7_w=scalar(umax=255,var_off=(0x0; 0xff))
1980: (71) r7 = *(u8 *)(r1 +41)       ; R1=pkt(off=0,r=54,imm=0) R7_w=scalar(umax=255,var_off=(0x0; 0xff))
1981: (73) *(u8 *)(r1 +7) = r7        ; R1=pkt(off=0,r=54,imm=0) R7_w=scalar(umax=255,var_off=(0x0; 0xff))
; memcpy(new_eth->h_dest, cval->mac, 6);
1982: (73) *(u8 *)(r1 +5) = r6        ; R1=pkt(off=0,r=54,imm=0) R6_w=scalar(umax=255,var_off=(0x0; 0xff))
1983: (73) *(u8 *)(r1 +4) = r0        ; R0_w=scalar(umax=255,var_off=(0x0; 0xff)) R1=pkt(off=0,r=54,imm=0)
1984: (73) *(u8 *)(r1 +3) = r5        ; R1=pkt(off=0,r=54,imm=0) R5_w=scalar(umax=255,var_off=(0x0; 0xff))
1985: (73) *(u8 *)(r1 +2) = r4        ; R1=pkt(off=0,r=54,imm=0) R4_w=scalar(umax=255,var_off=(0x0; 0xff))
1986: (73) *(u8 *)(r1 +1) = r3        ; R1=pkt(off=0,r=54,imm=0) R3_w=scalar(umax=255,var_off=(0x0; 0xff))
1987: (73) *(u8 *)(r1 +0) = r2        ; R1=pkt(off=0,r=54,imm=0) R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; memcpy(new_eth->h_source, old_eth->h_dest, 6);
1988: (71) r2 = *(u8 *)(r1 +44)       ; R1=pkt(off=0,r=54,imm=0) R2_w=scalar(umax=255,var_off=(0x0; 0xff))
1989: (73) *(u8 *)(r1 +10) = r2       ; R1=pkt(off=0,r=54,imm=0) R2_w=scalar(umax=255,var_off=(0x0; 0xff))
1990: (71) r2 = *(u8 *)(r1 +45)       ; R1=pkt(off=0,r=54,imm=0) R2_w=scalar(umax=255,var_off=(0x0; 0xff))
1991: (73) *(u8 *)(r1 +11) = r2       ; R1=pkt(off=0,r=54,imm=0) R2_w=scalar(umax=255,var_off=(0x0; 0xff))
1992: (05) goto pc+0
; new_eth->h_proto = BE_ETH_P_IPV6;
1993: (72) *(u8 *)(r1 +12) = 134      ; R1=pkt(off=0,r=54,imm=0)
1994: (05) goto pc+0
1995: (72) *(u8 *)(r1 +13) = 221      ; R1=pkt(off=0,r=54,imm=0)
; 
1996: (69) r2 = *(u16 *)(r10 -48)     ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; create_encap_ipv6_src(pckt->flow.port16[0], pckt->flow.src, saddr);
1997: (61) r3 = *(u32 *)(r10 -80)     ; R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; saddr[3] = src ^ port;
1998: (af) r3 ^= r2                   ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R3_w=scalar()
; create_v6_hdr(ip6h, pckt->tos, saddr, dst->dstv6, payload_len, proto);
1999: (71) r2 = *(u8 *)(r10 -35)      ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
2000: (05) goto pc+0
; memcpy(ip6h->saddr.s6_addr32, saddr, 16);
2001: (62) *(u32 *)(r1 +22) = 1       ; R1=pkt(off=0,r=54,imm=0)
2002: (05) goto pc+0
; memset(ip6h->flow_lbl, 0, sizeof(ip6h->flow_lbl));
2003: (72) *(u8 *)(r1 +17) = 0        ; R1=pkt(off=0,r=54,imm=0)
2004: (72) *(u8 *)(r1 +16) = 0        ; R1=pkt(off=0,r=54,imm=0)
; memcpy(ip6h->saddr.s6_addr32, saddr, 16);
2005: (62) *(u32 *)(r1 +26) = 0       ; R1=pkt(off=0,r=54,imm=0)
2006: (62) *(u32 *)(r1 +30) = 0       ; R1=pkt(off=0,r=54,imm=0)
; ip6h->payload_len = bpf_htons(payload_len);
2007: (79) r4 = *(u64 *)(r10 -136)    ; R4_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
2008: (6b) *(u16 *)(r1 +18) = r4      ; R1=pkt(off=0,r=54,imm=0) R4_w=scalar(umax=65535,var_off=(0x0; 0xffff))
2009: (b7) r4 = 16388                 ; R4_w=16388
; ip6h->nexthdr = proto;
2010: (6b) *(u16 *)(r1 +20) = r4      ; R1=pkt(off=0,r=54,imm=0) R4_w=16388
; memcpy(ip6h->saddr.s6_addr32, saddr, 16);
2011: (63) *(u32 *)(r1 +34) = r3      ; R1=pkt(off=0,r=54,imm=0) R3=scalar()
; ip6h->flow_lbl[0] = (tc & 0x0F) << 4;
2012: (bf) r3 = r2                    ; R2=scalar(id=46,umax=255,var_off=(0x0; 0xff)) R3_w=scalar(id=46,umax=255,var_off=(0x0; 0xff))
2013: (67) r3 <<= 4                   ; R3_w=scalar(umax=4080,var_off=(0x0; 0xff0))
; ip6h->flow_lbl[0] = (tc & 0x0F) << 4;
2014: (73) *(u8 *)(r1 +15) = r3       ; R1=pkt(off=0,r=54,imm=0) R3_w=scalar(umax=4080,var_off=(0x0; 0xff0))
2015: (77) r2 >>= 4                   ; R2_w=scalar(umax=15,var_off=(0x0; 0xf))
; ip6h->priority = (tc & 0xF0) >> 4;
2016: (47) r2 |= 96                   ; R2_w=scalar(umin=96,umax=111,var_off=(0x60; 0xf))
2017: (73) *(u8 *)(r1 +14) = r2       ; R1=pkt(off=0,r=54,imm=0) R2_w=scalar(umin=96,umax=111,var_off=(0x60; 0xf))
2018: (79) r3 = *(u64 *)(r10 -176)    ; R3_w=map_value(off=0,ks=4,vs=20,imm=0) R10=fp0
; memcpy(ip6h->daddr.s6_addr32, daddr, 16);
2019: (61) r2 = *(u32 *)(r3 +0)       ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3_w=map_value(off=0,ks=4,vs=20,imm=0)
2020: (63) *(u32 *)(r1 +38) = r2      ; R1=pkt(off=0,r=54,imm=0) R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
2021: (61) r2 = *(u32 *)(r3 +4)       ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3_w=map_value(off=0,ks=4,vs=20,imm=0)
2022: (63) *(u32 *)(r1 +42) = r2      ; R1=pkt(off=0,r=54,imm=0) R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
2023: (61) r2 = *(u32 *)(r3 +12)      ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3_w=map_value(off=0,ks=4,vs=20,imm=0)
2024: (63) *(u32 *)(r1 +50) = r2      ; R1=pkt(off=0,r=54,imm=0) R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
2025: (61) r2 = *(u32 *)(r3 +8)       ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3_w=map_value(off=0,ks=4,vs=20,imm=0)
2026: (63) *(u32 *)(r1 +46) = r2      ; R1=pkt(off=0,r=54,imm=0) R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
2027: (05) goto pc-1776
; 
252: (b7) r9 = 3                      ; R9_w=3
253: (05) goto pc+1604
1858: safe

from 1967 to 1858: safe

from 1964 to 1858: safe

from 1959 to 1858: safe

from 1952 to 2028: R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=0 R6=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=8,imm=0) R8=scalar() R9=1 R10=fp0 fp-8=mmmmmmmm fp-16=mmmmmmmm fp-24=mmmm???? fp-32=mmmm???? fp-40=mmmmmmmm fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=map_value
; __u32 ip_src = create_encap_ipv4_src(pckt->flow.port16[0], pckt->flow.src);
2028: (61) r1 = *(u32 *)(r10 -80)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; if (XDP_ADJUST_HEAD_FUNC(xdp, 0 - (int)sizeof(struct iphdr))) {
2029: (7b) *(u64 *)(r10 -136) = r1    ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-136_w=
2030: (bf) r1 = r6                    ; R1_w=ctx(off=0,imm=0) R6=ctx(off=0,imm=0)
2031: (18) r2 = 0xffffffec            ; R2_w=4294967276
2033: (85) call bpf_xdp_adjust_head#44        ; R0=scalar()
2034: (bc) w0 = w0                    ; R0_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
2035: (05) goto pc+0
; if (XDP_ADJUST_HEAD_FUNC(xdp, 0 - (int)sizeof(struct iphdr))) {
2036: (55) if r0 != 0x0 goto pc-179   ; R0_w=0
; data = (void*)(long)xdp->data;
2037: (61) r1 = *(u32 *)(r6 +0)       ; R1_w=pkt(off=0,r=0,imm=0) R6=ctx(off=0,imm=0)
; data_end = (void*)(long)xdp->data_end;
2038: (61) r2 = *(u32 *)(r6 +4)       ; R2_w=pkt_end(off=0,imm=0) R6=ctx(off=0,imm=0)
; if (new_eth + 1 > data_end || old_eth + 1 > data_end || iph + 1 > data_end) {
2039: (bf) r3 = r1                    ; R1_w=pkt(off=0,r=0,imm=0) R3_w=pkt(off=0,r=0,imm=0)
2040: (07) r3 += 14                   ; R3_w=pkt(off=14,r=0,imm=0)
; if (new_eth + 1 > data_end || old_eth + 1 > data_end || iph + 1 > data_end) {
2041: (2d) if r3 > r2 goto pc-184     ; R2_w=pkt_end(off=0,imm=0) R3_w=pkt(off=14,r=14,imm=0)
2042: (bf) r3 = r1                    ; R1_w=pkt(off=0,r=14,imm=0) R3_w=pkt(off=0,r=14,imm=0)
2043: (07) r3 += 34                   ; R3=pkt(off=34,r=14,imm=0)
2044: (2d) if r3 > r2 goto pc-187     ; R2=pkt_end(off=0,imm=0) R3=pkt(off=34,r=34,imm=0)
2045: (79) r3 = *(u64 *)(r10 -168)    ; R3_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
2046: (dc) r3 = be32 r3               ; R3_w=scalar()
2047: (18) r2 = 0xffff0000            ; R2_w=4294901760
2049: (5f) r3 &= r2                   ; R2_w=4294901760 R3_w=scalar(umax=4294901760,var_off=(0x0; 0xffff0000),s32_max=2147418112)
2050: (79) r4 = *(u64 *)(r10 -136)    ; R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
2051: (57) r4 &= -65536               ; R4_w=scalar(umax=4294901760,var_off=(0x0; 0xffff0000),s32_max=2147418112)
2052: (af) r4 ^= r3                   ; R3_w=scalar(umax=4294901760,var_off=(0x0; 0xffff0000),s32_max=2147418112) R4_w=scalar()
2053: (bf) r3 = r4                    ; R3_w=scalar(id=47) R4_w=scalar(id=47)
2054: (47) r3 |= 4268                 ; R3_w=scalar(smin=-9223372036854771540,umin=4268,var_off=(0x10ac; 0xffffffffffffef53),s32_min=-2147479380)
; memcpy(new_eth->h_dest, cval->mac, 6);
2055: (71) r2 = *(u8 *)(r7 +0)        ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=map_value(off=0,ks=4,vs=8,imm=0)
2056: (7b) *(u64 *)(r10 -136) = r2    ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0 fp-136_w=
2057: (71) r2 = *(u8 *)(r7 +1)        ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=map_value(off=0,ks=4,vs=8,imm=0)
2058: (71) r5 = *(u8 *)(r7 +2)        ; R5_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=map_value(off=0,ks=4,vs=8,imm=0)
2059: (71) r0 = *(u8 *)(r7 +3)        ; R0_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=map_value(off=0,ks=4,vs=8,imm=0)
2060: (71) r6 = *(u8 *)(r7 +4)        ; R6_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=map_value(off=0,ks=4,vs=8,imm=0)
2061: (71) r7 = *(u8 *)(r7 +5)        ; R7_w=scalar(umax=255,var_off=(0x0; 0xff))
; memcpy(new_eth->h_source, old_eth->h_dest, 6);
2062: (71) r9 = *(u8 *)(r1 +22)       ; R1=pkt(off=0,r=34,imm=0) R9_w=scalar(umax=255,var_off=(0x0; 0xff))
2063: (73) *(u8 *)(r1 +8) = r9        ; R1=pkt(off=0,r=34,imm=0) R9_w=scalar(umax=255,var_off=(0x0; 0xff))
2064: (71) r9 = *(u8 *)(r1 +23)       ; R1=pkt(off=0,r=34,imm=0) R9_w=scalar(umax=255,var_off=(0x0; 0xff))
2065: (73) *(u8 *)(r1 +9) = r9        ; R1=pkt(off=0,r=34,imm=0) R9_w=scalar(umax=255,var_off=(0x0; 0xff))
2066: (71) r9 = *(u8 *)(r1 +20)       ; R1=pkt(off=0,r=34,imm=0) R9_w=scalar(umax=255,var_off=(0x0; 0xff))
2067: (73) *(u8 *)(r1 +6) = r9        ; R1=pkt(off=0,r=34,imm=0) R9_w=scalar(umax=255,var_off=(0x0; 0xff))
2068: (71) r9 = *(u8 *)(r1 +21)       ; R1=pkt(off=0,r=34,imm=0) R9_w=scalar(umax=255,var_off=(0x0; 0xff))
2069: (73) *(u8 *)(r1 +7) = r9        ; R1=pkt(off=0,r=34,imm=0) R9_w=scalar(umax=255,var_off=(0x0; 0xff))
; memcpy(new_eth->h_dest, cval->mac, 6);
2070: (73) *(u8 *)(r1 +5) = r7        ; R1=pkt(off=0,r=34,imm=0) R7_w=scalar(umax=255,var_off=(0x0; 0xff))
2071: (73) *(u8 *)(r1 +4) = r6        ; R1=pkt(off=0,r=34,imm=0) R6_w=scalar(umax=255,var_off=(0x0; 0xff))
2072: (73) *(u8 *)(r1 +3) = r0        ; R0_w=scalar(umax=255,var_off=(0x0; 0xff)) R1=pkt(off=0,r=34,imm=0)
2073: (73) *(u8 *)(r1 +2) = r5        ; R1=pkt(off=0,r=34,imm=0) R5_w=scalar(umax=255,var_off=(0x0; 0xff))
2074: (73) *(u8 *)(r1 +1) = r2        ; R1=pkt(off=0,r=34,imm=0) R2_w=scalar(umax=255,var_off=(0x0; 0xff))
2075: (79) r2 = *(u64 *)(r10 -136)    ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
2076: (73) *(u8 *)(r1 +0) = r2        ; R1=pkt(off=0,r=34,imm=0) R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; memcpy(new_eth->h_source, old_eth->h_dest, 6);
2077: (71) r2 = *(u8 *)(r1 +24)       ; R1=pkt(off=0,r=34,imm=0) R2_w=scalar(umax=255,var_off=(0x0; 0xff))
2078: (73) *(u8 *)(r1 +10) = r2       ; R1=pkt(off=0,r=34,imm=0) R2_w=scalar(umax=255,var_off=(0x0; 0xff))
2079: (71) r2 = *(u8 *)(r1 +25)       ; R1=pkt(off=0,r=34,imm=0) R2_w=scalar(umax=255,var_off=(0x0; 0xff))
2080: (73) *(u8 *)(r1 +11) = r2       ; R1=pkt(off=0,r=34,imm=0) R2_w=scalar(umax=255,var_off=(0x0; 0xff))
2081: (05) goto pc+0
; new_eth->h_proto = BE_ETH_P_IP;
2082: (72) *(u8 *)(r1 +12) = 8        ; R1=pkt(off=0,r=34,imm=0)
2083: (05) goto pc+0
2084: (05) goto pc+0
; *csum += *next_iph_u16++;
2085: (bc) w4 = w4                    ; R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
2086: (05) goto pc+0
; new_eth->h_proto = BE_ETH_P_IP;
2087: (72) *(u8 *)(r1 +13) = 0        ; R1=pkt(off=0,r=34,imm=0)
; create_v4_hdr(iph, pckt->tos, ip_src, dst->dst, pkt_bytes, IPPROTO_IPIP);
2088: (79) r2 = *(u64 *)(r10 -176)    ; R2_w=map_value(off=0,ks=4,vs=20,imm=0) R10=fp0
2089: (61) r7 = *(u32 *)(r2 +0)       ; R2_w=map_value(off=0,ks=4,vs=20,imm=0) R7_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; create_v4_hdr(iph, pckt->tos, ip_src, dst->dst, pkt_bytes, IPPROTO_IPIP);
2090: (71) r0 = *(u8 *)(r10 -35)      ; R0_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
2091: (05) goto pc+0
; iph->ihl = 5;
2092: (72) *(u8 *)(r1 +14) = 69       ; R1=pkt(off=0,r=34,imm=0)
; *csum += *next_iph_u16++;
2093: (77) r4 >>= 16                  ; R4_w=scalar(umax=65535,var_off=(0x0; 0xffff))
; iph->tot_len = bpf_htons(pkt_bytes + sizeof(struct iphdr));
2094: (07) r8 += 20                   ; R8_w=scalar()
2095: (dc) r8 = be16 r8               ; R8_w=scalar()
; *csum += *next_iph_u16++;
2096: (bf) r2 = r8                    ; R2_w=scalar(id=48) R8_w=scalar(id=48)
2097: (0f) r2 += r4                   ; R2_w=scalar() R4_w=scalar(umax=65535,var_off=(0x0; 0xffff))
; *csum += *next_iph_u16++;
2098: (bf) r6 = r7                    ; R6_w=scalar(id=49,umax=4294967295,var_off=(0x0; 0xffffffff)) R7=scalar(id=49,umax=4294967295,var_off=(0x0; 0xffffffff))
2099: (57) r6 &= 65535                ; R6_w=scalar(umax=65535,var_off=(0x0; 0xffff))
; *csum += *next_iph_u16++;
2100: (0f) r2 += r6                   ; R2_w=scalar() R6_w=scalar(umax=65535,var_off=(0x0; 0xffff))
; iph->tos = tos;
2101: (73) *(u8 *)(r1 +15) = r0       ; R0=scalar(umax=255,var_off=(0x0; 0xff)) R1=pkt(off=0,r=34,imm=0)
2102: (05) goto pc+0
; iph->ttl = DEFAULT_TTL;
2103: (6a) *(u16 *)(r1 +22) = 1088    ; R1=pkt(off=0,r=34,imm=0)
; iph->id = 0;
2104: (62) *(u32 *)(r1 +18) = 0       ; R1=pkt(off=0,r=34,imm=0)
; iph->saddr = saddr;
2105: (63) *(u32 *)(r1 +26) = r3      ; R1=pkt(off=0,r=34,imm=0) R3=scalar(smin=-9223372036854771540,umin=4268,var_off=(0x10ac; 0xffffffffffffef53),s32_min=-2147479380)
; iph->tot_len = bpf_htons(pkt_bytes + sizeof(struct iphdr));
2106: (6b) *(u16 *)(r1 +16) = r8      ; R1=pkt(off=0,r=34,imm=0) R8_w=scalar(id=48)
; iph->daddr = daddr;
2107: (63) *(u32 *)(r1 +30) = r7      ; R1=pkt(off=0,r=34,imm=0) R7=scalar(id=49,umax=4294967295,var_off=(0x0; 0xffffffff))
; *csum += *next_iph_u16++;
2108: (77) r7 >>= 16                  ; R7_w=scalar(umax=65535,var_off=(0x0; 0xffff))
; *csum += *next_iph_u16++;
2109: (0f) r2 += r7                   ; R2_w=scalar() R7_w=scalar(umax=65535,var_off=(0x0; 0xffff))
; *csum += *next_iph_u16++;
2110: (69) r3 = *(u16 *)(r1 +14)      ; R1=pkt(off=0,r=34,imm=0) R3_w=scalar(umax=65535,var_off=(0x0; 0xffff))
; *csum += *next_iph_u16++;
2111: (0f) r2 += r3                   ; R2_w=scalar() R3_w=scalar(umax=65535,var_off=(0x0; 0xffff))
; *csum += *next_iph_u16++;
2112: (69) r3 = *(u16 *)(r1 +22)      ; R1=pkt(off=0,r=34,imm=0) R3_w=scalar(umax=65535,var_off=(0x0; 0xffff))
; *csum += *next_iph_u16++;
2113: (0f) r2 += r3                   ; R2_w=scalar() R3_w=scalar(umax=65535,var_off=(0x0; 0xffff))
2114: (07) r2 += 4268                 ; R2_w=scalar()
2115: (b7) r3 = 65536                 ; R3_w=65536
; if (csum >> 16)
2116: (2d) if r3 > r2 goto pc+4       ; R2_w=scalar(umin=65536) R3_w=65536
2117: (bf) r4 = r2                    ; R2_w=scalar(id=50,umin=65536) R4_w=scalar(id=50,umin=65536)
2118: (77) r4 >>= 16                  ; R4_w=scalar(umin=1,umax=281474976710655,var_off=(0x0; 0xffffffffffff))
2119: (57) r2 &= 65535                ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff))
2120: (0f) r2 += r4                   ; R2=scalar(umin=1,umax=281474976776190,var_off=(0x0; 0x1ffffffffffff)) R4=scalar(umin=1,umax=281474976710655,var_off=(0x0; 0xffffffffffff))
2121: (2d) if r3 > r2 goto pc+4       ; R2=scalar(umin=65536,umax=281474976776190,var_off=(0x0; 0x1ffffffffffff)) R3=65536
2122: (bf) r4 = r2                    ; R2=scalar(id=51,umin=65536,umax=281474976776190,var_off=(0x0; 0x1ffffffffffff)) R4_w=scalar(id=51,umin=65536,umax=281474976776190,var_off=(0x0; 0x1ffffffffffff))
2123: (77) r4 >>= 16                  ; R4_w=scalar(umin=1,umax=4294967296,var_off=(0x0; 0x1ffffffff))
2124: (57) r2 &= 65535                ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff))
2125: (0f) r2 += r4                   ; R2_w=scalar(umin=1,umax=4295032831,var_off=(0x0; 0x1ffffffff)) R4_w=scalar(umin=1,umax=4294967296,var_off=(0x0; 0x1ffffffff))
2126: (2d) if r3 > r2 goto pc-605     ; R2_w=scalar(umin=65536,umax=4295032831,var_off=(0x0; 0x1ffffffff)) R3=65536
2127: (05) goto pc-610
; if (csum >> 16)
1518: (bf) r3 = r2                    ; R2_w=scalar(id=52,umin=65536,umax=4295032831,var_off=(0x0; 0x1ffffffff)) R3_w=scalar(id=52,umin=65536,umax=4295032831,var_off=(0x0; 0x1ffffffff))
1519: (77) r3 >>= 16                  ; R3_w=scalar(umin=1,umax=65536,var_off=(0x0; 0x1ffff),s32_min=0,s32_max=131071,u32_max=131071)
1520: (57) r2 &= 65535                ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff))
1521: (0f) r2 += r3                   ; R2=scalar(umin=1,umax=131071,var_off=(0x0; 0x3ffff),s32_min=0,s32_max=196606,u32_max=196606) R3=scalar(umin=1,umax=65536,var_off=(0x0; 0x1ffff),s32_min=0,s32_max=131071,u32_max=131071)
; if (csum >> 16)
1522: (bf) r3 = r2                    ; R2=scalar(id=53,umin=1,umax=131071,var_off=(0x0; 0x3ffff),s32_min=0,s32_max=196606,u32_max=196606) R3_w=scalar(id=53,umin=1,umax=131071,var_off=(0x0; 0x3ffff),s32_min=0,s32_max=196606,u32_max=196606)
1523: (77) r3 >>= 16                  ; R3_w=scalar(umax=1,var_off=(0x0; 0x3),s32_max=3,u32_max=3)
1524: (0f) r3 += r2                   ; R2=scalar(id=53,umin=1,umax=131071,var_off=(0x0; 0x3ffff),s32_min=0,s32_max=196606,u32_max=196606) R3_w=scalar(umin=1,umax=131072,var_off=(0x0; 0x3ffff),s32_min=0,s32_max=196609,u32_max=196609)
; iph->check = csum;
1525: (a7) r3 ^= -1                   ; R3_w=scalar(umin=18446744073709289472,var_off=(0xfffffffffffc0000; 0x3ffff),u32_min=-262144)
; iph->check = csum;
1526: (6b) *(u16 *)(r1 +24) = r3      ; R1=pkt(off=0,r=34,imm=0) R3_w=scalar(umin=18446744073709289472,var_off=(0xfffffffffffc0000; 0x3ffff),u32_min=-262144)
1527: (05) goto pc-1276
252: safe

from 2126 to 1522: safe

from 2121 to 2126: R0=scalar(umax=255,var_off=(0x0; 0xff)) R1=pkt(off=0,r=34,imm=0) R2=scalar(umin=1,umax=65535,var_off=(0x0; 0xffff)) R3=65536 R4=scalar(umin=1,umax=281474976710655,var_off=(0x0; 0xffffffffffff)) R5=scalar(umax=255,var_off=(0x0; 0xff)) R6=scalar(umax=65535,var_off=(0x0; 0xffff)) R7=scalar(umax=65535,var_off=(0x0; 0xffff)) R8=scalar(id=48) R9=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0 fp-8=mmmmmmmm fp-16=mmmmmmmm fp-24=mmmm???? fp-32=mmmm???? fp-40=mmmmmmmm fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=map_value
; if (csum >> 16)
2126: (2d) if r3 > r2 goto pc-605     ; R2=scalar(umin=65536,umax=65535,var_off=(0x0; 0xffff)) R3=65536
2127: (05) goto pc-610
; if (csum >> 16)
1518: (bf) r3 = r2                    ; R2=scalar(id=54,umin=65536,umax=65535,var_off=(0x0; 0xffff)) R3_w=scalar(id=54,umin=65536,umax=65535,var_off=(0x0; 0xffff))
1519: (77) r3 >>= 16                  ; R3_w=0
1520: (57) r2 &= 65535                ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff))
1521: (0f) r2 += r3
1522: safe

from 2126 to 1522: safe

from 2116 to 2121: safe

from 2044 to 1858: safe

from 2041 to 1858: safe

from 2036 to 1858: safe

from 1940 to 1858: safe

from 1926 to 1858: safe

from 1920 to 1858: safe

from 1905 to 1857: safe

from 1897 to 1909: R0=map_value(off=0,ks=4,vs=20,imm=0) R1=0 R2=scalar(umax=65535,var_off=(0x0; 0xffff)) R3_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R4=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6=ctx(off=0,imm=0) R7=scalar() R8=0 R9=scalar(id=29) R10=fp0 fp-8=mmmmmmmm fp-16=mmmmmmmm fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=map_value
; *lru_miss_stat += 1;
1909: (79) r2 = *(u64 *)(r10 -160)    ; R2_w=map_value(off=0,ks=4,vs=16,imm=0) R10=fp0
; data_stats->v2 += 1;
1910: (79) r1 = *(u64 *)(r2 +8)       ; R1_w=scalar() R2_w=map_value(off=0,ks=4,vs=16,imm=0)
1911: (07) r1 += 1                    ; R1_w=scalar()
1912: (7b) *(u64 *)(r2 +8) = r1       ; R1_w=scalar() R2_w=map_value(off=0,ks=4,vs=16,imm=0)
1913: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1914: (07) r2 += -112                 ; R2_w=fp-112
; cval = bpf_map_lookup_elem(&ctl_array, &mac_addr_pos);
1915: (18) r1 = 0xffffa03553eeca00    ; R1_w=map_ptr(off=0,ks=4,vs=8,imm=0)
1917: (85) call bpf_map_lookup_elem#1
1918: safe

from 1896 to 1909: R0=map_value(off=0,ks=4,vs=20,imm=0) R1=scalar(umax=255,var_off=(0x0; 0xff)) R2=scalar(umax=65535,var_off=(0x0; 0xffff)) R3_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R4=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6=ctx(off=0,imm=0) R7=scalar() R8=0 R9=scalar(id=29) R10=fp0 fp-8=mmmmmmmm fp-16=mmmmmmmm fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=map_value
; *lru_miss_stat += 1;
1909: (79) r2 = *(u64 *)(r10 -160)    ; R2_w=map_value(off=0,ks=4,vs=16,imm=0) R10=fp0
; data_stats->v2 += 1;
1910: (79) r1 = *(u64 *)(r2 +8)       ; R1_w=scalar() R2_w=map_value(off=0,ks=4,vs=16,imm=0)
1911: (07) r1 += 1                    ; R1_w=scalar()
1912: (7b) *(u64 *)(r2 +8) = r1       ; R1_w=scalar() R2_w=map_value(off=0,ks=4,vs=16,imm=0)
1913: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1914: (07) r2 += -112                 ; R2_w=fp-112
; cval = bpf_map_lookup_elem(&ctl_array, &mac_addr_pos);
1915: (18) r1 = 0xffffa03553eeca00    ; R1_w=map_ptr(off=0,ks=4,vs=8,imm=0)
1917: (85) call bpf_map_lookup_elem#1
1918: safe

from 1894 to 1909: R0=map_value(off=0,ks=4,vs=20,imm=0) R1=scalar(umax=255,var_off=(0x0; 0xff)) R2=scalar(umax=65535,var_off=(0x0; 0xffff)) R3=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R4=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6=ctx(off=0,imm=0) R7=scalar() R8=0 R9=scalar(id=29) R10=fp0 fp-8=mmmmmmmm fp-16=mmmmmmmm fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=map_value
; *lru_miss_stat += 1;
1909: (79) r2 = *(u64 *)(r10 -160)    ; R2_w=map_value(off=0,ks=4,vs=16,imm=0) R10=fp0
; data_stats->v2 += 1;
1910: (79) r1 = *(u64 *)(r2 +8)       ; R1_w=scalar() R2_w=map_value(off=0,ks=4,vs=16,imm=0)
1911: (07) r1 += 1                    ; R1_w=scalar()
1912: (7b) *(u64 *)(r2 +8) = r1       ; R1_w=scalar() R2_w=map_value(off=0,ks=4,vs=16,imm=0)
1913: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1914: (07) r2 += -112                 ; R2_w=fp-112
; cval = bpf_map_lookup_elem(&ctl_array, &mac_addr_pos);
1915: (18) r1 = 0xffffa03553eeca00    ; R1_w=map_ptr(off=0,ks=4,vs=8,imm=0)
1917: (85) call bpf_map_lookup_elem#1
1918: safe

from 1888 to 1857: safe

from 1870 to 1872: R0=map_value(off=0,ks=4,vs=20,imm=0) R1=scalar(umax=255,var_off=(0x0; 0xff)) R6=ctx(off=0,imm=0) R7=scalar() R8=0 R9=scalar(id=29) R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=map_value
; new_dst_lru.pos = key;
1872: (61) r1 = *(u32 *)(r10 -20)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; new_dst_lru.pos = key;
1873: (63) *(u32 *)(r10 -16) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-16=
1874: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; new_dst_lru.pos = key;
1875: (07) r2 += -80                  ; R2_w=fp-80
1876: (bf) r3 = r10                   ; R3_w=fp0 R10=fp0
1877: (07) r3 += -16                  ; R3_w=fp-16
; bpf_map_update_elem(lru_map, &pckt->flow, &new_dst_lru, BPF_ANY);
1878: (79) r1 = *(u64 *)(r10 -152)    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0
1879: (b7) r4 = 0                     ; R4_w=0
1880: (85) call bpf_map_update_elem#2
1881: safe

from 1868 to 1881: safe

from 1862 to 1881: safe

from 1834 to 1838: safe

from 1826 to 1839: R0=map_value(off=0,ks=4,vs=4,imm=0) R1=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6=ctx(off=0,imm=0) R7=scalar() R8=0 R9=scalar(id=29) R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0
; pckt->real_index = key;
1839: (63) *(u32 *)(r10 -40) = r1     ; R1=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1840: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1841: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1842: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1844: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=58,off=0,ks=4,vs=20,imm=0)
; if (!(*real)) {
1845: (55) if r0 != 0x0 goto pc+14    ; R0_w=0
1846: (05) goto pc+0
1847: safe

from 1845 to 1860: R0=map_value(off=0,ks=4,vs=20,imm=0) R6=ctx(off=0,imm=0) R7=scalar() R8=0 R9=scalar(id=29) R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0
; }
1860: (7b) *(u64 *)(r10 -176) = r0    ; R0=map_value(off=0,ks=4,vs=20,imm=0) R10=fp0 fp-176_w=map_value
; if (lru_map && !(vip_info->flags & F_LRU_BYPASS) && !under_flood) {
1861: (79) r1 = *(u64 *)(r10 -152)    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0
1862: (15) if r1 == 0x0 goto pc+18    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0)
; if (lru_map && !(vip_info->flags & F_LRU_BYPASS) && !under_flood) {
1863: (79) r1 = *(u64 *)(r10 -144)    ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
1864: (61) r1 = *(u32 *)(r1 +0)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (lru_map && !(vip_info->flags & F_LRU_BYPASS) && !under_flood) {
1865: (57) r1 &= 2                    ; R1_w=scalar(umax=2,var_off=(0x0; 0x2))
1866: (77) r1 >>= 1                   ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
; if (lru_map && !(vip_info->flags & F_LRU_BYPASS) && !under_flood) {
1867: (4f) r8 |= r1                   ; R1_w=scalar(umax=1,var_off=(0x0; 0x1)) R8_w=scalar()
1868: (55) if r8 != 0x0 goto pc+12    ; R8_w=0
; if (pckt->flow.proto == IPPROTO_UDP) {
1869: (71) r1 = *(u8 *)(r10 -44)
1870: safe

from 1868 to 1881: safe

from 1862 to 1881: safe

from 1823 to 1857: safe

from 1726 to 1729: R0=scalar(id=29) R1=scalar(umax=8,var_off=(0x0; 0x8)) R2=scalar(umin=1000000001) R6=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=16,imm=0) R8=0 R9=scalar(id=29) R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0
; pckt->flow.port16[0] = pckt->flow.port16[1];
1729: (69) r1 = *(u16 *)(r10 -46)     ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; pckt->flow.port16[0] = pckt->flow.port16[1];
1730: (6b) *(u16 *)(r10 -48) = r1     ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-48=
1731: (b7) r5 = 0                     ; R5_w=0
; memset(pckt->flow.srcv6, 0, 16);
1732: (7b) *(u64 *)(r10 -80) = r5
last_idx 1732 first_idx 1729
regs=20 stack=0 before 1731: (b7) r5 = 0
1733: R5_w=P0 R10=fp0 fp-80_w=00000000
1733: (7b) *(u64 *)(r10 -72) = r5     ; R5_w=P0 R10=fp0 fp-72_w=00000000
; return jhash_2words(pckt->flow.src, pckt->flow.ports, INIT_JHASH_SEED);
1734: (61) r3 = *(u32 *)(r10 -48)     ; R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; b += initval;
1735: (07) r3 += -525483785           ; R3_w=scalar(smin=-525483785,smax=3769483510)
1736: (05) goto pc+0
1737: (05) goto pc+0
1738: (05) goto pc+0
1739: (bc) w2 = w3                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3=scalar(smin=-525483785,smax=3769483510)
; return (word << shift) | (word >> ((-shift) & 31));
1740: (77) r2 >>= 18                  ; R2_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1741: (bf) r4 = r3                    ; R3=scalar(id=59,smin=-525483785,smax=3769483510) R4_w=scalar(id=59,smin=-525483785,smax=3769483510)
1742: (67) r4 <<= 14                  ; R4_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1743: (4f) r4 |= r2                   ; R2_w=scalar(umax=16383,var_off=(0x0; 0x3fff)) R4_w=scalar()
; __jhash_final(a, b, c);
1744: (bf) r2 = r3                    ; R2_w=scalar(id=59,smin=-525483785,smax=3769483510) R3=scalar(id=59,smin=-525483785,smax=3769483510)
1745: (a7) r2 ^= -525483785           ; R2_w=scalar()
1746: (1f) r2 -= r4                   ; R2_w=scalar() R4_w=scalar()
1747: (05) goto pc+0
1748: (05) goto pc+0
1749: (bf) r0 = r2                    ; R0_w=scalar(id=60) R2=scalar(id=60)
1750: (67) r0 <<= 32                  ; R0_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
; return (word << shift) | (word >> ((-shift) & 31));
1751: (77) r0 >>= 53                  ; R0_w=scalar(umax=2047,var_off=(0x0; 0x7ff))
1752: (bf) r7 = r2                    ; R2=scalar(id=60) R7_w=scalar(id=60)
1753: (67) r7 <<= 11                  ; R7_w=scalar(smax=9223372036854773760,umax=18446744073709549568,var_off=(0x0; 0xfffffffffffff800),s32_max=2147481600,u32_max=-2048)
1754: (4f) r7 |= r0                   ; R0_w=scalar(umax=2047,var_off=(0x0; 0x7ff)) R7_w=scalar()
; a += initval;
1755: (07) r5 += -525483785           ; R5_w=P-525483785
; __jhash_final(a, b, c);
1756: (bf) r4 = r2                    ; R2=scalar(id=60) R4_w=scalar(id=60)
1757: (af) r4 ^= r5                   ; R4_w=scalar() R5_w=P-525483785
1758: (1f) r4 -= r7                   ; R4_w=scalar() R7_w=scalar()
1759: (05) goto pc+0
1760: (05) goto pc+0
1761: (05) goto pc+0
1762: (bc) w0 = w4                    ; R0_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R4=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1763: (77) r0 >>= 7                   ; R0_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff))
1764: (bf) r7 = r4                    ; R4=scalar(id=61) R7_w=scalar(id=61)
1765: (67) r7 <<= 25                  ; R7_w=scalar(smax=9223372036821221376,umax=18446744073675997184,var_off=(0x0; 0xfffffffffe000000),s32_max=2113929216,u32_max=-33554432)
1766: (4f) r7 |= r0                   ; R0_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff)) R7_w=scalar()
; __jhash_final(a, b, c);
1767: (bf) r5 = r4                    ; R4=scalar(id=61) R5_w=scalar(id=61)
1768: (af) r5 ^= r3                   ; R3=scalar(id=59,smin=-525483785,smax=3769483510) R5_w=scalar()
1769: (1f) r5 -= r7                   ; R5_w=scalar() R7_w=scalar()
1770: (05) goto pc+0
1771: (05) goto pc+0
1772: (05) goto pc+0
1773: (bc) w0 = w5                    ; R0_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R5=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1774: (77) r0 >>= 16                  ; R0_w=scalar(umax=65535,var_off=(0x0; 0xffff))
1775: (bf) r7 = r5                    ; R5=scalar(id=62) R7_w=scalar(id=62)
1776: (67) r7 <<= 16                  ; R7_w=scalar(smax=9223372036854710272,umax=18446744073709486080,var_off=(0x0; 0xffffffffffff0000),s32_max=2147418112,u32_max=-65536)
1777: (4f) r7 |= r0                   ; R0_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R7_w=scalar()
; __jhash_final(a, b, c);
1778: (bf) r3 = r5                    ; R3_w=scalar(id=62) R5=scalar(id=62)
1779: (af) r3 ^= r2                   ; R2=scalar(id=60) R3_w=scalar()
1780: (1f) r3 -= r7                   ; R3_w=scalar() R7_w=scalar()
1781: (05) goto pc+0
1782: (05) goto pc+0
1783: (05) goto pc+0
1784: (bc) w0 = w3                    ; R0_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1785: (77) r0 >>= 28                  ; R0_w=scalar(umax=15,var_off=(0x0; 0xf))
1786: (bf) r7 = r3                    ; R3=scalar(id=63) R7_w=scalar(id=63)
1787: (67) r7 <<= 4                   ; R7_w=scalar(smax=9223372036854775792,umax=18446744073709551600,var_off=(0x0; 0xfffffffffffffff0),s32_max=2147483632,u32_max=-16)
1788: (4f) r7 |= r0                   ; R0_w=scalar(umax=15,var_off=(0x0; 0xf)) R7_w=scalar()
; __jhash_final(a, b, c);
1789: (bf) r2 = r3                    ; R2_w=scalar(id=63) R3=scalar(id=63)
1790: (af) r2 ^= r4                   ; R2_w=scalar() R4=scalar(id=61)
1791: (1f) r2 -= r7                   ; R2_w=scalar() R7_w=scalar()
1792: (05) goto pc+0
1793: (bc) w4 = w2                    ; R2=scalar() R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1794: (77) r4 >>= 18                  ; R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1795: (bf) r1 = r2                    ; R1_w=scalar(id=64) R2=scalar(id=64)
1796: (67) r1 <<= 14                  ; R1_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1797: (4f) r1 |= r4                   ; R1_w=scalar() R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
; __jhash_final(a, b, c);
1798: (af) r2 ^= r5                   ; R2_w=scalar() R5=scalar(id=62)
1799: (1f) r2 -= r1                   ; R1_w=scalar() R2_w=scalar()
1800: (05) goto pc+0
1801: (05) goto pc+0
1802: (05) goto pc+0
1803: (bc) w4 = w2                    ; R2=scalar() R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1804: (77) r4 >>= 8                   ; R4_w=scalar(umax=16777215,var_off=(0x0; 0xffffff))
1805: (bf) r1 = r2                    ; R1_w=scalar(id=65) R2=scalar(id=65)
1806: (67) r1 <<= 24                  ; R1_w=scalar(smax=9223372036837998592,umax=18446744073692774400,var_off=(0x0; 0xffffffffff000000),s32_max=2130706432,u32_max=-16777216)
1807: (4f) r1 |= r4                   ; R1_w=scalar() R4_w=scalar(umax=16777215,var_off=(0x0; 0xffffff))
; __jhash_final(a, b, c);
1808: (af) r2 ^= r3                   ; R2_w=scalar() R3=scalar(id=63)
1809: (1f) r2 -= r1                   ; R1_w=scalar() R2_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1810: (79) r1 = *(u64 *)(r10 -144)    ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
1811: (61) r1 = *(u32 *)(r1 +4)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; key = RING_SIZE * (vip_info->vip_num) + hash;
1812: (27) r1 *= 65537                ; R1_w=scalar(umax=281479271612415,var_off=(0x0; 0x1ffffffffffff))
; __jhash_final(a, b, c);
1813: (bc) w2 = w2                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
1814: (05) goto pc+0
; hash = get_packet_hash(pckt, hash_16bytes) % RING_SIZE;
1815: (97) r2 %= 65537                ; R2_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1816: (0f) r2 += r1                   ; R1=scalar(umax=281479271612415,var_off=(0x0; 0x1ffffffffffff)) R2_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1817: (63) *(u32 *)(r10 -20) = r2     ; R2_w=scalar() R10=fp0 fp-24=mmmm????
1818: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1819: (07) r2 += -20                  ; R2_w=fp-20
; real_pos = bpf_map_lookup_elem(&ch_rings, &key);
1820: (18) r1 = 0xffffaebaa0631000    ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
1822: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=66,off=0,ks=4,vs=4,imm=0)
; if (!real_pos) {
1823: (15) if r0 == 0x0 goto pc+33    ; R0_w=map_value(off=0,ks=4,vs=4,imm=0)
; key = *real_pos;
1824: (61) r1 = *(u32 *)(r0 +0)       ; R0_w=map_value(off=0,ks=4,vs=4,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; key = *real_pos;
1825: (63) *(u32 *)(r10 -20) = r1     ; R1=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-24=mmmm????
; if (key == 0) {
1826: (55) if r1 != 0x0 goto pc+12    ; R1=0
1827: (05) goto pc+0
; __u32 ch_drop_stats_key = MAX_VIPS + CH_DROP_STATS;
1828: (62) *(u32 *)(r10 -28) = 521    ; R10=fp0 fp-32=mmmm????
1829: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1830: (07) r2 += -28                  ; R2_w=fp-28
; bpf_map_lookup_elem(&stats, &ch_drop_stats_key);
1831: (18) r1 = 0xffffa03499be8000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
1833: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=67,off=0,ks=4,vs=16,imm=0)
; if (!ch_drop_stats) {
1834: (15) if r0 == 0x0 goto pc+3     ; R0_w=map_value(off=0,ks=4,vs=16,imm=0)
; ch_drop_stats->v2 += 1;
1835: (79) r1 = *(u64 *)(r0 +8)       ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1836: (07) r1 += 1                    ; R1_w=scalar()
1837: (7b) *(u64 *)(r0 +8) = r1       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1=scalar()
; pckt->real_index = key;
1838: (61) r1 = *(u32 *)(r10 -20)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; pckt->real_index = key;
1839: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1840: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1841: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1842: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1844: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=68,off=0,ks=4,vs=20,imm=0)
; if (!(*real)) {
1845: (55) if r0 != 0x0 goto pc+14    ; R0_w=0
1846: (05) goto pc+0
1847: safe

from 1845 to 1860: R0=map_value(off=0,ks=4,vs=20,imm=0) R6=ctx(off=0,imm=0) R7=scalar() R8=0 R9=scalar(id=29) R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=00000000 fp-80=00000000 fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0
; }
1860: (7b) *(u64 *)(r10 -176) = r0    ; R0=map_value(off=0,ks=4,vs=20,imm=0) R10=fp0 fp-176_w=map_value
; if (lru_map && !(vip_info->flags & F_LRU_BYPASS) && !under_flood) {
1861: (79) r1 = *(u64 *)(r10 -152)    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0
1862: (15) if r1 == 0x0 goto pc+18    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0)
; if (lru_map && !(vip_info->flags & F_LRU_BYPASS) && !under_flood) {
1863: (79) r1 = *(u64 *)(r10 -144)    ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
1864: (61) r1 = *(u32 *)(r1 +0)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (lru_map && !(vip_info->flags & F_LRU_BYPASS) && !under_flood) {
1865: (57) r1 &= 2                    ; R1_w=scalar(umax=2,var_off=(0x0; 0x2))
1866: (77) r1 >>= 1                   ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
; if (lru_map && !(vip_info->flags & F_LRU_BYPASS) && !under_flood) {
1867: (4f) r8 |= r1                   ; R1_w=scalar(umax=1,var_off=(0x0; 0x1)) R8_w=scalar()
1868: (55) if r8 != 0x0 goto pc+12    ; R8_w=0
; if (pckt->flow.proto == IPPROTO_UDP) {
1869: (71) r1 = *(u8 *)(r10 -44)      ; R1=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (pckt->flow.proto == IPPROTO_UDP) {
1870: (55) if r1 != 0x11 goto pc+1    ; R1=17
; new_dst_lru.atime = cur_time;
1871: (7b) *(u64 *)(r10 -8) = r9      ; R9=scalar(id=29) R10=fp0 fp-8_w=mmmmmmmm
; new_dst_lru.pos = key;
1872: (61) r1 = *(u32 *)(r10 -20)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; new_dst_lru.pos = key;
1873: (63) *(u32 *)(r10 -16) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-16=
1874: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; new_dst_lru.pos = key;
1875: (07) r2 += -80                  ; R2_w=fp-80
1876: (bf) r3 = r10                   ; R3_w=fp0 R10=fp0
1877: (07) r3 += -16                  ; R3_w=fp-16
; bpf_map_update_elem(lru_map, &pckt->flow, &new_dst_lru, BPF_ANY);
1878: (79) r1 = *(u64 *)(r10 -152)    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0
1879: (b7) r4 = 0                     ; R4_w=0
1880: (85) call bpf_map_update_elem#2
1881: safe

from 1870 to 1872: R0=map_value(off=0,ks=4,vs=20,imm=0) R1=scalar(umax=255,var_off=(0x0; 0xff)) R6=ctx(off=0,imm=0) R7=scalar() R8=0 R9=scalar(id=29) R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=00000000 fp-80=00000000 fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=map_value
; new_dst_lru.pos = key;
1872: (61) r1 = *(u32 *)(r10 -20)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; new_dst_lru.pos = key;
1873: (63) *(u32 *)(r10 -16) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-16=
1874: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; new_dst_lru.pos = key;
1875: (07) r2 += -80                  ; R2_w=fp-80
1876: (bf) r3 = r10                   ; R3_w=fp0 R10=fp0
1877: (07) r3 += -16                  ; R3_w=fp-16
; bpf_map_update_elem(lru_map, &pckt->flow, &new_dst_lru, BPF_ANY);
1878: (79) r1 = *(u64 *)(r10 -152)    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0
1879: (b7) r4 = 0                     ; R4_w=0
1880: (85) call bpf_map_update_elem#2
1881: safe

from 1868 to 1881: R0=map_value(off=0,ks=4,vs=20,imm=0) R1_w=scalar(umax=1,var_off=(0x0; 0x1)) R6=ctx(off=0,imm=0) R7=scalar() R8_w=scalar() R9=scalar(id=29) R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=00000000 fp-80=00000000 fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176_w=map_value
1881: (05) goto pc+0
; __u32 vip_miss_stats_key = 0;
1882: (62) *(u32 *)(r10 -16) = 0      ; R10=fp0 fp-16=0000mmmm
1883: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1884: (07) r2 += -16                  ; R2_w=fp-16
; bpf_map_lookup_elem(&vip_miss_stats, &vip_miss_stats_key);
1885: (18) r1 = 0xffffa03587067400    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1887: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=69,off=0,ks=4,vs=20,imm=0)
; if (!lru_miss_stat_vip) {
1888: (15) if r0 == 0x0 goto pc-32    ; R0_w=map_value(off=0,ks=4,vs=20,imm=0)
; bool vip_match = address_match && port_match && proto_match;
1889: (69) r2 = *(u16 *)(r10 -88)     ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; 
1890: (61) r3 = *(u32 *)(r10 -104)    ; R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; bool vip_match = address_match && port_match && proto_match;
1891: (71) r1 = *(u8 *)(r10 -86)      ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; bool proto_match = lru_miss_stat_vip->proto = vip->proto;
1892: (73) *(u8 *)(r0 +18) = r1       ; R0_w=map_value(off=0,ks=4,vs=20,imm=0) R1_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
1893: (61) r4 = *(u32 *)(r0 +0)       ; R0=map_value(off=0,ks=4,vs=20,imm=0) R4=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; bool vip_match = address_match && port_match && proto_match;
1894: (5d) if r4 != r3 goto pc+14     ; R3=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R4=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
1895: (69) r3 = *(u16 *)(r0 +16)      ; R0=map_value(off=0,ks=4,vs=20,imm=0) R3_w=scalar(umax=65535,var_off=(0x0; 0xffff))
1896: (5d) if r3 != r2 goto pc+12     ; R2=scalar(umax=65535,var_off=(0x0; 0xffff)) R3_w=scalar(umax=65535,var_off=(0x0; 0xffff))
1897: (15) if r1 == 0x0 goto pc+11    ; R1=scalar(umax=255,var_off=(0x0; 0xff))
; __u32 lru_stats_key = pckt->real_index;
1898: (61) r1 = *(u32 *)(r10 -40)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; __u32 lru_stats_key = pckt->real_index;
1899: (63) *(u32 *)(r10 -28) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmm????
1900: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; __u32 lru_stats_key = pckt->real_index;
1901: (07) r2 += -28                  ; R2_w=fp-28
; __u32* lru_miss_stat = bpf_map_lookup_elem(&lru_miss_stats, &lru_stats_key);
1902: (18) r1 = 0xffffaeba8afdd000    ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
1904: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=70,off=0,ks=4,vs=4,imm=0)
; if (!lru_miss_stat) {
1905: (15) if r0 == 0x0 goto pc-49    ; R0=map_value(off=0,ks=4,vs=4,imm=0)
; *lru_miss_stat += 1;
1906: (61) r1 = *(u32 *)(r0 +0)       ; R0=map_value(off=0,ks=4,vs=4,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
1907: (07) r1 += 1                    ; R1_w=scalar(umin=1,umax=4294967296,var_off=(0x0; 0x1ffffffff))
1908: (63) *(u32 *)(r0 +0) = r1       ; R0=map_value(off=0,ks=4,vs=4,imm=0) R1_w=scalar(umin=1,umax=4294967296,var_off=(0x0; 0x1ffffffff))
1909: (79) r2 = *(u64 *)(r10 -160)    ; R2_w=map_value(off=0,ks=4,vs=16,imm=0) R10=fp0
; data_stats->v2 += 1;
1910: (79) r1 = *(u64 *)(r2 +8)       ; R1_w=scalar() R2_w=map_value(off=0,ks=4,vs=16,imm=0)
1911: (07) r1 += 1                    ; R1_w=scalar()
1912: (7b) *(u64 *)(r2 +8) = r1       ; R1_w=scalar() R2_w=map_value(off=0,ks=4,vs=16,imm=0)
1913: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1914: (07) r2 += -112                 ; R2_w=fp-112
; cval = bpf_map_lookup_elem(&ctl_array, &mac_addr_pos);
1915: (18) r1 = 0xffffa03553eeca00    ; R1_w=map_ptr(off=0,ks=4,vs=8,imm=0)
1917: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=71,off=0,ks=4,vs=8,imm=0)
1918: (bf) r7 = r0                    ; R0=map_value_or_null(id=71,off=0,ks=4,vs=8,imm=0) R7_w=map_value_or_null(id=71,off=0,ks=4,vs=8,imm=0)
1919: (b7) r9 = 1                     ; R9_w=1
; if (!cval) {
1920: (15) if r7 == 0x0 goto pc-63    ; R7_w=map_value(off=0,ks=4,vs=8,imm=0)
1921: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1922: (07) r2 += -108                 ; R2_w=fp-108
; data_stats = bpf_map_lookup_elem(&stats, &vip_num);
1923: (18) r1 = 0xffffa03499be8000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
1925: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=72,off=0,ks=4,vs=16,imm=0)
; if (!data_stats) {
1926: (15) if r0 == 0x0 goto pc-69    ; R0_w=map_value(off=0,ks=4,vs=16,imm=0)
1927: (79) r8 = *(u64 *)(r10 -136)    ; R8_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
1928: (dc) r8 = be16 r8               ; R8_w=scalar()
; data_stats->v1 += 1;
1929: (79) r1 = *(u64 *)(r0 +8)       ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1930: (0f) r1 += r8                   ; R1_w=scalar() R8_w=scalar()
1931: (7b) *(u64 *)(r0 +8) = r1       ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1932: (79) r1 = *(u64 *)(r0 +0)       ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1933: (07) r1 += 1                    ; R1_w=scalar()
1934: (7b) *(u64 *)(r0 +0) = r1       ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
; data_stats = bpf_map_lookup_elem(&reals_stats, &pckt.real_index);
1935: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1936: (07) r2 += -40                  ; R2_w=fp-40
; data_stats = bpf_map_lookup_elem(&reals_stats, &pckt.real_index);
1937: (18) r1 = 0xffffaeba8ae7d000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
1939: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=73,off=0,ks=4,vs=16,imm=0)
; if (!data_stats) {
1940: (15) if r0 == 0x0 goto pc-83    ; R0=map_value(off=0,ks=4,vs=16,imm=0)
; data_stats->v1 += 1;
1941: (79) r1 = *(u64 *)(r0 +8)       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1942: (0f) r1 += r8                   ; R1_w=scalar() R8=scalar()
1943: (7b) *(u64 *)(r0 +8) = r1       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1944: (79) r1 = *(u64 *)(r0 +0)       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1945: (0f) r1 += r9                   ; R1_w=scalar() R9=1
1946: (7b) *(u64 *)(r0 +0) = r1       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
; pckt.flow.port16[0] = original_sport;
1947: (79) r1 = *(u64 *)(r10 -168)    ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
1948: (6b) *(u16 *)(r10 -48) = r1     ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-48=
; if (dst->flags & F_IPV6) {
1949: (79) r1 = *(u64 *)(r10 -176)    ; R1_w=map_value(off=0,ks=4,vs=20,imm=0) R10=fp0
1950: (71) r1 = *(u8 *)(r1 +16)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff))
; if (dst->flags & F_IPV6) {
1951: (57) r1 &= 1                    ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
; if (dst->flags & F_IPV6) {
1952: (15) if r1 == 0x0 goto pc+75    ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
; if (XDP_ADJUST_HEAD_FUNC(xdp, 0 - (int)sizeof(struct ipv6hdr))) {
1953: (bf) r1 = r6                    ; R1_w=ctx(off=0,imm=0) R6=ctx(off=0,imm=0)
1954: (18) r2 = 0xffffffd8            ; R2_w=4294967256
1956: (85) call bpf_xdp_adjust_head#44
1957: safe

from 1952 to 2028: R0=map_value(off=0,ks=4,vs=16,imm=0) R1=0 R6=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=8,imm=0) R8=scalar() R9=1 R10=fp0 fp-8=00000000 fp-16=0000mmmm fp-24=mmmm???? fp-32=mmmm???? fp-40=mmmmmmmm fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=00000000 fp-80=00000000 fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=map_value
; __u32 ip_src = create_encap_ipv4_src(pckt->flow.port16[0], pckt->flow.src);
2028: (61) r1 = *(u32 *)(r10 -80)     ; R1_w=P0 R10=fp0
; if (XDP_ADJUST_HEAD_FUNC(xdp, 0 - (int)sizeof(struct iphdr))) {
2029: (7b) *(u64 *)(r10 -136) = r1    ; R1_w=P0 R10=fp0 fp-136_w=00000000
2030: (bf) r1 = r6                    ; R1_w=ctx(off=0,imm=0) R6=ctx(off=0,imm=0)
2031: (18) r2 = 0xffffffec            ; R2_w=4294967276
2033: (85) call bpf_xdp_adjust_head#44        ; R0_w=scalar()
2034: (bc) w0 = w0                    ; R0_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
2035: (05) goto pc+0
; if (XDP_ADJUST_HEAD_FUNC(xdp, 0 - (int)sizeof(struct iphdr))) {
2036: (55) if r0 != 0x0 goto pc-179   ; R0_w=0
; data = (void*)(long)xdp->data;
2037: (61) r1 = *(u32 *)(r6 +0)       ; R1_w=pkt(off=0,r=0,imm=0) R6=ctx(off=0,imm=0)
; data_end = (void*)(long)xdp->data_end;
2038: (61) r2 = *(u32 *)(r6 +4)       ; R2_w=pkt_end(off=0,imm=0) R6=ctx(off=0,imm=0)
; if (new_eth + 1 > data_end || old_eth + 1 > data_end || iph + 1 > data_end) {
2039: (bf) r3 = r1                    ; R1_w=pkt(off=0,r=0,imm=0) R3_w=pkt(off=0,r=0,imm=0)
2040: (07) r3 += 14                   ; R3=pkt(off=14,r=0,imm=0)
; if (new_eth + 1 > data_end || old_eth + 1 > data_end || iph + 1 > data_end) {
2041: (2d) if r3 > r2 goto pc-184     ; R2=pkt_end(off=0,imm=0) R3=pkt(off=14,r=14,imm=0)
2042: (bf) r3 = r1                    ; R1=pkt(off=0,r=14,imm=0) R3_w=pkt(off=0,r=14,imm=0)
2043: (07) r3 += 34                   ; R3_w=pkt(off=34,r=14,imm=0)
2044: (2d) if r3 > r2 goto pc-187     ; R2=pkt_end(off=0,imm=0) R3_w=pkt(off=34,r=34,imm=0)
2045: (79) r3 = *(u64 *)(r10 -168)    ; R3_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
2046: (dc) r3 = be32 r3               ; R3_w=scalar()
2047: (18) r2 = 0xffff0000            ; R2_w=4294901760
2049: (5f) r3 &= r2                   ; R2_w=4294901760 R3_w=scalar(umax=4294901760,var_off=(0x0; 0xffff0000),s32_max=2147418112)
2050: (79) r4 = *(u64 *)(r10 -136)    ; R4_w=P0 R10=fp0
2051: (57) r4 &= -65536               ; R4_w=P0
2052: (af) r4 ^= r3
last_idx 2052 first_idx 2041
regs=8 stack=0 before 2051: (57) r4 &= -65536
regs=8 stack=0 before 2050: (79) r4 = *(u64 *)(r10 -136)
regs=8 stack=0 before 2049: (5f) r3 &= r2
regs=c stack=0 before 2047: (18) r2 = 0xffff0000
regs=8 stack=0 before 2046: (dc) r3 = be32 r3
regs=9 stack=0 before 2045: (79) r3 = *(u64 *)(r10 -168)
regs=1 stack=100000 before 2044: (2d) if r3 > r2 goto pc-187
regs=1 stack=100000 before 2043: (07) r3 += 34
regs=1 stack=100000 before 2042: (bf) r3 = r1
regs=1 stack=100000 before 2041: (2d) if r3 > r2 goto pc-184
parent didn't have regs=1 stack=100000 marks: R0_w=P0 R1_rw=pkt(off=0,r=0,imm=0) R2_rw=pkt_end(off=0,imm=0) R3_rw=pkt(off=14,r=0,imm=0) R6=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=8,imm=0) R8=scalar() R9=1 R10=fp0 fp-8=00000000 fp-16=0000mmmm fp-24=mmmm???? fp-32=mmmm???? fp-40=mmmmmmmm fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=00000000 fp-80=00000000 fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136_rw=00000000 fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168_r=P fp-176=map_value
last_idx 2040 first_idx 2028
regs=1 stack=100000 before 2040: (07) r3 += 14
regs=1 stack=100000 before 2039: (bf) r3 = r1
regs=1 stack=100000 before 2038: (61) r2 = *(u32 *)(r6 +4)
regs=1 stack=100000 before 2037: (61) r1 = *(u32 *)(r6 +0)
regs=1 stack=100000 before 2036: (55) if r0 != 0x0 goto pc-179
regs=1 stack=100000 before 2035: (05) goto pc+0
regs=1 stack=100000 before 2034: (bc) w0 = w0
regs=1 stack=100000 before 2033: (85) call bpf_xdp_adjust_head#44
regs=0 stack=100000 before 2031: (18) r2 = 0xffffffec
regs=0 stack=100000 before 2030: (bf) r1 = r6
regs=0 stack=100000 before 2029: (7b) *(u64 *)(r10 -136) = r1
regs=0 stack=100000 before 2028: (61) r1 = *(u32 *)(r10 -80)
parent didn't have regs=0 stack=100000 marks: R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=0 R6_r=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=8,imm=0) R8=scalar() R9=1 R10=fp0 fp-8=00000000 fp-16=0000mmmm fp-24=mmmm???? fp-32=mmmm???? fp-40=mmmmmmmm fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=00000000 fp-80_r=00000000 fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168_r=P fp-176=map_value
last_idx 1952 first_idx 1940
regs=0 stack=100000 before 1952: (15) if r1 == 0x0 goto pc+75
regs=0 stack=100000 before 1951: (57) r1 &= 1
regs=0 stack=100000 before 1950: (71) r1 = *(u8 *)(r1 +16)
regs=0 stack=100000 before 1949: (79) r1 = *(u64 *)(r10 -176)
regs=0 stack=100000 before 1948: (6b) *(u16 *)(r10 -48) = r1
regs=0 stack=100000 before 1947: (79) r1 = *(u64 *)(r10 -168)
regs=0 stack=100000 before 1946: (7b) *(u64 *)(r0 +0) = r1
regs=0 stack=100000 before 1945: (0f) r1 += r9
regs=0 stack=100000 before 1944: (79) r1 = *(u64 *)(r0 +0)
regs=0 stack=100000 before 1943: (7b) *(u64 *)(r0 +8) = r1
regs=0 stack=100000 before 1942: (0f) r1 += r8
regs=0 stack=100000 before 1941: (79) r1 = *(u64 *)(r0 +8)
regs=0 stack=100000 before 1940: (15) if r0 == 0x0 goto pc-83
parent didn't have regs=0 stack=100000 marks: R0_rw=map_value_or_null(id=73,off=0,ks=4,vs=16,imm=0) R6_r=ctx(off=0,imm=0) R7_rw=map_value(off=0,ks=4,vs=8,imm=0) R8_rw=scalar() R9_rw=1 R10=fp0 fp-8=00000000 fp-16=0000mmmm fp-24=mmmm???? fp-32=mmmm???? fp-40_r=mmmmmmmm fp-48_r= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=00000000 fp-80_r=00000000 fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168_r=P fp-176_r=map_value
last_idx 1939 first_idx 1918
regs=0 stack=100000 before 1939: (85) call bpf_map_lookup_elem#1
regs=0 stack=100000 before 1937: (18) r1 = 0xffffaeba8ae7d000
regs=0 stack=100000 before 1936: (07) r2 += -40
regs=0 stack=100000 before 1935: (bf) r2 = r10
regs=0 stack=100000 before 1934: (7b) *(u64 *)(r0 +0) = r1
regs=0 stack=100000 before 1933: (07) r1 += 1
regs=0 stack=100000 before 1932: (79) r1 = *(u64 *)(r0 +0)
regs=0 stack=100000 before 1931: (7b) *(u64 *)(r0 +8) = r1
regs=0 stack=100000 before 1930: (0f) r1 += r8
regs=0 stack=100000 before 1929: (79) r1 = *(u64 *)(r0 +8)
regs=0 stack=100000 before 1928: (dc) r8 = be16 r8
regs=0 stack=100000 before 1927: (79) r8 = *(u64 *)(r10 -136)
regs=0 stack=100000 before 1926: (15) if r0 == 0x0 goto pc-69
regs=0 stack=100000 before 1925: (85) call bpf_map_lookup_elem#1
regs=0 stack=100000 before 1923: (18) r1 = 0xffffa03499be8000
regs=0 stack=100000 before 1922: (07) r2 += -108
regs=0 stack=100000 before 1921: (bf) r2 = r10
regs=0 stack=100000 before 1920: (15) if r7 == 0x0 goto pc-63
regs=0 stack=100000 before 1919: (b7) r9 = 1
regs=0 stack=100000 before 1918: (bf) r7 = r0
parent didn't have regs=0 stack=100000 marks: R0_rw=map_value_or_null(id=71,off=0,ks=4,vs=8,imm=0) R6_r=ctx(off=0,imm=0) R7=scalar() R8=scalar() R9=scalar(id=29) R10=fp0 fp-8=00000000 fp-16=0000mmmm fp-24=mmmm???? fp-32=mmmm???? fp-40_r= fp-48_r= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=00000000 fp-80_r=00000000 fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168_r=P fp-176_r=map_value
last_idx 1917 first_idx 1905
regs=0 stack=100000 before 1917: (85) call bpf_map_lookup_elem#1
regs=0 stack=100000 before 1915: (18) r1 = 0xffffa03553eeca00
regs=0 stack=100000 before 1914: (07) r2 += -112
regs=0 stack=100000 before 1913: (bf) r2 = r10
regs=0 stack=100000 before 1912: (7b) *(u64 *)(r2 +8) = r1
regs=0 stack=100000 before 1911: (07) r1 += 1
regs=0 stack=100000 before 1910: (79) r1 = *(u64 *)(r2 +8)
regs=0 stack=100000 before 1909: (79) r2 = *(u64 *)(r10 -160)
regs=0 stack=100000 before 1908: (63) *(u32 *)(r0 +0) = r1
regs=0 stack=100000 before 1907: (07) r1 += 1
regs=0 stack=100000 before 1906: (61) r1 = *(u32 *)(r0 +0)
regs=0 stack=100000 before 1905: (15) if r0 == 0x0 goto pc-49
parent didn't have regs=0 stack=100000 marks: R0_rw=map_value_or_null(id=70,off=0,ks=4,vs=4,imm=0) R6_r=ctx(off=0,imm=0) R7=scalar() R8=scalar() R9=scalar(id=29) R10=fp0 fp-8=00000000 fp-16=0000mmmm fp-24=mmmm???? fp-32=mmmm???? fp-40_r= fp-48_r= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=00000000 fp-80_r=00000000 fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144=map_value fp-152=map_ptr fp-160_r=map_value fp-168_r=P fp-176_r=map_value
last_idx 1904 first_idx 1894
regs=0 stack=100000 before 1904: (85) call bpf_map_lookup_elem#1
regs=0 stack=100000 before 1902: (18) r1 = 0xffffaeba8afdd000
regs=0 stack=100000 before 1901: (07) r2 += -28
regs=0 stack=100000 before 1900: (bf) r2 = r10
regs=0 stack=100000 before 1899: (63) *(u32 *)(r10 -28) = r1
regs=0 stack=100000 before 1898: (61) r1 = *(u32 *)(r10 -40)
regs=0 stack=100000 before 1897: (15) if r1 == 0x0 goto pc+11
regs=0 stack=100000 before 1896: (5d) if r3 != r2 goto pc+12
regs=0 stack=100000 before 1895: (69) r3 = *(u16 *)(r0 +16)
regs=0 stack=100000 before 1894: (5d) if r4 != r3 goto pc+14
parent didn't have regs=0 stack=100000 marks: R0_rw=map_value(off=0,ks=4,vs=20,imm=0) R1_rw=scalar(umax=255,var_off=(0x0; 0xff)) R2_rw=scalar(umax=65535,var_off=(0x0; 0xffff)) R3_rw=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R4_rw=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6_r=ctx(off=0,imm=0) R7=scalar() R8=scalar() R9=scalar(id=29) R10=fp0 fp-8=00000000 fp-16=0000mmmm fp-24=mmmm???? fp-32_r=mmmm???? fp-40_r= fp-48_r= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=00000000 fp-80_r=00000000 fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144=map_value fp-152=map_ptr fp-160_r=map_value fp-168_r=P fp-176_r=map_value
last_idx 1893 first_idx 1882
regs=0 stack=100000 before 1893: (61) r4 = *(u32 *)(r0 +0)
regs=0 stack=100000 before 1892: (73) *(u8 *)(r0 +18) = r1
regs=0 stack=100000 before 1891: (71) r1 = *(u8 *)(r10 -86)
regs=0 stack=100000 before 1890: (61) r3 = *(u32 *)(r10 -104)
regs=0 stack=100000 before 1889: (69) r2 = *(u16 *)(r10 -88)
regs=0 stack=100000 before 1888: (15) if r0 == 0x0 goto pc-32
regs=0 stack=100000 before 1887: (85) call bpf_map_lookup_elem#1
regs=0 stack=100000 before 1885: (18) r1 = 0xffffa03587067400
regs=0 stack=100000 before 1884: (07) r2 += -16
regs=0 stack=100000 before 1883: (bf) r2 = r10
regs=0 stack=100000 before 1882: (62) *(u32 *)(r10 -16) = 0
parent didn't have regs=0 stack=100000 marks: R0=map_value(off=0,ks=4,vs=20,imm=0) R1_w=scalar(umax=1,var_off=(0x0; 0x1)) R6_r=ctx(off=0,imm=0) R7=scalar() R8_w=scalar() R9=scalar(id=29) R10=fp0 fp-8=00000000 fp-16_r=00000000 fp-24=mmmm???? fp-32_r=mmmm???? fp-40_r= fp-48_r= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144=map_value fp-152=map_ptr fp-160_r=map_value fp-168_r=P fp-176_rw=map_value
last_idx 1881 first_idx 1860
regs=0 stack=100000 before 1881: (05) goto pc+0
regs=0 stack=100000 before 1868: (55) if r8 != 0x0 goto pc+12
regs=0 stack=100000 before 1867: (4f) r8 |= r1
regs=0 stack=100000 before 1866: (77) r1 >>= 1
regs=0 stack=100000 before 1865: (57) r1 &= 2
regs=0 stack=100000 before 1864: (61) r1 = *(u32 *)(r1 +0)
regs=0 stack=100000 before 1863: (79) r1 = *(u64 *)(r10 -144)
regs=0 stack=100000 before 1862: (15) if r1 == 0x0 goto pc+18
regs=0 stack=100000 before 1861: (79) r1 = *(u64 *)(r10 -152)
regs=0 stack=100000 before 1860: (7b) *(u64 *)(r10 -176) = r0
parent didn't have regs=0 stack=100000 marks: R0_rw=map_value(off=0,ks=4,vs=20,imm=0) R6_r=ctx(off=0,imm=0) R7=scalar() R8_r=0 R9_r=scalar(id=29) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-24_r=mmmm???? fp-32_r=mmmm???? fp-40_r= fp-48_r= fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P fp-176=0
last_idx 1845 first_idx 1838
regs=0 stack=100000 before 1845: (55) if r0 != 0x0 goto pc+14
regs=0 stack=100000 before 1844: (85) call bpf_map_lookup_elem#1
regs=0 stack=100000 before 1842: (18) r1 = 0xffffaeba8c207000
regs=0 stack=100000 before 1841: (07) r2 += -20
regs=0 stack=100000 before 1840: (bf) r2 = r10
regs=0 stack=100000 before 1839: (63) *(u32 *)(r10 -40) = r1
regs=0 stack=100000 before 1838: (61) r1 = *(u32 *)(r10 -20)
parent didn't have regs=0 stack=100000 marks: R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar() R6_r=ctx(off=0,imm=0) R7=scalar() R8_r=0 R9_r=scalar(id=29) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-24_r=mmmm???? fp-32_r=mmmm???? fp-40_r= fp-48_r= fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P fp-176=0
last_idx 1837 first_idx 1826
regs=0 stack=100000 before 1837: (7b) *(u64 *)(r0 +8) = r1
regs=0 stack=100000 before 1836: (07) r1 += 1
regs=0 stack=100000 before 1835: (79) r1 = *(u64 *)(r0 +8)
regs=0 stack=100000 before 1834: (15) if r0 == 0x0 goto pc+3
regs=0 stack=100000 before 1833: (85) call bpf_map_lookup_elem#1
regs=0 stack=100000 before 1831: (18) r1 = 0xffffa03499be8000
regs=0 stack=100000 before 1830: (07) r2 += -28
regs=0 stack=100000 before 1829: (bf) r2 = r10
regs=0 stack=100000 before 1828: (62) *(u32 *)(r10 -28) = 521
regs=0 stack=100000 before 1827: (05) goto pc+0
regs=0 stack=100000 before 1826: (55) if r1 != 0x0 goto pc+12
parent didn't have regs=0 stack=100000 marks: R0_w=map_value(off=0,ks=4,vs=4,imm=0) R1_rw=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6_r=ctx(off=0,imm=0) R7=scalar() R8_r=0 R9_r=scalar(id=29) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-24_r=mmmm???? fp-32_r=mmmm???? fp-40_r= fp-48_r= fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P fp-176=0
last_idx 1825 first_idx 1815
regs=0 stack=100000 before 1825: (63) *(u32 *)(r10 -20) = r1
regs=0 stack=100000 before 1824: (61) r1 = *(u32 *)(r0 +0)
regs=0 stack=100000 before 1823: (15) if r0 == 0x0 goto pc+33
regs=0 stack=100000 before 1822: (85) call bpf_map_lookup_elem#1
regs=0 stack=100000 before 1820: (18) r1 = 0xffffaebaa0631000
regs=0 stack=100000 before 1819: (07) r2 += -20
regs=0 stack=100000 before 1818: (bf) r2 = r10
regs=0 stack=100000 before 1817: (63) *(u32 *)(r10 -20) = r2
regs=0 stack=100000 before 1816: (0f) r2 += r1
regs=0 stack=100000 before 1815: (97) r2 %= 65537
parent didn't have regs=0 stack=100000 marks: R0=scalar(umax=15,var_off=(0x0; 0xf)) R1_rw=scalar(umax=281479271612415,var_off=(0x0; 0x1ffffffffffff)) R2_rw=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3=scalar(id=63) R4_w=scalar(umax=16777215,var_off=(0x0; 0xffffff)) R5=scalar(id=62) R6_r=ctx(off=0,imm=0) R7=scalar() R8_r=0 R9_r=scalar(id=29) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r= fp-48_r= fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P fp-176=0
last_idx 1814 first_idx 1802
regs=0 stack=100000 before 1814: (05) goto pc+0
regs=0 stack=100000 before 1813: (bc) w2 = w2
regs=0 stack=100000 before 1812: (27) r1 *= 65537
regs=0 stack=100000 before 1811: (61) r1 = *(u32 *)(r1 +4)
regs=0 stack=100000 before 1810: (79) r1 = *(u64 *)(r10 -144)
regs=0 stack=100000 before 1809: (1f) r2 -= r1
regs=0 stack=100000 before 1808: (af) r2 ^= r3
regs=0 stack=100000 before 1807: (4f) r1 |= r4
regs=0 stack=100000 before 1806: (67) r1 <<= 24
regs=0 stack=100000 before 1805: (bf) r1 = r2
regs=0 stack=100000 before 1804: (77) r4 >>= 8
regs=0 stack=100000 before 1803: (bc) w4 = w2
regs=0 stack=100000 before 1802: (05) goto pc+0
parent didn't have regs=0 stack=100000 marks: R0=scalar(umax=15,var_off=(0x0; 0xf)) R1_w=scalar() R2_rw=scalar() R3_r=scalar(id=63) R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff)) R5=scalar(id=62) R6_r=ctx(off=0,imm=0) R7=scalar() R8_r=0 R9_r=scalar(id=29) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r= fp-48_r= fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P fp-176=0
last_idx 1801 first_idx 1793
regs=0 stack=100000 before 1801: (05) goto pc+0
regs=0 stack=100000 before 1800: (05) goto pc+0
regs=0 stack=100000 before 1799: (1f) r2 -= r1
regs=0 stack=100000 before 1798: (af) r2 ^= r5
regs=0 stack=100000 before 1797: (4f) r1 |= r4
regs=0 stack=100000 before 1796: (67) r1 <<= 14
regs=0 stack=100000 before 1795: (bf) r1 = r2
regs=0 stack=100000 before 1794: (77) r4 >>= 18
regs=0 stack=100000 before 1793: (bc) w4 = w2
parent didn't have regs=0 stack=100000 marks: R0_w=scalar(umax=15,var_off=(0x0; 0xf)) R1=scalar(umax=65535,var_off=(0x0; 0xffff)) R2_rw=scalar() R3_r=scalar(id=63) R4=scalar(id=61) R5_r=scalar(id=62) R6_r=ctx(off=0,imm=0) R7_w=scalar() R8_r=0 R9_r=scalar(id=29) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r= fp-48_r= fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P fp-176=0
last_idx 1792 first_idx 1782
regs=0 stack=100000 before 1792: (05) goto pc+0
regs=0 stack=100000 before 1791: (1f) r2 -= r7
regs=0 stack=100000 before 1790: (af) r2 ^= r4
regs=0 stack=100000 before 1789: (bf) r2 = r3
regs=0 stack=100000 before 1788: (4f) r7 |= r0
regs=0 stack=100000 before 1787: (67) r7 <<= 4
regs=0 stack=100000 before 1786: (bf) r7 = r3
regs=0 stack=100000 before 1785: (77) r0 >>= 28
regs=0 stack=100000 before 1784: (bc) w0 = w3
regs=0 stack=100000 before 1783: (05) goto pc+0
regs=0 stack=100000 before 1782: (05) goto pc+0
parent didn't have regs=0 stack=100000 marks: R0_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R1=scalar(umax=65535,var_off=(0x0; 0xffff)) R2=scalar(id=60) R3_rw=scalar() R4_r=scalar(id=61) R5_r=scalar(id=62) R6_r=ctx(off=0,imm=0) R7_w=scalar() R8_r=0 R9_r=scalar(id=29) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r= fp-48_r= fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P fp-176=0
last_idx 1781 first_idx 1771
regs=0 stack=100000 before 1781: (05) goto pc+0
regs=0 stack=100000 before 1780: (1f) r3 -= r7
regs=0 stack=100000 before 1779: (af) r3 ^= r2
regs=0 stack=100000 before 1778: (bf) r3 = r5
regs=0 stack=100000 before 1777: (4f) r7 |= r0
regs=0 stack=100000 before 1776: (67) r7 <<= 16
regs=0 stack=100000 before 1775: (bf) r7 = r5
regs=0 stack=100000 before 1774: (77) r0 >>= 16
regs=0 stack=100000 before 1773: (bc) w0 = w5
regs=0 stack=100000 before 1772: (05) goto pc+0
regs=0 stack=100000 before 1771: (05) goto pc+0
parent didn't have regs=0 stack=100000 marks: R0_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff)) R1=scalar(umax=65535,var_off=(0x0; 0xffff)) R2_r=scalar(id=60) R3=scalar(id=59,smin=-525483785,smax=3769483510) R4_r=scalar(id=61) R5_rw=scalar() R6_r=ctx(off=0,imm=0) R7_w=scalar() R8_r=0 R9_r=scalar(id=29) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r= fp-48_r= fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P fp-176=0
last_idx 1770 first_idx 1760
regs=0 stack=100000 before 1770: (05) goto pc+0
regs=0 stack=100000 before 1769: (1f) r5 -= r7
regs=0 stack=100000 before 1768: (af) r5 ^= r3
regs=0 stack=100000 before 1767: (bf) r5 = r4
regs=0 stack=100000 before 1766: (4f) r7 |= r0
regs=0 stack=100000 before 1765: (67) r7 <<= 25
regs=0 stack=100000 before 1764: (bf) r7 = r4
regs=0 stack=100000 before 1763: (77) r0 >>= 7
regs=0 stack=100000 before 1762: (bc) w0 = w4
regs=0 stack=100000 before 1761: (05) goto pc+0
regs=0 stack=100000 before 1760: (05) goto pc+0
parent didn't have regs=0 stack=100000 marks: R0_w=scalar(umax=2047,var_off=(0x0; 0x7ff)) R1=scalar(umax=65535,var_off=(0x0; 0xffff)) R2_r=scalar(id=60) R3_r=scalar(id=59,smin=-525483785,smax=3769483510) R4_rw=scalar() R5_w=P-525483785 R6_r=ctx(off=0,imm=0) R7_w=scalar() R8_r=0 R9_r=scalar(id=29) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r= fp-48_r= fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P fp-176=0
last_idx 1759 first_idx 1748
regs=0 stack=100000 before 1759: (05) goto pc+0
regs=0 stack=100000 before 1758: (1f) r4 -= r7
regs=0 stack=100000 before 1757: (af) r4 ^= r5
regs=0 stack=100000 before 1756: (bf) r4 = r2
regs=0 stack=100000 before 1755: (07) r5 += -525483785
regs=0 stack=100000 before 1754: (4f) r7 |= r0
regs=0 stack=100000 before 1753: (67) r7 <<= 11
regs=0 stack=100000 before 1752: (bf) r7 = r2
regs=0 stack=100000 before 1751: (77) r0 >>= 53
regs=0 stack=100000 before 1750: (67) r0 <<= 32
regs=0 stack=100000 before 1749: (bf) r0 = r2
regs=0 stack=100000 before 1748: (05) goto pc+0
parent didn't have regs=0 stack=100000 marks: R0=scalar(id=29) R1=scalar(umax=65535,var_off=(0x0; 0xffff)) R2_rw=scalar() R3_r=scalar(id=59,smin=-525483785,smax=3769483510) R4_w=scalar() R5_r=P0 R6_r=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=16,imm=0) R8_r=0 R9_r=scalar(id=29) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r= fp-48_r= fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P fp-176=0
last_idx 1747 first_idx 1738
regs=0 stack=100000 before 1747: (05) goto pc+0
regs=0 stack=100000 before 1746: (1f) r2 -= r4
regs=0 stack=100000 before 1745: (a7) r2 ^= -525483785
regs=0 stack=100000 before 1744: (bf) r2 = r3
regs=0 stack=100000 before 1743: (4f) r4 |= r2
regs=0 stack=100000 before 1742: (67) r4 <<= 14
regs=0 stack=100000 before 1741: (bf) r4 = r3
regs=0 stack=100000 before 1740: (77) r2 >>= 18
regs=0 stack=100000 before 1739: (bc) w2 = w3
regs=0 stack=100000 before 1738: (05) goto pc+0
parent didn't have regs=0 stack=100000 marks: R0=scalar(id=29) R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R2=scalar(umin=1000000001) R3_rw=scalar(smin=-525483785,smax=3769483510) R5_rw=P0 R6_r=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=16,imm=0) R8_r=0 R9_r=scalar(id=29) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r= fp-48_r= fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_rw=00000000 fp-80_rw=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P fp-176=0
last_idx 1737 first_idx 1729
regs=0 stack=100000 before 1737: (05) goto pc+0
regs=0 stack=100000 before 1736: (05) goto pc+0
regs=0 stack=100000 before 1735: (07) r3 += -525483785
regs=0 stack=100000 before 1734: (61) r3 = *(u32 *)(r10 -48)
regs=0 stack=100000 before 1733: (7b) *(u64 *)(r10 -72) = r5
regs=0 stack=100000 before 1732: (7b) *(u64 *)(r10 -80) = r5
regs=0 stack=100000 before 1731: (b7) r5 = 0
regs=0 stack=100000 before 1730: (6b) *(u16 *)(r10 -48) = r1
regs=0 stack=100000 before 1729: (69) r1 = *(u16 *)(r10 -46)
parent didn't have regs=0 stack=100000 marks: R0=scalar(id=29) R1=scalar(umax=8,var_off=(0x0; 0x8)) R2=scalar(umin=1000000001) R6_r=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=16,imm=0) R8_r=0 R9_r=scalar(id=29) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r= fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P fp-176=0
last_idx 1726 first_idx 1726
regs=0 stack=100000 before 1726: (55) if r1 != 0x0 goto pc+2
parent didn't have regs=0 stack=100000 marks: R0=scalar(id=29) R1_rw=scalar(umax=8,var_off=(0x0; 0x8)) R2=scalar(umin=1000000001) R6_r=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=16,imm=0) R8_rw=0 R9_r=scalar(id=29) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r= fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P fp-176=0
last_idx 1725 first_idx 1713
regs=0 stack=100000 before 1725: (57) r1 &= 8
regs=0 stack=100000 before 1724: (61) r1 = *(u32 *)(r1 +0)
regs=0 stack=100000 before 1723: (79) r1 = *(u64 *)(r10 -144)
regs=0 stack=100000 before 1722: (b7) r8 = 0
regs=0 stack=100000 before 1717: (05) goto pc+4
regs=0 stack=100000 before 1716: (7a) *(u64 *)(r7 +0) = 1
regs=0 stack=100000 before 1715: (05) goto pc+0
regs=0 stack=100000 before 1714: (7b) *(u64 *)(r7 +8) = r9
regs=0 stack=100000 before 1713: (2d) if r1 > r2 goto pc+4
parent didn't have regs=0 stack=100000 marks: R0_w=scalar(id=29) R1_rw=1000000001 R2_rw=scalar() R6_r=ctx(off=0,imm=0) R7_rw=map_value(off=0,ks=4,vs=16,imm=0) R8_w=1 R9_rw=scalar(id=29) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r= fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P fp-176=0
last_idx 1712 first_idx 1704
regs=0 stack=100000 before 1712: (b7) r1 = 1000000001
regs=0 stack=100000 before 1711: (1f) r2 -= r1
regs=0 stack=100000 before 1710: (bf) r2 = r9
regs=0 stack=100000 before 1709: (79) r1 = *(u64 *)(r7 +8)
regs=0 stack=100000 before 1708: (bf) r9 = r0
regs=0 stack=100000 before 1707: (85) call bpf_ktime_get_ns#5
regs=0 stack=100000 before 1706: (15) if r7 == 0x0 goto pc+16
regs=0 stack=100000 before 1705: (b7) r8 = 1
regs=0 stack=100000 before 1704: (bf) r7 = r0
parent didn't have regs=0 stack=100000 marks: R0_rw=map_value_or_null(id=28,off=0,ks=4,vs=16,imm=0) R6_r=ctx(off=0,imm=0) R7=map_value(off=0,ks=40,vs=16,imm=0) R8=pkt_end(off=0,imm=0) R9_w=P0 R10=fp0 fp-8_rw=00000000 fp-16_rw=00000000 fp-32_r=mmmm???? fp-40_r= fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P fp-176=0
last_idx 1703 first_idx 1694
regs=0 stack=100000 before 1703: (85) call bpf_map_lookup_elem#1
regs=0 stack=100000 before 1701: (18) r1 = 0xffffa03499be8000
regs=0 stack=100000 before 1700: (07) r2 += -28
regs=0 stack=100000 before 1699: (bf) r2 = r10
regs=0 stack=100000 before 1698: (62) *(u32 *)(r10 -28) = 514
regs=0 stack=100000 before 1697: (05) goto pc+0
regs=0 stack=100000 before 1696: (7b) *(u64 *)(r10 -16) = r9
regs=0 stack=100000 before 1695: (7b) *(u64 *)(r10 -8) = r9
regs=0 stack=100000 before 1694: (b7) r9 = 0
parent didn't have regs=0 stack=100000 marks: R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar() R2_w=scalar(umax=2,var_off=(0x0; 0x2)) R6_r=ctx(off=0,imm=0) R7=map_value(off=0,ks=40,vs=16,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16=????mmmm fp-40_r= fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P fp-176=0
last_idx 1693 first_idx 1683
regs=0 stack=100000 before 1693: (7b) *(u64 *)(r0 +0) = r1
regs=0 stack=100000 before 1692: (07) r1 += 1
regs=0 stack=100000 before 1691: (79) r1 = *(u64 *)(r0 +0)
regs=0 stack=100000 before 1690: (0f) r0 += r1
regs=0 stack=100000 before 1689: (67) r1 <<= 3
regs=0 stack=100000 before 1688: (b7) r1 = 0
regs=0 stack=100000 before 1687: (15) if r2 == 0x0 goto pc+1
regs=0 stack=100000 before 1686: (b7) r1 = 1
regs=0 stack=100000 before 1685: (57) r2 &= 2
regs=0 stack=100000 before 1684: (71) r2 = *(u8 *)(r10 -36)
regs=0 stack=100000 before 1683: (15) if r0 == 0x0 goto pc+173
parent didn't have regs=0 stack=100000 marks: R0_rw=map_value_or_null(id=27,off=0,ks=4,vs=16,imm=0) R6_r=ctx(off=0,imm=0) R7=map_value(off=0,ks=40,vs=16,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16=????mmmm fp-40_r= fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P fp-176_w=0
last_idx 1682 first_idx 1672
regs=0 stack=100000 before 1682: (85) call bpf_map_lookup_elem#1
regs=0 stack=100000 before 1680: (18) r1 = 0xffffa03499be8000
regs=0 stack=100000 before 1679: (07) r2 += -16
regs=0 stack=100000 before 1678: (bf) r2 = r10
regs=0 stack=100000 before 1677: (62) *(u32 *)(r10 -16) = 513
regs=0 stack=100000 before 1676: (05) goto pc+0
regs=0 stack=100000 before 1675: (55) if r1 != 0x6 goto pc+18
regs=0 stack=100000 before 1674: (71) r1 = *(u8 *)(r10 -44)
regs=0 stack=100000 before 1673: (55) if r0 != 0x0 goto pc+239
regs=0 stack=100000 before 1672: (7b) *(u64 *)(r10 -176) = r0
parent didn't have regs=0 stack=100000 marks: R0_rw=map_value_or_null(id=26,off=0,ks=4,vs=20,imm=0) R6_r=ctx(off=0,imm=0) R7=map_value(off=0,ks=40,vs=16,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16_r=????mmmm fp-40_r= fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1671 first_idx 1662
regs=0 stack=100000 before 1671: (85) call bpf_map_lookup_elem#1
regs=0 stack=100000 before 1669: (18) r1 = 0xffffaeba8c207000
regs=0 stack=100000 before 1668: (07) r2 += -16
regs=0 stack=100000 before 1667: (bf) r2 = r10
regs=0 stack=100000 before 1666: (63) *(u32 *)(r10 -16) = r1
regs=0 stack=100000 before 1665: (63) *(u32 *)(r10 -40) = r1
regs=0 stack=100000 before 1664: (61) r1 = *(u32 *)(r7 +0)
regs=0 stack=100000 before 1663: (7b) *(u64 *)(r7 +8) = r0
regs=0 stack=100000 before 1662: (2d) if r2 > r1 goto pc+11
parent didn't have regs=0 stack=100000 marks: R0_rw=scalar(id=25) R1_rw=30000000000 R2_rw=scalar() R6_r=ctx(off=0,imm=0) R7_rw=map_value(off=0,ks=40,vs=16,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16_r=????mmmm fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1660 first_idx 1652
regs=0 stack=100000 before 1660: (18) r1 = 0x6fc23ac00
regs=0 stack=100000 before 1659: (1f) r2 -= r1
regs=0 stack=100000 before 1658: (bf) r2 = r0
regs=0 stack=100000 before 1657: (79) r1 = *(u64 *)(r7 +8)
regs=0 stack=100000 before 1656: (85) call bpf_ktime_get_ns#5
regs=0 stack=100000 before 1655: (55) if r1 != 0x11 goto pc+8
regs=0 stack=100000 before 1654: (71) r1 = *(u8 *)(r10 -44)
regs=0 stack=100000 before 1653: (15) if r7 == 0x0 goto pc+20
regs=0 stack=100000 before 1652: (bf) r7 = r0
parent didn't have regs=0 stack=100000 marks: R0_rw=map_value_or_null(id=24,off=0,ks=40,vs=16,imm=0) R6_r=ctx(off=0,imm=0) R7=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16_r=????mmmm fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1651 first_idx 1644
regs=0 stack=100000 before 1651: (85) call bpf_map_lookup_elem#1
regs=0 stack=100000 before 1650: (79) r1 = *(u64 *)(r10 -152)
regs=0 stack=100000 before 1649: (07) r2 += -80
regs=0 stack=100000 before 1648: (bf) r2 = r10
regs=0 stack=100000 before 1647: (55) if r1 != 0x0 goto pc+26
regs=0 stack=100000 before 1646: (57) r1 &= 2
regs=0 stack=100000 before 1645: (61) r1 = *(u32 *)(r9 +0)
regs=0 stack=100000 before 1644: (55) if r1 != 0x0 goto pc+29
parent didn't have regs=0 stack=100000 marks: R0=map_value(off=0,ks=4,vs=16,imm=0) R1_rw=scalar(umax=2,var_off=(0x0; 0x2)) R6_r=ctx(off=0,imm=0) R7=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9_rw=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16_r=????mmmm fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_rw=P
last_idx 1643 first_idx 640
regs=0 stack=100000 before 1643: (57) r1 &= 2
regs=0 stack=100000 before 1642: (71) r1 = *(u8 *)(r10 -36)
regs=0 stack=100000 before 1641: (7b) *(u64 *)(r10 -168) = r1
regs=2 stack=0 before 1640: (69) r1 = *(u16 *)(r10 -48)
regs=0 stack=20 before 1639: (79) r9 = *(u64 *)(r10 -144)
regs=0 stack=20 before 644: (05) goto pc+994
regs=0 stack=20 before 643: (7b) *(u64 *)(r0 +8) = r1
regs=0 stack=20 before 642: (07) r1 += 1
regs=0 stack=20 before 641: (79) r1 = *(u64 *)(r0 +8)
regs=0 stack=20 before 640: (55) if r1 != 0x1 goto pc+998
parent already had regs=0 stack=0 marks: R0_rw=map_value(off=0,ks=4,vs=16,imm=0) R1_rw=scalar(umax=253,var_off=(0x0; 0xfd)) R6_r=ctx(off=0,imm=0) R7=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16_r=????mmmm fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168=
2053: (bf) r3 = r4                    ; R3_w=scalar(id=74) R4_w=scalar(id=74)
2054: (47) r3 |= 4268                 ; R3_w=scalar(smin=-9223372036854771540,umin=4268,var_off=(0x10ac; 0xffffffffffffef53),s32_min=-2147479380)
; memcpy(new_eth->h_dest, cval->mac, 6);
2055: (71) r2 = *(u8 *)(r7 +0)        ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=map_value(off=0,ks=4,vs=8,imm=0)
2056: (7b) *(u64 *)(r10 -136) = r2    ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0 fp-136_w=
2057: (71) r2 = *(u8 *)(r7 +1)        ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=map_value(off=0,ks=4,vs=8,imm=0)
2058: (71) r5 = *(u8 *)(r7 +2)        ; R5_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=map_value(off=0,ks=4,vs=8,imm=0)
2059: (71) r0 = *(u8 *)(r7 +3)        ; R0_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=map_value(off=0,ks=4,vs=8,imm=0)
2060: (71) r6 = *(u8 *)(r7 +4)        ; R6_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=map_value(off=0,ks=4,vs=8,imm=0)
2061: (71) r7 = *(u8 *)(r7 +5)        ; R7_w=scalar(umax=255,var_off=(0x0; 0xff))
; memcpy(new_eth->h_source, old_eth->h_dest, 6);
2062: (71) r9 = *(u8 *)(r1 +22)       ; R1=pkt(off=0,r=34,imm=0) R9_w=scalar(umax=255,var_off=(0x0; 0xff))
2063: (73) *(u8 *)(r1 +8) = r9        ; R1=pkt(off=0,r=34,imm=0) R9_w=scalar(umax=255,var_off=(0x0; 0xff))
2064: (71) r9 = *(u8 *)(r1 +23)       ; R1=pkt(off=0,r=34,imm=0) R9_w=scalar(umax=255,var_off=(0x0; 0xff))
2065: (73) *(u8 *)(r1 +9) = r9        ; R1=pkt(off=0,r=34,imm=0) R9_w=scalar(umax=255,var_off=(0x0; 0xff))
2066: (71) r9 = *(u8 *)(r1 +20)       ; R1=pkt(off=0,r=34,imm=0) R9_w=scalar(umax=255,var_off=(0x0; 0xff))
2067: (73) *(u8 *)(r1 +6) = r9        ; R1=pkt(off=0,r=34,imm=0) R9_w=scalar(umax=255,var_off=(0x0; 0xff))
2068: (71) r9 = *(u8 *)(r1 +21)       ; R1=pkt(off=0,r=34,imm=0) R9_w=scalar(umax=255,var_off=(0x0; 0xff))
2069: (73) *(u8 *)(r1 +7) = r9        ; R1=pkt(off=0,r=34,imm=0) R9_w=scalar(umax=255,var_off=(0x0; 0xff))
; memcpy(new_eth->h_dest, cval->mac, 6);
2070: (73) *(u8 *)(r1 +5) = r7        ; R1=pkt(off=0,r=34,imm=0) R7_w=scalar(umax=255,var_off=(0x0; 0xff))
2071: (73) *(u8 *)(r1 +4) = r6        ; R1=pkt(off=0,r=34,imm=0) R6_w=scalar(umax=255,var_off=(0x0; 0xff))
2072: (73) *(u8 *)(r1 +3) = r0        ; R0_w=scalar(umax=255,var_off=(0x0; 0xff)) R1=pkt(off=0,r=34,imm=0)
2073: (73) *(u8 *)(r1 +2) = r5        ; R1=pkt(off=0,r=34,imm=0) R5_w=scalar(umax=255,var_off=(0x0; 0xff))
2074: (73) *(u8 *)(r1 +1) = r2        ; R1=pkt(off=0,r=34,imm=0) R2_w=scalar(umax=255,var_off=(0x0; 0xff))
2075: (79) r2 = *(u64 *)(r10 -136)    ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
2076: (73) *(u8 *)(r1 +0) = r2        ; R1=pkt(off=0,r=34,imm=0) R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; memcpy(new_eth->h_source, old_eth->h_dest, 6);
2077: (71) r2 = *(u8 *)(r1 +24)       ; R1=pkt(off=0,r=34,imm=0) R2_w=scalar(umax=255,var_off=(0x0; 0xff))
2078: (73) *(u8 *)(r1 +10) = r2       ; R1=pkt(off=0,r=34,imm=0) R2_w=scalar(umax=255,var_off=(0x0; 0xff))
2079: (71) r2 = *(u8 *)(r1 +25)       ; R1=pkt(off=0,r=34,imm=0) R2_w=scalar(umax=255,var_off=(0x0; 0xff))
2080: (73) *(u8 *)(r1 +11) = r2       ; R1=pkt(off=0,r=34,imm=0) R2_w=scalar(umax=255,var_off=(0x0; 0xff))
2081: (05) goto pc+0
2082: safe

from 2044 to 1858: safe

from 2041 to 1858: safe

from 2036 to 1858: safe

from 1940 to 1858: safe

from 1926 to 1858: safe

from 1920 to 1858: safe

from 1905 to 1857: safe

from 1897 to 1909: R0=map_value(off=0,ks=4,vs=20,imm=0) R1=0 R2=scalar(umax=65535,var_off=(0x0; 0xffff)) R3=scalar(umax=65535,var_off=(0x0; 0xffff)) R4=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6=ctx(off=0,imm=0) R7=scalar() R8=scalar() R9=scalar(id=29) R10=fp0 fp-8=00000000 fp-16=0000mmmm fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=00000000 fp-80=00000000 fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=map_value
; *lru_miss_stat += 1;
1909: (79) r2 = *(u64 *)(r10 -160)    ; R2_w=map_value(off=0,ks=4,vs=16,imm=0) R10=fp0
; data_stats->v2 += 1;
1910: (79) r1 = *(u64 *)(r2 +8)       ; R1_w=scalar() R2_w=map_value(off=0,ks=4,vs=16,imm=0)
1911: (07) r1 += 1                    ; R1_w=scalar()
1912: (7b) *(u64 *)(r2 +8) = r1       ; R1_w=scalar() R2_w=map_value(off=0,ks=4,vs=16,imm=0)
1913: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1914: (07) r2 += -112                 ; R2_w=fp-112
; cval = bpf_map_lookup_elem(&ctl_array, &mac_addr_pos);
1915: (18) r1 = 0xffffa03553eeca00    ; R1_w=map_ptr(off=0,ks=4,vs=8,imm=0)
1917: (85) call bpf_map_lookup_elem#1
frame -168: propagating fp0
last_idx 1918 first_idx 1909
regs=0 stack=100000 before 1917: (85) call bpf_map_lookup_elem#1
regs=0 stack=100000 before 1915: (18) r1 = 0xffffa03553eeca00
regs=0 stack=100000 before 1914: (07) r2 += -112
regs=0 stack=100000 before 1913: (bf) r2 = r10
regs=0 stack=100000 before 1912: (7b) *(u64 *)(r2 +8) = r1
regs=0 stack=100000 before 1911: (07) r1 += 1
regs=0 stack=100000 before 1910: (79) r1 = *(u64 *)(r2 +8)
regs=0 stack=100000 before 1909: (79) r2 = *(u64 *)(r10 -160)
parent didn't have regs=0 stack=100000 marks: R0=map_value(off=0,ks=4,vs=20,imm=0) R1=0 R2=scalar(umax=65535,var_off=(0x0; 0xffff)) R3_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R4=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6_r=ctx(off=0,imm=0) R7=scalar() R8=scalar() R9=scalar(id=29) R10=fp0 fp-8=00000000 fp-16=0000mmmm fp-24=mmmm???? fp-32=mmmm???? fp-40_r= fp-48_r= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=00000000 fp-80_r=00000000 fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144=map_value fp-152=map_ptr fp-160_r=map_value fp-168_r=P fp-176_r=map_value
last_idx 1897 first_idx 1894
regs=0 stack=100000 before 1897: (15) if r1 == 0x0 goto pc+11
regs=0 stack=100000 before 1896: (5d) if r3 != r2 goto pc+12
regs=0 stack=100000 before 1895: (69) r3 = *(u16 *)(r0 +16)
regs=0 stack=100000 before 1894: (5d) if r4 != r3 goto pc+14
parent already had regs=0 stack=100000 marks: R0_rw=map_value(off=0,ks=4,vs=20,imm=0) R1_rw=scalar(umax=255,var_off=(0x0; 0xff)) R2_rw=scalar(umax=65535,var_off=(0x0; 0xffff)) R3_rw=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R4_rw=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6_r=ctx(off=0,imm=0) R7=scalar() R8=scalar() R9=scalar(id=29) R10=fp0 fp-8=00000000 fp-16=0000mmmm fp-24=mmmm???? fp-32_r=mmmm???? fp-40_r= fp-48_r= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=00000000 fp-80_r=00000000 fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144=map_value fp-152=map_ptr fp-160_r=map_value fp-168_r=P fp-176_r=map_value
1918: safe
frame -168: propagating fp0
last_idx 1909 first_idx 1894
regs=0 stack=100000 before 1896: (5d) if r3 != r2 goto pc+12
regs=0 stack=100000 before 1895: (69) r3 = *(u16 *)(r0 +16)
regs=0 stack=100000 before 1894: (5d) if r4 != r3 goto pc+14
parent already had regs=0 stack=100000 marks: R0_rw=map_value(off=0,ks=4,vs=20,imm=0) R1_rw=scalar(umax=255,var_off=(0x0; 0xff)) R2_rw=scalar(umax=65535,var_off=(0x0; 0xffff)) R3_rw=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R4_rw=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6_r=ctx(off=0,imm=0) R7=scalar() R8=scalar() R9=scalar(id=29) R10=fp0 fp-8=00000000 fp-16=0000mmmm fp-24=mmmm???? fp-32_r=mmmm???? fp-40_r= fp-48_r= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=00000000 fp-80_r=00000000 fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144=map_value fp-152=map_ptr fp-160_r=map_value fp-168_r=P fp-176_r=map_value

from 1896 to 1909: safe
frame -168: propagating fp0
last_idx 1909 first_idx 1894
regs=0 stack=100000 before 1894: (5d) if r4 != r3 goto pc+14
parent already had regs=0 stack=100000 marks: R0_rw=map_value(off=0,ks=4,vs=20,imm=0) R1_rw=scalar(umax=255,var_off=(0x0; 0xff)) R2_rw=scalar(umax=65535,var_off=(0x0; 0xffff)) R3_rw=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R4_rw=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6_r=ctx(off=0,imm=0) R7=scalar() R8=scalar() R9=scalar(id=29) R10=fp0 fp-8=00000000 fp-16=0000mmmm fp-24=mmmm???? fp-32_r=mmmm???? fp-40_r= fp-48_r= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=00000000 fp-80_r=00000000 fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144=map_value fp-152=map_ptr fp-160_r=map_value fp-168_r=P fp-176_r=map_value

from 1894 to 1909: safe

from 1888 to 1857: safe

from 1862 to 1881: R0=map_value(off=0,ks=4,vs=20,imm=0) R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R6=ctx(off=0,imm=0) R7=scalar() R8=0 R9=scalar(id=29) R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=00000000 fp-80=00000000 fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176_w=map_value
; bpf_map_update_elem(lru_map, &pckt->flow, &new_dst_lru, BPF_ANY);
1881: (05) goto pc+0
frame -168: propagating fp0
last_idx 1882 first_idx 1860
regs=0 stack=100000 before 1881: (05) goto pc+0
regs=0 stack=100000 before 1862: (15) if r1 == 0x0 goto pc+18
regs=0 stack=100000 before 1861: (79) r1 = *(u64 *)(r10 -152)
regs=0 stack=100000 before 1860: (7b) *(u64 *)(r10 -176) = r0
parent already had regs=0 stack=100000 marks: R0_rw=map_value(off=0,ks=4,vs=20,imm=0) R6_r=ctx(off=0,imm=0) R7=scalar() R8_r=0 R9_r=scalar(id=29) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-24_r=mmmm???? fp-32_r=mmmm???? fp-40_r= fp-48_r= fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P fp-176=0
1882: safe
frame -168: propagating fp0
last_idx 1838 first_idx 1826
regs=0 stack=100000 before 1834: (15) if r0 == 0x0 goto pc+3
regs=0 stack=100000 before 1833: (85) call bpf_map_lookup_elem#1
regs=0 stack=100000 before 1831: (18) r1 = 0xffffa03499be8000
regs=0 stack=100000 before 1830: (07) r2 += -28
regs=0 stack=100000 before 1829: (bf) r2 = r10
regs=0 stack=100000 before 1828: (62) *(u32 *)(r10 -28) = 521
regs=0 stack=100000 before 1827: (05) goto pc+0
regs=0 stack=100000 before 1826: (55) if r1 != 0x0 goto pc+12
parent already had regs=0 stack=100000 marks: R0_w=map_value(off=0,ks=4,vs=4,imm=0) R1_rw=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6_r=ctx(off=0,imm=0) R7=scalar() R8_r=0 R9_r=scalar(id=29) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-24_r=mmmm???? fp-32_r=mmmm???? fp-40_r= fp-48_r= fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P fp-176=0

from 1834 to 1838: safe

from 1826 to 1839: R0=map_value(off=0,ks=4,vs=4,imm=0) R1=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6=ctx(off=0,imm=0) R7=scalar() R8=0 R9=scalar(id=29) R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=00000000 fp-80=00000000 fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0
; pckt->real_index = key;
1839: (63) *(u32 *)(r10 -40) = r1     ; R1=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1840: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1841: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1842: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1844: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=76,off=0,ks=4,vs=20,imm=0)
; if (!(*real)) {
1845: (55) if r0 != 0x0 goto pc+14    ; R0_w=0
1846: (05) goto pc+0
1847: safe
frame -168: propagating fp0
last_idx 1860 first_idx 1839
regs=0 stack=100000 before 1845: (55) if r0 != 0x0 goto pc+14
regs=0 stack=100000 before 1844: (85) call bpf_map_lookup_elem#1
regs=0 stack=100000 before 1842: (18) r1 = 0xffffaeba8c207000
regs=0 stack=100000 before 1841: (07) r2 += -20
regs=0 stack=100000 before 1840: (bf) r2 = r10
regs=0 stack=100000 before 1839: (63) *(u32 *)(r10 -40) = r1
parent didn't have regs=0 stack=100000 marks: R0=map_value(off=0,ks=4,vs=4,imm=0) R1_r=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6_r=ctx(off=0,imm=0) R7=scalar() R8_r=0 R9_r=scalar(id=29) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-24_r=mmmm???? fp-32_r=mmmm???? fp-40_r= fp-48_r= fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P fp-176=0
last_idx 1826 first_idx 1826
regs=0 stack=100000 before 1826: (55) if r1 != 0x0 goto pc+12
parent already had regs=0 stack=100000 marks: R0_w=map_value(off=0,ks=4,vs=4,imm=0) R1_rw=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6_r=ctx(off=0,imm=0) R7=scalar() R8_r=0 R9_r=scalar(id=29) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-24_r=mmmm???? fp-32_r=mmmm???? fp-40_r= fp-48_r= fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P fp-176=0

from 1845 to 1860: safe

from 1823 to 1857: safe

from 1713 to 1718: R0=scalar(id=29) R1=1000000001 R2=scalar(umax=1000000000,var_off=(0x0; 0x3fffffff)) R6=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=16,imm=0) R8=1 R9=scalar(id=29) R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0
; conn_rate_stats->v1 += 1;
1718: (79) r1 = *(u64 *)(r7 +0)       ; R1_w=scalar() R7=map_value(off=0,ks=4,vs=16,imm=0)
1719: (07) r1 += 1                    ; R1_w=scalar()
1720: (7b) *(u64 *)(r7 +0) = r1       ; R1_w=scalar() R7=map_value(off=0,ks=4,vs=16,imm=0)
; if (conn_rate_stats->v1 > MAX_CONN_RATE) {
1721: (25) if r1 > 0x1e848 goto pc+1          ; R1_w=scalar(umax=125000,var_off=(0x0; 0x1ffff))
1722: (b7) r8 = 0                     ; R8_w=0
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
1723: (79) r1 = *(u64 *)(r10 -144)    ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
1724: (61) r1 = *(u32 *)(r1 +0)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
1725: (57) r1 &= 8
frame -168: propagating fp0
last_idx 1726 first_idx 1718
regs=0 stack=100000 before 1725: (57) r1 &= 8
regs=0 stack=100000 before 1724: (61) r1 = *(u32 *)(r1 +0)
regs=0 stack=100000 before 1723: (79) r1 = *(u64 *)(r10 -144)
regs=0 stack=100000 before 1722: (b7) r8 = 0
regs=0 stack=100000 before 1721: (25) if r1 > 0x1e848 goto pc+1
regs=0 stack=100000 before 1720: (7b) *(u64 *)(r7 +0) = r1
regs=0 stack=100000 before 1719: (07) r1 += 1
regs=0 stack=100000 before 1718: (79) r1 = *(u64 *)(r7 +0)
parent didn't have regs=0 stack=100000 marks: R0=scalar(id=29) R1=1000000001 R2=scalar(umax=1000000000,var_off=(0x0; 0x3fffffff)) R6_r=ctx(off=0,imm=0) R7_r=map_value(off=0,ks=4,vs=16,imm=0) R8=1 R9_r=scalar(id=29) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r= fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P fp-176=0
last_idx 1713 first_idx 1713
regs=0 stack=100000 before 1713: (2d) if r1 > r2 goto pc+4
parent already had regs=0 stack=100000 marks: R0_w=scalar(id=29) R1_rw=1000000001 R2_rw=scalar() R6_r=ctx(off=0,imm=0) R7_rw=map_value(off=0,ks=4,vs=16,imm=0) R8_w=1 R9_rw=scalar(id=29) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r= fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P fp-176=0
1726: safe

from 1721 to 1723: R0=scalar(id=29) R1_w=scalar(umin=125001) R2=scalar(umax=1000000000,var_off=(0x0; 0x3fffffff)) R6=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=16,imm=0) R8=1 R9=scalar(id=29) R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
1723: (79) r1 = *(u64 *)(r10 -144)    ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
1724: (61) r1 = *(u32 *)(r1 +0)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
1725: (57) r1 &= 8
frame -168: propagating fp0
last_idx 1726 first_idx 1718
regs=0 stack=100000 before 1725: (57) r1 &= 8
regs=0 stack=100000 before 1724: (61) r1 = *(u32 *)(r1 +0)
regs=0 stack=100000 before 1723: (79) r1 = *(u64 *)(r10 -144)
regs=0 stack=100000 before 1721: (25) if r1 > 0x1e848 goto pc+1
regs=0 stack=100000 before 1720: (7b) *(u64 *)(r7 +0) = r1
regs=0 stack=100000 before 1719: (07) r1 += 1
regs=0 stack=100000 before 1718: (79) r1 = *(u64 *)(r7 +0)
parent already had regs=0 stack=100000 marks: R0=scalar(id=29) R1=1000000001 R2=scalar(umax=1000000000,var_off=(0x0; 0x3fffffff)) R6_r=ctx(off=0,imm=0) R7_r=map_value(off=0,ks=4,vs=16,imm=0) R8_r=1 R9_r=scalar(id=29) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r= fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P fp-176=0
1726: safe

from 1706 to 1723: R0=0 R6=ctx(off=0,imm=0) R7_w=0 R8_w=1 R9=P0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
1723: (79) r1 = *(u64 *)(r10 -144)    ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
1724: (61) r1 = *(u32 *)(r1 +0)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
1725: (57) r1 &= 8
frame -168: propagating fp0
last_idx 1726 first_idx 1704
regs=0 stack=100000 before 1725: (57) r1 &= 8
regs=0 stack=100000 before 1724: (61) r1 = *(u32 *)(r1 +0)
regs=0 stack=100000 before 1723: (79) r1 = *(u64 *)(r10 -144)
regs=0 stack=100000 before 1706: (15) if r7 == 0x0 goto pc+16
regs=0 stack=100000 before 1705: (b7) r8 = 1
regs=0 stack=100000 before 1704: (bf) r7 = r0
parent already had regs=0 stack=100000 marks: R0_rw=map_value_or_null(id=28,off=0,ks=4,vs=16,imm=0) R6_r=ctx(off=0,imm=0) R7=map_value(off=0,ks=40,vs=16,imm=0) R8=pkt_end(off=0,imm=0) R9_rw=P0 R10=fp0 fp-8_rw=00000000 fp-16_rw=00000000 fp-32_r=mmmm???? fp-40_r= fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P fp-176=0
1726: safe

from 1687 to 1689: R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=1 R2_w=0 R6=ctx(off=0,imm=0) R7=map_value(off=0,ks=40,vs=16,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16=????mmmm fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0
; if (pckt.flags & F_SYN_SET) {
1689: (67) r1 <<= 3                   ; R1_w=8
; 
1690: (0f) r0 += r1
last_idx 1690 first_idx 1683
regs=2 stack=0 before 1689: (67) r1 <<= 3
regs=2 stack=0 before 1687: (15) if r2 == 0x0 goto pc+1
regs=2 stack=0 before 1686: (b7) r1 = 1
1691: R0_w=map_value(off=8,ks=4,vs=16,imm=0) R1_w=P8
1691: (79) r1 = *(u64 *)(r0 +0)       ; R0_w=map_value(off=8,ks=4,vs=16,imm=0) R1_w=scalar()
1692: (07) r1 += 1                    ; R1_w=scalar()
1693: (7b) *(u64 *)(r0 +0) = r1
frame -168: propagating fp0
last_idx 1694 first_idx 1683
regs=0 stack=100000 before 1693: (7b) *(u64 *)(r0 +0) = r1
regs=0 stack=100000 before 1692: (07) r1 += 1
regs=0 stack=100000 before 1691: (79) r1 = *(u64 *)(r0 +0)
regs=0 stack=100000 before 1690: (0f) r0 += r1
regs=0 stack=100000 before 1689: (67) r1 <<= 3
regs=0 stack=100000 before 1687: (15) if r2 == 0x0 goto pc+1
regs=0 stack=100000 before 1686: (b7) r1 = 1
regs=0 stack=100000 before 1685: (57) r2 &= 2
regs=0 stack=100000 before 1684: (71) r2 = *(u8 *)(r10 -36)
regs=0 stack=100000 before 1683: (15) if r0 == 0x0 goto pc+173
parent already had regs=0 stack=100000 marks: R0_rw=map_value_or_null(id=27,off=0,ks=4,vs=16,imm=0) R6_r=ctx(off=0,imm=0) R7=map_value(off=0,ks=40,vs=16,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16=????mmmm fp-40_r= fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P fp-176_w=0
1694: safe

from 1683 to 1857: safe
frame -168: propagating fp0
last_idx 1694 first_idx 1672
regs=0 stack=100000 before 1675: (55) if r1 != 0x6 goto pc+18
regs=0 stack=100000 before 1674: (71) r1 = *(u8 *)(r10 -44)
regs=0 stack=100000 before 1673: (55) if r0 != 0x0 goto pc+239
regs=0 stack=100000 before 1672: (7b) *(u64 *)(r10 -176) = r0
parent already had regs=0 stack=100000 marks: R0_rw=map_value_or_null(id=26,off=0,ks=4,vs=20,imm=0) R6_r=ctx(off=0,imm=0) R7=map_value(off=0,ks=40,vs=16,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16_r=????mmmm fp-40_r= fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P

from 1675 to 1694: safe

from 1673 to 1913: R0=map_value(off=0,ks=4,vs=20,imm=0) R6=ctx(off=0,imm=0) R7=map_value(off=0,ks=40,vs=16,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16=????mmmm fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176_w=map_value
; data_stats->v2 += 1;
1913: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1914: (07) r2 += -112                 ; R2_w=fp-112
; cval = bpf_map_lookup_elem(&ctl_array, &mac_addr_pos);
1915: (18) r1 = 0xffffa03553eeca00    ; R1_w=map_ptr(off=0,ks=4,vs=8,imm=0)
1917: (85) call bpf_map_lookup_elem#1
1918: safe

from 1662 to 1674: R0=scalar(id=25) R1=30000000000 R2=scalar(umin=30000000001) R6=ctx(off=0,imm=0) R7=map_value(off=0,ks=40,vs=16,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (pckt.flow.proto == IPPROTO_TCP) {
1674: (71) r1 = *(u8 *)(r10 -44)      ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (pckt.flow.proto == IPPROTO_TCP) {
1675: (55) if r1 != 0x6 goto pc+18    ; R1_w=6
1676: (05) goto pc+0
; __u32 lru_stats_key = MAX_VIPS + LRU_MISS_CNTR;
1677: (62) *(u32 *)(r10 -16) = 513    ; R10=fp0 fp-16=????mmmm
1678: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1679: (07) r2 += -16                  ; R2_w=fp-16
; bpf_map_lookup_elem(&stats, &lru_stats_key);
1680: (18) r1 = 0xffffa03499be8000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
1682: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=78,off=0,ks=4,vs=16,imm=0)
; if (!lru_stats) {
1683: (15) if r0 == 0x0 goto pc+173   ; R0=map_value(off=0,ks=4,vs=16,imm=0)
; if (pckt.flags & F_SYN_SET) {
1684: (71) r2 = *(u8 *)(r10 -36)      ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (pckt.flags & F_SYN_SET) {
1685: (57) r2 &= 2                    ; R2_w=scalar(umax=2,var_off=(0x0; 0x2))
1686: (b7) r1 = 1                     ; R1_w=1
1687: (15) if r2 == 0x0 goto pc+1     ; R2_w=scalar(umax=2,var_off=(0x0; 0x2))
1688: (b7) r1 = 0                     ; R1_w=0
; if (pckt.flags & F_SYN_SET) {
1689: (67) r1 <<= 3                   ; R1_w=0
; 
1690: (0f) r0 += r1
last_idx 1690 first_idx 1683
regs=2 stack=0 before 1689: (67) r1 <<= 3
regs=2 stack=0 before 1688: (b7) r1 = 0
1691: R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=P0
1691: (79) r1 = *(u64 *)(r0 +0)       ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1692: (07) r1 += 1                    ; R1_w=scalar()
1693: (7b) *(u64 *)(r0 +0) = r1       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1=scalar()
1694: (b7) r9 = 0                     ; R9_w=0
; struct real_pos_lru new_dst_lru = {};
1695: (7b) *(u64 *)(r10 -8) = r9
last_idx 1695 first_idx 1694
regs=200 stack=0 before 1694: (b7) r9 = 0
1696: R9_w=P0 R10=fp0 fp-8_w=00000000
1696: (7b) *(u64 *)(r10 -16) = r9     ; R9_w=P0 R10=fp0 fp-16_w=00000000
1697: (05) goto pc+0
; __u32 conn_rate_key = MAX_VIPS + NEW_CONN_RATE_CNTR;
1698: (62) *(u32 *)(r10 -28) = 514    ; R10=fp0 fp-32=mmmm????
1699: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1700: (07) r2 += -28                  ; R2_w=fp-28
; bpf_map_lookup_elem(&stats, &conn_rate_key);
1701: (18) r1 = 0xffffa03499be8000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
1703: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=79,off=0,ks=4,vs=16,imm=0)
1704: (bf) r7 = r0                    ; R0=map_value_or_null(id=79,off=0,ks=4,vs=16,imm=0) R7_w=map_value_or_null(id=79,off=0,ks=4,vs=16,imm=0)
1705: (b7) r8 = 1                     ; R8_w=1
; if (!conn_rate_stats) {
1706: (15) if r7 == 0x0 goto pc+16    ; R7_w=map_value(off=0,ks=4,vs=16,imm=0)
; *cur_time = bpf_ktime_get_ns();
1707: (85) call bpf_ktime_get_ns#5    ; R0_w=scalar()
1708: (bf) r9 = r0                    ; R0_w=scalar(id=80) R9_w=scalar(id=80)
; if ((*cur_time - conn_rate_stats->v2) > ONE_SEC) {
1709: (79) r1 = *(u64 *)(r7 +8)       ; R1_w=scalar() R7_w=map_value(off=0,ks=4,vs=16,imm=0)
; if ((*cur_time - conn_rate_stats->v2) > ONE_SEC) {
1710: (bf) r2 = r9                    ; R2_w=scalar(id=80) R9_w=scalar(id=80)
1711: (1f) r2 -= r1                   ; R1_w=scalar() R2_w=scalar()
1712: (b7) r1 = 1000000001            ; R1=1000000001
; if ((*cur_time - conn_rate_stats->v2) > ONE_SEC) {
1713: (2d) if r1 > r2 goto pc+4       ; R1=1000000001 R2=scalar(umin=1000000001)
; conn_rate_stats->v2 = *cur_time;
1714: (7b) *(u64 *)(r7 +8) = r9       ; R7=map_value(off=0,ks=4,vs=16,imm=0) R9=scalar(id=80)
1715: (05) goto pc+0
; conn_rate_stats->v1 = 1;
1716: (7a) *(u64 *)(r7 +0) = 1        ; R7=map_value(off=0,ks=4,vs=16,imm=0)
1717: (05) goto pc+4
; if (conn_rate_stats->v1 > MAX_CONN_RATE) {
1722: (b7) r8 = 0                     ; R8_w=0
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
1723: (79) r1 = *(u64 *)(r10 -144)    ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
1724: (61) r1 = *(u32 *)(r1 +0)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
1725: (57) r1 &= 8                    ; R1=scalar(umax=8,var_off=(0x0; 0x8))
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
1726: (55) if r1 != 0x0 goto pc+2     ; R1=0
; return jhash_2words(pckt->flow.src, pckt->flow.ports, INIT_JHASH_SEED);
1727: (61) r5 = *(u32 *)(r10 -80)     ; R5_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
1728: (05) goto pc+5
; return jhash_2words(pckt->flow.src, pckt->flow.ports, INIT_JHASH_SEED);
1734: (61) r3 = *(u32 *)(r10 -48)     ; R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; b += initval;
1735: (07) r3 += -525483785           ; R3_w=scalar(smin=-525483785,smax=3769483510)
1736: (05) goto pc+0
1737: (05) goto pc+0
1738: (05) goto pc+0
1739: (bc) w2 = w3                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3=scalar(smin=-525483785,smax=3769483510)
; return (word << shift) | (word >> ((-shift) & 31));
1740: (77) r2 >>= 18                  ; R2_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1741: (bf) r4 = r3                    ; R3=scalar(id=81,smin=-525483785,smax=3769483510) R4_w=scalar(id=81,smin=-525483785,smax=3769483510)
1742: (67) r4 <<= 14                  ; R4_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1743: (4f) r4 |= r2                   ; R2_w=scalar(umax=16383,var_off=(0x0; 0x3fff)) R4_w=scalar()
; __jhash_final(a, b, c);
1744: (bf) r2 = r3                    ; R2_w=scalar(id=81,smin=-525483785,smax=3769483510) R3=scalar(id=81,smin=-525483785,smax=3769483510)
1745: (a7) r2 ^= -525483785           ; R2_w=scalar()
1746: (1f) r2 -= r4                   ; R2_w=scalar() R4_w=scalar()
1747: (05) goto pc+0
1748: (05) goto pc+0
1749: (bf) r0 = r2                    ; R0_w=scalar(id=82) R2=scalar(id=82)
1750: (67) r0 <<= 32                  ; R0_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
; return (word << shift) | (word >> ((-shift) & 31));
1751: (77) r0 >>= 53                  ; R0_w=scalar(umax=2047,var_off=(0x0; 0x7ff))
1752: (bf) r7 = r2                    ; R2=scalar(id=82) R7_w=scalar(id=82)
1753: (67) r7 <<= 11                  ; R7_w=scalar(smax=9223372036854773760,umax=18446744073709549568,var_off=(0x0; 0xfffffffffffff800),s32_max=2147481600,u32_max=-2048)
1754: (4f) r7 |= r0                   ; R0_w=scalar(umax=2047,var_off=(0x0; 0x7ff)) R7_w=scalar()
; a += initval;
1755: (07) r5 += -525483785           ; R5_w=scalar(smin=-525483785,smax=3769483510)
; __jhash_final(a, b, c);
1756: (bf) r4 = r2                    ; R2=scalar(id=82) R4_w=scalar(id=82)
1757: (af) r4 ^= r5                   ; R4_w=scalar() R5_w=scalar(smin=-525483785,smax=3769483510)
1758: (1f) r4 -= r7                   ; R4_w=scalar() R7_w=scalar()
1759: (05) goto pc+0
1760: (05) goto pc+0
1761: (05) goto pc+0
1762: (bc) w0 = w4                    ; R0_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R4=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1763: (77) r0 >>= 7                   ; R0_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff))
1764: (bf) r7 = r4                    ; R4=scalar(id=83) R7_w=scalar(id=83)
1765: (67) r7 <<= 25                  ; R7_w=scalar(smax=9223372036821221376,umax=18446744073675997184,var_off=(0x0; 0xfffffffffe000000),s32_max=2113929216,u32_max=-33554432)
1766: (4f) r7 |= r0                   ; R0_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff)) R7_w=scalar()
; __jhash_final(a, b, c);
1767: (bf) r5 = r4                    ; R4=scalar(id=83) R5_w=scalar(id=83)
1768: (af) r5 ^= r3                   ; R3=scalar(id=81,smin=-525483785,smax=3769483510) R5_w=scalar()
1769: (1f) r5 -= r7                   ; R5_w=scalar() R7_w=scalar()
1770: (05) goto pc+0
1771: (05) goto pc+0
1772: (05) goto pc+0
1773: (bc) w0 = w5                    ; R0_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R5=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1774: (77) r0 >>= 16                  ; R0_w=scalar(umax=65535,var_off=(0x0; 0xffff))
1775: (bf) r7 = r5                    ; R5=scalar(id=84) R7_w=scalar(id=84)
1776: (67) r7 <<= 16                  ; R7_w=scalar(smax=9223372036854710272,umax=18446744073709486080,var_off=(0x0; 0xffffffffffff0000),s32_max=2147418112,u32_max=-65536)
1777: (4f) r7 |= r0                   ; R0_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R7_w=scalar()
; __jhash_final(a, b, c);
1778: (bf) r3 = r5                    ; R3_w=scalar(id=84) R5=scalar(id=84)
1779: (af) r3 ^= r2                   ; R2=scalar(id=82) R3_w=scalar()
1780: (1f) r3 -= r7                   ; R3_w=scalar() R7_w=scalar()
1781: (05) goto pc+0
1782: (05) goto pc+0
1783: (05) goto pc+0
1784: (bc) w0 = w3                    ; R0_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1785: (77) r0 >>= 28                  ; R0_w=scalar(umax=15,var_off=(0x0; 0xf))
1786: (bf) r7 = r3                    ; R3=scalar(id=85) R7_w=scalar(id=85)
1787: (67) r7 <<= 4                   ; R7_w=scalar(smax=9223372036854775792,umax=18446744073709551600,var_off=(0x0; 0xfffffffffffffff0),s32_max=2147483632,u32_max=-16)
1788: (4f) r7 |= r0                   ; R0_w=scalar(umax=15,var_off=(0x0; 0xf)) R7_w=scalar()
; __jhash_final(a, b, c);
1789: (bf) r2 = r3                    ; R2_w=scalar(id=85) R3=scalar(id=85)
1790: (af) r2 ^= r4                   ; R2_w=scalar() R4=scalar(id=83)
1791: (1f) r2 -= r7                   ; R2_w=scalar() R7_w=scalar()
1792: (05) goto pc+0
1793: (bc) w4 = w2                    ; R2=scalar() R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1794: (77) r4 >>= 18                  ; R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1795: (bf) r1 = r2                    ; R1_w=scalar(id=86) R2=scalar(id=86)
1796: (67) r1 <<= 14                  ; R1_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1797: (4f) r1 |= r4                   ; R1_w=scalar() R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
; __jhash_final(a, b, c);
1798: (af) r2 ^= r5                   ; R2_w=scalar() R5=scalar(id=84)
1799: (1f) r2 -= r1                   ; R1_w=scalar() R2_w=scalar()
1800: (05) goto pc+0
1801: (05) goto pc+0
1802: (05) goto pc+0
1803: (bc) w4 = w2                    ; R2=scalar() R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1804: (77) r4 >>= 8                   ; R4_w=scalar(umax=16777215,var_off=(0x0; 0xffffff))
1805: (bf) r1 = r2                    ; R1_w=scalar(id=87) R2=scalar(id=87)
1806: (67) r1 <<= 24                  ; R1_w=scalar(smax=9223372036837998592,umax=18446744073692774400,var_off=(0x0; 0xffffffffff000000),s32_max=2130706432,u32_max=-16777216)
1807: (4f) r1 |= r4                   ; R1_w=scalar() R4_w=scalar(umax=16777215,var_off=(0x0; 0xffffff))
; __jhash_final(a, b, c);
1808: (af) r2 ^= r3                   ; R2_w=scalar() R3=scalar(id=85)
1809: (1f) r2 -= r1                   ; R1_w=scalar() R2_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1810: (79) r1 = *(u64 *)(r10 -144)    ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
1811: (61) r1 = *(u32 *)(r1 +4)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; key = RING_SIZE * (vip_info->vip_num) + hash;
1812: (27) r1 *= 65537                ; R1_w=scalar(umax=281479271612415,var_off=(0x0; 0x1ffffffffffff))
; __jhash_final(a, b, c);
1813: (bc) w2 = w2                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
1814: (05) goto pc+0
; hash = get_packet_hash(pckt, hash_16bytes) % RING_SIZE;
1815: (97) r2 %= 65537                ; R2_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1816: (0f) r2 += r1                   ; R1=scalar(umax=281479271612415,var_off=(0x0; 0x1ffffffffffff)) R2_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1817: (63) *(u32 *)(r10 -20) = r2     ; R2_w=scalar() R10=fp0 fp-24=mmmm????
1818: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1819: (07) r2 += -20                  ; R2_w=fp-20
; real_pos = bpf_map_lookup_elem(&ch_rings, &key);
1820: (18) r1 = 0xffffaebaa0631000    ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
1822: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=88,off=0,ks=4,vs=4,imm=0)
; if (!real_pos) {
1823: (15) if r0 == 0x0 goto pc+33    ; R0_w=map_value(off=0,ks=4,vs=4,imm=0)
; key = *real_pos;
1824: (61) r1 = *(u32 *)(r0 +0)       ; R0_w=map_value(off=0,ks=4,vs=4,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; key = *real_pos;
1825: (63) *(u32 *)(r10 -20) = r1     ; R1=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-24=mmmm????
; if (key == 0) {
1826: (55) if r1 != 0x0 goto pc+12    ; R1=0
1827: (05) goto pc+0
; __u32 ch_drop_stats_key = MAX_VIPS + CH_DROP_STATS;
1828: (62) *(u32 *)(r10 -28) = 521    ; R10=fp0 fp-32=mmmm????
1829: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1830: (07) r2 += -28                  ; R2_w=fp-28
; bpf_map_lookup_elem(&stats, &ch_drop_stats_key);
1831: (18) r1 = 0xffffa03499be8000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
1833: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=89,off=0,ks=4,vs=16,imm=0)
; if (!ch_drop_stats) {
1834: (15) if r0 == 0x0 goto pc+3     ; R0_w=map_value(off=0,ks=4,vs=16,imm=0)
; ch_drop_stats->v2 += 1;
1835: (79) r1 = *(u64 *)(r0 +8)       ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1836: (07) r1 += 1                    ; R1_w=scalar()
1837: (7b) *(u64 *)(r0 +8) = r1       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1=scalar()
; pckt->real_index = key;
1838: (61) r1 = *(u32 *)(r10 -20)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; pckt->real_index = key;
1839: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1840: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1841: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1842: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1844: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=90,off=0,ks=4,vs=20,imm=0)
; if (!(*real)) {
1845: (55) if r0 != 0x0 goto pc+14    ; R0_w=0
1846: (05) goto pc+0
1847: safe

from 1845 to 1860: safe

from 1834 to 1838: safe

from 1826 to 1839: R0=map_value(off=0,ks=4,vs=4,imm=0) R1=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6=ctx(off=0,imm=0) R7=scalar() R8=0 R9=scalar(id=80) R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; pckt->real_index = key;
1839: (63) *(u32 *)(r10 -40) = r1     ; R1=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1840: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1841: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1842: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1844: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=91,off=0,ks=4,vs=20,imm=0)
; if (!(*real)) {
1845: (55) if r0 != 0x0 goto pc+14    ; R0_w=0
1846: (05) goto pc+0
1847: safe

from 1845 to 1860: safe

from 1823 to 1857: safe

from 1726 to 1729: R0=scalar(id=80) R1=scalar(umax=8,var_off=(0x0; 0x8)) R2=scalar(umin=1000000001) R6=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=16,imm=0) R8=0 R9=scalar(id=80) R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; pckt->flow.port16[0] = pckt->flow.port16[1];
1729: (69) r1 = *(u16 *)(r10 -46)     ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; pckt->flow.port16[0] = pckt->flow.port16[1];
1730: (6b) *(u16 *)(r10 -48) = r1     ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-48=
1731: (b7) r5 = 0                     ; R5_w=0
; memset(pckt->flow.srcv6, 0, 16);
1732: (7b) *(u64 *)(r10 -80) = r5
last_idx 1732 first_idx 1729
regs=20 stack=0 before 1731: (b7) r5 = 0
1733: R5_w=P0 R10=fp0 fp-80_w=00000000
1733: (7b) *(u64 *)(r10 -72) = r5     ; R5_w=P0 R10=fp0 fp-72_w=00000000
; return jhash_2words(pckt->flow.src, pckt->flow.ports, INIT_JHASH_SEED);
1734: (61) r3 = *(u32 *)(r10 -48)     ; R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; b += initval;
1735: (07) r3 += -525483785           ; R3_w=scalar(smin=-525483785,smax=3769483510)
1736: (05) goto pc+0
1737: (05) goto pc+0
1738: (05) goto pc+0
1739: (bc) w2 = w3                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3=scalar(smin=-525483785,smax=3769483510)
; return (word << shift) | (word >> ((-shift) & 31));
1740: (77) r2 >>= 18                  ; R2_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1741: (bf) r4 = r3                    ; R3=scalar(id=92,smin=-525483785,smax=3769483510) R4_w=scalar(id=92,smin=-525483785,smax=3769483510)
1742: (67) r4 <<= 14                  ; R4_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1743: (4f) r4 |= r2                   ; R2_w=scalar(umax=16383,var_off=(0x0; 0x3fff)) R4_w=scalar()
; __jhash_final(a, b, c);
1744: (bf) r2 = r3                    ; R2_w=scalar(id=92,smin=-525483785,smax=3769483510) R3=scalar(id=92,smin=-525483785,smax=3769483510)
1745: (a7) r2 ^= -525483785           ; R2_w=scalar()
1746: (1f) r2 -= r4                   ; R2_w=scalar() R4_w=scalar()
1747: (05) goto pc+0
1748: (05) goto pc+0
1749: (bf) r0 = r2                    ; R0_w=scalar(id=93) R2=scalar(id=93)
1750: (67) r0 <<= 32                  ; R0_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
; return (word << shift) | (word >> ((-shift) & 31));
1751: (77) r0 >>= 53                  ; R0_w=scalar(umax=2047,var_off=(0x0; 0x7ff))
1752: (bf) r7 = r2                    ; R2=scalar(id=93) R7_w=scalar(id=93)
1753: (67) r7 <<= 11                  ; R7_w=scalar(smax=9223372036854773760,umax=18446744073709549568,var_off=(0x0; 0xfffffffffffff800),s32_max=2147481600,u32_max=-2048)
1754: (4f) r7 |= r0                   ; R0_w=scalar(umax=2047,var_off=(0x0; 0x7ff)) R7_w=scalar()
; a += initval;
1755: (07) r5 += -525483785           ; R5_w=P-525483785
; __jhash_final(a, b, c);
1756: (bf) r4 = r2                    ; R2=scalar(id=93) R4_w=scalar(id=93)
1757: (af) r4 ^= r5                   ; R4_w=scalar() R5_w=P-525483785
1758: (1f) r4 -= r7                   ; R4_w=scalar() R7_w=scalar()
1759: (05) goto pc+0
1760: (05) goto pc+0
1761: (05) goto pc+0
1762: (bc) w0 = w4                    ; R0_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R4=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1763: (77) r0 >>= 7                   ; R0_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff))
1764: (bf) r7 = r4                    ; R4=scalar(id=94) R7_w=scalar(id=94)
1765: (67) r7 <<= 25                  ; R7_w=scalar(smax=9223372036821221376,umax=18446744073675997184,var_off=(0x0; 0xfffffffffe000000),s32_max=2113929216,u32_max=-33554432)
1766: (4f) r7 |= r0                   ; R0_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff)) R7_w=scalar()
; __jhash_final(a, b, c);
1767: (bf) r5 = r4                    ; R4=scalar(id=94) R5_w=scalar(id=94)
1768: (af) r5 ^= r3                   ; R3=scalar(id=92,smin=-525483785,smax=3769483510) R5_w=scalar()
1769: (1f) r5 -= r7                   ; R5_w=scalar() R7_w=scalar()
1770: (05) goto pc+0
1771: (05) goto pc+0
1772: (05) goto pc+0
1773: (bc) w0 = w5                    ; R0_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R5=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1774: (77) r0 >>= 16                  ; R0_w=scalar(umax=65535,var_off=(0x0; 0xffff))
1775: (bf) r7 = r5                    ; R5=scalar(id=95) R7_w=scalar(id=95)
1776: (67) r7 <<= 16                  ; R7_w=scalar(smax=9223372036854710272,umax=18446744073709486080,var_off=(0x0; 0xffffffffffff0000),s32_max=2147418112,u32_max=-65536)
1777: (4f) r7 |= r0                   ; R0_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R7_w=scalar()
; __jhash_final(a, b, c);
1778: (bf) r3 = r5                    ; R3_w=scalar(id=95) R5=scalar(id=95)
1779: (af) r3 ^= r2                   ; R2=scalar(id=93) R3_w=scalar()
1780: (1f) r3 -= r7                   ; R3_w=scalar() R7_w=scalar()
1781: (05) goto pc+0
1782: (05) goto pc+0
1783: (05) goto pc+0
1784: (bc) w0 = w3                    ; R0_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1785: (77) r0 >>= 28                  ; R0_w=scalar(umax=15,var_off=(0x0; 0xf))
1786: (bf) r7 = r3                    ; R3=scalar(id=96) R7_w=scalar(id=96)
1787: (67) r7 <<= 4                   ; R7_w=scalar(smax=9223372036854775792,umax=18446744073709551600,var_off=(0x0; 0xfffffffffffffff0),s32_max=2147483632,u32_max=-16)
1788: (4f) r7 |= r0                   ; R0_w=scalar(umax=15,var_off=(0x0; 0xf)) R7_w=scalar()
; __jhash_final(a, b, c);
1789: (bf) r2 = r3                    ; R2_w=scalar(id=96) R3=scalar(id=96)
1790: (af) r2 ^= r4                   ; R2_w=scalar() R4=scalar(id=94)
1791: (1f) r2 -= r7                   ; R2_w=scalar() R7_w=scalar()
1792: (05) goto pc+0
1793: (bc) w4 = w2                    ; R2=scalar() R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1794: (77) r4 >>= 18                  ; R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1795: (bf) r1 = r2                    ; R1_w=scalar(id=97) R2=scalar(id=97)
1796: (67) r1 <<= 14                  ; R1_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1797: (4f) r1 |= r4                   ; R1_w=scalar() R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
; __jhash_final(a, b, c);
1798: (af) r2 ^= r5                   ; R2_w=scalar() R5=scalar(id=95)
1799: (1f) r2 -= r1                   ; R1_w=scalar() R2_w=scalar()
1800: (05) goto pc+0
1801: (05) goto pc+0
1802: (05) goto pc+0
1803: (bc) w4 = w2                    ; R2=scalar() R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1804: (77) r4 >>= 8                   ; R4_w=scalar(umax=16777215,var_off=(0x0; 0xffffff))
1805: (bf) r1 = r2                    ; R1_w=scalar(id=98) R2=scalar(id=98)
1806: (67) r1 <<= 24                  ; R1_w=scalar(smax=9223372036837998592,umax=18446744073692774400,var_off=(0x0; 0xffffffffff000000),s32_max=2130706432,u32_max=-16777216)
1807: (4f) r1 |= r4                   ; R1_w=scalar() R4_w=scalar(umax=16777215,var_off=(0x0; 0xffffff))
; __jhash_final(a, b, c);
1808: (af) r2 ^= r3                   ; R2_w=scalar() R3=scalar(id=96)
1809: (1f) r2 -= r1                   ; R1_w=scalar() R2_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1810: (79) r1 = *(u64 *)(r10 -144)    ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
1811: (61) r1 = *(u32 *)(r1 +4)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; key = RING_SIZE * (vip_info->vip_num) + hash;
1812: (27) r1 *= 65537                ; R1_w=scalar(umax=281479271612415,var_off=(0x0; 0x1ffffffffffff))
; __jhash_final(a, b, c);
1813: (bc) w2 = w2                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
1814: (05) goto pc+0
; hash = get_packet_hash(pckt, hash_16bytes) % RING_SIZE;
1815: (97) r2 %= 65537                ; R2_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1816: (0f) r2 += r1                   ; R1=scalar(umax=281479271612415,var_off=(0x0; 0x1ffffffffffff)) R2_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1817: (63) *(u32 *)(r10 -20) = r2     ; R2_w=scalar() R10=fp0 fp-24=mmmm????
1818: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1819: (07) r2 += -20                  ; R2_w=fp-20
; real_pos = bpf_map_lookup_elem(&ch_rings, &key);
1820: (18) r1 = 0xffffaebaa0631000    ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
1822: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=99,off=0,ks=4,vs=4,imm=0)
; if (!real_pos) {
1823: (15) if r0 == 0x0 goto pc+33    ; R0_w=map_value(off=0,ks=4,vs=4,imm=0)
; key = *real_pos;
1824: (61) r1 = *(u32 *)(r0 +0)       ; R0_w=map_value(off=0,ks=4,vs=4,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; key = *real_pos;
1825: (63) *(u32 *)(r10 -20) = r1     ; R1=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-24=mmmm????
; if (key == 0) {
1826: (55) if r1 != 0x0 goto pc+12    ; R1=0
1827: (05) goto pc+0
; __u32 ch_drop_stats_key = MAX_VIPS + CH_DROP_STATS;
1828: (62) *(u32 *)(r10 -28) = 521    ; R10=fp0 fp-32=mmmm????
1829: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1830: (07) r2 += -28                  ; R2_w=fp-28
; bpf_map_lookup_elem(&stats, &ch_drop_stats_key);
1831: (18) r1 = 0xffffa03499be8000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
1833: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=100,off=0,ks=4,vs=16,imm=0)
; if (!ch_drop_stats) {
1834: (15) if r0 == 0x0 goto pc+3     ; R0_w=map_value(off=0,ks=4,vs=16,imm=0)
; ch_drop_stats->v2 += 1;
1835: (79) r1 = *(u64 *)(r0 +8)       ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1836: (07) r1 += 1                    ; R1_w=scalar()
1837: (7b) *(u64 *)(r0 +8) = r1       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1=scalar()
; pckt->real_index = key;
1838: (61) r1 = *(u32 *)(r10 -20)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; pckt->real_index = key;
1839: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1840: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1841: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1842: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1844: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=101,off=0,ks=4,vs=20,imm=0)
; if (!(*real)) {
1845: (55) if r0 != 0x0 goto pc+14    ; R0_w=0
1846: (05) goto pc+0
1847: safe
frame -168: propagating fp0
last_idx 1860 first_idx 1838
regs=0 stack=100000 before 1845: (55) if r0 != 0x0 goto pc+14
regs=0 stack=100000 before 1844: (85) call bpf_map_lookup_elem#1
regs=0 stack=100000 before 1842: (18) r1 = 0xffffaeba8c207000
regs=0 stack=100000 before 1841: (07) r2 += -20
regs=0 stack=100000 before 1840: (bf) r2 = r10
regs=0 stack=100000 before 1839: (63) *(u32 *)(r10 -40) = r1
regs=0 stack=100000 before 1838: (61) r1 = *(u32 *)(r10 -20)
parent didn't have regs=0 stack=100000 marks: R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar() R6_r=ctx(off=0,imm=0) R7=scalar() R8_r=0 R9_r=scalar(id=80) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-24_r=mmmm???? fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r= fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1837 first_idx 1826
regs=0 stack=100000 before 1837: (7b) *(u64 *)(r0 +8) = r1
regs=0 stack=100000 before 1836: (07) r1 += 1
regs=0 stack=100000 before 1835: (79) r1 = *(u64 *)(r0 +8)
regs=0 stack=100000 before 1834: (15) if r0 == 0x0 goto pc+3
regs=0 stack=100000 before 1833: (85) call bpf_map_lookup_elem#1
regs=0 stack=100000 before 1831: (18) r1 = 0xffffa03499be8000
regs=0 stack=100000 before 1830: (07) r2 += -28
regs=0 stack=100000 before 1829: (bf) r2 = r10
regs=0 stack=100000 before 1828: (62) *(u32 *)(r10 -28) = 521
regs=0 stack=100000 before 1827: (05) goto pc+0
regs=0 stack=100000 before 1826: (55) if r1 != 0x0 goto pc+12
parent didn't have regs=0 stack=100000 marks: R0_w=map_value(off=0,ks=4,vs=4,imm=0) R1_rw=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6_r=ctx(off=0,imm=0) R7=scalar() R8_r=0 R9_r=scalar(id=80) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-24_r=mmmm???? fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r= fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1825 first_idx 1815
regs=0 stack=100000 before 1825: (63) *(u32 *)(r10 -20) = r1
regs=0 stack=100000 before 1824: (61) r1 = *(u32 *)(r0 +0)
regs=0 stack=100000 before 1823: (15) if r0 == 0x0 goto pc+33
regs=0 stack=100000 before 1822: (85) call bpf_map_lookup_elem#1
regs=0 stack=100000 before 1820: (18) r1 = 0xffffaebaa0631000
regs=0 stack=100000 before 1819: (07) r2 += -20
regs=0 stack=100000 before 1818: (bf) r2 = r10
regs=0 stack=100000 before 1817: (63) *(u32 *)(r10 -20) = r2
regs=0 stack=100000 before 1816: (0f) r2 += r1
regs=0 stack=100000 before 1815: (97) r2 %= 65537
parent didn't have regs=0 stack=100000 marks: R0=scalar(umax=15,var_off=(0x0; 0xf)) R1_rw=scalar(umax=281479271612415,var_off=(0x0; 0x1ffffffffffff)) R2_rw=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3=scalar(id=96) R4_w=scalar(umax=16777215,var_off=(0x0; 0xffffff)) R5=scalar(id=95) R6_r=ctx(off=0,imm=0) R7=scalar() R8_r=0 R9_r=scalar(id=80) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r= fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1814 first_idx 1802
regs=0 stack=100000 before 1814: (05) goto pc+0
regs=0 stack=100000 before 1813: (bc) w2 = w2
regs=0 stack=100000 before 1812: (27) r1 *= 65537
regs=0 stack=100000 before 1811: (61) r1 = *(u32 *)(r1 +4)
regs=0 stack=100000 before 1810: (79) r1 = *(u64 *)(r10 -144)
regs=0 stack=100000 before 1809: (1f) r2 -= r1
regs=0 stack=100000 before 1808: (af) r2 ^= r3
regs=0 stack=100000 before 1807: (4f) r1 |= r4
regs=0 stack=100000 before 1806: (67) r1 <<= 24
regs=0 stack=100000 before 1805: (bf) r1 = r2
regs=0 stack=100000 before 1804: (77) r4 >>= 8
regs=0 stack=100000 before 1803: (bc) w4 = w2
regs=0 stack=100000 before 1802: (05) goto pc+0
parent didn't have regs=0 stack=100000 marks: R0=scalar(umax=15,var_off=(0x0; 0xf)) R1_w=scalar() R2_rw=scalar() R3_r=scalar(id=96) R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff)) R5=scalar(id=95) R6_r=ctx(off=0,imm=0) R7=scalar() R8_r=0 R9_r=scalar(id=80) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r= fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1801 first_idx 1793
regs=0 stack=100000 before 1801: (05) goto pc+0
regs=0 stack=100000 before 1800: (05) goto pc+0
regs=0 stack=100000 before 1799: (1f) r2 -= r1
regs=0 stack=100000 before 1798: (af) r2 ^= r5
regs=0 stack=100000 before 1797: (4f) r1 |= r4
regs=0 stack=100000 before 1796: (67) r1 <<= 14
regs=0 stack=100000 before 1795: (bf) r1 = r2
regs=0 stack=100000 before 1794: (77) r4 >>= 18
regs=0 stack=100000 before 1793: (bc) w4 = w2
parent didn't have regs=0 stack=100000 marks: R0_w=scalar(umax=15,var_off=(0x0; 0xf)) R1=scalar(umax=65535,var_off=(0x0; 0xffff)) R2_rw=scalar() R3_r=scalar(id=96) R4=scalar(id=94) R5_r=scalar(id=95) R6_r=ctx(off=0,imm=0) R7_w=scalar() R8_r=0 R9_r=scalar(id=80) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r= fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1792 first_idx 1782
regs=0 stack=100000 before 1792: (05) goto pc+0
regs=0 stack=100000 before 1791: (1f) r2 -= r7
regs=0 stack=100000 before 1790: (af) r2 ^= r4
regs=0 stack=100000 before 1789: (bf) r2 = r3
regs=0 stack=100000 before 1788: (4f) r7 |= r0
regs=0 stack=100000 before 1787: (67) r7 <<= 4
regs=0 stack=100000 before 1786: (bf) r7 = r3
regs=0 stack=100000 before 1785: (77) r0 >>= 28
regs=0 stack=100000 before 1784: (bc) w0 = w3
regs=0 stack=100000 before 1783: (05) goto pc+0
regs=0 stack=100000 before 1782: (05) goto pc+0
parent didn't have regs=0 stack=100000 marks: R0_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R1=scalar(umax=65535,var_off=(0x0; 0xffff)) R2=scalar(id=93) R3_rw=scalar() R4_r=scalar(id=94) R5_r=scalar(id=95) R6_r=ctx(off=0,imm=0) R7_w=scalar() R8_r=0 R9_r=scalar(id=80) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r= fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1781 first_idx 1771
regs=0 stack=100000 before 1781: (05) goto pc+0
regs=0 stack=100000 before 1780: (1f) r3 -= r7
regs=0 stack=100000 before 1779: (af) r3 ^= r2
regs=0 stack=100000 before 1778: (bf) r3 = r5
regs=0 stack=100000 before 1777: (4f) r7 |= r0
regs=0 stack=100000 before 1776: (67) r7 <<= 16
regs=0 stack=100000 before 1775: (bf) r7 = r5
regs=0 stack=100000 before 1774: (77) r0 >>= 16
regs=0 stack=100000 before 1773: (bc) w0 = w5
regs=0 stack=100000 before 1772: (05) goto pc+0
regs=0 stack=100000 before 1771: (05) goto pc+0
parent didn't have regs=0 stack=100000 marks: R0_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff)) R1=scalar(umax=65535,var_off=(0x0; 0xffff)) R2_r=scalar(id=93) R3=scalar(id=92,smin=-525483785,smax=3769483510) R4_r=scalar(id=94) R5_rw=scalar() R6_r=ctx(off=0,imm=0) R7_w=scalar() R8_r=0 R9_r=scalar(id=80) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r= fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1770 first_idx 1760
regs=0 stack=100000 before 1770: (05) goto pc+0
regs=0 stack=100000 before 1769: (1f) r5 -= r7
regs=0 stack=100000 before 1768: (af) r5 ^= r3
regs=0 stack=100000 before 1767: (bf) r5 = r4
regs=0 stack=100000 before 1766: (4f) r7 |= r0
regs=0 stack=100000 before 1765: (67) r7 <<= 25
regs=0 stack=100000 before 1764: (bf) r7 = r4
regs=0 stack=100000 before 1763: (77) r0 >>= 7
regs=0 stack=100000 before 1762: (bc) w0 = w4
regs=0 stack=100000 before 1761: (05) goto pc+0
regs=0 stack=100000 before 1760: (05) goto pc+0
parent didn't have regs=0 stack=100000 marks: R0_w=scalar(umax=2047,var_off=(0x0; 0x7ff)) R1=scalar(umax=65535,var_off=(0x0; 0xffff)) R2_r=scalar(id=93) R3_r=scalar(id=92,smin=-525483785,smax=3769483510) R4_rw=scalar() R5_w=P-525483785 R6_r=ctx(off=0,imm=0) R7_w=scalar() R8_r=0 R9_r=scalar(id=80) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r= fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1759 first_idx 1748
regs=0 stack=100000 before 1759: (05) goto pc+0
regs=0 stack=100000 before 1758: (1f) r4 -= r7
regs=0 stack=100000 before 1757: (af) r4 ^= r5
regs=0 stack=100000 before 1756: (bf) r4 = r2
regs=0 stack=100000 before 1755: (07) r5 += -525483785
regs=0 stack=100000 before 1754: (4f) r7 |= r0
regs=0 stack=100000 before 1753: (67) r7 <<= 11
regs=0 stack=100000 before 1752: (bf) r7 = r2
regs=0 stack=100000 before 1751: (77) r0 >>= 53
regs=0 stack=100000 before 1750: (67) r0 <<= 32
regs=0 stack=100000 before 1749: (bf) r0 = r2
regs=0 stack=100000 before 1748: (05) goto pc+0
parent didn't have regs=0 stack=100000 marks: R0=scalar(id=80) R1=scalar(umax=65535,var_off=(0x0; 0xffff)) R2_rw=scalar() R3_r=scalar(id=92,smin=-525483785,smax=3769483510) R4_w=scalar() R5_r=P0 R6_r=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=16,imm=0) R8_r=0 R9_r=scalar(id=80) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r= fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1747 first_idx 1738
regs=0 stack=100000 before 1747: (05) goto pc+0
regs=0 stack=100000 before 1746: (1f) r2 -= r4
regs=0 stack=100000 before 1745: (a7) r2 ^= -525483785
regs=0 stack=100000 before 1744: (bf) r2 = r3
regs=0 stack=100000 before 1743: (4f) r4 |= r2
regs=0 stack=100000 before 1742: (67) r4 <<= 14
regs=0 stack=100000 before 1741: (bf) r4 = r3
regs=0 stack=100000 before 1740: (77) r2 >>= 18
regs=0 stack=100000 before 1739: (bc) w2 = w3
regs=0 stack=100000 before 1738: (05) goto pc+0
parent didn't have regs=0 stack=100000 marks: R0=scalar(id=80) R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R2=scalar(umin=1000000001) R3_rw=scalar(smin=-525483785,smax=3769483510) R5_rw=P0 R6_r=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=16,imm=0) R8_r=0 R9_r=scalar(id=80) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r= fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_rw=00000000 fp-80_rw=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1737 first_idx 1729
regs=0 stack=100000 before 1737: (05) goto pc+0
regs=0 stack=100000 before 1736: (05) goto pc+0
regs=0 stack=100000 before 1735: (07) r3 += -525483785
regs=0 stack=100000 before 1734: (61) r3 = *(u32 *)(r10 -48)
regs=0 stack=100000 before 1733: (7b) *(u64 *)(r10 -72) = r5
regs=0 stack=100000 before 1732: (7b) *(u64 *)(r10 -80) = r5
regs=0 stack=100000 before 1731: (b7) r5 = 0
regs=0 stack=100000 before 1730: (6b) *(u16 *)(r10 -48) = r1
regs=0 stack=100000 before 1729: (69) r1 = *(u16 *)(r10 -46)
parent didn't have regs=0 stack=100000 marks: R0=scalar(id=80) R1=scalar(umax=8,var_off=(0x0; 0x8)) R2=scalar(umin=1000000001) R6_r=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=16,imm=0) R8_r=0 R9_r=scalar(id=80) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1726 first_idx 1726
regs=0 stack=100000 before 1726: (55) if r1 != 0x0 goto pc+2
parent didn't have regs=0 stack=100000 marks: R0=scalar(id=80) R1_rw=scalar(umax=8,var_off=(0x0; 0x8)) R2=scalar(umin=1000000001) R6_r=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=16,imm=0) R8_rw=0 R9_r=scalar(id=80) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1725 first_idx 1713
regs=0 stack=100000 before 1725: (57) r1 &= 8
regs=0 stack=100000 before 1724: (61) r1 = *(u32 *)(r1 +0)
regs=0 stack=100000 before 1723: (79) r1 = *(u64 *)(r10 -144)
regs=0 stack=100000 before 1722: (b7) r8 = 0
regs=0 stack=100000 before 1717: (05) goto pc+4
regs=0 stack=100000 before 1716: (7a) *(u64 *)(r7 +0) = 1
regs=0 stack=100000 before 1715: (05) goto pc+0
regs=0 stack=100000 before 1714: (7b) *(u64 *)(r7 +8) = r9
regs=0 stack=100000 before 1713: (2d) if r1 > r2 goto pc+4
parent didn't have regs=0 stack=100000 marks: R0_w=scalar(id=80) R1_rw=1000000001 R2_rw=scalar() R6_r=ctx(off=0,imm=0) R7_rw=map_value(off=0,ks=4,vs=16,imm=0) R8_w=1 R9_rw=scalar(id=80) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1712 first_idx 1704
regs=0 stack=100000 before 1712: (b7) r1 = 1000000001
regs=0 stack=100000 before 1711: (1f) r2 -= r1
regs=0 stack=100000 before 1710: (bf) r2 = r9
regs=0 stack=100000 before 1709: (79) r1 = *(u64 *)(r7 +8)
regs=0 stack=100000 before 1708: (bf) r9 = r0
regs=0 stack=100000 before 1707: (85) call bpf_ktime_get_ns#5
regs=0 stack=100000 before 1706: (15) if r7 == 0x0 goto pc+16
regs=0 stack=100000 before 1705: (b7) r8 = 1
regs=0 stack=100000 before 1704: (bf) r7 = r0
parent didn't have regs=0 stack=100000 marks: R0_rw=map_value_or_null(id=79,off=0,ks=4,vs=16,imm=0) R6_r=ctx(off=0,imm=0) R7=map_value(off=0,ks=40,vs=16,imm=0) R8=pkt_end(off=0,imm=0) R9_w=P0 R10=fp0 fp-8_rw=00000000 fp-16_rw=00000000 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1703 first_idx 1694
regs=0 stack=100000 before 1703: (85) call bpf_map_lookup_elem#1
regs=0 stack=100000 before 1701: (18) r1 = 0xffffa03499be8000
regs=0 stack=100000 before 1700: (07) r2 += -28
regs=0 stack=100000 before 1699: (bf) r2 = r10
regs=0 stack=100000 before 1698: (62) *(u32 *)(r10 -28) = 514
regs=0 stack=100000 before 1697: (05) goto pc+0
regs=0 stack=100000 before 1696: (7b) *(u64 *)(r10 -16) = r9
regs=0 stack=100000 before 1695: (7b) *(u64 *)(r10 -8) = r9
regs=0 stack=100000 before 1694: (b7) r9 = 0
parent didn't have regs=0 stack=100000 marks: R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar() R2_w=scalar(umax=2,var_off=(0x0; 0x2)) R6_r=ctx(off=0,imm=0) R7=map_value(off=0,ks=40,vs=16,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16=????mmmm fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1693 first_idx 1683
regs=0 stack=100000 before 1693: (7b) *(u64 *)(r0 +0) = r1
regs=0 stack=100000 before 1692: (07) r1 += 1
regs=0 stack=100000 before 1691: (79) r1 = *(u64 *)(r0 +0)
regs=0 stack=100000 before 1690: (0f) r0 += r1
regs=0 stack=100000 before 1689: (67) r1 <<= 3
regs=0 stack=100000 before 1688: (b7) r1 = 0
regs=0 stack=100000 before 1687: (15) if r2 == 0x0 goto pc+1
regs=0 stack=100000 before 1686: (b7) r1 = 1
regs=0 stack=100000 before 1685: (57) r2 &= 2
regs=0 stack=100000 before 1684: (71) r2 = *(u8 *)(r10 -36)
regs=0 stack=100000 before 1683: (15) if r0 == 0x0 goto pc+173
parent didn't have regs=0 stack=100000 marks: R0_rw=map_value_or_null(id=78,off=0,ks=4,vs=16,imm=0) R6_r=ctx(off=0,imm=0) R7=map_value(off=0,ks=40,vs=16,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16=????mmmm fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1682 first_idx 1674
regs=0 stack=100000 before 1682: (85) call bpf_map_lookup_elem#1
regs=0 stack=100000 before 1680: (18) r1 = 0xffffa03499be8000
regs=0 stack=100000 before 1679: (07) r2 += -16
regs=0 stack=100000 before 1678: (bf) r2 = r10
regs=0 stack=100000 before 1677: (62) *(u32 *)(r10 -16) = 513
regs=0 stack=100000 before 1676: (05) goto pc+0
regs=0 stack=100000 before 1675: (55) if r1 != 0x6 goto pc+18
regs=0 stack=100000 before 1674: (71) r1 = *(u8 *)(r10 -44)
parent didn't have regs=0 stack=100000 marks: R0=scalar(id=25) R1=30000000000 R2=scalar(umin=30000000001) R6_r=ctx(off=0,imm=0) R7=map_value(off=0,ks=40,vs=16,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16_r=????mmmm fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1662 first_idx 1662
regs=0 stack=100000 before 1662: (2d) if r2 > r1 goto pc+11
parent already had regs=0 stack=100000 marks: R0_rw=scalar(id=25) R1_rw=30000000000 R2_rw=scalar() R6_r=ctx(off=0,imm=0) R7_rw=map_value(off=0,ks=40,vs=16,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16_r=????mmmm fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P

from 1845 to 1860: safe
frame -168: propagating fp0
last_idx 1838 first_idx 1826
regs=0 stack=100000 before 1834: (15) if r0 == 0x0 goto pc+3
regs=0 stack=100000 before 1833: (85) call bpf_map_lookup_elem#1
regs=0 stack=100000 before 1831: (18) r1 = 0xffffa03499be8000
regs=0 stack=100000 before 1830: (07) r2 += -28
regs=0 stack=100000 before 1829: (bf) r2 = r10
regs=0 stack=100000 before 1828: (62) *(u32 *)(r10 -28) = 521
regs=0 stack=100000 before 1827: (05) goto pc+0
regs=0 stack=100000 before 1826: (55) if r1 != 0x0 goto pc+12
parent already had regs=0 stack=100000 marks: R0_w=map_value(off=0,ks=4,vs=4,imm=0) R1_rw=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6_r=ctx(off=0,imm=0) R7=scalar() R8_r=0 R9_r=scalar(id=80) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-24_r=mmmm???? fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r= fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P

from 1834 to 1838: safe

from 1826 to 1839: R0=map_value(off=0,ks=4,vs=4,imm=0) R1=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6=ctx(off=0,imm=0) R7=scalar() R8=0 R9=scalar(id=80) R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40=mmmmmmmm fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=00000000 fp-80=00000000 fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; pckt->real_index = key;
1839: (63) *(u32 *)(r10 -40) = r1     ; R1=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1840: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1841: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1842: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1844: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=102,off=0,ks=4,vs=20,imm=0)
; if (!(*real)) {
1845: (55) if r0 != 0x0 goto pc+14    ; R0_w=0
1846: (05) goto pc+0
1847: safe
frame -168: propagating fp0
last_idx 1860 first_idx 1839
regs=0 stack=100000 before 1845: (55) if r0 != 0x0 goto pc+14
regs=0 stack=100000 before 1844: (85) call bpf_map_lookup_elem#1
regs=0 stack=100000 before 1842: (18) r1 = 0xffffaeba8c207000
regs=0 stack=100000 before 1841: (07) r2 += -20
regs=0 stack=100000 before 1840: (bf) r2 = r10
regs=0 stack=100000 before 1839: (63) *(u32 *)(r10 -40) = r1
parent didn't have regs=0 stack=100000 marks: R0=map_value(off=0,ks=4,vs=4,imm=0) R1_r=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6_r=ctx(off=0,imm=0) R7=scalar() R8_r=0 R9_r=scalar(id=80) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-24_r=mmmm???? fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r= fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1826 first_idx 1826
regs=0 stack=100000 before 1826: (55) if r1 != 0x0 goto pc+12
parent already had regs=0 stack=100000 marks: R0_w=map_value(off=0,ks=4,vs=4,imm=0) R1_rw=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6_r=ctx(off=0,imm=0) R7=scalar() R8_r=0 R9_r=scalar(id=80) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-24_r=mmmm???? fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r= fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P

from 1845 to 1860: safe

from 1823 to 1857: safe

from 1713 to 1718: R0=scalar(id=80) R1=1000000001 R2=scalar(umax=1000000000,var_off=(0x0; 0x3fffffff)) R6=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=16,imm=0) R8=1 R9=scalar(id=80) R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; conn_rate_stats->v1 += 1;
1718: (79) r1 = *(u64 *)(r7 +0)       ; R1_w=scalar() R7=map_value(off=0,ks=4,vs=16,imm=0)
1719: (07) r1 += 1                    ; R1_w=scalar()
1720: (7b) *(u64 *)(r7 +0) = r1       ; R1_w=scalar() R7=map_value(off=0,ks=4,vs=16,imm=0)
; if (conn_rate_stats->v1 > MAX_CONN_RATE) {
1721: (25) if r1 > 0x1e848 goto pc+1          ; R1_w=scalar(umax=125000,var_off=(0x0; 0x1ffff))
1722: (b7) r8 = 0                     ; R8_w=0
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
1723: (79) r1 = *(u64 *)(r10 -144)    ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
1724: (61) r1 = *(u32 *)(r1 +0)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
1725: (57) r1 &= 8
frame -168: propagating fp0
last_idx 1726 first_idx 1718
regs=0 stack=100000 before 1725: (57) r1 &= 8
regs=0 stack=100000 before 1724: (61) r1 = *(u32 *)(r1 +0)
regs=0 stack=100000 before 1723: (79) r1 = *(u64 *)(r10 -144)
regs=0 stack=100000 before 1722: (b7) r8 = 0
regs=0 stack=100000 before 1721: (25) if r1 > 0x1e848 goto pc+1
regs=0 stack=100000 before 1720: (7b) *(u64 *)(r7 +0) = r1
regs=0 stack=100000 before 1719: (07) r1 += 1
regs=0 stack=100000 before 1718: (79) r1 = *(u64 *)(r7 +0)
parent didn't have regs=0 stack=100000 marks: R0=scalar(id=80) R1=1000000001 R2=scalar(umax=1000000000,var_off=(0x0; 0x3fffffff)) R6_r=ctx(off=0,imm=0) R7_r=map_value(off=0,ks=4,vs=16,imm=0) R8=1 R9_r=scalar(id=80) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1713 first_idx 1713
regs=0 stack=100000 before 1713: (2d) if r1 > r2 goto pc+4
parent already had regs=0 stack=100000 marks: R0_w=scalar(id=80) R1_rw=1000000001 R2_rw=scalar() R6_r=ctx(off=0,imm=0) R7_rw=map_value(off=0,ks=4,vs=16,imm=0) R8_w=1 R9_rw=scalar(id=80) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
1726: safe

from 1721 to 1723: R0=scalar(id=80) R1_w=scalar(umin=125001) R2=scalar(umax=1000000000,var_off=(0x0; 0x3fffffff)) R6=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=16,imm=0) R8=1 R9=scalar(id=80) R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
1723: (79) r1 = *(u64 *)(r10 -144)    ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
1724: (61) r1 = *(u32 *)(r1 +0)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
1725: (57) r1 &= 8
frame -168: propagating fp0
last_idx 1726 first_idx 1718
regs=0 stack=100000 before 1725: (57) r1 &= 8
regs=0 stack=100000 before 1724: (61) r1 = *(u32 *)(r1 +0)
regs=0 stack=100000 before 1723: (79) r1 = *(u64 *)(r10 -144)
regs=0 stack=100000 before 1721: (25) if r1 > 0x1e848 goto pc+1
regs=0 stack=100000 before 1720: (7b) *(u64 *)(r7 +0) = r1
regs=0 stack=100000 before 1719: (07) r1 += 1
regs=0 stack=100000 before 1718: (79) r1 = *(u64 *)(r7 +0)
parent already had regs=0 stack=100000 marks: R0=scalar(id=80) R1=1000000001 R2=scalar(umax=1000000000,var_off=(0x0; 0x3fffffff)) R6_r=ctx(off=0,imm=0) R7_r=map_value(off=0,ks=4,vs=16,imm=0) R8_r=1 R9_r=scalar(id=80) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
1726: safe

from 1706 to 1723: R0=0 R6=ctx(off=0,imm=0) R7_w=0 R8_w=1 R9=P0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
1723: (79) r1 = *(u64 *)(r10 -144)    ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
1724: (61) r1 = *(u32 *)(r1 +0)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
1725: (57) r1 &= 8
frame -168: propagating fp0
last_idx 1726 first_idx 1704
regs=0 stack=100000 before 1725: (57) r1 &= 8
regs=0 stack=100000 before 1724: (61) r1 = *(u32 *)(r1 +0)
regs=0 stack=100000 before 1723: (79) r1 = *(u64 *)(r10 -144)
regs=0 stack=100000 before 1706: (15) if r7 == 0x0 goto pc+16
regs=0 stack=100000 before 1705: (b7) r8 = 1
regs=0 stack=100000 before 1704: (bf) r7 = r0
parent already had regs=0 stack=100000 marks: R0_rw=map_value_or_null(id=79,off=0,ks=4,vs=16,imm=0) R6_r=ctx(off=0,imm=0) R7=map_value(off=0,ks=40,vs=16,imm=0) R8=pkt_end(off=0,imm=0) R9_rw=P0 R10=fp0 fp-8_rw=00000000 fp-16_rw=00000000 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
1726: safe

from 1687 to 1689: R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=1 R2_w=0 R6=ctx(off=0,imm=0) R7=map_value(off=0,ks=40,vs=16,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (pckt.flags & F_SYN_SET) {
1689: (67) r1 <<= 3                   ; R1_w=8
; 
1690: (0f) r0 += r1
last_idx 1690 first_idx 1683
regs=2 stack=0 before 1689: (67) r1 <<= 3
regs=2 stack=0 before 1687: (15) if r2 == 0x0 goto pc+1
regs=2 stack=0 before 1686: (b7) r1 = 1
1691: R0_w=map_value(off=8,ks=4,vs=16,imm=0) R1_w=P8
1691: (79) r1 = *(u64 *)(r0 +0)       ; R0_w=map_value(off=8,ks=4,vs=16,imm=0) R1_w=scalar()
1692: (07) r1 += 1                    ; R1_w=scalar()
1693: (7b) *(u64 *)(r0 +0) = r1
frame -168: propagating fp0
last_idx 1694 first_idx 1683
regs=0 stack=100000 before 1693: (7b) *(u64 *)(r0 +0) = r1
regs=0 stack=100000 before 1692: (07) r1 += 1
regs=0 stack=100000 before 1691: (79) r1 = *(u64 *)(r0 +0)
regs=0 stack=100000 before 1690: (0f) r0 += r1
regs=0 stack=100000 before 1689: (67) r1 <<= 3
regs=0 stack=100000 before 1687: (15) if r2 == 0x0 goto pc+1
regs=0 stack=100000 before 1686: (b7) r1 = 1
regs=0 stack=100000 before 1685: (57) r2 &= 2
regs=0 stack=100000 before 1684: (71) r2 = *(u8 *)(r10 -36)
regs=0 stack=100000 before 1683: (15) if r0 == 0x0 goto pc+173
parent already had regs=0 stack=100000 marks: R0_rw=map_value_or_null(id=78,off=0,ks=4,vs=16,imm=0) R6_r=ctx(off=0,imm=0) R7=map_value(off=0,ks=40,vs=16,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16=????mmmm fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
1694: safe

from 1683 to 1857: safe
frame -168: propagating fp0
last_idx 1694 first_idx 1674
regs=0 stack=100000 before 1675: (55) if r1 != 0x6 goto pc+18
regs=0 stack=100000 before 1674: (71) r1 = *(u8 *)(r10 -44)
parent already had regs=0 stack=100000 marks: R0=scalar(id=25) R1=30000000000 R2=scalar(umin=30000000001) R6_r=ctx(off=0,imm=0) R7=map_value(off=0,ks=40,vs=16,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16_r=????mmmm fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P

from 1675 to 1694: safe

from 1655 to 1664: R0=map_value(off=0,ks=40,vs=16,imm=0) R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R6=ctx(off=0,imm=0) R7_w=map_value(off=0,ks=40,vs=16,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; key = dst_lru->pos;
1664: (61) r1 = *(u32 *)(r7 +0)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R7_w=map_value(off=0,ks=40,vs=16,imm=0)
; pckt->real_index = key;
1665: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
; key = dst_lru->pos;
1666: (63) *(u32 *)(r10 -16) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-16=
1667: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; key = dst_lru->pos;
1668: (07) r2 += -16                  ; R2_w=fp-16
; *real = bpf_map_lookup_elem(&reals, &key);
1669: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1671: (85) call bpf_map_lookup_elem#1
frame -168: propagating fp0
last_idx 1672 first_idx 1652
regs=0 stack=100000 before 1671: (85) call bpf_map_lookup_elem#1
regs=0 stack=100000 before 1669: (18) r1 = 0xffffaeba8c207000
regs=0 stack=100000 before 1668: (07) r2 += -16
regs=0 stack=100000 before 1667: (bf) r2 = r10
regs=0 stack=100000 before 1666: (63) *(u32 *)(r10 -16) = r1
regs=0 stack=100000 before 1665: (63) *(u32 *)(r10 -40) = r1
regs=0 stack=100000 before 1664: (61) r1 = *(u32 *)(r7 +0)
regs=0 stack=100000 before 1655: (55) if r1 != 0x11 goto pc+8
regs=0 stack=100000 before 1654: (71) r1 = *(u8 *)(r10 -44)
regs=0 stack=100000 before 1653: (15) if r7 == 0x0 goto pc+20
regs=0 stack=100000 before 1652: (bf) r7 = r0
parent already had regs=0 stack=100000 marks: R0_rw=map_value_or_null(id=24,off=0,ks=40,vs=16,imm=0) R6_r=ctx(off=0,imm=0) R7=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16_r=????mmmm fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
1672: safe
frame -168: propagating fp0
last_idx 1674 first_idx 1652
regs=0 stack=100000 before 1653: (15) if r7 == 0x0 goto pc+20
regs=0 stack=100000 before 1652: (bf) r7 = r0
parent already had regs=0 stack=100000 marks: R0_rw=map_value_or_null(id=24,off=0,ks=40,vs=16,imm=0) R6_r=ctx(off=0,imm=0) R7=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16_r=????mmmm fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P

from 1653 to 1674: safe

from 1647 to 1674: R0=map_value(off=0,ks=4,vs=16,imm=0) R1=scalar(umax=2,var_off=(0x0; 0x2)) R6=ctx(off=0,imm=0) R7=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (pckt.flow.proto == IPPROTO_TCP) {
1674: (71) r1 = *(u8 *)(r10 -44)      ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (pckt.flow.proto == IPPROTO_TCP) {
1675: (55) if r1 != 0x6 goto pc+18    ; R1_w=6
1676: (05) goto pc+0
; __u32 lru_stats_key = MAX_VIPS + LRU_MISS_CNTR;
1677: (62) *(u32 *)(r10 -16) = 513    ; R10=fp0 fp-16=????mmmm
1678: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1679: (07) r2 += -16                  ; R2_w=fp-16
; bpf_map_lookup_elem(&stats, &lru_stats_key);
1680: (18) r1 = 0xffffa03499be8000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
1682: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=104,off=0,ks=4,vs=16,imm=0)
; if (!lru_stats) {
1683: (15) if r0 == 0x0 goto pc+173   ; R0=map_value(off=0,ks=4,vs=16,imm=0)
; if (pckt.flags & F_SYN_SET) {
1684: (71) r2 = *(u8 *)(r10 -36)      ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (pckt.flags & F_SYN_SET) {
1685: (57) r2 &= 2                    ; R2_w=scalar(umax=2,var_off=(0x0; 0x2))
1686: (b7) r1 = 1                     ; R1_w=1
1687: (15) if r2 == 0x0 goto pc+1     ; R2_w=scalar(umax=2,var_off=(0x0; 0x2))
1688: (b7) r1 = 0                     ; R1_w=0
; if (pckt.flags & F_SYN_SET) {
1689: (67) r1 <<= 3                   ; R1_w=0
; 
1690: (0f) r0 += r1
last_idx 1690 first_idx 1683
regs=2 stack=0 before 1689: (67) r1 <<= 3
regs=2 stack=0 before 1688: (b7) r1 = 0
1691: R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=P0
1691: (79) r1 = *(u64 *)(r0 +0)       ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1692: (07) r1 += 1                    ; R1_w=scalar()
1693: (7b) *(u64 *)(r0 +0) = r1       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1=scalar()
1694: (b7) r9 = 0                     ; R9_w=0
; struct real_pos_lru new_dst_lru = {};
1695: (7b) *(u64 *)(r10 -8) = r9
last_idx 1695 first_idx 1694
regs=200 stack=0 before 1694: (b7) r9 = 0
1696: R9_w=P0 R10=fp0 fp-8_w=00000000
1696: (7b) *(u64 *)(r10 -16) = r9     ; R9_w=P0 R10=fp0 fp-16_w=00000000
1697: (05) goto pc+0
; __u32 conn_rate_key = MAX_VIPS + NEW_CONN_RATE_CNTR;
1698: (62) *(u32 *)(r10 -28) = 514    ; R10=fp0 fp-32=mmmm????
1699: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1700: (07) r2 += -28                  ; R2_w=fp-28
; bpf_map_lookup_elem(&stats, &conn_rate_key);
1701: (18) r1 = 0xffffa03499be8000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
1703: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=105,off=0,ks=4,vs=16,imm=0)
1704: (bf) r7 = r0                    ; R0=map_value_or_null(id=105,off=0,ks=4,vs=16,imm=0) R7_w=map_value_or_null(id=105,off=0,ks=4,vs=16,imm=0)
1705: (b7) r8 = 1                     ; R8_w=1
; if (!conn_rate_stats) {
1706: (15) if r7 == 0x0 goto pc+16    ; R7_w=map_value(off=0,ks=4,vs=16,imm=0)
; *cur_time = bpf_ktime_get_ns();
1707: (85) call bpf_ktime_get_ns#5    ; R0_w=scalar()
1708: (bf) r9 = r0                    ; R0_w=scalar(id=106) R9_w=scalar(id=106)
; if ((*cur_time - conn_rate_stats->v2) > ONE_SEC) {
1709: (79) r1 = *(u64 *)(r7 +8)       ; R1_w=scalar() R7_w=map_value(off=0,ks=4,vs=16,imm=0)
; if ((*cur_time - conn_rate_stats->v2) > ONE_SEC) {
1710: (bf) r2 = r9                    ; R2_w=scalar(id=106) R9_w=scalar(id=106)
1711: (1f) r2 -= r1                   ; R1_w=scalar() R2_w=scalar()
1712: (b7) r1 = 1000000001            ; R1=1000000001
; if ((*cur_time - conn_rate_stats->v2) > ONE_SEC) {
1713: (2d) if r1 > r2 goto pc+4       ; R1=1000000001 R2=scalar(umin=1000000001)
; conn_rate_stats->v2 = *cur_time;
1714: (7b) *(u64 *)(r7 +8) = r9       ; R7=map_value(off=0,ks=4,vs=16,imm=0) R9=scalar(id=106)
1715: (05) goto pc+0
; conn_rate_stats->v1 = 1;
1716: (7a) *(u64 *)(r7 +0) = 1        ; R7=map_value(off=0,ks=4,vs=16,imm=0)
1717: (05) goto pc+4
; if (conn_rate_stats->v1 > MAX_CONN_RATE) {
1722: (b7) r8 = 0                     ; R8_w=0
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
1723: (79) r1 = *(u64 *)(r10 -144)    ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
1724: (61) r1 = *(u32 *)(r1 +0)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
1725: (57) r1 &= 8                    ; R1=scalar(umax=8,var_off=(0x0; 0x8))
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
1726: (55) if r1 != 0x0 goto pc+2     ; R1=0
; return jhash_2words(pckt->flow.src, pckt->flow.ports, INIT_JHASH_SEED);
1727: (61) r5 = *(u32 *)(r10 -80)     ; R5_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
1728: (05) goto pc+5
; return jhash_2words(pckt->flow.src, pckt->flow.ports, INIT_JHASH_SEED);
1734: (61) r3 = *(u32 *)(r10 -48)     ; R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; b += initval;
1735: (07) r3 += -525483785           ; R3_w=scalar(smin=-525483785,smax=3769483510)
1736: (05) goto pc+0
1737: (05) goto pc+0
1738: (05) goto pc+0
1739: (bc) w2 = w3                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3=scalar(smin=-525483785,smax=3769483510)
; return (word << shift) | (word >> ((-shift) & 31));
1740: (77) r2 >>= 18                  ; R2_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1741: (bf) r4 = r3                    ; R3=scalar(id=107,smin=-525483785,smax=3769483510) R4_w=scalar(id=107,smin=-525483785,smax=3769483510)
1742: (67) r4 <<= 14                  ; R4_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1743: (4f) r4 |= r2                   ; R2_w=scalar(umax=16383,var_off=(0x0; 0x3fff)) R4_w=scalar()
; __jhash_final(a, b, c);
1744: (bf) r2 = r3                    ; R2_w=scalar(id=107,smin=-525483785,smax=3769483510) R3=scalar(id=107,smin=-525483785,smax=3769483510)
1745: (a7) r2 ^= -525483785           ; R2_w=scalar()
1746: (1f) r2 -= r4                   ; R2_w=scalar() R4_w=scalar()
1747: (05) goto pc+0
1748: (05) goto pc+0
1749: (bf) r0 = r2                    ; R0_w=scalar(id=108) R2=scalar(id=108)
1750: (67) r0 <<= 32                  ; R0_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
; return (word << shift) | (word >> ((-shift) & 31));
1751: (77) r0 >>= 53                  ; R0_w=scalar(umax=2047,var_off=(0x0; 0x7ff))
1752: (bf) r7 = r2                    ; R2=scalar(id=108) R7_w=scalar(id=108)
1753: (67) r7 <<= 11                  ; R7_w=scalar(smax=9223372036854773760,umax=18446744073709549568,var_off=(0x0; 0xfffffffffffff800),s32_max=2147481600,u32_max=-2048)
1754: (4f) r7 |= r0                   ; R0_w=scalar(umax=2047,var_off=(0x0; 0x7ff)) R7_w=scalar()
; a += initval;
1755: (07) r5 += -525483785           ; R5_w=scalar(smin=-525483785,smax=3769483510)
; __jhash_final(a, b, c);
1756: (bf) r4 = r2                    ; R2=scalar(id=108) R4_w=scalar(id=108)
1757: (af) r4 ^= r5                   ; R4_w=scalar() R5_w=scalar(smin=-525483785,smax=3769483510)
1758: (1f) r4 -= r7                   ; R4_w=scalar() R7_w=scalar()
1759: (05) goto pc+0
1760: (05) goto pc+0
1761: (05) goto pc+0
1762: (bc) w0 = w4                    ; R0_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R4=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1763: (77) r0 >>= 7                   ; R0_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff))
1764: (bf) r7 = r4                    ; R4=scalar(id=109) R7_w=scalar(id=109)
1765: (67) r7 <<= 25                  ; R7_w=scalar(smax=9223372036821221376,umax=18446744073675997184,var_off=(0x0; 0xfffffffffe000000),s32_max=2113929216,u32_max=-33554432)
1766: (4f) r7 |= r0                   ; R0_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff)) R7_w=scalar()
; __jhash_final(a, b, c);
1767: (bf) r5 = r4                    ; R4=scalar(id=109) R5_w=scalar(id=109)
1768: (af) r5 ^= r3                   ; R3=scalar(id=107,smin=-525483785,smax=3769483510) R5_w=scalar()
1769: (1f) r5 -= r7                   ; R5_w=scalar() R7_w=scalar()
1770: (05) goto pc+0
1771: (05) goto pc+0
1772: (05) goto pc+0
1773: (bc) w0 = w5                    ; R0_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R5=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1774: (77) r0 >>= 16                  ; R0_w=scalar(umax=65535,var_off=(0x0; 0xffff))
1775: (bf) r7 = r5                    ; R5=scalar(id=110) R7_w=scalar(id=110)
1776: (67) r7 <<= 16                  ; R7_w=scalar(smax=9223372036854710272,umax=18446744073709486080,var_off=(0x0; 0xffffffffffff0000),s32_max=2147418112,u32_max=-65536)
1777: (4f) r7 |= r0                   ; R0_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R7_w=scalar()
; __jhash_final(a, b, c);
1778: (bf) r3 = r5                    ; R3_w=scalar(id=110) R5=scalar(id=110)
1779: (af) r3 ^= r2                   ; R2=scalar(id=108) R3_w=scalar()
1780: (1f) r3 -= r7                   ; R3_w=scalar() R7_w=scalar()
1781: (05) goto pc+0
1782: (05) goto pc+0
1783: (05) goto pc+0
1784: (bc) w0 = w3                    ; R0_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1785: (77) r0 >>= 28                  ; R0_w=scalar(umax=15,var_off=(0x0; 0xf))
1786: (bf) r7 = r3                    ; R3=scalar(id=111) R7_w=scalar(id=111)
1787: (67) r7 <<= 4                   ; R7_w=scalar(smax=9223372036854775792,umax=18446744073709551600,var_off=(0x0; 0xfffffffffffffff0),s32_max=2147483632,u32_max=-16)
1788: (4f) r7 |= r0                   ; R0_w=scalar(umax=15,var_off=(0x0; 0xf)) R7_w=scalar()
; __jhash_final(a, b, c);
1789: (bf) r2 = r3                    ; R2_w=scalar(id=111) R3=scalar(id=111)
1790: (af) r2 ^= r4                   ; R2_w=scalar() R4=scalar(id=109)
1791: (1f) r2 -= r7                   ; R2_w=scalar() R7_w=scalar()
1792: (05) goto pc+0
1793: (bc) w4 = w2                    ; R2=scalar() R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1794: (77) r4 >>= 18                  ; R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1795: (bf) r1 = r2                    ; R1_w=scalar(id=112) R2=scalar(id=112)
1796: (67) r1 <<= 14                  ; R1_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1797: (4f) r1 |= r4                   ; R1_w=scalar() R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
; __jhash_final(a, b, c);
1798: (af) r2 ^= r5                   ; R2_w=scalar() R5=scalar(id=110)
1799: (1f) r2 -= r1                   ; R1_w=scalar() R2_w=scalar()
1800: (05) goto pc+0
1801: (05) goto pc+0
1802: (05) goto pc+0
1803: (bc) w4 = w2                    ; R2=scalar() R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1804: (77) r4 >>= 8                   ; R4_w=scalar(umax=16777215,var_off=(0x0; 0xffffff))
1805: (bf) r1 = r2                    ; R1_w=scalar(id=113) R2=scalar(id=113)
1806: (67) r1 <<= 24                  ; R1_w=scalar(smax=9223372036837998592,umax=18446744073692774400,var_off=(0x0; 0xffffffffff000000),s32_max=2130706432,u32_max=-16777216)
1807: (4f) r1 |= r4                   ; R1_w=scalar() R4_w=scalar(umax=16777215,var_off=(0x0; 0xffffff))
; __jhash_final(a, b, c);
1808: (af) r2 ^= r3                   ; R2_w=scalar() R3=scalar(id=111)
1809: (1f) r2 -= r1                   ; R1_w=scalar() R2_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1810: (79) r1 = *(u64 *)(r10 -144)    ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
1811: (61) r1 = *(u32 *)(r1 +4)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; key = RING_SIZE * (vip_info->vip_num) + hash;
1812: (27) r1 *= 65537                ; R1_w=scalar(umax=281479271612415,var_off=(0x0; 0x1ffffffffffff))
; __jhash_final(a, b, c);
1813: (bc) w2 = w2                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
1814: (05) goto pc+0
; hash = get_packet_hash(pckt, hash_16bytes) % RING_SIZE;
1815: (97) r2 %= 65537                ; R2_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1816: (0f) r2 += r1                   ; R1=scalar(umax=281479271612415,var_off=(0x0; 0x1ffffffffffff)) R2_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1817: (63) *(u32 *)(r10 -20) = r2     ; R2_w=scalar() R10=fp0 fp-24=mmmm????
1818: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1819: (07) r2 += -20                  ; R2_w=fp-20
; real_pos = bpf_map_lookup_elem(&ch_rings, &key);
1820: (18) r1 = 0xffffaebaa0631000    ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
1822: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=114,off=0,ks=4,vs=4,imm=0)
; if (!real_pos) {
1823: (15) if r0 == 0x0 goto pc+33    ; R0_w=map_value(off=0,ks=4,vs=4,imm=0)
; key = *real_pos;
1824: (61) r1 = *(u32 *)(r0 +0)       ; R0_w=map_value(off=0,ks=4,vs=4,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; key = *real_pos;
1825: (63) *(u32 *)(r10 -20) = r1     ; R1=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-24=mmmm????
; if (key == 0) {
1826: (55) if r1 != 0x0 goto pc+12    ; R1=0
1827: (05) goto pc+0
; __u32 ch_drop_stats_key = MAX_VIPS + CH_DROP_STATS;
1828: (62) *(u32 *)(r10 -28) = 521    ; R10=fp0 fp-32=mmmm????
1829: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1830: (07) r2 += -28                  ; R2_w=fp-28
; bpf_map_lookup_elem(&stats, &ch_drop_stats_key);
1831: (18) r1 = 0xffffa03499be8000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
1833: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=115,off=0,ks=4,vs=16,imm=0)
; if (!ch_drop_stats) {
1834: (15) if r0 == 0x0 goto pc+3     ; R0_w=map_value(off=0,ks=4,vs=16,imm=0)
; ch_drop_stats->v2 += 1;
1835: (79) r1 = *(u64 *)(r0 +8)       ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1836: (07) r1 += 1                    ; R1_w=scalar()
1837: (7b) *(u64 *)(r0 +8) = r1       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1=scalar()
; pckt->real_index = key;
1838: (61) r1 = *(u32 *)(r10 -20)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; pckt->real_index = key;
1839: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1840: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1841: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1842: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1844: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=116,off=0,ks=4,vs=20,imm=0)
; if (!(*real)) {
1845: (55) if r0 != 0x0 goto pc+14    ; R0_w=0
1846: (05) goto pc+0
1847: safe

from 1845 to 1860: R0=map_value(off=0,ks=4,vs=20,imm=0) R6=ctx(off=0,imm=0) R7=scalar() R8=0 R9=scalar(id=106) R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; }
1860: (7b) *(u64 *)(r10 -176) = r0    ; R0=map_value(off=0,ks=4,vs=20,imm=0) R10=fp0 fp-176_w=map_value
; if (lru_map && !(vip_info->flags & F_LRU_BYPASS) && !under_flood) {
1861: (79) r1 = *(u64 *)(r10 -152)    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0
1862: (15) if r1 == 0x0 goto pc+18    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0)
; if (lru_map && !(vip_info->flags & F_LRU_BYPASS) && !under_flood) {
1863: (79) r1 = *(u64 *)(r10 -144)    ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
1864: (61) r1 = *(u32 *)(r1 +0)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (lru_map && !(vip_info->flags & F_LRU_BYPASS) && !under_flood) {
1865: (57) r1 &= 2                    ; R1_w=scalar(umax=2,var_off=(0x0; 0x2))
1866: (77) r1 >>= 1                   ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
; if (lru_map && !(vip_info->flags & F_LRU_BYPASS) && !under_flood) {
1867: (4f) r8 |= r1                   ; R1_w=scalar(umax=1,var_off=(0x0; 0x1)) R8_w=scalar()
1868: (55) if r8 != 0x0 goto pc+12    ; R8_w=0
; if (pckt->flow.proto == IPPROTO_UDP) {
1869: (71) r1 = *(u8 *)(r10 -44)      ; R1=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (pckt->flow.proto == IPPROTO_UDP) {
1870: (55) if r1 != 0x11 goto pc+1    ; R1=17
; new_dst_lru.atime = cur_time;
1871: (7b) *(u64 *)(r10 -8) = r9      ; R9=scalar(id=106) R10=fp0 fp-8_w=mmmmmmmm
; new_dst_lru.pos = key;
1872: (61) r1 = *(u32 *)(r10 -20)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; new_dst_lru.pos = key;
1873: (63) *(u32 *)(r10 -16) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-16=
1874: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; new_dst_lru.pos = key;
1875: (07) r2 += -80                  ; R2_w=fp-80
1876: (bf) r3 = r10                   ; R3_w=fp0 R10=fp0
1877: (07) r3 += -16                  ; R3_w=fp-16
; bpf_map_update_elem(lru_map, &pckt->flow, &new_dst_lru, BPF_ANY);
1878: (79) r1 = *(u64 *)(r10 -152)    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0
1879: (b7) r4 = 0                     ; R4_w=0
1880: (85) call bpf_map_update_elem#2
1881: safe

from 1870 to 1872: R0=map_value(off=0,ks=4,vs=20,imm=0) R1=scalar(umax=255,var_off=(0x0; 0xff)) R6=ctx(off=0,imm=0) R7=scalar() R8=0 R9=scalar(id=106) R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=map_value
; new_dst_lru.pos = key;
1872: (61) r1 = *(u32 *)(r10 -20)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; new_dst_lru.pos = key;
1873: (63) *(u32 *)(r10 -16) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-16=
1874: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; new_dst_lru.pos = key;
1875: (07) r2 += -80                  ; R2_w=fp-80
1876: (bf) r3 = r10                   ; R3_w=fp0 R10=fp0
1877: (07) r3 += -16                  ; R3_w=fp-16
; bpf_map_update_elem(lru_map, &pckt->flow, &new_dst_lru, BPF_ANY);
1878: (79) r1 = *(u64 *)(r10 -152)    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0
1879: (b7) r4 = 0                     ; R4_w=0
1880: (85) call bpf_map_update_elem#2
1881: safe

from 1868 to 1881: R0=map_value(off=0,ks=4,vs=20,imm=0) R1_w=scalar(umax=1,var_off=(0x0; 0x1)) R6=ctx(off=0,imm=0) R7=scalar() R8_w=scalar() R9=scalar(id=106) R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176_w=map_value
1881: (05) goto pc+0
; __u32 vip_miss_stats_key = 0;
1882: (62) *(u32 *)(r10 -16) = 0      ; R10=fp0 fp-16=0000mmmm
1883: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1884: (07) r2 += -16                  ; R2_w=fp-16
; bpf_map_lookup_elem(&vip_miss_stats, &vip_miss_stats_key);
1885: (18) r1 = 0xffffa03587067400    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1887: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=117,off=0,ks=4,vs=20,imm=0)
; if (!lru_miss_stat_vip) {
1888: (15) if r0 == 0x0 goto pc-32    ; R0_w=map_value(off=0,ks=4,vs=20,imm=0)
; bool vip_match = address_match && port_match && proto_match;
1889: (69) r2 = *(u16 *)(r10 -88)     ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; 
1890: (61) r3 = *(u32 *)(r10 -104)    ; R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; bool vip_match = address_match && port_match && proto_match;
1891: (71) r1 = *(u8 *)(r10 -86)      ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; bool proto_match = lru_miss_stat_vip->proto = vip->proto;
1892: (73) *(u8 *)(r0 +18) = r1       ; R0_w=map_value(off=0,ks=4,vs=20,imm=0) R1_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
1893: (61) r4 = *(u32 *)(r0 +0)       ; R0=map_value(off=0,ks=4,vs=20,imm=0) R4=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; bool vip_match = address_match && port_match && proto_match;
1894: (5d) if r4 != r3 goto pc+14     ; R3=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R4=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
1895: (69) r3 = *(u16 *)(r0 +16)      ; R0=map_value(off=0,ks=4,vs=20,imm=0) R3_w=scalar(umax=65535,var_off=(0x0; 0xffff))
1896: (5d) if r3 != r2 goto pc+12     ; R2=scalar(umax=65535,var_off=(0x0; 0xffff)) R3_w=scalar(umax=65535,var_off=(0x0; 0xffff))
1897: (15) if r1 == 0x0 goto pc+11    ; R1=scalar(umax=255,var_off=(0x0; 0xff))
; __u32 lru_stats_key = pckt->real_index;
1898: (61) r1 = *(u32 *)(r10 -40)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; __u32 lru_stats_key = pckt->real_index;
1899: (63) *(u32 *)(r10 -28) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmm????
1900: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; __u32 lru_stats_key = pckt->real_index;
1901: (07) r2 += -28                  ; R2_w=fp-28
; __u32* lru_miss_stat = bpf_map_lookup_elem(&lru_miss_stats, &lru_stats_key);
1902: (18) r1 = 0xffffaeba8afdd000    ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
1904: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=118,off=0,ks=4,vs=4,imm=0)
; if (!lru_miss_stat) {
1905: (15) if r0 == 0x0 goto pc-49    ; R0=map_value(off=0,ks=4,vs=4,imm=0)
; *lru_miss_stat += 1;
1906: (61) r1 = *(u32 *)(r0 +0)       ; R0=map_value(off=0,ks=4,vs=4,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
1907: (07) r1 += 1                    ; R1_w=scalar(umin=1,umax=4294967296,var_off=(0x0; 0x1ffffffff))
1908: (63) *(u32 *)(r0 +0) = r1       ; R0=map_value(off=0,ks=4,vs=4,imm=0) R1_w=scalar(umin=1,umax=4294967296,var_off=(0x0; 0x1ffffffff))
1909: (79) r2 = *(u64 *)(r10 -160)    ; R2_w=map_value(off=0,ks=4,vs=16,imm=0) R10=fp0
; data_stats->v2 += 1;
1910: (79) r1 = *(u64 *)(r2 +8)       ; R1_w=scalar() R2_w=map_value(off=0,ks=4,vs=16,imm=0)
1911: (07) r1 += 1                    ; R1_w=scalar()
1912: (7b) *(u64 *)(r2 +8) = r1       ; R1_w=scalar() R2_w=map_value(off=0,ks=4,vs=16,imm=0)
1913: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1914: (07) r2 += -112                 ; R2_w=fp-112
; cval = bpf_map_lookup_elem(&ctl_array, &mac_addr_pos);
1915: (18) r1 = 0xffffa03553eeca00    ; R1_w=map_ptr(off=0,ks=4,vs=8,imm=0)
1917: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=119,off=0,ks=4,vs=8,imm=0)
1918: (bf) r7 = r0                    ; R0=map_value_or_null(id=119,off=0,ks=4,vs=8,imm=0) R7_w=map_value_or_null(id=119,off=0,ks=4,vs=8,imm=0)
1919: (b7) r9 = 1                     ; R9_w=1
; if (!cval) {
1920: (15) if r7 == 0x0 goto pc-63    ; R7_w=map_value(off=0,ks=4,vs=8,imm=0)
1921: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1922: (07) r2 += -108                 ; R2_w=fp-108
; data_stats = bpf_map_lookup_elem(&stats, &vip_num);
1923: (18) r1 = 0xffffa03499be8000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
1925: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=120,off=0,ks=4,vs=16,imm=0)
; if (!data_stats) {
1926: (15) if r0 == 0x0 goto pc-69    ; R0_w=map_value(off=0,ks=4,vs=16,imm=0)
1927: (79) r8 = *(u64 *)(r10 -136)    ; R8_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
1928: (dc) r8 = be16 r8               ; R8_w=scalar()
; data_stats->v1 += 1;
1929: (79) r1 = *(u64 *)(r0 +8)       ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1930: (0f) r1 += r8                   ; R1_w=scalar() R8_w=scalar()
1931: (7b) *(u64 *)(r0 +8) = r1       ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1932: (79) r1 = *(u64 *)(r0 +0)       ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1933: (07) r1 += 1                    ; R1_w=scalar()
1934: (7b) *(u64 *)(r0 +0) = r1       ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
; data_stats = bpf_map_lookup_elem(&reals_stats, &pckt.real_index);
1935: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1936: (07) r2 += -40                  ; R2_w=fp-40
; data_stats = bpf_map_lookup_elem(&reals_stats, &pckt.real_index);
1937: (18) r1 = 0xffffaeba8ae7d000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
1939: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=121,off=0,ks=4,vs=16,imm=0)
; if (!data_stats) {
1940: (15) if r0 == 0x0 goto pc-83    ; R0=map_value(off=0,ks=4,vs=16,imm=0)
; data_stats->v1 += 1;
1941: (79) r1 = *(u64 *)(r0 +8)       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1942: (0f) r1 += r8                   ; R1_w=scalar() R8=scalar()
1943: (7b) *(u64 *)(r0 +8) = r1       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1944: (79) r1 = *(u64 *)(r0 +0)       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1945: (0f) r1 += r9                   ; R1_w=scalar() R9=1
1946: (7b) *(u64 *)(r0 +0) = r1       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
; pckt.flow.port16[0] = original_sport;
1947: (79) r1 = *(u64 *)(r10 -168)    ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
1948: (6b) *(u16 *)(r10 -48) = r1     ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-48=
; if (dst->flags & F_IPV6) {
1949: (79) r1 = *(u64 *)(r10 -176)    ; R1_w=map_value(off=0,ks=4,vs=20,imm=0) R10=fp0
1950: (71) r1 = *(u8 *)(r1 +16)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff))
; if (dst->flags & F_IPV6) {
1951: (57) r1 &= 1                    ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
; if (dst->flags & F_IPV6) {
1952: (15) if r1 == 0x0 goto pc+75    ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
; if (XDP_ADJUST_HEAD_FUNC(xdp, 0 - (int)sizeof(struct ipv6hdr))) {
1953: (bf) r1 = r6                    ; R1_w=ctx(off=0,imm=0) R6=ctx(off=0,imm=0)
1954: (18) r2 = 0xffffffd8            ; R2_w=4294967256
1956: (85) call bpf_xdp_adjust_head#44        ; R0=scalar()
1957: (bc) w0 = w0                    ; R0_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
1958: (05) goto pc+0
; if (XDP_ADJUST_HEAD_FUNC(xdp, 0 - (int)sizeof(struct ipv6hdr))) {
1959: (55) if r0 != 0x0 goto pc-102   ; R0_w=0
; data = (void*)(long)xdp->data;
1960: (61) r1 = *(u32 *)(r6 +0)       ; R1_w=pkt(off=0,r=0,imm=0) R6=ctx(off=0,imm=0)
; data_end = (void*)(long)xdp->data_end;
1961: (61) r2 = *(u32 *)(r6 +4)       ; R2_w=pkt_end(off=0,imm=0) R6=ctx(off=0,imm=0)
; ip6h = data + sizeof(struct ethhdr);
1962: (bf) r3 = r1                    ; R1_w=pkt(off=0,r=0,imm=0) R3_w=pkt(off=0,r=0,imm=0)
1963: (07) r3 += 14                   ; R3_w=pkt(off=14,r=0,imm=0)
; if (new_eth + 1 > data_end || old_eth + 1 > data_end || ip6h + 1 > data_end) {
1964: (2d) if r3 > r2 goto pc-107     ; R2_w=pkt_end(off=0,imm=0) R3_w=pkt(off=14,r=14,imm=0)
1965: (bf) r3 = r1                    ; R1_w=pkt(off=0,r=14,imm=0) R3_w=pkt(off=0,r=14,imm=0)
1966: (07) r3 += 54                   ; R3=pkt(off=54,r=14,imm=0)
1967: (2d) if r3 > r2 goto pc-110     ; R2=pkt_end(off=0,imm=0) R3=pkt(off=54,r=54,imm=0)
; memcpy(new_eth->h_dest, cval->mac, 6);
1968: (71) r2 = *(u8 *)(r7 +0)        ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=map_value(off=0,ks=4,vs=8,imm=0)
1969: (71) r3 = *(u8 *)(r7 +1)        ; R3_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=map_value(off=0,ks=4,vs=8,imm=0)
1970: (71) r4 = *(u8 *)(r7 +2)        ; R4_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=map_value(off=0,ks=4,vs=8,imm=0)
1971: (71) r5 = *(u8 *)(r7 +3)        ; R5_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=map_value(off=0,ks=4,vs=8,imm=0)
1972: (71) r0 = *(u8 *)(r7 +4)        ; R0_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=map_value(off=0,ks=4,vs=8,imm=0)
1973: (71) r6 = *(u8 *)(r7 +5)        ; R6_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=map_value(off=0,ks=4,vs=8,imm=0)
; memcpy(new_eth->h_source, old_eth->h_dest, 6);
1974: (71) r7 = *(u8 *)(r1 +42)       ; R1=pkt(off=0,r=54,imm=0) R7_w=scalar(umax=255,var_off=(0x0; 0xff))
1975: (73) *(u8 *)(r1 +8) = r7        ; R1=pkt(off=0,r=54,imm=0) R7_w=scalar(umax=255,var_off=(0x0; 0xff))
1976: (71) r7 = *(u8 *)(r1 +43)       ; R1=pkt(off=0,r=54,imm=0) R7_w=scalar(umax=255,var_off=(0x0; 0xff))
1977: (73) *(u8 *)(r1 +9) = r7        ; R1=pkt(off=0,r=54,imm=0) R7_w=scalar(umax=255,var_off=(0x0; 0xff))
1978: (71) r7 = *(u8 *)(r1 +40)       ; R1=pkt(off=0,r=54,imm=0) R7_w=scalar(umax=255,var_off=(0x0; 0xff))
1979: (73) *(u8 *)(r1 +6) = r7        ; R1=pkt(off=0,r=54,imm=0) R7_w=scalar(umax=255,var_off=(0x0; 0xff))
1980: (71) r7 = *(u8 *)(r1 +41)       ; R1=pkt(off=0,r=54,imm=0) R7_w=scalar(umax=255,var_off=(0x0; 0xff))
1981: (73) *(u8 *)(r1 +7) = r7        ; R1=pkt(off=0,r=54,imm=0) R7_w=scalar(umax=255,var_off=(0x0; 0xff))
; memcpy(new_eth->h_dest, cval->mac, 6);
1982: (73) *(u8 *)(r1 +5) = r6        ; R1=pkt(off=0,r=54,imm=0) R6_w=scalar(umax=255,var_off=(0x0; 0xff))
1983: (73) *(u8 *)(r1 +4) = r0        ; R0_w=scalar(umax=255,var_off=(0x0; 0xff)) R1=pkt(off=0,r=54,imm=0)
1984: (73) *(u8 *)(r1 +3) = r5        ; R1=pkt(off=0,r=54,imm=0) R5_w=scalar(umax=255,var_off=(0x0; 0xff))
1985: (73) *(u8 *)(r1 +2) = r4        ; R1=pkt(off=0,r=54,imm=0) R4_w=scalar(umax=255,var_off=(0x0; 0xff))
1986: (73) *(u8 *)(r1 +1) = r3        ; R1=pkt(off=0,r=54,imm=0) R3_w=scalar(umax=255,var_off=(0x0; 0xff))
1987: (73) *(u8 *)(r1 +0) = r2        ; R1=pkt(off=0,r=54,imm=0) R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; memcpy(new_eth->h_source, old_eth->h_dest, 6);
1988: (71) r2 = *(u8 *)(r1 +44)       ; R1=pkt(off=0,r=54,imm=0) R2_w=scalar(umax=255,var_off=(0x0; 0xff))
1989: (73) *(u8 *)(r1 +10) = r2       ; R1=pkt(off=0,r=54,imm=0) R2_w=scalar(umax=255,var_off=(0x0; 0xff))
1990: (71) r2 = *(u8 *)(r1 +45)       ; R1=pkt(off=0,r=54,imm=0) R2_w=scalar(umax=255,var_off=(0x0; 0xff))
1991: (73) *(u8 *)(r1 +11) = r2       ; R1=pkt(off=0,r=54,imm=0) R2_w=scalar(umax=255,var_off=(0x0; 0xff))
1992: (05) goto pc+0
; new_eth->h_proto = BE_ETH_P_IPV6;
1993: (72) *(u8 *)(r1 +12) = 134      ; R1=pkt(off=0,r=54,imm=0)
1994: (05) goto pc+0
1995: (72) *(u8 *)(r1 +13) = 221      ; R1=pkt(off=0,r=54,imm=0)
; 
1996: (69) r2 = *(u16 *)(r10 -48)     ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; create_encap_ipv6_src(pckt->flow.port16[0], pckt->flow.src, saddr);
1997: (61) r3 = *(u32 *)(r10 -80)     ; R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; saddr[3] = src ^ port;
1998: (af) r3 ^= r2                   ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R3_w=scalar()
; create_v6_hdr(ip6h, pckt->tos, saddr, dst->dstv6, payload_len, proto);
1999: (71) r2 = *(u8 *)(r10 -35)      ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
2000: (05) goto pc+0
2001: safe

from 1967 to 1858: safe

from 1964 to 1858: safe

from 1959 to 1858: safe

from 1952 to 2028: R0=map_value(off=0,ks=4,vs=16,imm=0) R1=0 R6=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=8,imm=0) R8=scalar() R9=1 R10=fp0 fp-8=00000000 fp-16=0000mmmm fp-24=mmmm???? fp-32=mmmm???? fp-40=mmmmmmmm fp-48= fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=map_value
; __u32 ip_src = create_encap_ipv4_src(pckt->flow.port16[0], pckt->flow.src);
2028: (61) r1 = *(u32 *)(r10 -80)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; if (XDP_ADJUST_HEAD_FUNC(xdp, 0 - (int)sizeof(struct iphdr))) {
2029: (7b) *(u64 *)(r10 -136) = r1    ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-136_w=
2030: (bf) r1 = r6                    ; R1_w=ctx(off=0,imm=0) R6=ctx(off=0,imm=0)
2031: (18) r2 = 0xffffffec            ; R2_w=4294967276
2033: (85) call bpf_xdp_adjust_head#44
2034: safe

from 1940 to 1858: safe

from 1926 to 1858: safe

from 1920 to 1858: safe

from 1905 to 1857: safe

from 1897 to 1909: R0=map_value(off=0,ks=4,vs=20,imm=0) R1=0 R2=scalar(umax=65535,var_off=(0x0; 0xffff)) R3_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R4=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6=ctx(off=0,imm=0) R7=scalar() R8=scalar() R9=scalar(id=106) R10=fp0 fp-8=00000000 fp-16=0000mmmm fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=map_value
; *lru_miss_stat += 1;
1909: (79) r2 = *(u64 *)(r10 -160)    ; R2_w=map_value(off=0,ks=4,vs=16,imm=0) R10=fp0
; data_stats->v2 += 1;
1910: (79) r1 = *(u64 *)(r2 +8)       ; R1_w=scalar() R2_w=map_value(off=0,ks=4,vs=16,imm=0)
1911: (07) r1 += 1                    ; R1_w=scalar()
1912: (7b) *(u64 *)(r2 +8) = r1       ; R1_w=scalar() R2_w=map_value(off=0,ks=4,vs=16,imm=0)
1913: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1914: (07) r2 += -112                 ; R2_w=fp-112
; cval = bpf_map_lookup_elem(&ctl_array, &mac_addr_pos);
1915: (18) r1 = 0xffffa03553eeca00    ; R1_w=map_ptr(off=0,ks=4,vs=8,imm=0)
1917: (85) call bpf_map_lookup_elem#1
1918: safe

from 1896 to 1909: R0=map_value(off=0,ks=4,vs=20,imm=0) R1=scalar(umax=255,var_off=(0x0; 0xff)) R2=scalar(umax=65535,var_off=(0x0; 0xffff)) R3=scalar(umax=65535,var_off=(0x0; 0xffff)) R4=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6=ctx(off=0,imm=0) R7=scalar() R8=scalar() R9=scalar(id=106) R10=fp0 fp-8=00000000 fp-16=0000mmmm fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=map_value
; *lru_miss_stat += 1;
1909: (79) r2 = *(u64 *)(r10 -160)    ; R2_w=map_value(off=0,ks=4,vs=16,imm=0) R10=fp0
; data_stats->v2 += 1;
1910: (79) r1 = *(u64 *)(r2 +8)       ; R1_w=scalar() R2_w=map_value(off=0,ks=4,vs=16,imm=0)
1911: (07) r1 += 1                    ; R1_w=scalar()
1912: (7b) *(u64 *)(r2 +8) = r1       ; R1_w=scalar() R2_w=map_value(off=0,ks=4,vs=16,imm=0)
1913: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1914: (07) r2 += -112                 ; R2_w=fp-112
; cval = bpf_map_lookup_elem(&ctl_array, &mac_addr_pos);
1915: (18) r1 = 0xffffa03553eeca00    ; R1_w=map_ptr(off=0,ks=4,vs=8,imm=0)
1917: (85) call bpf_map_lookup_elem#1
1918: safe

from 1894 to 1909: safe

from 1888 to 1857: safe

from 1862 to 1881: R0=map_value(off=0,ks=4,vs=20,imm=0) R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R6=ctx(off=0,imm=0) R7=scalar() R8=0 R9=scalar(id=106) R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176_w=map_value
; bpf_map_update_elem(lru_map, &pckt->flow, &new_dst_lru, BPF_ANY);
1881: (05) goto pc+0
1882: safe

from 1834 to 1838: safe

from 1826 to 1839: R0=map_value(off=0,ks=4,vs=4,imm=0) R1=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6=ctx(off=0,imm=0) R7=scalar() R8=0 R9=scalar(id=106) R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; pckt->real_index = key;
1839: (63) *(u32 *)(r10 -40) = r1     ; R1=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1840: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1841: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1842: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1844: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=124,off=0,ks=4,vs=20,imm=0)
; if (!(*real)) {
1845: (55) if r0 != 0x0 goto pc+14    ; R0_w=0
1846: (05) goto pc+0
1847: safe

from 1845 to 1860: safe

from 1823 to 1857: safe

from 1726 to 1729: R0=scalar(id=106) R1=scalar(umax=8,var_off=(0x0; 0x8)) R2=scalar(umin=1000000001) R6=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=16,imm=0) R8=0 R9=scalar(id=106) R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; pckt->flow.port16[0] = pckt->flow.port16[1];
1729: (69) r1 = *(u16 *)(r10 -46)     ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; pckt->flow.port16[0] = pckt->flow.port16[1];
1730: (6b) *(u16 *)(r10 -48) = r1     ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-48=
1731: (b7) r5 = 0                     ; R5_w=0
; memset(pckt->flow.srcv6, 0, 16);
1732: (7b) *(u64 *)(r10 -80) = r5
last_idx 1732 first_idx 1729
regs=20 stack=0 before 1731: (b7) r5 = 0
1733: R5_w=P0 R10=fp0 fp-80_w=00000000
1733: (7b) *(u64 *)(r10 -72) = r5     ; R5_w=P0 R10=fp0 fp-72_w=00000000
; return jhash_2words(pckt->flow.src, pckt->flow.ports, INIT_JHASH_SEED);
1734: (61) r3 = *(u32 *)(r10 -48)     ; R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; b += initval;
1735: (07) r3 += -525483785           ; R3_w=scalar(smin=-525483785,smax=3769483510)
1736: (05) goto pc+0
1737: (05) goto pc+0
1738: (05) goto pc+0
1739: (bc) w2 = w3                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3=scalar(smin=-525483785,smax=3769483510)
; return (word << shift) | (word >> ((-shift) & 31));
1740: (77) r2 >>= 18                  ; R2_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1741: (bf) r4 = r3                    ; R3=scalar(id=125,smin=-525483785,smax=3769483510) R4_w=scalar(id=125,smin=-525483785,smax=3769483510)
1742: (67) r4 <<= 14                  ; R4_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1743: (4f) r4 |= r2                   ; R2_w=scalar(umax=16383,var_off=(0x0; 0x3fff)) R4_w=scalar()
; __jhash_final(a, b, c);
1744: (bf) r2 = r3                    ; R2_w=scalar(id=125,smin=-525483785,smax=3769483510) R3=scalar(id=125,smin=-525483785,smax=3769483510)
1745: (a7) r2 ^= -525483785           ; R2_w=scalar()
1746: (1f) r2 -= r4                   ; R2_w=scalar() R4_w=scalar()
1747: (05) goto pc+0
1748: (05) goto pc+0
1749: (bf) r0 = r2                    ; R0_w=scalar(id=126) R2=scalar(id=126)
1750: (67) r0 <<= 32                  ; R0_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
; return (word << shift) | (word >> ((-shift) & 31));
1751: (77) r0 >>= 53                  ; R0_w=scalar(umax=2047,var_off=(0x0; 0x7ff))
1752: (bf) r7 = r2                    ; R2=scalar(id=126) R7_w=scalar(id=126)
1753: (67) r7 <<= 11                  ; R7_w=scalar(smax=9223372036854773760,umax=18446744073709549568,var_off=(0x0; 0xfffffffffffff800),s32_max=2147481600,u32_max=-2048)
1754: (4f) r7 |= r0                   ; R0_w=scalar(umax=2047,var_off=(0x0; 0x7ff)) R7_w=scalar()
; a += initval;
1755: (07) r5 += -525483785           ; R5_w=P-525483785
; __jhash_final(a, b, c);
1756: (bf) r4 = r2                    ; R2=scalar(id=126) R4_w=scalar(id=126)
1757: (af) r4 ^= r5                   ; R4_w=scalar() R5_w=P-525483785
1758: (1f) r4 -= r7                   ; R4_w=scalar() R7_w=scalar()
1759: (05) goto pc+0
1760: (05) goto pc+0
1761: (05) goto pc+0
1762: (bc) w0 = w4                    ; R0_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R4=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1763: (77) r0 >>= 7                   ; R0_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff))
1764: (bf) r7 = r4                    ; R4=scalar(id=127) R7_w=scalar(id=127)
1765: (67) r7 <<= 25                  ; R7_w=scalar(smax=9223372036821221376,umax=18446744073675997184,var_off=(0x0; 0xfffffffffe000000),s32_max=2113929216,u32_max=-33554432)
1766: (4f) r7 |= r0                   ; R0_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff)) R7_w=scalar()
; __jhash_final(a, b, c);
1767: (bf) r5 = r4                    ; R4=scalar(id=127) R5_w=scalar(id=127)
1768: (af) r5 ^= r3                   ; R3=scalar(id=125,smin=-525483785,smax=3769483510) R5_w=scalar()
1769: (1f) r5 -= r7                   ; R5_w=scalar() R7_w=scalar()
1770: (05) goto pc+0
1771: (05) goto pc+0
1772: (05) goto pc+0
1773: (bc) w0 = w5                    ; R0_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R5=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1774: (77) r0 >>= 16                  ; R0_w=scalar(umax=65535,var_off=(0x0; 0xffff))
1775: (bf) r7 = r5                    ; R5=scalar(id=128) R7_w=scalar(id=128)
1776: (67) r7 <<= 16                  ; R7_w=scalar(smax=9223372036854710272,umax=18446744073709486080,var_off=(0x0; 0xffffffffffff0000),s32_max=2147418112,u32_max=-65536)
1777: (4f) r7 |= r0                   ; R0_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R7_w=scalar()
; __jhash_final(a, b, c);
1778: (bf) r3 = r5                    ; R3_w=scalar(id=128) R5=scalar(id=128)
1779: (af) r3 ^= r2                   ; R2=scalar(id=126) R3_w=scalar()
1780: (1f) r3 -= r7                   ; R3_w=scalar() R7_w=scalar()
1781: (05) goto pc+0
1782: (05) goto pc+0
1783: (05) goto pc+0
1784: (bc) w0 = w3                    ; R0_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1785: (77) r0 >>= 28                  ; R0_w=scalar(umax=15,var_off=(0x0; 0xf))
1786: (bf) r7 = r3                    ; R3=scalar(id=129) R7_w=scalar(id=129)
1787: (67) r7 <<= 4                   ; R7_w=scalar(smax=9223372036854775792,umax=18446744073709551600,var_off=(0x0; 0xfffffffffffffff0),s32_max=2147483632,u32_max=-16)
1788: (4f) r7 |= r0                   ; R0_w=scalar(umax=15,var_off=(0x0; 0xf)) R7_w=scalar()
; __jhash_final(a, b, c);
1789: (bf) r2 = r3                    ; R2_w=scalar(id=129) R3=scalar(id=129)
1790: (af) r2 ^= r4                   ; R2_w=scalar() R4=scalar(id=127)
1791: (1f) r2 -= r7                   ; R2_w=scalar() R7_w=scalar()
1792: (05) goto pc+0
1793: (bc) w4 = w2                    ; R2=scalar() R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1794: (77) r4 >>= 18                  ; R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1795: (bf) r1 = r2                    ; R1_w=scalar(id=130) R2=scalar(id=130)
1796: (67) r1 <<= 14                  ; R1_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1797: (4f) r1 |= r4                   ; R1_w=scalar() R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
; __jhash_final(a, b, c);
1798: (af) r2 ^= r5                   ; R2_w=scalar() R5=scalar(id=128)
1799: (1f) r2 -= r1                   ; R1_w=scalar() R2_w=scalar()
1800: (05) goto pc+0
1801: (05) goto pc+0
1802: (05) goto pc+0
1803: (bc) w4 = w2                    ; R2=scalar() R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1804: (77) r4 >>= 8                   ; R4_w=scalar(umax=16777215,var_off=(0x0; 0xffffff))
1805: (bf) r1 = r2                    ; R1_w=scalar(id=131) R2=scalar(id=131)
1806: (67) r1 <<= 24                  ; R1_w=scalar(smax=9223372036837998592,umax=18446744073692774400,var_off=(0x0; 0xffffffffff000000),s32_max=2130706432,u32_max=-16777216)
1807: (4f) r1 |= r4                   ; R1_w=scalar() R4_w=scalar(umax=16777215,var_off=(0x0; 0xffffff))
; __jhash_final(a, b, c);
1808: (af) r2 ^= r3                   ; R2_w=scalar() R3=scalar(id=129)
1809: (1f) r2 -= r1                   ; R1_w=scalar() R2_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1810: (79) r1 = *(u64 *)(r10 -144)    ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
1811: (61) r1 = *(u32 *)(r1 +4)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; key = RING_SIZE * (vip_info->vip_num) + hash;
1812: (27) r1 *= 65537                ; R1_w=scalar(umax=281479271612415,var_off=(0x0; 0x1ffffffffffff))
; __jhash_final(a, b, c);
1813: (bc) w2 = w2                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
1814: (05) goto pc+0
; hash = get_packet_hash(pckt, hash_16bytes) % RING_SIZE;
1815: (97) r2 %= 65537                ; R2_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1816: (0f) r2 += r1                   ; R1=scalar(umax=281479271612415,var_off=(0x0; 0x1ffffffffffff)) R2_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1817: (63) *(u32 *)(r10 -20) = r2     ; R2_w=scalar() R10=fp0 fp-24=mmmm????
1818: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1819: (07) r2 += -20                  ; R2_w=fp-20
; real_pos = bpf_map_lookup_elem(&ch_rings, &key);
1820: (18) r1 = 0xffffaebaa0631000    ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
1822: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=132,off=0,ks=4,vs=4,imm=0)
; if (!real_pos) {
1823: (15) if r0 == 0x0 goto pc+33    ; R0_w=map_value(off=0,ks=4,vs=4,imm=0)
; key = *real_pos;
1824: (61) r1 = *(u32 *)(r0 +0)       ; R0_w=map_value(off=0,ks=4,vs=4,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; key = *real_pos;
1825: (63) *(u32 *)(r10 -20) = r1     ; R1=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-24=mmmm????
; if (key == 0) {
1826: (55) if r1 != 0x0 goto pc+12    ; R1=0
1827: (05) goto pc+0
; __u32 ch_drop_stats_key = MAX_VIPS + CH_DROP_STATS;
1828: (62) *(u32 *)(r10 -28) = 521    ; R10=fp0 fp-32=mmmm????
1829: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1830: (07) r2 += -28                  ; R2_w=fp-28
; bpf_map_lookup_elem(&stats, &ch_drop_stats_key);
1831: (18) r1 = 0xffffa03499be8000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
1833: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=133,off=0,ks=4,vs=16,imm=0)
; if (!ch_drop_stats) {
1834: (15) if r0 == 0x0 goto pc+3     ; R0_w=map_value(off=0,ks=4,vs=16,imm=0)
; ch_drop_stats->v2 += 1;
1835: (79) r1 = *(u64 *)(r0 +8)       ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1836: (07) r1 += 1                    ; R1_w=scalar()
1837: (7b) *(u64 *)(r0 +8) = r1       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1=scalar()
; pckt->real_index = key;
1838: (61) r1 = *(u32 *)(r10 -20)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; pckt->real_index = key;
1839: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1840: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1841: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1842: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1844: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=134,off=0,ks=4,vs=20,imm=0)
; if (!(*real)) {
1845: (55) if r0 != 0x0 goto pc+14    ; R0_w=0
1846: (05) goto pc+0
1847: safe

from 1845 to 1860: R0=map_value(off=0,ks=4,vs=20,imm=0) R6=ctx(off=0,imm=0) R7=scalar() R8=0 R9=scalar(id=106) R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64= fp-72=00000000 fp-80=00000000 fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; }
1860: (7b) *(u64 *)(r10 -176) = r0    ; R0=map_value(off=0,ks=4,vs=20,imm=0) R10=fp0 fp-176_w=map_value
; if (lru_map && !(vip_info->flags & F_LRU_BYPASS) && !under_flood) {
1861: (79) r1 = *(u64 *)(r10 -152)    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0
1862: (15) if r1 == 0x0 goto pc+18    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0)
; if (lru_map && !(vip_info->flags & F_LRU_BYPASS) && !under_flood) {
1863: (79) r1 = *(u64 *)(r10 -144)    ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
1864: (61) r1 = *(u32 *)(r1 +0)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (lru_map && !(vip_info->flags & F_LRU_BYPASS) && !under_flood) {
1865: (57) r1 &= 2                    ; R1_w=scalar(umax=2,var_off=(0x0; 0x2))
1866: (77) r1 >>= 1                   ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
; if (lru_map && !(vip_info->flags & F_LRU_BYPASS) && !under_flood) {
1867: (4f) r8 |= r1                   ; R1_w=scalar(umax=1,var_off=(0x0; 0x1)) R8_w=scalar()
1868: (55) if r8 != 0x0 goto pc+12    ; R8_w=0
; if (pckt->flow.proto == IPPROTO_UDP) {
1869: (71) r1 = *(u8 *)(r10 -44)      ; R1=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (pckt->flow.proto == IPPROTO_UDP) {
1870: (55) if r1 != 0x11 goto pc+1    ; R1=17
; new_dst_lru.atime = cur_time;
1871: (7b) *(u64 *)(r10 -8) = r9      ; R9=scalar(id=106) R10=fp0 fp-8_w=mmmmmmmm
; new_dst_lru.pos = key;
1872: (61) r1 = *(u32 *)(r10 -20)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; new_dst_lru.pos = key;
1873: (63) *(u32 *)(r10 -16) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-16=
1874: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; new_dst_lru.pos = key;
1875: (07) r2 += -80                  ; R2_w=fp-80
1876: (bf) r3 = r10                   ; R3_w=fp0 R10=fp0
1877: (07) r3 += -16                  ; R3_w=fp-16
; bpf_map_update_elem(lru_map, &pckt->flow, &new_dst_lru, BPF_ANY);
1878: (79) r1 = *(u64 *)(r10 -152)    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0
1879: (b7) r4 = 0                     ; R4_w=0
1880: (85) call bpf_map_update_elem#2
1881: safe

from 1870 to 1872: R0=map_value(off=0,ks=4,vs=20,imm=0) R1=scalar(umax=255,var_off=(0x0; 0xff)) R6=ctx(off=0,imm=0) R7=scalar() R8=0 R9=scalar(id=106) R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64= fp-72=00000000 fp-80=00000000 fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=map_value
; new_dst_lru.pos = key;
1872: (61) r1 = *(u32 *)(r10 -20)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; new_dst_lru.pos = key;
1873: (63) *(u32 *)(r10 -16) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-16=
1874: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; new_dst_lru.pos = key;
1875: (07) r2 += -80                  ; R2_w=fp-80
1876: (bf) r3 = r10                   ; R3_w=fp0 R10=fp0
1877: (07) r3 += -16                  ; R3_w=fp-16
; bpf_map_update_elem(lru_map, &pckt->flow, &new_dst_lru, BPF_ANY);
1878: (79) r1 = *(u64 *)(r10 -152)    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0
1879: (b7) r4 = 0                     ; R4_w=0
1880: (85) call bpf_map_update_elem#2
1881: safe

from 1868 to 1881: R0=map_value(off=0,ks=4,vs=20,imm=0) R1_w=scalar(umax=1,var_off=(0x0; 0x1)) R6=ctx(off=0,imm=0) R7=scalar() R8_w=scalar() R9=scalar(id=106) R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64= fp-72=00000000 fp-80=00000000 fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176_w=map_value
1881: (05) goto pc+0
frame -168: propagating fp0
last_idx 1882 first_idx 1860
regs=0 stack=100000 before 1881: (05) goto pc+0
regs=0 stack=100000 before 1868: (55) if r8 != 0x0 goto pc+12
regs=0 stack=100000 before 1867: (4f) r8 |= r1
regs=0 stack=100000 before 1866: (77) r1 >>= 1
regs=0 stack=100000 before 1865: (57) r1 &= 2
regs=0 stack=100000 before 1864: (61) r1 = *(u32 *)(r1 +0)
regs=0 stack=100000 before 1863: (79) r1 = *(u64 *)(r10 -144)
regs=0 stack=100000 before 1862: (15) if r1 == 0x0 goto pc+18
regs=0 stack=100000 before 1861: (79) r1 = *(u64 *)(r10 -152)
regs=0 stack=100000 before 1860: (7b) *(u64 *)(r10 -176) = r0
parent didn't have regs=0 stack=100000 marks: R0_rw=map_value(off=0,ks=4,vs=20,imm=0) R6_r=ctx(off=0,imm=0) R7=scalar() R8_r=0 R9_r=scalar(id=106) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-24_r=mmmm???? fp-32_r=mmmm???? fp-40_r= fp-48_r= fp-56_r=mmmmmmmm fp-64_r= fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1845 first_idx 1838
regs=0 stack=100000 before 1845: (55) if r0 != 0x0 goto pc+14
regs=0 stack=100000 before 1844: (85) call bpf_map_lookup_elem#1
regs=0 stack=100000 before 1842: (18) r1 = 0xffffaeba8c207000
regs=0 stack=100000 before 1841: (07) r2 += -20
regs=0 stack=100000 before 1840: (bf) r2 = r10
regs=0 stack=100000 before 1839: (63) *(u32 *)(r10 -40) = r1
regs=0 stack=100000 before 1838: (61) r1 = *(u32 *)(r10 -20)
parent didn't have regs=0 stack=100000 marks: R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar() R6_r=ctx(off=0,imm=0) R7=scalar() R8_r=0 R9_r=scalar(id=106) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-24_r=mmmm???? fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r= fp-56_r=mmmmmmmm fp-64_r= fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1837 first_idx 1826
regs=0 stack=100000 before 1837: (7b) *(u64 *)(r0 +8) = r1
regs=0 stack=100000 before 1836: (07) r1 += 1
regs=0 stack=100000 before 1835: (79) r1 = *(u64 *)(r0 +8)
regs=0 stack=100000 before 1834: (15) if r0 == 0x0 goto pc+3
regs=0 stack=100000 before 1833: (85) call bpf_map_lookup_elem#1
regs=0 stack=100000 before 1831: (18) r1 = 0xffffa03499be8000
regs=0 stack=100000 before 1830: (07) r2 += -28
regs=0 stack=100000 before 1829: (bf) r2 = r10
regs=0 stack=100000 before 1828: (62) *(u32 *)(r10 -28) = 521
regs=0 stack=100000 before 1827: (05) goto pc+0
regs=0 stack=100000 before 1826: (55) if r1 != 0x0 goto pc+12
parent didn't have regs=0 stack=100000 marks: R0_w=map_value(off=0,ks=4,vs=4,imm=0) R1_rw=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6_r=ctx(off=0,imm=0) R7=scalar() R8_r=0 R9_r=scalar(id=106) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-24_r=mmmm???? fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r= fp-56_r=mmmmmmmm fp-64_r= fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1825 first_idx 1815
regs=0 stack=100000 before 1825: (63) *(u32 *)(r10 -20) = r1
regs=0 stack=100000 before 1824: (61) r1 = *(u32 *)(r0 +0)
regs=0 stack=100000 before 1823: (15) if r0 == 0x0 goto pc+33
regs=0 stack=100000 before 1822: (85) call bpf_map_lookup_elem#1
regs=0 stack=100000 before 1820: (18) r1 = 0xffffaebaa0631000
regs=0 stack=100000 before 1819: (07) r2 += -20
regs=0 stack=100000 before 1818: (bf) r2 = r10
regs=0 stack=100000 before 1817: (63) *(u32 *)(r10 -20) = r2
regs=0 stack=100000 before 1816: (0f) r2 += r1
regs=0 stack=100000 before 1815: (97) r2 %= 65537
parent didn't have regs=0 stack=100000 marks: R0=scalar(umax=15,var_off=(0x0; 0xf)) R1_rw=scalar(umax=281479271612415,var_off=(0x0; 0x1ffffffffffff)) R2_rw=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3=scalar(id=129) R4_w=scalar(umax=16777215,var_off=(0x0; 0xffffff)) R5=scalar(id=128) R6_r=ctx(off=0,imm=0) R7=scalar() R8_r=0 R9_r=scalar(id=106) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r= fp-56_r=mmmmmmmm fp-64_r= fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1814 first_idx 1802
regs=0 stack=100000 before 1814: (05) goto pc+0
regs=0 stack=100000 before 1813: (bc) w2 = w2
regs=0 stack=100000 before 1812: (27) r1 *= 65537
regs=0 stack=100000 before 1811: (61) r1 = *(u32 *)(r1 +4)
regs=0 stack=100000 before 1810: (79) r1 = *(u64 *)(r10 -144)
regs=0 stack=100000 before 1809: (1f) r2 -= r1
regs=0 stack=100000 before 1808: (af) r2 ^= r3
regs=0 stack=100000 before 1807: (4f) r1 |= r4
regs=0 stack=100000 before 1806: (67) r1 <<= 24
regs=0 stack=100000 before 1805: (bf) r1 = r2
regs=0 stack=100000 before 1804: (77) r4 >>= 8
regs=0 stack=100000 before 1803: (bc) w4 = w2
regs=0 stack=100000 before 1802: (05) goto pc+0
parent didn't have regs=0 stack=100000 marks: R0=scalar(umax=15,var_off=(0x0; 0xf)) R1_w=scalar() R2_rw=scalar() R3_r=scalar(id=129) R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff)) R5=scalar(id=128) R6_r=ctx(off=0,imm=0) R7=scalar() R8_r=0 R9_r=scalar(id=106) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r= fp-56_r=mmmmmmmm fp-64_r= fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1801 first_idx 1793
regs=0 stack=100000 before 1801: (05) goto pc+0
regs=0 stack=100000 before 1800: (05) goto pc+0
regs=0 stack=100000 before 1799: (1f) r2 -= r1
regs=0 stack=100000 before 1798: (af) r2 ^= r5
regs=0 stack=100000 before 1797: (4f) r1 |= r4
regs=0 stack=100000 before 1796: (67) r1 <<= 14
regs=0 stack=100000 before 1795: (bf) r1 = r2
regs=0 stack=100000 before 1794: (77) r4 >>= 18
regs=0 stack=100000 before 1793: (bc) w4 = w2
parent didn't have regs=0 stack=100000 marks: R0_w=scalar(umax=15,var_off=(0x0; 0xf)) R1=scalar(umax=65535,var_off=(0x0; 0xffff)) R2_rw=scalar() R3_r=scalar(id=129) R4=scalar(id=127) R5_r=scalar(id=128) R6_r=ctx(off=0,imm=0) R7_w=scalar() R8_r=0 R9_r=scalar(id=106) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r= fp-56_r=mmmmmmmm fp-64_r= fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1792 first_idx 1782
regs=0 stack=100000 before 1792: (05) goto pc+0
regs=0 stack=100000 before 1791: (1f) r2 -= r7
regs=0 stack=100000 before 1790: (af) r2 ^= r4
regs=0 stack=100000 before 1789: (bf) r2 = r3
regs=0 stack=100000 before 1788: (4f) r7 |= r0
regs=0 stack=100000 before 1787: (67) r7 <<= 4
regs=0 stack=100000 before 1786: (bf) r7 = r3
regs=0 stack=100000 before 1785: (77) r0 >>= 28
regs=0 stack=100000 before 1784: (bc) w0 = w3
regs=0 stack=100000 before 1783: (05) goto pc+0
regs=0 stack=100000 before 1782: (05) goto pc+0
parent didn't have regs=0 stack=100000 marks: R0_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R1=scalar(umax=65535,var_off=(0x0; 0xffff)) R2=scalar(id=126) R3_rw=scalar() R4_r=scalar(id=127) R5_r=scalar(id=128) R6_r=ctx(off=0,imm=0) R7_w=scalar() R8_r=0 R9_r=scalar(id=106) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r= fp-56_r=mmmmmmmm fp-64_r= fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1781 first_idx 1771
regs=0 stack=100000 before 1781: (05) goto pc+0
regs=0 stack=100000 before 1780: (1f) r3 -= r7
regs=0 stack=100000 before 1779: (af) r3 ^= r2
regs=0 stack=100000 before 1778: (bf) r3 = r5
regs=0 stack=100000 before 1777: (4f) r7 |= r0
regs=0 stack=100000 before 1776: (67) r7 <<= 16
regs=0 stack=100000 before 1775: (bf) r7 = r5
regs=0 stack=100000 before 1774: (77) r0 >>= 16
regs=0 stack=100000 before 1773: (bc) w0 = w5
regs=0 stack=100000 before 1772: (05) goto pc+0
regs=0 stack=100000 before 1771: (05) goto pc+0
parent didn't have regs=0 stack=100000 marks: R0_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff)) R1=scalar(umax=65535,var_off=(0x0; 0xffff)) R2_r=scalar(id=126) R3=scalar(id=125,smin=-525483785,smax=3769483510) R4_r=scalar(id=127) R5_rw=scalar() R6_r=ctx(off=0,imm=0) R7_w=scalar() R8_r=0 R9_r=scalar(id=106) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r= fp-56_r=mmmmmmmm fp-64_r= fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1770 first_idx 1760
regs=0 stack=100000 before 1770: (05) goto pc+0
regs=0 stack=100000 before 1769: (1f) r5 -= r7
regs=0 stack=100000 before 1768: (af) r5 ^= r3
regs=0 stack=100000 before 1767: (bf) r5 = r4
regs=0 stack=100000 before 1766: (4f) r7 |= r0
regs=0 stack=100000 before 1765: (67) r7 <<= 25
regs=0 stack=100000 before 1764: (bf) r7 = r4
regs=0 stack=100000 before 1763: (77) r0 >>= 7
regs=0 stack=100000 before 1762: (bc) w0 = w4
regs=0 stack=100000 before 1761: (05) goto pc+0
regs=0 stack=100000 before 1760: (05) goto pc+0
parent didn't have regs=0 stack=100000 marks: R0_w=scalar(umax=2047,var_off=(0x0; 0x7ff)) R1=scalar(umax=65535,var_off=(0x0; 0xffff)) R2_r=scalar(id=126) R3_r=scalar(id=125,smin=-525483785,smax=3769483510) R4_rw=scalar() R5_w=P-525483785 R6_r=ctx(off=0,imm=0) R7_w=scalar() R8_r=0 R9_r=scalar(id=106) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r= fp-56_r=mmmmmmmm fp-64_r= fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1759 first_idx 1748
regs=0 stack=100000 before 1759: (05) goto pc+0
regs=0 stack=100000 before 1758: (1f) r4 -= r7
regs=0 stack=100000 before 1757: (af) r4 ^= r5
regs=0 stack=100000 before 1756: (bf) r4 = r2
regs=0 stack=100000 before 1755: (07) r5 += -525483785
regs=0 stack=100000 before 1754: (4f) r7 |= r0
regs=0 stack=100000 before 1753: (67) r7 <<= 11
regs=0 stack=100000 before 1752: (bf) r7 = r2
regs=0 stack=100000 before 1751: (77) r0 >>= 53
regs=0 stack=100000 before 1750: (67) r0 <<= 32
regs=0 stack=100000 before 1749: (bf) r0 = r2
regs=0 stack=100000 before 1748: (05) goto pc+0
parent didn't have regs=0 stack=100000 marks: R0=scalar(id=106) R1=scalar(umax=65535,var_off=(0x0; 0xffff)) R2_rw=scalar() R3_r=scalar(id=125,smin=-525483785,smax=3769483510) R4_w=scalar() R5_r=P0 R6_r=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=16,imm=0) R8_r=0 R9_r=scalar(id=106) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r= fp-56_r=mmmmmmmm fp-64_r= fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1747 first_idx 1738
regs=0 stack=100000 before 1747: (05) goto pc+0
regs=0 stack=100000 before 1746: (1f) r2 -= r4
regs=0 stack=100000 before 1745: (a7) r2 ^= -525483785
regs=0 stack=100000 before 1744: (bf) r2 = r3
regs=0 stack=100000 before 1743: (4f) r4 |= r2
regs=0 stack=100000 before 1742: (67) r4 <<= 14
regs=0 stack=100000 before 1741: (bf) r4 = r3
regs=0 stack=100000 before 1740: (77) r2 >>= 18
regs=0 stack=100000 before 1739: (bc) w2 = w3
regs=0 stack=100000 before 1738: (05) goto pc+0
parent didn't have regs=0 stack=100000 marks: R0=scalar(id=106) R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R2=scalar(umin=1000000001) R3_rw=scalar(smin=-525483785,smax=3769483510) R5_rw=P0 R6_r=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=16,imm=0) R8_r=0 R9_r=scalar(id=106) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r= fp-56_r=mmmmmmmm fp-64_r= fp-72_rw=00000000 fp-80_rw=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1737 first_idx 1729
regs=0 stack=100000 before 1737: (05) goto pc+0
regs=0 stack=100000 before 1736: (05) goto pc+0
regs=0 stack=100000 before 1735: (07) r3 += -525483785
regs=0 stack=100000 before 1734: (61) r3 = *(u32 *)(r10 -48)
regs=0 stack=100000 before 1733: (7b) *(u64 *)(r10 -72) = r5
regs=0 stack=100000 before 1732: (7b) *(u64 *)(r10 -80) = r5
regs=0 stack=100000 before 1731: (b7) r5 = 0
regs=0 stack=100000 before 1730: (6b) *(u16 *)(r10 -48) = r1
regs=0 stack=100000 before 1729: (69) r1 = *(u16 *)(r10 -46)
parent didn't have regs=0 stack=100000 marks: R0=scalar(id=106) R1=scalar(umax=8,var_off=(0x0; 0x8)) R2=scalar(umin=1000000001) R6_r=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=16,imm=0) R8_r=0 R9_r=scalar(id=106) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72=mmmmmmmm fp-80= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1726 first_idx 1726
regs=0 stack=100000 before 1726: (55) if r1 != 0x0 goto pc+2
parent didn't have regs=0 stack=100000 marks: R0=scalar(id=106) R1_rw=scalar(umax=8,var_off=(0x0; 0x8)) R2=scalar(umin=1000000001) R6_r=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=16,imm=0) R8_rw=0 R9_r=scalar(id=106) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1725 first_idx 1713
regs=0 stack=100000 before 1725: (57) r1 &= 8
regs=0 stack=100000 before 1724: (61) r1 = *(u32 *)(r1 +0)
regs=0 stack=100000 before 1723: (79) r1 = *(u64 *)(r10 -144)
regs=0 stack=100000 before 1722: (b7) r8 = 0
regs=0 stack=100000 before 1717: (05) goto pc+4
regs=0 stack=100000 before 1716: (7a) *(u64 *)(r7 +0) = 1
regs=0 stack=100000 before 1715: (05) goto pc+0
regs=0 stack=100000 before 1714: (7b) *(u64 *)(r7 +8) = r9
regs=0 stack=100000 before 1713: (2d) if r1 > r2 goto pc+4
parent didn't have regs=0 stack=100000 marks: R0_w=scalar(id=106) R1_rw=1000000001 R2_rw=scalar() R6_r=ctx(off=0,imm=0) R7_rw=map_value(off=0,ks=4,vs=16,imm=0) R8_w=1 R9_rw=scalar(id=106) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1712 first_idx 1704
regs=0 stack=100000 before 1712: (b7) r1 = 1000000001
regs=0 stack=100000 before 1711: (1f) r2 -= r1
regs=0 stack=100000 before 1710: (bf) r2 = r9
regs=0 stack=100000 before 1709: (79) r1 = *(u64 *)(r7 +8)
regs=0 stack=100000 before 1708: (bf) r9 = r0
regs=0 stack=100000 before 1707: (85) call bpf_ktime_get_ns#5
regs=0 stack=100000 before 1706: (15) if r7 == 0x0 goto pc+16
regs=0 stack=100000 before 1705: (b7) r8 = 1
regs=0 stack=100000 before 1704: (bf) r7 = r0
parent didn't have regs=0 stack=100000 marks: R0_rw=map_value_or_null(id=105,off=0,ks=4,vs=16,imm=0) R6_r=ctx(off=0,imm=0) R7=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9_w=P0 R10=fp0 fp-8_rw=00000000 fp-16_rw=00000000 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1703 first_idx 1694
regs=0 stack=100000 before 1703: (85) call bpf_map_lookup_elem#1
regs=0 stack=100000 before 1701: (18) r1 = 0xffffa03499be8000
regs=0 stack=100000 before 1700: (07) r2 += -28
regs=0 stack=100000 before 1699: (bf) r2 = r10
regs=0 stack=100000 before 1698: (62) *(u32 *)(r10 -28) = 514
regs=0 stack=100000 before 1697: (05) goto pc+0
regs=0 stack=100000 before 1696: (7b) *(u64 *)(r10 -16) = r9
regs=0 stack=100000 before 1695: (7b) *(u64 *)(r10 -8) = r9
regs=0 stack=100000 before 1694: (b7) r9 = 0
parent didn't have regs=0 stack=100000 marks: R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar() R2_w=scalar(umax=2,var_off=(0x0; 0x2)) R6_r=ctx(off=0,imm=0) R7=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16=????mmmm fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1693 first_idx 1683
regs=0 stack=100000 before 1693: (7b) *(u64 *)(r0 +0) = r1
regs=0 stack=100000 before 1692: (07) r1 += 1
regs=0 stack=100000 before 1691: (79) r1 = *(u64 *)(r0 +0)
regs=0 stack=100000 before 1690: (0f) r0 += r1
regs=0 stack=100000 before 1689: (67) r1 <<= 3
regs=0 stack=100000 before 1688: (b7) r1 = 0
regs=0 stack=100000 before 1687: (15) if r2 == 0x0 goto pc+1
regs=0 stack=100000 before 1686: (b7) r1 = 1
regs=0 stack=100000 before 1685: (57) r2 &= 2
regs=0 stack=100000 before 1684: (71) r2 = *(u8 *)(r10 -36)
regs=0 stack=100000 before 1683: (15) if r0 == 0x0 goto pc+173
parent didn't have regs=0 stack=100000 marks: R0_rw=map_value_or_null(id=104,off=0,ks=4,vs=16,imm=0) R6_r=ctx(off=0,imm=0) R7=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16=????mmmm fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1682 first_idx 1674
regs=0 stack=100000 before 1682: (85) call bpf_map_lookup_elem#1
regs=0 stack=100000 before 1680: (18) r1 = 0xffffa03499be8000
regs=0 stack=100000 before 1679: (07) r2 += -16
regs=0 stack=100000 before 1678: (bf) r2 = r10
regs=0 stack=100000 before 1677: (62) *(u32 *)(r10 -16) = 513
regs=0 stack=100000 before 1676: (05) goto pc+0
regs=0 stack=100000 before 1675: (55) if r1 != 0x6 goto pc+18
regs=0 stack=100000 before 1674: (71) r1 = *(u8 *)(r10 -44)
parent didn't have regs=0 stack=100000 marks: R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar(umax=2,var_off=(0x0; 0x2)) R6_r=ctx(off=0,imm=0) R7=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16_r=????mmmm fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1647 first_idx 1644
regs=0 stack=100000 before 1647: (55) if r1 != 0x0 goto pc+26
regs=0 stack=100000 before 1646: (57) r1 &= 2
regs=0 stack=100000 before 1645: (61) r1 = *(u32 *)(r9 +0)
regs=0 stack=100000 before 1644: (55) if r1 != 0x0 goto pc+29
parent already had regs=0 stack=100000 marks: R0=map_value(off=0,ks=4,vs=16,imm=0) R1_rw=scalar(umax=2,var_off=(0x0; 0x2)) R6_r=ctx(off=0,imm=0) R7=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9_rw=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16_r=????mmmm fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_rw=P
1882: safe

from 1862 to 1881: R0=map_value(off=0,ks=4,vs=20,imm=0) R1=map_ptr(off=0,ks=40,vs=16,imm=0) R6=ctx(off=0,imm=0) R7=scalar() R8=0 R9=scalar(id=106) R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64= fp-72=00000000 fp-80=00000000 fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=map_value
1881: (05) goto pc+0
frame -168: propagating fp0
last_idx 1882 first_idx 1881
regs=0 stack=100000 before 1881: (05) goto pc+0
parent didn't have regs=0 stack=100000 marks: R0=map_value(off=0,ks=4,vs=20,imm=0) R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R6_r=ctx(off=0,imm=0) R7=scalar() R8=0 R9=scalar(id=106) R10=fp0 fp-8=00000000 fp-16_r=00000000 fp-24=mmmm???? fp-32_r=mmmm???? fp-40_r= fp-48_r= fp-56=mmmmmmmm fp-64= fp-72=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144=map_value fp-152=map_ptr fp-160_r=map_value fp-168_r=P fp-176_rw=map_value
last_idx 1862 first_idx 1860
regs=0 stack=100000 before 1862: (15) if r1 == 0x0 goto pc+18
regs=0 stack=100000 before 1861: (79) r1 = *(u64 *)(r10 -152)
regs=0 stack=100000 before 1860: (7b) *(u64 *)(r10 -176) = r0
parent already had regs=0 stack=100000 marks: R0_rw=map_value(off=0,ks=4,vs=20,imm=0) R6_r=ctx(off=0,imm=0) R7=scalar() R8_r=0 R9_r=scalar(id=106) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-24_r=mmmm???? fp-32_r=mmmm???? fp-40_r= fp-48_r= fp-56_r=mmmmmmmm fp-64_r= fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
1882: safe
frame -168: propagating fp0
last_idx 1838 first_idx 1826
regs=0 stack=100000 before 1834: (15) if r0 == 0x0 goto pc+3
regs=0 stack=100000 before 1833: (85) call bpf_map_lookup_elem#1
regs=0 stack=100000 before 1831: (18) r1 = 0xffffa03499be8000
regs=0 stack=100000 before 1830: (07) r2 += -28
regs=0 stack=100000 before 1829: (bf) r2 = r10
regs=0 stack=100000 before 1828: (62) *(u32 *)(r10 -28) = 521
regs=0 stack=100000 before 1827: (05) goto pc+0
regs=0 stack=100000 before 1826: (55) if r1 != 0x0 goto pc+12
parent already had regs=0 stack=100000 marks: R0_w=map_value(off=0,ks=4,vs=4,imm=0) R1_rw=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6_r=ctx(off=0,imm=0) R7=scalar() R8_r=0 R9_r=scalar(id=106) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-24_r=mmmm???? fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r= fp-56_r=mmmmmmmm fp-64_r= fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P

from 1834 to 1838: safe

from 1826 to 1839: R0=map_value(off=0,ks=4,vs=4,imm=0) R1=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6=ctx(off=0,imm=0) R7=scalar() R8=0 R9=scalar(id=106) R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40=mmmmmmmm fp-48= fp-56=mmmmmmmm fp-64= fp-72=00000000 fp-80=00000000 fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; pckt->real_index = key;
1839: (63) *(u32 *)(r10 -40) = r1     ; R1=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1840: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1841: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1842: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1844: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=135,off=0,ks=4,vs=20,imm=0)
; if (!(*real)) {
1845: (55) if r0 != 0x0 goto pc+14    ; R0=0
1846: (05) goto pc+0
1847: safe
frame -168: propagating fp0
last_idx 1860 first_idx 1845
regs=0 stack=100000 before 1845: (55) if r0 != 0x0 goto pc+14
parent didn't have regs=0 stack=100000 marks: R0_rw=map_value_or_null(id=135,off=0,ks=4,vs=20,imm=0) R6_r=ctx(off=0,imm=0) R7=scalar() R8_r=0 R9_r=scalar(id=106) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-24_r=mmmm???? fp-32_r=mmmm???? fp-40_r= fp-48_r= fp-56_r=mmmmmmmm fp-64_r= fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1844 first_idx 1826
regs=0 stack=100000 before 1844: (85) call bpf_map_lookup_elem#1
regs=0 stack=100000 before 1842: (18) r1 = 0xffffaeba8c207000
regs=0 stack=100000 before 1841: (07) r2 += -20
regs=0 stack=100000 before 1840: (bf) r2 = r10
regs=0 stack=100000 before 1839: (63) *(u32 *)(r10 -40) = r1
regs=0 stack=100000 before 1826: (55) if r1 != 0x0 goto pc+12
parent already had regs=0 stack=100000 marks: R0_w=map_value(off=0,ks=4,vs=4,imm=0) R1_rw=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6_r=ctx(off=0,imm=0) R7=scalar() R8_r=0 R9_r=scalar(id=106) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-24_r=mmmm???? fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r= fp-56_r=mmmmmmmm fp-64_r= fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P

from 1845 to 1860: safe

from 1823 to 1857: safe

from 1713 to 1718: R0=scalar(id=106) R1=1000000001 R2=scalar(umax=1000000000,var_off=(0x0; 0x3fffffff)) R6=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=16,imm=0) R8=1 R9=scalar(id=106) R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; conn_rate_stats->v1 += 1;
1718: (79) r1 = *(u64 *)(r7 +0)       ; R1_w=scalar() R7=map_value(off=0,ks=4,vs=16,imm=0)
1719: (07) r1 += 1                    ; R1_w=scalar()
1720: (7b) *(u64 *)(r7 +0) = r1       ; R1=scalar() R7=map_value(off=0,ks=4,vs=16,imm=0)
; if (conn_rate_stats->v1 > MAX_CONN_RATE) {
1721: (25) if r1 > 0x1e848 goto pc+1          ; R1=scalar(umax=125000,var_off=(0x0; 0x1ffff))
1722: (b7) r8 = 0                     ; R8_w=0
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
1723: (79) r1 = *(u64 *)(r10 -144)    ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
1724: (61) r1 = *(u32 *)(r1 +0)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
1725: (57) r1 &= 8
frame -168: propagating fp0
last_idx 1726 first_idx 1721
regs=0 stack=100000 before 1725: (57) r1 &= 8
regs=0 stack=100000 before 1724: (61) r1 = *(u32 *)(r1 +0)
regs=0 stack=100000 before 1723: (79) r1 = *(u64 *)(r10 -144)
regs=0 stack=100000 before 1722: (b7) r8 = 0
regs=0 stack=100000 before 1721: (25) if r1 > 0x1e848 goto pc+1
parent didn't have regs=0 stack=100000 marks: R0=scalar(id=106) R1_rw=scalar() R2=scalar(umax=1000000000,var_off=(0x0; 0x3fffffff)) R6_r=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=16,imm=0) R8=1 R9_r=scalar(id=106) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1720 first_idx 1713
regs=0 stack=100000 before 1720: (7b) *(u64 *)(r7 +0) = r1
regs=0 stack=100000 before 1719: (07) r1 += 1
regs=0 stack=100000 before 1718: (79) r1 = *(u64 *)(r7 +0)
regs=0 stack=100000 before 1713: (2d) if r1 > r2 goto pc+4
parent already had regs=0 stack=100000 marks: R0_w=scalar(id=106) R1_rw=1000000001 R2_rw=scalar() R6_r=ctx(off=0,imm=0) R7_rw=map_value(off=0,ks=4,vs=16,imm=0) R8_w=1 R9_rw=scalar(id=106) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
1726: safe

from 1721 to 1723: R0=scalar(id=106) R1=scalar(umin=125001) R2=scalar(umax=1000000000,var_off=(0x0; 0x3fffffff)) R6=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=16,imm=0) R8=1 R9=scalar(id=106) R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
1723: (79) r1 = *(u64 *)(r10 -144)    ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
1724: (61) r1 = *(u32 *)(r1 +0)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
1725: (57) r1 &= 8
frame -168: propagating fp0
last_idx 1726 first_idx 1721
regs=0 stack=100000 before 1725: (57) r1 &= 8
regs=0 stack=100000 before 1724: (61) r1 = *(u32 *)(r1 +0)
regs=0 stack=100000 before 1723: (79) r1 = *(u64 *)(r10 -144)
regs=0 stack=100000 before 1721: (25) if r1 > 0x1e848 goto pc+1
parent already had regs=0 stack=100000 marks: R0=scalar(id=106) R1_rw=scalar() R2=scalar(umax=1000000000,var_off=(0x0; 0x3fffffff)) R6_r=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=16,imm=0) R8_r=1 R9_r=scalar(id=106) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
1726: safe

from 1706 to 1723: R0=0 R6=ctx(off=0,imm=0) R7_w=0 R8_w=1 R9=P0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
1723: (79) r1 = *(u64 *)(r10 -144)    ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
1724: (61) r1 = *(u32 *)(r1 +0)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
1725: (57) r1 &= 8
frame -168: propagating fp0
last_idx 1726 first_idx 1704
regs=0 stack=100000 before 1725: (57) r1 &= 8
regs=0 stack=100000 before 1724: (61) r1 = *(u32 *)(r1 +0)
regs=0 stack=100000 before 1723: (79) r1 = *(u64 *)(r10 -144)
regs=0 stack=100000 before 1706: (15) if r7 == 0x0 goto pc+16
regs=0 stack=100000 before 1705: (b7) r8 = 1
regs=0 stack=100000 before 1704: (bf) r7 = r0
parent already had regs=0 stack=100000 marks: R0_rw=map_value_or_null(id=105,off=0,ks=4,vs=16,imm=0) R6_r=ctx(off=0,imm=0) R7=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9_rw=P0 R10=fp0 fp-8_rw=00000000 fp-16_rw=00000000 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
1726: safe

from 1687 to 1689: R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=1 R2_w=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (pckt.flags & F_SYN_SET) {
1689: (67) r1 <<= 3                   ; R1_w=8
; 
1690: (0f) r0 += r1
last_idx 1690 first_idx 1683
regs=2 stack=0 before 1689: (67) r1 <<= 3
regs=2 stack=0 before 1687: (15) if r2 == 0x0 goto pc+1
regs=2 stack=0 before 1686: (b7) r1 = 1
1691: R0_w=map_value(off=8,ks=4,vs=16,imm=0) R1_w=P8
1691: (79) r1 = *(u64 *)(r0 +0)       ; R0_w=map_value(off=8,ks=4,vs=16,imm=0) R1_w=scalar()
1692: (07) r1 += 1                    ; R1_w=scalar()
1693: (7b) *(u64 *)(r0 +0) = r1
frame -168: propagating fp0
last_idx 1694 first_idx 1683
regs=0 stack=100000 before 1693: (7b) *(u64 *)(r0 +0) = r1
regs=0 stack=100000 before 1692: (07) r1 += 1
regs=0 stack=100000 before 1691: (79) r1 = *(u64 *)(r0 +0)
regs=0 stack=100000 before 1690: (0f) r0 += r1
regs=0 stack=100000 before 1689: (67) r1 <<= 3
regs=0 stack=100000 before 1687: (15) if r2 == 0x0 goto pc+1
regs=0 stack=100000 before 1686: (b7) r1 = 1
regs=0 stack=100000 before 1685: (57) r2 &= 2
regs=0 stack=100000 before 1684: (71) r2 = *(u8 *)(r10 -36)
regs=0 stack=100000 before 1683: (15) if r0 == 0x0 goto pc+173
parent already had regs=0 stack=100000 marks: R0_rw=map_value_or_null(id=104,off=0,ks=4,vs=16,imm=0) R6_r=ctx(off=0,imm=0) R7=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16=????mmmm fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
1694: safe

from 1683 to 1857: safe
frame -168: propagating fp0
last_idx 1694 first_idx 1674
regs=0 stack=100000 before 1675: (55) if r1 != 0x6 goto pc+18
regs=0 stack=100000 before 1674: (71) r1 = *(u8 *)(r10 -44)
parent already had regs=0 stack=100000 marks: R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar(umax=2,var_off=(0x0; 0x2)) R6_r=ctx(off=0,imm=0) R7=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16_r=????mmmm fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P

from 1675 to 1694: safe
frame -168: propagating fp0
last_idx 1674 first_idx 1644
regs=0 stack=100000 before 1644: (55) if r1 != 0x0 goto pc+29
parent already had regs=0 stack=100000 marks: R0=map_value(off=0,ks=4,vs=16,imm=0) R1_rw=scalar(umax=2,var_off=(0x0; 0x2)) R6_r=ctx(off=0,imm=0) R7=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9_rw=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16_r=????mmmm fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_rw=P

from 1644 to 1674: safe

from 640 to 1639: R0=map_value(off=0,ks=4,vs=16,imm=0) R1=scalar(umax=253,var_off=(0x0; 0xfd)) R6=ctx(off=0,imm=0) R7=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; 
1639: (79) r9 = *(u64 *)(r10 -144)    ; R9_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
; original_sport = pckt.flow.port16[0];
1640: (69) r1 = *(u16 *)(r10 -48)     ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
1641: (7b) *(u64 *)(r10 -168) = r1    ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-168_w=
1642: (71) r1 = *(u8 *)(r10 -36)      ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
1643: (57) r1 &= 2
frame -168: propagating fp0
last_idx 1644 first_idx 640
regs=0 stack=100000 before 1643: (57) r1 &= 2
regs=0 stack=100000 before 1642: (71) r1 = *(u8 *)(r10 -36)
regs=0 stack=100000 before 1641: (7b) *(u64 *)(r10 -168) = r1
regs=2 stack=0 before 1640: (69) r1 = *(u16 *)(r10 -48)
regs=0 stack=20 before 1639: (79) r9 = *(u64 *)(r10 -144)
regs=0 stack=20 before 640: (55) if r1 != 0x1 goto pc+998
parent already had regs=0 stack=0 marks: R0_rw=map_value(off=0,ks=4,vs=16,imm=0) R1_rw=scalar(umax=253,var_off=(0x0; 0xfd)) R6_r=ctx(off=0,imm=0) R7=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16_r=????mmmm fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168=
1644: safe

from 634 to 1857: safe

from 626 to 718: R0=map_value(off=0,ks=4,vs=16,imm=0) R1=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
718: (05) goto pc+0
; __u32 quic_packets_stats_key = 0;
719: (62) *(u32 *)(r10 -28) = 0       ; R10=fp0 fp-32=mmmm????
720: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
721: (07) r2 += -28                   ; R2_w=fp-28
; bpf_map_lookup_elem(&quic_stats_map, &quic_packets_stats_key);
722: (18) r1 = 0xffffa03587064800     ; R1_w=map_ptr(off=0,ks=4,vs=104,imm=0)
724: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=136,off=0,ks=4,vs=104,imm=0)
725: (bf) r9 = r0                     ; R0_w=map_value_or_null(id=136,off=0,ks=4,vs=104,imm=0) R9_w=map_value_or_null(id=136,off=0,ks=4,vs=104,imm=0)
; if (!quic_packets_stats) {
726: (15) if r9 == 0x0 goto pc+1130   ; R9_w=map_value(off=0,ks=4,vs=104,imm=0)
; bool is_icmp = (pckt->flags & F_ICMP);
727: (71) r2 = *(u8 *)(r10 -36)       ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; bool is_icmp = (pckt->flags & F_ICMP);
728: (57) r2 &= 1                     ; R2_w=scalar(umax=1,var_off=(0x0; 0x1))
729: (b7) r1 = 34                     ; R1=34
; if (is_ipv6) {
730: (15) if r2 == 0x0 goto pc+1      ; R2=scalar(umax=1,var_off=(0x0; 0x1))
731: (b7) r1 = 62                     ; R1_w=62
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
732: (0f) r7 += r1
last_idx 732 first_idx 730
regs=2 stack=0 before 731: (b7) r1 = 62
733: R1_w=P62 R7_w=pkt(off=62,r=82,imm=0)
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
733: (bf) r1 = r7                     ; R1_w=pkt(off=62,r=82,imm=0) R7_w=pkt(off=62,r=82,imm=0)
734: (07) r1 += 9                     ; R1_w=pkt(off=71,r=82,imm=0)
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
735: (2d) if r1 > r8 goto pc+900      ; R1_w=pkt(off=71,r=82,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
736: (71) r2 = *(u8 *)(r7 +8)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=62,r=82,imm=0)
737: (67) r2 <<= 56                   ; R2_w=scalar(smax=9151314442816847872,umax=18374686479671623680,var_off=(0x0; 0xff00000000000000),s32_min=0,s32_max=0,u32_max=0)
738: (c7) r2 s>>= 56                  ; R2=scalar(smin=-128,smax=127)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
739: (65) if r2 s> 0xffffffff goto pc+30      ; R2=scalar(umin=18446744073709551488,var_off=(0xffffffffffffff80; 0x7f),u32_min=-128)
; if (quic_data + sizeof(struct quic_long_header) > data_end) {
740: (bf) r1 = r7                     ; R1_w=pkt(off=62,r=82,imm=0) R7=pkt(off=62,r=82,imm=0)
741: (07) r1 += 22                    ; R1_w=pkt(off=84,r=82,imm=0)
; if (quic_data + sizeof(struct quic_long_header) > data_end) {
742: (2d) if r1 > r8 goto pc+893      ; R1_w=pkt(off=84,r=84,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_PACKET_TYPE_MASK) < QUIC_HANDSHAKE) {
743: (57) r2 &= 32                    ; R2_w=scalar(umax=32,var_off=(0x0; 0x20))
; if ((*pkt_type & QUIC_PACKET_TYPE_MASK) < QUIC_HANDSHAKE) {
744: (15) if r2 == 0x0 goto pc+817    ; R2_w=scalar(umax=32,var_off=(0x0; 0x20))
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
745: (71) r1 = *(u8 *)(r7 +13)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=62,r=84,imm=0)
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
746: (07) r7 += 14                    ; R7=pkt(off=76,r=84,imm=0)
747: (25) if r1 > 0x7 goto pc+26      ; R1=scalar(umax=7,var_off=(0x0; 0x7))
748: (05) goto pc+887
; 
1636: (79) r1 = *(u64 *)(r9 +0)       ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
1637: (07) r1 += 1                    ; R1_w=scalar()
1638: (7b) *(u64 *)(r9 +0) = r1       ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
1639: (79) r9 = *(u64 *)(r10 -144)    ; R9_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
; original_sport = pckt.flow.port16[0];
1640: (69) r1 = *(u16 *)(r10 -48)     ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
1641: (7b) *(u64 *)(r10 -168) = r1    ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-168_w=
1642: (71) r1 = *(u8 *)(r10 -36)      ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
1643: (57) r1 &= 2
frame -168: propagating fp0
last_idx 1644 first_idx 747
regs=0 stack=100000 before 1643: (57) r1 &= 2
regs=0 stack=100000 before 1642: (71) r1 = *(u8 *)(r10 -36)
regs=0 stack=100000 before 1641: (7b) *(u64 *)(r10 -168) = r1
regs=2 stack=0 before 1640: (69) r1 = *(u16 *)(r10 -48)
regs=0 stack=20 before 1639: (79) r9 = *(u64 *)(r10 -144)
regs=0 stack=20 before 1638: (7b) *(u64 *)(r9 +0) = r1
regs=0 stack=20 before 1637: (07) r1 += 1
regs=0 stack=20 before 1636: (79) r1 = *(u64 *)(r9 +0)
regs=0 stack=20 before 748: (05) goto pc+887
regs=0 stack=20 before 747: (25) if r1 > 0x7 goto pc+26
parent already had regs=0 stack=0 marks: R0=map_value(off=0,ks=4,vs=104,imm=0) R1_rw=scalar(umax=255,var_off=(0x0; 0xff)) R2_w=scalar(umax=32,var_off=(0x0; 0x20)) R6_r=ctx(off=0,imm=0) R7_w=pkt(off=76,r=84,imm=0) R8=pkt_end(off=0,imm=0) R9_r=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16_r=????mmmm fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168=
1644: safe

from 747 to 774: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(umin=8,umax=255,var_off=(0x0; 0xff)) R2=scalar(umax=32,var_off=(0x0; 0x20)) R6=ctx(off=0,imm=0) R7=pkt(off=76,r=84,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (!connId) {
774: (15) if r7 == 0x0 goto pc+861    ; R7=pkt(off=76,r=84,imm=0)
; __u8 connIdVersion = (connId[0] >> 6);
775: (71) r1 = *(u8 *)(r7 +0)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=76,r=84,imm=0)
776: (bf) r2 = r1                     ; R1_w=scalar(id=137,umax=255,var_off=(0x0; 0xff)) R2_w=scalar(id=137,umax=255,var_off=(0x0; 0xff))
777: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
; if (connIdVersion == QUIC_CONNID_VERSION_V1) {
778: (15) if r2 == 0x3 goto pc+798    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
779: (15) if r2 == 0x2 goto pc+809    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
780: (55) if r2 != 0x1 goto pc+855    ; R2_w=1
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
781: (57) r1 &= 63                    ; R1_w=scalar(umax=63,var_off=(0x0; 0x3f))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
782: (67) r1 <<= 10                   ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
783: (71) r8 = *(u8 *)(r7 +1)         ; R7=pkt(off=76,r=84,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
784: (67) r8 <<= 2                    ; R8_w=scalar(umax=1020,var_off=(0x0; 0x3fc))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
785: (4f) r8 |= r1                    ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00)) R8_w=scalar()
786: (18) r1 = 0x100000000            ; R1_w=4294967296
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
788: (71) r2 = *(u8 *)(r7 +2)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=76,r=84,imm=0)
789: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
790: (05) goto pc+806
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1597: (57) r2 &= 255                  ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
; 
1598: (4f) r8 |= r2                   ; R2_w=scalar(umax=3,var_off=(0x0; 0x3)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1599: (bf) r2 = r8                    ; R2_w=scalar(id=138) R8_w=scalar(id=138)
1600: (67) r2 <<= 32                  ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
1601: (c7) r2 s>>= 32                 ; R2_w=scalar(smin=-2147483648,smax=2147483647)
1602: (b7) r3 = 1                     ; R3_w=1
; if (qpr.server_id > 0) {
1603: (6d) if r3 s> r2 goto pc+32     ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1604: (77) r1 >>= 32                  ; R1_w=1
; if (cid_version == QUIC_CONNID_VERSION_V1) {
1605: (15) if r1 == 0x3 goto pc+5
last_idx 1605 first_idx 1597
regs=2 stack=0 before 1604: (77) r1 >>= 32
regs=2 stack=0 before 1603: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 1602: (b7) r3 = 1
regs=2 stack=0 before 1601: (c7) r2 s>>= 32
regs=2 stack=0 before 1600: (67) r2 <<= 32
regs=2 stack=0 before 1599: (bf) r2 = r8
regs=2 stack=0 before 1598: (4f) r8 |= r2
regs=2 stack=0 before 1597: (57) r2 &= 255
parent didn't have regs=2 stack=0 marks: R0=map_value(off=0,ks=4,vs=104,imm=0) R1_rw=P4294967296 R2_rw=scalar(umax=3,var_off=(0x0; 0x3)) R6=ctx(off=0,imm=0) R7=pkt(off=76,r=84,imm=0) R8_rw=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
last_idx 790 first_idx 774
regs=2 stack=0 before 790: (05) goto pc+806
regs=2 stack=0 before 789: (77) r2 >>= 6
regs=2 stack=0 before 788: (71) r2 = *(u8 *)(r7 +2)
regs=2 stack=0 before 786: (18) r1 = 0x100000000
1606: (15) if r1 == 0x2 goto pc+7     ; R1=P1
1607: (55) if r1 != 0x1 goto pc+9     ; R1=P1
; quic_packets_stats->cid_v1 += 1;
1608: (bf) r1 = r9                    ; R1_w=map_value(off=0,ks=4,vs=104,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0)
1609: (07) r1 += 56                   ; R1_w=map_value(off=56,ks=4,vs=104,imm=0)
1610: (05) goto pc+8
; 
1619: (79) r2 = *(u64 *)(r1 +0)       ; R1_w=map_value(off=56,ks=4,vs=104,imm=0) R2_w=scalar()
1620: (07) r2 += 1                    ; R2_w=scalar()
1621: (7b) *(u64 *)(r1 +0) = r2       ; R1_w=map_value(off=56,ks=4,vs=104,imm=0) R2_w=scalar()
; __u32 key = qpr.server_id;
1622: (63) *(u32 *)(r10 -20) = r8     ; R8=scalar(id=138) R10=fp0 fp-24=mmmm????
1623: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1624: (07) r2 += -20                  ; R2_w=fp-20
; __u32* real_pos = bpf_map_lookup_elem(&server_id_map, &key);
1625: (18) r1 = 0xffffaebab0634000    ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
1627: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=139,off=0,ks=4,vs=4,imm=0)
; if (real_pos) {
1628: (15) if r0 == 0x0 goto pc+7     ; R0=map_value(off=0,ks=4,vs=4,imm=0)
; key = *real_pos;
1629: (61) r1 = *(u32 *)(r0 +0)       ; R0=map_value(off=0,ks=4,vs=4,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; key = *real_pos;
1630: (63) *(u32 *)(r10 -20) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-24=mmmm????
; if (key == 0) {
1631: (55) if r1 != 0x0 goto pc+496   ; R1_w=0
; quic_packets_stats->cid_invalid_server_id_sample = qpr.server_id;
1632: (7b) *(u64 *)(r9 +24) = r8      ; R8=scalar(id=138) R9=map_value(off=0,ks=4,vs=104,imm=0)
; quic_packets_stats->cid_invalid_server_id += 1;
1633: (79) r1 = *(u64 *)(r9 +16)      ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
1634: (07) r1 += 1                    ; R1_w=scalar()
1635: (7b) *(u64 *)(r9 +16) = r1      ; R1=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
; 
1636: (79) r1 = *(u64 *)(r9 +0)       ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
1637: (07) r1 += 1                    ; R1_w=scalar()
1638: (7b) *(u64 *)(r9 +0) = r1       ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
1639: (79) r9 = *(u64 *)(r10 -144)    ; R9_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
; original_sport = pckt.flow.port16[0];
1640: (69) r1 = *(u16 *)(r10 -48)     ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
1641: (7b) *(u64 *)(r10 -168) = r1    ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-168_w=
1642: (71) r1 = *(u8 *)(r10 -36)      ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
1643: (57) r1 &= 2
frame -168: propagating fp0
last_idx 1644 first_idx 1636
regs=0 stack=100000 before 1643: (57) r1 &= 2
regs=0 stack=100000 before 1642: (71) r1 = *(u8 *)(r10 -36)
regs=0 stack=100000 before 1641: (7b) *(u64 *)(r10 -168) = r1
regs=2 stack=0 before 1640: (69) r1 = *(u16 *)(r10 -48)
regs=0 stack=20 before 1639: (79) r9 = *(u64 *)(r10 -144)
regs=0 stack=20 before 1638: (7b) *(u64 *)(r9 +0) = r1
regs=0 stack=20 before 1637: (07) r1 += 1
regs=0 stack=20 before 1636: (79) r1 = *(u64 *)(r9 +0)
parent already had regs=0 stack=0 marks: R0=map_value(off=0,ks=4,vs=4,imm=0) R1_w=scalar() R6_r=ctx(off=0,imm=0) R7=pkt(off=76,r=84,imm=0) R8=scalar(id=138) R9_r=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16_r=????mmmm fp-24_r=mmmm???? fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168=
1644: safe

from 1631 to 2128: R0=map_value(off=0,ks=4,vs=4,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6=ctx(off=0,imm=0) R7=pkt(off=76,r=84,imm=0) R8=scalar(id=138) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-24=mmmm???? fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; pckt.real_index = key;
2128: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
2129: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
2130: (07) r2 += -20                  ; R2_w=fp-20
; dst = bpf_map_lookup_elem(&reals, &key);
2131: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
2133: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=140,off=0,ks=4,vs=20,imm=0)
2134: (7b) *(u64 *)(r10 -176) = r0    ; R0_w=map_value_or_null(id=140,off=0,ks=4,vs=20,imm=0) R10=fp0 fp-176_w=map_value_or_null
; if (!dst) {
2135: (55) if r0 != 0x0 goto pc+4     ; R0_w=0
; quic_packets_stats->cid_unknown_real_dropped += 1;
2136: (79) r1 = *(u64 *)(r9 +40)      ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
2137: (07) r1 += 1                    ; R1_w=scalar()
2138: (7b) *(u64 *)(r9 +40) = r1      ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
2139: (05) goto pc-283
1857: safe

from 2135 to 2140: R0_w=map_value(off=0,ks=4,vs=20,imm=0) R6=ctx(off=0,imm=0) R7=pkt(off=76,r=84,imm=0) R8=scalar(id=138) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176_w=map_value
2140: (05) goto pc+0
; __u32 flags_key = 0;
2141: (62) *(u32 *)(r10 -124) = 0     ; R10=fp0 fp-128=mmmm????
2142: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
2143: (07) r2 += -124                 ; R2_w=fp-124
; bpf_map_lookup_elem(&server_id_flags, &flags_key);
2144: (18) r1 = 0xffffa03587066800    ; R1_w=map_ptr(off=0,ks=4,vs=1,imm=0)
2146: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=141,off=0,ks=4,vs=1,imm=0)
; flags_value && flags_value->update_quic_sid_based_dst_in_lru;
2147: (15) if r0 == 0x0 goto pc+86    ; R0=map_value(off=0,ks=4,vs=1,imm=0)
; flags_value && flags_value->update_quic_sid_based_dst_in_lru;
2148: (71) r7 = *(u8 *)(r0 +0)        ; R0=map_value(off=0,ks=4,vs=1,imm=0) R7_w=scalar(umax=255,var_off=(0x0; 0xff))
2149: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
2150: (07) r2 += -80                  ; R2_w=fp-80
; struct real_pos_lru* dst_lru = bpf_map_lookup_elem(lru_map, &pckt->flow);
2151: (79) r1 = *(u64 *)(r10 -152)    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0
2152: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=142,off=0,ks=40,vs=16,imm=0)
; if (dst_lru) {
2153: (15) if r0 == 0x0 goto pc+29    ; R0_w=map_value(off=0,ks=40,vs=16,imm=0)
; if (dst_lru->pos == pckt->real_index) {
2154: (61) r1 = *(u32 *)(r10 -40)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; if (dst_lru->pos == pckt->real_index) {
2155: (61) r2 = *(u32 *)(r0 +0)       ; R0_w=map_value(off=0,ks=40,vs=16,imm=0) R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; flags_value && flags_value->update_quic_sid_based_dst_in_lru;
2156: (bf) r3 = r7                    ; R3=scalar(id=143,umax=255,var_off=(0x0; 0xff)) R7=scalar(id=143,umax=255,var_off=(0x0; 0xff))
; if (dst_lru->pos == pckt->real_index) {
2157: (15) if r3 == 0x0 goto pc+99    ; R3=scalar(id=143,umax=255,var_off=(0x0; 0xff))
2158: (bf) r3 = r1                    ; R1=scalar(id=144,umax=4294967295,var_off=(0x0; 0xffffffff)) R3_w=scalar(id=144,umax=4294967295,var_off=(0x0; 0xffffffff))
2159: (bf) r4 = r2                    ; R2=scalar(id=145,umax=4294967295,var_off=(0x0; 0xffffffff)) R4_w=scalar(id=145,umax=4294967295,var_off=(0x0; 0xffffffff))
2160: (1d) if r4 == r3 goto pc+96     ; R3_w=scalar(id=144,umax=4294967295,var_off=(0x0; 0xffffffff)) R4_w=scalar(id=145,umax=4294967295,var_off=(0x0; 0xffffffff))
; dst_lru->pos = pckt->real_index;
2161: (63) *(u32 *)(r0 +0) = r1       ; R0=map_value(off=0,ks=40,vs=16,imm=0) R1=scalar(id=144,umax=4294967295,var_off=(0x0; 0xffffffff))
; vip_num, /* new conn */ false, /* mismatch in lru */ true);
2162: (61) r1 = *(u32 *)(r10 -108)    ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; if (res == DST_MATCH_IN_LRU) {
2163: (7b) *(u64 *)(r10 -168) = r1    ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-168_w=
2164: (05) goto pc+77
; quic_packets_stats->dst_mismatch_in_lru += 1;
2242: (79) r1 = *(u64 *)(r9 +88)      ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
2243: (07) r1 += 1                    ; R1_w=scalar()
2244: (7b) *(u64 *)(r9 +88) = r1      ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
2245: (79) r1 = *(u64 *)(r10 -168)    ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
2246: (63) *(u32 *)(r10 -16) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-16=
2247: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
2248: (07) r2 += -16                  ; R2_w=fp-16
; bpf_map_lookup_elem(&server_id_stats, &vip_num);
2249: (18) r1 = 0xffffa0364c1b2000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
2251: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=146,off=0,ks=4,vs=16,imm=0)
; if (!per_vip_stats) {
2252: (15) if r0 == 0x0 goto pc+8     ; R0_w=map_value(off=0,ks=4,vs=16,imm=0)
; per_vip_stats->v2 += 1;
2253: (79) r1 = *(u64 *)(r0 +8)       ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
2254: (07) r1 += 1                    ; R1_w=scalar()
2255: (7b) *(u64 *)(r0 +8) = r1       ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
2256: (05) goto pc+4
; quic_packets_stats->cid_routed += 1;
2261: (79) r1 = *(u64 *)(r9 +32)      ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
2262: (07) r1 += 1                    ; R1_w=scalar()
2263: (7b) *(u64 *)(r9 +32) = r1      ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
; original_sport = pckt.flow.port16[0];
2264: (69) r1 = *(u16 *)(r10 -48)     ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; if (!dst) {
2265: (7b) *(u64 *)(r10 -168) = r1    ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-168_w=
2266: (05) goto pc-354
; data_stats->v2 += 1;
1913: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1914: (07) r2 += -112                 ; R2_w=fp-112
; cval = bpf_map_lookup_elem(&ctl_array, &mac_addr_pos);
1915: (18) r1 = 0xffffa03553eeca00    ; R1_w=map_ptr(off=0,ks=4,vs=8,imm=0)
1917: (85) call bpf_map_lookup_elem#1
1918: safe

from 2252 to 2261: safe

from 2160 to 2257: R0=map_value(off=0,ks=40,vs=16,imm=0) R1=scalar(id=144,umax=4294967295,var_off=(0x0; 0xffffffff)) R2=scalar(id=145,umax=4294967295,var_off=(0x0; 0xffffffff)) R3=scalar(id=144,umax=4294967295,var_off=(0x0; 0xffffffff)) R4=scalar(id=145,umax=4294967295,var_off=(0x0; 0xffffffff)) R6=ctx(off=0,imm=0) R7=scalar(id=143,umax=255,var_off=(0x0; 0xff)) R8=scalar(id=138) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-128=mmmm???? fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=map_value
; if (res == DST_MATCH_IN_LRU) {
2257: (5d) if r2 != r1 goto pc-16     ; R1=scalar(id=144,umax=4294967295,var_off=(0x0; 0xffffffff)) R2=scalar(id=145,umax=4294967295,var_off=(0x0; 0xffffffff))
; quic_packets_stats->dst_match_in_lru += 1;
2258: (79) r1 = *(u64 *)(r9 +80)      ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
2259: (07) r1 += 1                    ; R1_w=scalar()
2260: (7b) *(u64 *)(r9 +80) = r1
2261: safe

from 2257 to 2242: safe

from 2157 to 2257: safe

from 2153 to 2183: R0_w=0 R6=ctx(off=0,imm=0) R7_w=scalar(umax=255,var_off=(0x0; 0xff)) R8=scalar(id=138) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-128=mmmm???? fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=map_value
; flags_value && flags_value->update_quic_sid_based_dst_in_lru;
2183: (bf) r1 = r7                    ; R1_w=scalar(id=148,umax=255,var_off=(0x0; 0xff)) R7_w=scalar(id=148,umax=255,var_off=(0x0; 0xff))
; if (update_lru) {
2184: (15) if r1 == 0x0 goto pc+12    ; R1_w=scalar(id=148,umax=255,var_off=(0x0; 0xff))
2185: (05) goto pc+0
; struct real_pos_lru new_dst_lru = {};
2186: (7a) *(u64 *)(r10 -16) = 0      ; R10=fp0 fp-16_w=mmmmmmmm
; new_dst_lru.pos = pckt->real_index;
2187: (61) r2 = *(u32 *)(r10 -40)     ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; new_dst_lru.pos = pckt->real_index;
2188: (63) *(u32 *)(r10 -16) = r2     ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-16_w=
; struct real_pos_lru new_dst_lru = {};
2189: (7a) *(u64 *)(r10 -8) = 0       ; R10=fp0 fp-8_w=mmmmmmmm
2190: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
2191: (07) r2 += -80                  ; R2_w=fp-80
2192: (bf) r3 = r10                   ; R3_w=fp0 R10=fp0
2193: (07) r3 += -16                  ; R3_w=fp-16
; bpf_map_update_elem(lru_map, &pckt->flow, &new_dst_lru, BPF_ANY);
2194: (79) r1 = *(u64 *)(r10 -152)    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0
2195: (b7) r4 = 0                     ; R4_w=0
2196: (85) call bpf_map_update_elem#2         ; R0_w=scalar()
; quic_packets_stats->dst_not_found_in_lru += 1;
2197: (79) r1 = *(u64 *)(r9 +96)      ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
2198: (07) r1 += 1                    ; R1_w=scalar()
2199: (7b) *(u64 *)(r9 +96) = r1      ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
2200: (05) goto pc+60
2261: safe

from 2184 to 2197: R0=0 R1=0 R6=ctx(off=0,imm=0) R7=0 R8=scalar(id=138) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-128=mmmm???? fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=map_value
2197: (79) r1 = *(u64 *)(r9 +96)      ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
2198: (07) r1 += 1                    ; R1_w=scalar()
2199: (7b) *(u64 *)(r9 +96) = r1      ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
2200: (05) goto pc+60
2261: safe

from 2147 to 2234: R0=0 R6=ctx(off=0,imm=0) R7=pkt(off=76,r=84,imm=0) R8=scalar(id=138) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-128=mmmm???? fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=map_value
; if (!dst) {
2234: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
2235: (07) r2 += -80                  ; R2_w=fp-80
; struct real_pos_lru* dst_lru = bpf_map_lookup_elem(lru_map, &pckt->flow);
2236: (79) r1 = *(u64 *)(r10 -152)    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0
2237: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=149,off=0,ks=40,vs=16,imm=0)
; if (dst_lru) {
2238: (15) if r0 == 0x0 goto pc-42    ; R0=map_value(off=0,ks=40,vs=16,imm=0)
; if (dst_lru->pos == pckt->real_index) {
2239: (61) r1 = *(u32 *)(r0 +0)       ; R0=map_value(off=0,ks=40,vs=16,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (dst_lru->pos == pckt->real_index) {
2240: (61) r2 = *(u32 *)(r10 -40)     ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; if (res == DST_MATCH_IN_LRU) {
2241: (1d) if r1 == r2 goto pc+16     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
2242: safe

from 2241 to 2258: R0=map_value(off=0,ks=40,vs=16,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6=ctx(off=0,imm=0) R7=pkt(off=76,r=84,imm=0) R8=scalar(id=138) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-128=mmmm???? fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=map_value
; quic_packets_stats->dst_match_in_lru += 1;
2258: (79) r1 = *(u64 *)(r9 +80)      ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
2259: (07) r1 += 1                    ; R1_w=scalar()
2260: (7b) *(u64 *)(r9 +80) = r1
2261: safe

from 2238 to 2197: safe

from 1628 to 1636: safe

from 1603 to 1636: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=4294967296 R2=scalar(smin=-2147483648,smax=0) R3=1 R6=ctx(off=0,imm=0) R7=pkt(off=76,r=84,imm=0) R8=scalar(id=138) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; 
1636: (79) r1 = *(u64 *)(r9 +0)       ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
1637: (07) r1 += 1                    ; R1_w=scalar()
1638: (7b) *(u64 *)(r9 +0) = r1       ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
1639: (79) r9 = *(u64 *)(r10 -144)    ; R9_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
; original_sport = pckt.flow.port16[0];
1640: (69) r1 = *(u16 *)(r10 -48)     ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
1641: (7b) *(u64 *)(r10 -168) = r1    ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-168_w=
1642: (71) r1 = *(u8 *)(r10 -36)      ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
1643: (57) r1 &= 2
frame -168: propagating fp0
last_idx 1644 first_idx 1636
regs=0 stack=100000 before 1643: (57) r1 &= 2
regs=0 stack=100000 before 1642: (71) r1 = *(u8 *)(r10 -36)
regs=0 stack=100000 before 1641: (7b) *(u64 *)(r10 -168) = r1
regs=2 stack=0 before 1640: (69) r1 = *(u16 *)(r10 -48)
regs=0 stack=20 before 1639: (79) r9 = *(u64 *)(r10 -144)
regs=0 stack=20 before 1638: (7b) *(u64 *)(r9 +0) = r1
regs=0 stack=20 before 1637: (07) r1 += 1
regs=0 stack=20 before 1636: (79) r1 = *(u64 *)(r9 +0)
parent already had regs=0 stack=0 marks: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=4294967296 R2_w=scalar(smin=-2147483648,smax=0) R3_w=1 R6_r=ctx(off=0,imm=0) R7=pkt(off=76,r=84,imm=0) R8_w=scalar(id=138) R9_r=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16_r=????mmmm fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168=
1644: safe

from 780 to 1636: safe

from 779 to 1589: R0=map_value(off=0,ks=4,vs=104,imm=0) R1_w=scalar(id=137,umax=255,var_off=(0x0; 0xff)) R2_w=2 R6=ctx(off=0,imm=0) R7=pkt(off=76,r=84,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1589: (71) r1 = *(u8 *)(r7 +1)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=76,r=84,imm=0)
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1590: (67) r1 <<= 16                  ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1591: (71) r8 = *(u8 *)(r7 +2)        ; R7=pkt(off=76,r=84,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1592: (67) r8 <<= 8                   ; R8_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1593: (4f) r8 |= r1                   ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000)) R8_w=scalar()
1594: (18) r1 = 0x200000000           ; R1_w=8589934592
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1596: (71) r2 = *(u8 *)(r7 +3)        ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=76,r=84,imm=0)
1597: (57) r2 &= 255                  ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
1598: (4f) r8 |= r2                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1599: (bf) r2 = r8                    ; R2_w=scalar(id=150) R8_w=scalar(id=150)
1600: (67) r2 <<= 32                  ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
1601: (c7) r2 s>>= 32                 ; R2_w=scalar(smin=-2147483648,smax=2147483647)
1602: (b7) r3 = 1                     ; R3_w=1
; if (qpr.server_id > 0) {
1603: (6d) if r3 s> r2 goto pc+32     ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1604: (77) r1 >>= 32                  ; R1_w=2
; if (cid_version == QUIC_CONNID_VERSION_V1) {
1605: (15) if r1 == 0x3 goto pc+5
last_idx 1605 first_idx 774
regs=2 stack=0 before 1604: (77) r1 >>= 32
regs=2 stack=0 before 1603: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 1602: (b7) r3 = 1
regs=2 stack=0 before 1601: (c7) r2 s>>= 32
regs=2 stack=0 before 1600: (67) r2 <<= 32
regs=2 stack=0 before 1599: (bf) r2 = r8
regs=2 stack=0 before 1598: (4f) r8 |= r2
regs=2 stack=0 before 1597: (57) r2 &= 255
regs=2 stack=0 before 1596: (71) r2 = *(u8 *)(r7 +3)
regs=2 stack=0 before 1594: (18) r1 = 0x200000000
1606: R1=P2
1606: (15) if r1 == 0x2 goto pc+7     ; R1=P2
; quic_packets_stats->cid_v2 += 1;
1614: (bf) r1 = r9                    ; R1_w=map_value(off=0,ks=4,vs=104,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0)
1615: (07) r1 += 64                   ; R1_w=map_value(off=64,ks=4,vs=104,imm=0)
1616: (05) goto pc+2
; 
1619: (79) r2 = *(u64 *)(r1 +0)       ; R1_w=map_value(off=64,ks=4,vs=104,imm=0) R2_w=scalar()
1620: (07) r2 += 1                    ; R2_w=scalar()
1621: (7b) *(u64 *)(r1 +0) = r2       ; R1_w=map_value(off=64,ks=4,vs=104,imm=0) R2_w=scalar()
; __u32 key = qpr.server_id;
1622: (63) *(u32 *)(r10 -20) = r8     ; R8=scalar(id=150) R10=fp0 fp-24=mmmm????
1623: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1624: (07) r2 += -20                  ; R2_w=fp-20
; __u32* real_pos = bpf_map_lookup_elem(&server_id_map, &key);
1625: (18) r1 = 0xffffaebab0634000    ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
1627: (85) call bpf_map_lookup_elem#1
1628: safe

from 1603 to 1636: safe

from 778 to 1577: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=137,umax=255,var_off=(0x0; 0xff)) R2=3 R6=ctx(off=0,imm=0) R7=pkt(off=76,r=84,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1577: (71) r1 = *(u8 *)(r7 +1)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=76,r=84,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1578: (67) r1 <<= 24                  ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1579: (71) r8 = *(u8 *)(r7 +2)        ; R7=pkt(off=76,r=84,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1580: (67) r8 <<= 16                  ; R8_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1581: (4f) r8 |= r1                   ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432) R8_w=scalar()
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1582: (71) r1 = *(u8 *)(r7 +3)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=76,r=84,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1583: (67) r1 <<= 8                   ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1584: (4f) r8 |= r1                   ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00)) R8_w=scalar()
1585: (18) r1 = 0x300000000           ; R1_w=12884901888
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1587: (71) r2 = *(u8 *)(r7 +4)        ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=76,r=84,imm=0)
1588: (05) goto pc+8
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1597: (57) r2 &= 255                  ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
1598: (4f) r8 |= r2                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1599: (bf) r2 = r8                    ; R2_w=scalar(id=152) R8_w=scalar(id=152)
1600: (67) r2 <<= 32                  ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
1601: (c7) r2 s>>= 32                 ; R2_w=scalar(smin=-2147483648,smax=2147483647)
1602: (b7) r3 = 1                     ; R3_w=1
; if (qpr.server_id > 0) {
1603: (6d) if r3 s> r2 goto pc+32     ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1604: (77) r1 >>= 32                  ; R1=3
; if (cid_version == QUIC_CONNID_VERSION_V1) {
1605: (15) if r1 == 0x3 goto pc+5
last_idx 1605 first_idx 1605
parent didn't have regs=2 stack=0 marks: R0=map_value(off=0,ks=4,vs=104,imm=0) R1_rw=P3 R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1 R6=ctx(off=0,imm=0) R7=pkt(off=76,r=84,imm=0) R8_w=scalar(id=152) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
last_idx 1604 first_idx 1577
regs=2 stack=0 before 1604: (77) r1 >>= 32
regs=2 stack=0 before 1603: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 1602: (b7) r3 = 1
regs=2 stack=0 before 1601: (c7) r2 s>>= 32
regs=2 stack=0 before 1600: (67) r2 <<= 32
regs=2 stack=0 before 1599: (bf) r2 = r8
regs=2 stack=0 before 1598: (4f) r8 |= r2
regs=2 stack=0 before 1597: (57) r2 &= 255
regs=2 stack=0 before 1588: (05) goto pc+8
regs=2 stack=0 before 1587: (71) r2 = *(u8 *)(r7 +4)
regs=2 stack=0 before 1585: (18) r1 = 0x300000000
; quic_packets_stats->cid_v3 += 1;
1611: (bf) r1 = r9                    ; R1_w=map_value(off=0,ks=4,vs=104,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0)
1612: (07) r1 += 72                   ; R1_w=map_value(off=72,ks=4,vs=104,imm=0)
1613: (05) goto pc+5
; 
1619: (79) r2 = *(u64 *)(r1 +0)       ; R1_w=map_value(off=72,ks=4,vs=104,imm=0) R2_w=scalar()
1620: (07) r2 += 1                    ; R2_w=scalar()
1621: (7b) *(u64 *)(r1 +0) = r2       ; R1_w=map_value(off=72,ks=4,vs=104,imm=0) R2_w=scalar()
; __u32 key = qpr.server_id;
1622: (63) *(u32 *)(r10 -20) = r8     ; R8=scalar(id=152) R10=fp0 fp-24=mmmm????
1623: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1624: (07) r2 += -20                  ; R2_w=fp-20
; __u32* real_pos = bpf_map_lookup_elem(&server_id_map, &key);
1625: (18) r1 = 0xffffaebab0634000    ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
1627: (85) call bpf_map_lookup_elem#1
1628: safe

from 1603 to 1636: safe

from 774 to 1636: safe

from 744 to 1562: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=pkt(off=84,r=84,imm=0) R2=0 R6=ctx(off=0,imm=0) R7=pkt(off=62,r=84,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; quic_packets_stats->cid_initial += 1;
1562: (79) r1 = *(u64 *)(r9 +8)       ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
1563: (07) r1 += 1                    ; R1_w=scalar()
1564: (7b) *(u64 *)(r9 +8) = r1       ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
1565: (79) r1 = *(u64 *)(r10 -168)    ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
1566: (63) *(u32 *)(r10 -16) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-16=
1567: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1568: (07) r2 += -16                  ; R2_w=fp-16
; bpf_map_lookup_elem(&server_id_stats, &vip_num);
1569: (18) r1 = 0xffffa0364c1b2000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
1571: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=154,off=0,ks=4,vs=16,imm=0)
; if (!per_vip_stats) {
1572: (15) if r0 == 0x0 goto pc+66    ; R0_w=map_value(off=0,ks=4,vs=16,imm=0)
; per_vip_stats->v1 += 1;
1573: (79) r1 = *(u64 *)(r0 +0)       ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1574: (07) r1 += 1                    ; R1_w=scalar()
1575: (7b) *(u64 *)(r0 +0) = r1       ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1576: (05) goto pc+62
; 
1639: (79) r9 = *(u64 *)(r10 -144)    ; R9_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
; original_sport = pckt.flow.port16[0];
1640: (69) r1 = *(u16 *)(r10 -48)     ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
1641: (7b) *(u64 *)(r10 -168) = r1    ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-168_w=
1642: (71) r1 = *(u8 *)(r10 -36)      ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
1643: (57) r1 &= 2
frame -168: propagating fp0
last_idx 1644 first_idx 1639
regs=0 stack=100000 before 1643: (57) r1 &= 2
regs=0 stack=100000 before 1642: (71) r1 = *(u8 *)(r10 -36)
regs=0 stack=100000 before 1641: (7b) *(u64 *)(r10 -168) = r1
regs=2 stack=0 before 1640: (69) r1 = *(u16 *)(r10 -48)
regs=0 stack=20 before 1639: (79) r9 = *(u64 *)(r10 -144)
parent already had regs=0 stack=0 marks: R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar() R6_r=ctx(off=0,imm=0) R7=pkt(off=62,r=84,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16_r=????mmmm fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168=
1644: safe

from 1572 to 1639: safe

from 742 to 1636: safe

from 739 to 770: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=pkt(off=71,r=82,imm=0) R2=scalar(umax=127,var_off=(0x0; 0x7f)) R6=ctx(off=0,imm=0) R7=pkt(off=62,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (quic_data + sizeof(struct quic_short_header) > data_end) {
770: (bf) r2 = r7                     ; R2_w=pkt(off=62,r=82,imm=0) R7=pkt(off=62,r=82,imm=0)
771: (07) r2 += 17                    ; R2_w=pkt(off=79,r=82,imm=0)
772: (bf) r7 = r1                     ; R1=pkt(off=71,r=82,imm=0) R7_w=pkt(off=71,r=82,imm=0)
; if (quic_data + sizeof(struct quic_short_header) > data_end) {
773: (2d) if r2 > r8 goto pc+862      ; R2_w=pkt(off=79,r=82,imm=0) R8=pkt_end(off=0,imm=0)
; if (!connId) {
774: (15) if r7 == 0x0 goto pc+861    ; R7_w=pkt(off=71,r=82,imm=0)
; __u8 connIdVersion = (connId[0] >> 6);
775: (71) r1 = *(u8 *)(r7 +0)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=71,r=82,imm=0)
776: (bf) r2 = r1                     ; R1_w=scalar(id=155,umax=255,var_off=(0x0; 0xff)) R2_w=scalar(id=155,umax=255,var_off=(0x0; 0xff))
777: (77) r2 >>= 6                    ; R2=scalar(umax=3,var_off=(0x0; 0x3))
; if (connIdVersion == QUIC_CONNID_VERSION_V1) {
778: (15) if r2 == 0x3 goto pc+798    ; R2=scalar(umax=3,var_off=(0x0; 0x3))
779: (15) if r2 == 0x2 goto pc+809    ; R2=scalar(umax=3,var_off=(0x0; 0x3))
780: (55) if r2 != 0x1 goto pc+855    ; R2=1
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
781: (57) r1 &= 63                    ; R1_w=scalar(umax=63,var_off=(0x0; 0x3f))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
782: (67) r1 <<= 10                   ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
783: (71) r8 = *(u8 *)(r7 +1)         ; R7=pkt(off=71,r=82,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
784: (67) r8 <<= 2                    ; R8_w=scalar(umax=1020,var_off=(0x0; 0x3fc))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
785: (4f) r8 |= r1                    ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00)) R8_w=scalar()
786: (18) r1 = 0x100000000            ; R1_w=4294967296
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
788: (71) r2 = *(u8 *)(r7 +2)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=71,r=82,imm=0)
789: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
790: (05) goto pc+806
frame 1: propagating r0
last_idx 1597 first_idx 778
regs=2 stack=0 before 790: (05) goto pc+806
regs=2 stack=0 before 789: (77) r2 >>= 6
regs=2 stack=0 before 788: (71) r2 = *(u8 *)(r7 +2)
regs=2 stack=0 before 786: (18) r1 = 0x100000000
1597: safe

from 780 to 1636: safe

from 779 to 1589: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=155,umax=255,var_off=(0x0; 0xff)) R2=2 R6=ctx(off=0,imm=0) R7=pkt(off=71,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1589: (71) r1 = *(u8 *)(r7 +1)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=71,r=82,imm=0)
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1590: (67) r1 <<= 16                  ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1591: (71) r8 = *(u8 *)(r7 +2)        ; R7=pkt(off=71,r=82,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1592: (67) r8 <<= 8                   ; R8_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1593: (4f) r8 |= r1                   ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000)) R8_w=scalar()
1594: (18) r1 = 0x200000000           ; R1_w=8589934592
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1596: (71) r2 = *(u8 *)(r7 +3)        ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=71,r=82,imm=0)
1597: (57) r2 &= 255                  ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
1598: (4f) r8 |= r2                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1599: (bf) r2 = r8                    ; R2_w=scalar(id=156) R8_w=scalar(id=156)
1600: (67) r2 <<= 32                  ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
1601: (c7) r2 s>>= 32                 ; R2_w=scalar(smin=-2147483648,smax=2147483647)
1602: (b7) r3 = 1                     ; R3_w=1
; if (qpr.server_id > 0) {
1603: (6d) if r3 s> r2 goto pc+32     ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1604: (77) r1 >>= 32                  ; R1_w=2
; if (cid_version == QUIC_CONNID_VERSION_V1) {
1605: (15) if r1 == 0x3 goto pc+5
last_idx 1605 first_idx 1589
regs=2 stack=0 before 1604: (77) r1 >>= 32
regs=2 stack=0 before 1603: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 1602: (b7) r3 = 1
regs=2 stack=0 before 1601: (c7) r2 s>>= 32
regs=2 stack=0 before 1600: (67) r2 <<= 32
regs=2 stack=0 before 1599: (bf) r2 = r8
regs=2 stack=0 before 1598: (4f) r8 |= r2
regs=2 stack=0 before 1597: (57) r2 &= 255
regs=2 stack=0 before 1596: (71) r2 = *(u8 *)(r7 +3)
regs=2 stack=0 before 1594: (18) r1 = 0x200000000
frame 1: propagating r0
1606: safe

from 1603 to 1636: safe

from 778 to 1577: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=155,umax=255,var_off=(0x0; 0xff)) R2=3 R6=ctx(off=0,imm=0) R7=pkt(off=71,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1577: (71) r1 = *(u8 *)(r7 +1)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=71,r=82,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1578: (67) r1 <<= 24                  ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1579: (71) r8 = *(u8 *)(r7 +2)        ; R7=pkt(off=71,r=82,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1580: (67) r8 <<= 16                  ; R8_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1581: (4f) r8 |= r1                   ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432) R8_w=scalar()
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1582: (71) r1 = *(u8 *)(r7 +3)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=71,r=82,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1583: (67) r1 <<= 8                   ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1584: (4f) r8 |= r1                   ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00)) R8_w=scalar()
1585: (18) r1 = 0x300000000           ; R1_w=12884901888
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1587: (71) r2 = *(u8 *)(r7 +4)        ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=71,r=82,imm=0)
1588: (05) goto pc+8
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1597: (57) r2 &= 255                  ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
1598: (4f) r8 |= r2                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1599: (bf) r2 = r8                    ; R2_w=scalar(id=157) R8_w=scalar(id=157)
1600: (67) r2 <<= 32                  ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
1601: (c7) r2 s>>= 32                 ; R2_w=scalar(smin=-2147483648,smax=2147483647)
1602: (b7) r3 = 1                     ; R3_w=1
; if (qpr.server_id > 0) {
1603: (6d) if r3 s> r2 goto pc+32     ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1604: (77) r1 >>= 32
frame 1: propagating r0
last_idx 1605 first_idx 1577
regs=2 stack=0 before 1604: (77) r1 >>= 32
regs=2 stack=0 before 1603: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 1602: (b7) r3 = 1
regs=2 stack=0 before 1601: (c7) r2 s>>= 32
regs=2 stack=0 before 1600: (67) r2 <<= 32
regs=2 stack=0 before 1599: (bf) r2 = r8
regs=2 stack=0 before 1598: (4f) r8 |= r2
regs=2 stack=0 before 1597: (57) r2 &= 255
regs=2 stack=0 before 1588: (05) goto pc+8
regs=2 stack=0 before 1587: (71) r2 = *(u8 *)(r7 +4)
regs=2 stack=0 before 1585: (18) r1 = 0x300000000
1605: safe

from 1603 to 1636: safe

from 774 to 1636: safe

from 773 to 1636: safe

from 735 to 1636: safe

from 730 to 732: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=34 R2=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
732: (0f) r7 += r1
last_idx 732 first_idx 732
parent didn't have regs=2 stack=0 marks: R0=map_value(off=0,ks=4,vs=104,imm=0) R1_r=P34 R2=0 R6=ctx(off=0,imm=0) R7_r=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
last_idx 730 first_idx 730
regs=2 stack=0 before 730: (15) if r2 == 0x0 goto pc+1
parent didn't have regs=2 stack=0 marks: R0_w=map_value(off=0,ks=4,vs=104,imm=0) R1_rw=P34 R2_rw=scalar(umax=1,var_off=(0x0; 0x1)) R6_r=ctx(off=0,imm=0) R7_r=pkt(off=0,r=82,imm=0) R8_r=pkt_end(off=0,imm=0) R9_rw=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16_r=????mmmm fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=
last_idx 729 first_idx 719
regs=2 stack=0 before 729: (b7) r1 = 34
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
733: (bf) r1 = r7                     ; R1_w=pkt(off=34,r=82,imm=0) R7_w=pkt(off=34,r=82,imm=0)
734: (07) r1 += 9                     ; R1_w=pkt(off=43,r=82,imm=0)
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
735: (2d) if r1 > r8 goto pc+900      ; R1_w=pkt(off=43,r=82,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
736: (71) r2 = *(u8 *)(r7 +8)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=34,r=82,imm=0)
737: (67) r2 <<= 56                   ; R2_w=scalar(smax=9151314442816847872,umax=18374686479671623680,var_off=(0x0; 0xff00000000000000),s32_min=0,s32_max=0,u32_max=0)
738: (c7) r2 s>>= 56                  ; R2_w=scalar(smin=-128,smax=127)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
739: (65) if r2 s> 0xffffffff goto pc+30      ; R2_w=scalar(umin=18446744073709551488,var_off=(0xffffffffffffff80; 0x7f),u32_min=-128)
; if (quic_data + sizeof(struct quic_long_header) > data_end) {
740: (bf) r1 = r7                     ; R1_w=pkt(off=34,r=82,imm=0) R7_w=pkt(off=34,r=82,imm=0)
741: (07) r1 += 22                    ; R1=pkt(off=56,r=82,imm=0)
; if (quic_data + sizeof(struct quic_long_header) > data_end) {
742: (2d) if r1 > r8 goto pc+893      ; R1=pkt(off=56,r=82,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_PACKET_TYPE_MASK) < QUIC_HANDSHAKE) {
743: (57) r2 &= 32                    ; R2_w=scalar(umax=32,var_off=(0x0; 0x20))
; if ((*pkt_type & QUIC_PACKET_TYPE_MASK) < QUIC_HANDSHAKE) {
744: (15) if r2 == 0x0 goto pc+817    ; R2_w=scalar(umax=32,var_off=(0x0; 0x20))
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
745: (71) r1 = *(u8 *)(r7 +13)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=34,r=82,imm=0)
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
746: (07) r7 += 14                    ; R7_w=pkt(off=48,r=82,imm=0)
747: (25) if r1 > 0x7 goto pc+26      ; R1_w=scalar(umax=7,var_off=(0x0; 0x7))
748: (05) goto pc+887
1636: safe

from 747 to 774: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(umin=8,umax=255,var_off=(0x0; 0xff)) R2=scalar(umax=32,var_off=(0x0; 0x20)) R6=ctx(off=0,imm=0) R7=pkt(off=48,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (!connId) {
774: (15) if r7 == 0x0 goto pc+861    ; R7=pkt(off=48,r=82,imm=0)
; __u8 connIdVersion = (connId[0] >> 6);
775: (71) r1 = *(u8 *)(r7 +0)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=48,r=82,imm=0)
776: (bf) r2 = r1                     ; R1_w=scalar(id=158,umax=255,var_off=(0x0; 0xff)) R2_w=scalar(id=158,umax=255,var_off=(0x0; 0xff))
777: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
; if (connIdVersion == QUIC_CONNID_VERSION_V1) {
778: (15) if r2 == 0x3 goto pc+798    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
779: (15) if r2 == 0x2 goto pc+809    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
780: (55) if r2 != 0x1 goto pc+855    ; R2_w=1
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
781: (57) r1 &= 63                    ; R1_w=scalar(umax=63,var_off=(0x0; 0x3f))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
782: (67) r1 <<= 10                   ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
783: (71) r8 = *(u8 *)(r7 +1)         ; R7=pkt(off=48,r=82,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
784: (67) r8 <<= 2                    ; R8_w=scalar(umax=1020,var_off=(0x0; 0x3fc))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
785: (4f) r8 |= r1                    ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00)) R8_w=scalar()
786: (18) r1 = 0x100000000            ; R1_w=4294967296
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
788: (71) r2 = *(u8 *)(r7 +2)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=48,r=82,imm=0)
789: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
790: (05) goto pc+806
frame 1: propagating r0
last_idx 1597 first_idx 774
regs=2 stack=0 before 790: (05) goto pc+806
regs=2 stack=0 before 789: (77) r2 >>= 6
regs=2 stack=0 before 788: (71) r2 = *(u8 *)(r7 +2)
regs=2 stack=0 before 786: (18) r1 = 0x100000000
1597: safe

from 780 to 1636: safe

from 779 to 1589: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=158,umax=255,var_off=(0x0; 0xff)) R2=2 R6=ctx(off=0,imm=0) R7=pkt(off=48,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1589: (71) r1 = *(u8 *)(r7 +1)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=48,r=82,imm=0)
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1590: (67) r1 <<= 16                  ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1591: (71) r8 = *(u8 *)(r7 +2)        ; R7=pkt(off=48,r=82,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1592: (67) r8 <<= 8                   ; R8_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1593: (4f) r8 |= r1                   ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000)) R8_w=scalar()
1594: (18) r1 = 0x200000000           ; R1_w=8589934592
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1596: (71) r2 = *(u8 *)(r7 +3)        ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=48,r=82,imm=0)
1597: (57) r2 &= 255                  ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
1598: (4f) r8 |= r2                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1599: (bf) r2 = r8                    ; R2_w=scalar(id=159) R8_w=scalar(id=159)
1600: (67) r2 <<= 32                  ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
1601: (c7) r2 s>>= 32                 ; R2_w=scalar(smin=-2147483648,smax=2147483647)
1602: (b7) r3 = 1                     ; R3_w=1
; if (qpr.server_id > 0) {
1603: (6d) if r3 s> r2 goto pc+32     ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1604: (77) r1 >>= 32                  ; R1_w=2
; if (cid_version == QUIC_CONNID_VERSION_V1) {
1605: (15) if r1 == 0x3 goto pc+5
last_idx 1605 first_idx 1589
regs=2 stack=0 before 1604: (77) r1 >>= 32
regs=2 stack=0 before 1603: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 1602: (b7) r3 = 1
regs=2 stack=0 before 1601: (c7) r2 s>>= 32
regs=2 stack=0 before 1600: (67) r2 <<= 32
regs=2 stack=0 before 1599: (bf) r2 = r8
regs=2 stack=0 before 1598: (4f) r8 |= r2
regs=2 stack=0 before 1597: (57) r2 &= 255
regs=2 stack=0 before 1596: (71) r2 = *(u8 *)(r7 +3)
regs=2 stack=0 before 1594: (18) r1 = 0x200000000
frame 1: propagating r0
1606: safe

from 1603 to 1636: safe

from 778 to 1577: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=158,umax=255,var_off=(0x0; 0xff)) R2=3 R6=ctx(off=0,imm=0) R7=pkt(off=48,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1577: (71) r1 = *(u8 *)(r7 +1)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=48,r=82,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1578: (67) r1 <<= 24                  ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1579: (71) r8 = *(u8 *)(r7 +2)        ; R7=pkt(off=48,r=82,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1580: (67) r8 <<= 16                  ; R8_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1581: (4f) r8 |= r1                   ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432) R8_w=scalar()
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1582: (71) r1 = *(u8 *)(r7 +3)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=48,r=82,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1583: (67) r1 <<= 8                   ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1584: (4f) r8 |= r1                   ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00)) R8_w=scalar()
1585: (18) r1 = 0x300000000           ; R1_w=12884901888
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1587: (71) r2 = *(u8 *)(r7 +4)        ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=48,r=82,imm=0)
1588: (05) goto pc+8
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1597: (57) r2 &= 255                  ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
1598: (4f) r8 |= r2                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1599: (bf) r2 = r8                    ; R2_w=scalar(id=160) R8_w=scalar(id=160)
1600: (67) r2 <<= 32                  ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
1601: (c7) r2 s>>= 32                 ; R2_w=scalar(smin=-2147483648,smax=2147483647)
1602: (b7) r3 = 1                     ; R3_w=1
; if (qpr.server_id > 0) {
1603: (6d) if r3 s> r2 goto pc+32     ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1604: (77) r1 >>= 32
frame 1: propagating r0
last_idx 1605 first_idx 1577
regs=2 stack=0 before 1604: (77) r1 >>= 32
regs=2 stack=0 before 1603: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 1602: (b7) r3 = 1
regs=2 stack=0 before 1601: (c7) r2 s>>= 32
regs=2 stack=0 before 1600: (67) r2 <<= 32
regs=2 stack=0 before 1599: (bf) r2 = r8
regs=2 stack=0 before 1598: (4f) r8 |= r2
regs=2 stack=0 before 1597: (57) r2 &= 255
regs=2 stack=0 before 1588: (05) goto pc+8
regs=2 stack=0 before 1587: (71) r2 = *(u8 *)(r7 +4)
regs=2 stack=0 before 1585: (18) r1 = 0x300000000
1605: safe

from 1603 to 1636: safe

from 774 to 1636: safe

from 744 to 1562: safe

from 742 to 1636: safe

from 739 to 770: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=pkt(off=43,r=82,imm=0) R2=scalar(umax=127,var_off=(0x0; 0x7f)) R6=ctx(off=0,imm=0) R7=pkt(off=34,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (quic_data + sizeof(struct quic_short_header) > data_end) {
770: (bf) r2 = r7                     ; R2_w=pkt(off=34,r=82,imm=0) R7=pkt(off=34,r=82,imm=0)
771: (07) r2 += 17                    ; R2_w=pkt(off=51,r=82,imm=0)
772: (bf) r7 = r1                     ; R1=pkt(off=43,r=82,imm=0) R7_w=pkt(off=43,r=82,imm=0)
; if (quic_data + sizeof(struct quic_short_header) > data_end) {
773: (2d) if r2 > r8 goto pc+862      ; R2_w=pkt(off=51,r=82,imm=0) R8=pkt_end(off=0,imm=0)
; if (!connId) {
774: (15) if r7 == 0x0 goto pc+861    ; R7_w=pkt(off=43,r=82,imm=0)
; __u8 connIdVersion = (connId[0] >> 6);
775: (71) r1 = *(u8 *)(r7 +0)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=43,r=82,imm=0)
776: (bf) r2 = r1                     ; R1_w=scalar(id=161,umax=255,var_off=(0x0; 0xff)) R2_w=scalar(id=161,umax=255,var_off=(0x0; 0xff))
777: (77) r2 >>= 6                    ; R2=scalar(umax=3,var_off=(0x0; 0x3))
; if (connIdVersion == QUIC_CONNID_VERSION_V1) {
778: (15) if r2 == 0x3 goto pc+798    ; R2=scalar(umax=3,var_off=(0x0; 0x3))
779: (15) if r2 == 0x2 goto pc+809    ; R2=scalar(umax=3,var_off=(0x0; 0x3))
780: (55) if r2 != 0x1 goto pc+855    ; R2=1
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
781: (57) r1 &= 63                    ; R1_w=scalar(umax=63,var_off=(0x0; 0x3f))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
782: (67) r1 <<= 10                   ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
783: (71) r8 = *(u8 *)(r7 +1)         ; R7=pkt(off=43,r=82,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
784: (67) r8 <<= 2                    ; R8_w=scalar(umax=1020,var_off=(0x0; 0x3fc))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
785: (4f) r8 |= r1                    ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00)) R8_w=scalar()
786: (18) r1 = 0x100000000            ; R1_w=4294967296
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
788: (71) r2 = *(u8 *)(r7 +2)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=43,r=82,imm=0)
789: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
790: (05) goto pc+806
frame 1: propagating r0
last_idx 1597 first_idx 778
regs=2 stack=0 before 790: (05) goto pc+806
regs=2 stack=0 before 789: (77) r2 >>= 6
regs=2 stack=0 before 788: (71) r2 = *(u8 *)(r7 +2)
regs=2 stack=0 before 786: (18) r1 = 0x100000000
1597: safe

from 780 to 1636: safe

from 779 to 1589: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=161,umax=255,var_off=(0x0; 0xff)) R2=2 R6=ctx(off=0,imm=0) R7=pkt(off=43,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1589: (71) r1 = *(u8 *)(r7 +1)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=43,r=82,imm=0)
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1590: (67) r1 <<= 16                  ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1591: (71) r8 = *(u8 *)(r7 +2)        ; R7=pkt(off=43,r=82,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1592: (67) r8 <<= 8                   ; R8_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1593: (4f) r8 |= r1                   ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000)) R8_w=scalar()
1594: (18) r1 = 0x200000000           ; R1_w=8589934592
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1596: (71) r2 = *(u8 *)(r7 +3)        ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=43,r=82,imm=0)
1597: (57) r2 &= 255                  ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
1598: (4f) r8 |= r2                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1599: (bf) r2 = r8                    ; R2_w=scalar(id=162) R8_w=scalar(id=162)
1600: (67) r2 <<= 32                  ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
1601: (c7) r2 s>>= 32                 ; R2_w=scalar(smin=-2147483648,smax=2147483647)
1602: (b7) r3 = 1                     ; R3_w=1
; if (qpr.server_id > 0) {
1603: (6d) if r3 s> r2 goto pc+32     ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1604: (77) r1 >>= 32                  ; R1_w=2
; if (cid_version == QUIC_CONNID_VERSION_V1) {
1605: (15) if r1 == 0x3 goto pc+5
last_idx 1605 first_idx 1589
regs=2 stack=0 before 1604: (77) r1 >>= 32
regs=2 stack=0 before 1603: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 1602: (b7) r3 = 1
regs=2 stack=0 before 1601: (c7) r2 s>>= 32
regs=2 stack=0 before 1600: (67) r2 <<= 32
regs=2 stack=0 before 1599: (bf) r2 = r8
regs=2 stack=0 before 1598: (4f) r8 |= r2
regs=2 stack=0 before 1597: (57) r2 &= 255
regs=2 stack=0 before 1596: (71) r2 = *(u8 *)(r7 +3)
regs=2 stack=0 before 1594: (18) r1 = 0x200000000
frame 1: propagating r0
1606: safe

from 1603 to 1636: safe

from 778 to 1577: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=161,umax=255,var_off=(0x0; 0xff)) R2=3 R6=ctx(off=0,imm=0) R7=pkt(off=43,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1577: (71) r1 = *(u8 *)(r7 +1)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=43,r=82,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1578: (67) r1 <<= 24                  ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1579: (71) r8 = *(u8 *)(r7 +2)        ; R7=pkt(off=43,r=82,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1580: (67) r8 <<= 16                  ; R8_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1581: (4f) r8 |= r1                   ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432) R8_w=scalar()
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1582: (71) r1 = *(u8 *)(r7 +3)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=43,r=82,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1583: (67) r1 <<= 8                   ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1584: (4f) r8 |= r1                   ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00)) R8_w=scalar()
1585: (18) r1 = 0x300000000           ; R1_w=12884901888
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1587: (71) r2 = *(u8 *)(r7 +4)        ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=43,r=82,imm=0)
1588: (05) goto pc+8
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1597: (57) r2 &= 255                  ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
1598: (4f) r8 |= r2                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1599: (bf) r2 = r8                    ; R2_w=scalar(id=163) R8_w=scalar(id=163)
1600: (67) r2 <<= 32                  ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
1601: (c7) r2 s>>= 32                 ; R2_w=scalar(smin=-2147483648,smax=2147483647)
1602: (b7) r3 = 1                     ; R3_w=1
; if (qpr.server_id > 0) {
1603: (6d) if r3 s> r2 goto pc+32     ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1604: (77) r1 >>= 32
frame 1: propagating r0
last_idx 1605 first_idx 1577
regs=2 stack=0 before 1604: (77) r1 >>= 32
regs=2 stack=0 before 1603: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 1602: (b7) r3 = 1
regs=2 stack=0 before 1601: (c7) r2 s>>= 32
regs=2 stack=0 before 1600: (67) r2 <<= 32
regs=2 stack=0 before 1599: (bf) r2 = r8
regs=2 stack=0 before 1598: (4f) r8 |= r2
regs=2 stack=0 before 1597: (57) r2 &= 255
regs=2 stack=0 before 1588: (05) goto pc+8
regs=2 stack=0 before 1587: (71) r2 = *(u8 *)(r7 +4)
regs=2 stack=0 before 1585: (18) r1 = 0x300000000
1605: safe

from 1603 to 1636: safe

from 774 to 1636: safe

from 773 to 1636: safe

from 735 to 1636: safe

from 726 to 1857: safe

from 623 to 1640: R0=map_value(off=0,ks=4,vs=16,imm=0) R1=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; original_sport = pckt.flow.port16[0];
1640: (69) r1 = *(u16 *)(r10 -48)     ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
1641: (7b) *(u64 *)(r10 -168) = r1    ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-168_w=
1642: (71) r1 = *(u8 *)(r10 -36)      ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
1643: (57) r1 &= 2
frame -168: propagating fp0
last_idx 1644 first_idx 1640
regs=0 stack=100000 before 1643: (57) r1 &= 2
regs=0 stack=100000 before 1642: (71) r1 = *(u8 *)(r10 -36)
regs=0 stack=100000 before 1641: (7b) *(u64 *)(r10 -168) = r1
regs=2 stack=0 before 1640: (69) r1 = *(u16 *)(r10 -48)
parent already had regs=0 stack=0 marks: R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=0 R6_r=ctx(off=0,imm=0) R7=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9_rw=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16_r=????mmmm fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_rw=map_ptr fp-160_r=map_value fp-168=
1644: safe

from 613 to 1857: safe

from 605 to 621: R0=map_ptr(off=0,ks=40,vs=16,imm=0) R6=ctx(off=0,imm=0) R7=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152_w=map_ptr fp-160=map_value fp-168=
; if ((vip_info->flags & F_QUIC_VIP)) {
621: (61) r1 = *(u32 *)(r9 +0)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9=map_value(off=0,ks=20,vs=8,imm=0)
; if ((vip_info->flags & F_QUIC_VIP)) {
622: (57) r1 &= 4                     ; R1_w=scalar(umax=4,var_off=(0x0; 0x4))
; if ((vip_info->flags & F_QUIC_VIP)) {
623: (15) if r1 == 0x0 goto pc+1016   ; R1_w=scalar(umax=4,var_off=(0x0; 0x4))
; bool is_icmp = (pckt.flags & F_ICMP);
624: (71) r1 = *(u8 *)(r10 -36)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; bool is_icmp = (pckt.flags & F_ICMP);
625: (57) r1 &= 1                     ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
; if (is_icmp) {
626: (15) if r1 == 0x0 goto pc+91     ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
627: (05) goto pc+0
; __u32 stats_key = MAX_VIPS + QUIC_ICMP_STATS;
628: (62) *(u32 *)(r10 -16) = 523     ; R10=fp0 fp-16=????mmmm
629: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
630: (07) r2 += -16                   ; R2_w=fp-16
; struct lb_stats* data_stats = bpf_map_lookup_elem(&stats, &stats_key);
631: (18) r1 = 0xffffa03499be8000     ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
633: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=164,off=0,ks=4,vs=16,imm=0)
; if (!data_stats) {
634: (15) if r0 == 0x0 goto pc+1222   ; R0_w=map_value(off=0,ks=4,vs=16,imm=0)
; data_stats->v1 += 1;
635: (79) r1 = *(u64 *)(r0 +0)        ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
636: (07) r1 += 1                     ; R1_w=scalar()
637: (7b) *(u64 *)(r0 +0) = r1        ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
; (icmp_hdr->code == ICMP_PORT_UNREACH) ||
638: (71) r1 = *(u8 *)(r7 +35)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=82,imm=0)
; (icmp_hdr->code == ICMP_PORT_UNREACH) ||
639: (57) r1 &= 253                   ; R1=scalar(umax=253,var_off=(0x0; 0xfd))
; if (ignorable_quic_icmp_code(data, data_end, is_ipv6)) {
640: (55) if r1 != 0x1 goto pc+998    ; R1=1
; data_stats->v2 += 1;
641: (79) r1 = *(u64 *)(r0 +8)        ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
642: (07) r1 += 1                     ; R1_w=scalar()
643: (7b) *(u64 *)(r0 +8) = r1        ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
644: (05) goto pc+994
; 
1639: (79) r9 = *(u64 *)(r10 -144)    ; R9_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
; original_sport = pckt.flow.port16[0];
1640: (69) r1 = *(u16 *)(r10 -48)     ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
1641: (7b) *(u64 *)(r10 -168) = r1    ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-168_w=
1642: (71) r1 = *(u8 *)(r10 -36)      ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
1643: (57) r1 &= 2                    ; R1=scalar(umax=2,var_off=(0x0; 0x2))
; if (!dst && !(pckt.flags & F_SYN_SET) &&
1644: (55) if r1 != 0x0 goto pc+29    ; R1=0
; !(vip_info->flags & F_LRU_BYPASS)) {
1645: (61) r1 = *(u32 *)(r9 +0)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9=map_value(off=0,ks=20,vs=8,imm=0)
; !(vip_info->flags & F_LRU_BYPASS)) {
1646: (57) r1 &= 2                    ; R1_w=scalar(umax=2,var_off=(0x0; 0x2))
; if (!dst && !(pckt.flags & F_SYN_SET) &&
1647: (55) if r1 != 0x0 goto pc+26    ; R1_w=0
1648: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1649: (07) r2 += -80                  ; R2_w=fp-80
; dst_lru = bpf_map_lookup_elem(lru_map, &pckt->flow);
1650: (79) r1 = *(u64 *)(r10 -152)    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0
1651: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=165,off=0,ks=40,vs=16,imm=0)
1652: (bf) r7 = r0                    ; R0=map_value_or_null(id=165,off=0,ks=40,vs=16,imm=0) R7_w=map_value_or_null(id=165,off=0,ks=40,vs=16,imm=0)
; if (!dst_lru) {
1653: (15) if r7 == 0x0 goto pc+20    ; R7_w=map_value(off=0,ks=40,vs=16,imm=0)
; if (!isGlobalLru && pckt->flow.proto == IPPROTO_UDP) {
1654: (71) r1 = *(u8 *)(r10 -44)      ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (!isGlobalLru && pckt->flow.proto == IPPROTO_UDP) {
1655: (55) if r1 != 0x11 goto pc+8    ; R1_w=17
; cur_time = bpf_ktime_get_ns();
1656: (85) call bpf_ktime_get_ns#5    ; R0_w=scalar()
; if (cur_time - dst_lru->atime > LRU_UDP_TIMEOUT) {
1657: (79) r1 = *(u64 *)(r7 +8)       ; R1_w=scalar() R7_w=map_value(off=0,ks=40,vs=16,imm=0)
; if (cur_time - dst_lru->atime > LRU_UDP_TIMEOUT) {
1658: (bf) r2 = r0                    ; R0_w=scalar(id=166) R2_w=scalar(id=166)
1659: (1f) r2 -= r1                   ; R1_w=scalar() R2_w=scalar()
1660: (18) r1 = 0x6fc23ac00           ; R1=30000000000
; if (cur_time - dst_lru->atime > LRU_UDP_TIMEOUT) {
1662: (2d) if r2 > r1 goto pc+11      ; R1=30000000000 R2=scalar(umax=30000000000,var_off=(0x0; 0x7ffffffff))
; dst_lru->atime = cur_time;
1663: (7b) *(u64 *)(r7 +8) = r0       ; R0=scalar(id=166) R7=map_value(off=0,ks=40,vs=16,imm=0)
; key = dst_lru->pos;
1664: (61) r1 = *(u32 *)(r7 +0)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R7=map_value(off=0,ks=40,vs=16,imm=0)
; pckt->real_index = key;
1665: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
; key = dst_lru->pos;
1666: (63) *(u32 *)(r10 -16) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-16=
1667: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; key = dst_lru->pos;
1668: (07) r2 += -16                  ; R2_w=fp-16
; *real = bpf_map_lookup_elem(&reals, &key);
1669: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1671: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=167,off=0,ks=4,vs=20,imm=0)
1672: (7b) *(u64 *)(r10 -176) = r0    ; R0=map_value_or_null(id=167,off=0,ks=4,vs=20,imm=0) R10=fp0 fp-176_w=map_value_or_null
; if (!dst) {
1673: (55) if r0 != 0x0 goto pc+239   ; R0=0
; if (pckt.flow.proto == IPPROTO_TCP) {
1674: (71) r1 = *(u8 *)(r10 -44)      ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (pckt.flow.proto == IPPROTO_TCP) {
1675: (55) if r1 != 0x6 goto pc+18    ; R1_w=6
1676: (05) goto pc+0
; __u32 lru_stats_key = MAX_VIPS + LRU_MISS_CNTR;
1677: (62) *(u32 *)(r10 -16) = 513    ; R10=fp0 fp-16=????mmmm
1678: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1679: (07) r2 += -16                  ; R2_w=fp-16
; bpf_map_lookup_elem(&stats, &lru_stats_key);
1680: (18) r1 = 0xffffa03499be8000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
1682: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=168,off=0,ks=4,vs=16,imm=0)
; if (!lru_stats) {
1683: (15) if r0 == 0x0 goto pc+173   ; R0=map_value(off=0,ks=4,vs=16,imm=0)
; if (pckt.flags & F_SYN_SET) {
1684: (71) r2 = *(u8 *)(r10 -36)      ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (pckt.flags & F_SYN_SET) {
1685: (57) r2 &= 2                    ; R2_w=scalar(umax=2,var_off=(0x0; 0x2))
1686: (b7) r1 = 1                     ; R1_w=1
1687: (15) if r2 == 0x0 goto pc+1     ; R2_w=scalar(umax=2,var_off=(0x0; 0x2))
1688: (b7) r1 = 0                     ; R1_w=0
; if (pckt.flags & F_SYN_SET) {
1689: (67) r1 <<= 3                   ; R1_w=0
; 
1690: (0f) r0 += r1
last_idx 1690 first_idx 1683
regs=2 stack=0 before 1689: (67) r1 <<= 3
regs=2 stack=0 before 1688: (b7) r1 = 0
1691: R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=P0
1691: (79) r1 = *(u64 *)(r0 +0)       ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1692: (07) r1 += 1                    ; R1_w=scalar()
1693: (7b) *(u64 *)(r0 +0) = r1       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1=scalar()
1694: (b7) r9 = 0                     ; R9_w=0
; struct real_pos_lru new_dst_lru = {};
1695: (7b) *(u64 *)(r10 -8) = r9
last_idx 1695 first_idx 1694
regs=200 stack=0 before 1694: (b7) r9 = 0
1696: R9_w=P0 R10=fp0 fp-8_w=00000000
1696: (7b) *(u64 *)(r10 -16) = r9     ; R9_w=P0 R10=fp0 fp-16_w=00000000
1697: (05) goto pc+0
; __u32 conn_rate_key = MAX_VIPS + NEW_CONN_RATE_CNTR;
1698: (62) *(u32 *)(r10 -28) = 514    ; R10=fp0 fp-32=mmmm????
1699: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1700: (07) r2 += -28                  ; R2_w=fp-28
; bpf_map_lookup_elem(&stats, &conn_rate_key);
1701: (18) r1 = 0xffffa03499be8000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
1703: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=169,off=0,ks=4,vs=16,imm=0)
1704: (bf) r7 = r0                    ; R0=map_value_or_null(id=169,off=0,ks=4,vs=16,imm=0) R7_w=map_value_or_null(id=169,off=0,ks=4,vs=16,imm=0)
1705: (b7) r8 = 1                     ; R8_w=1
; if (!conn_rate_stats) {
1706: (15) if r7 == 0x0 goto pc+16    ; R7_w=map_value(off=0,ks=4,vs=16,imm=0)
; *cur_time = bpf_ktime_get_ns();
1707: (85) call bpf_ktime_get_ns#5    ; R0_w=scalar()
1708: (bf) r9 = r0                    ; R0_w=scalar(id=170) R9_w=scalar(id=170)
; if ((*cur_time - conn_rate_stats->v2) > ONE_SEC) {
1709: (79) r1 = *(u64 *)(r7 +8)       ; R1_w=scalar() R7_w=map_value(off=0,ks=4,vs=16,imm=0)
; if ((*cur_time - conn_rate_stats->v2) > ONE_SEC) {
1710: (bf) r2 = r9                    ; R2_w=scalar(id=170) R9_w=scalar(id=170)
1711: (1f) r2 -= r1                   ; R1_w=scalar() R2_w=scalar()
1712: (b7) r1 = 1000000001            ; R1=1000000001
; if ((*cur_time - conn_rate_stats->v2) > ONE_SEC) {
1713: (2d) if r1 > r2 goto pc+4       ; R1=1000000001 R2=scalar(umin=1000000001)
; conn_rate_stats->v2 = *cur_time;
1714: (7b) *(u64 *)(r7 +8) = r9       ; R7=map_value(off=0,ks=4,vs=16,imm=0) R9=scalar(id=170)
1715: (05) goto pc+0
; conn_rate_stats->v1 = 1;
1716: (7a) *(u64 *)(r7 +0) = 1        ; R7=map_value(off=0,ks=4,vs=16,imm=0)
1717: (05) goto pc+4
; if (conn_rate_stats->v1 > MAX_CONN_RATE) {
1722: (b7) r8 = 0                     ; R8_w=0
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
1723: (79) r1 = *(u64 *)(r10 -144)    ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
1724: (61) r1 = *(u32 *)(r1 +0)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
1725: (57) r1 &= 8                    ; R1=scalar(umax=8,var_off=(0x0; 0x8))
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
1726: (55) if r1 != 0x0 goto pc+2     ; R1=0
; return jhash_2words(pckt->flow.src, pckt->flow.ports, INIT_JHASH_SEED);
1727: (61) r5 = *(u32 *)(r10 -80)     ; R5_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
1728: (05) goto pc+5
; return jhash_2words(pckt->flow.src, pckt->flow.ports, INIT_JHASH_SEED);
1734: (61) r3 = *(u32 *)(r10 -48)     ; R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; b += initval;
1735: (07) r3 += -525483785           ; R3_w=scalar(smin=-525483785,smax=3769483510)
1736: (05) goto pc+0
1737: (05) goto pc+0
1738: (05) goto pc+0
1739: (bc) w2 = w3                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3=scalar(smin=-525483785,smax=3769483510)
; return (word << shift) | (word >> ((-shift) & 31));
1740: (77) r2 >>= 18                  ; R2_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1741: (bf) r4 = r3                    ; R3=scalar(id=171,smin=-525483785,smax=3769483510) R4_w=scalar(id=171,smin=-525483785,smax=3769483510)
1742: (67) r4 <<= 14                  ; R4_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1743: (4f) r4 |= r2                   ; R2_w=scalar(umax=16383,var_off=(0x0; 0x3fff)) R4_w=scalar()
; __jhash_final(a, b, c);
1744: (bf) r2 = r3                    ; R2_w=scalar(id=171,smin=-525483785,smax=3769483510) R3=scalar(id=171,smin=-525483785,smax=3769483510)
1745: (a7) r2 ^= -525483785           ; R2_w=scalar()
1746: (1f) r2 -= r4                   ; R2_w=scalar() R4_w=scalar()
1747: (05) goto pc+0
1748: (05) goto pc+0
1749: (bf) r0 = r2                    ; R0_w=scalar(id=172) R2=scalar(id=172)
1750: (67) r0 <<= 32                  ; R0_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
; return (word << shift) | (word >> ((-shift) & 31));
1751: (77) r0 >>= 53                  ; R0_w=scalar(umax=2047,var_off=(0x0; 0x7ff))
1752: (bf) r7 = r2                    ; R2=scalar(id=172) R7_w=scalar(id=172)
1753: (67) r7 <<= 11                  ; R7_w=scalar(smax=9223372036854773760,umax=18446744073709549568,var_off=(0x0; 0xfffffffffffff800),s32_max=2147481600,u32_max=-2048)
1754: (4f) r7 |= r0                   ; R0_w=scalar(umax=2047,var_off=(0x0; 0x7ff)) R7_w=scalar()
; a += initval;
1755: (07) r5 += -525483785           ; R5_w=scalar(smin=-525483785,smax=3769483510)
; __jhash_final(a, b, c);
1756: (bf) r4 = r2                    ; R2=scalar(id=172) R4_w=scalar(id=172)
1757: (af) r4 ^= r5                   ; R4_w=scalar() R5_w=scalar(smin=-525483785,smax=3769483510)
1758: (1f) r4 -= r7                   ; R4_w=scalar() R7_w=scalar()
1759: (05) goto pc+0
1760: (05) goto pc+0
1761: (05) goto pc+0
1762: (bc) w0 = w4                    ; R0_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R4=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1763: (77) r0 >>= 7                   ; R0_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff))
1764: (bf) r7 = r4                    ; R4=scalar(id=173) R7_w=scalar(id=173)
1765: (67) r7 <<= 25                  ; R7_w=scalar(smax=9223372036821221376,umax=18446744073675997184,var_off=(0x0; 0xfffffffffe000000),s32_max=2113929216,u32_max=-33554432)
1766: (4f) r7 |= r0                   ; R0_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff)) R7_w=scalar()
; __jhash_final(a, b, c);
1767: (bf) r5 = r4                    ; R4=scalar(id=173) R5_w=scalar(id=173)
1768: (af) r5 ^= r3                   ; R3=scalar(id=171,smin=-525483785,smax=3769483510) R5_w=scalar()
1769: (1f) r5 -= r7                   ; R5_w=scalar() R7_w=scalar()
1770: (05) goto pc+0
1771: (05) goto pc+0
1772: (05) goto pc+0
1773: (bc) w0 = w5                    ; R0_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R5=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1774: (77) r0 >>= 16                  ; R0_w=scalar(umax=65535,var_off=(0x0; 0xffff))
1775: (bf) r7 = r5                    ; R5=scalar(id=174) R7_w=scalar(id=174)
1776: (67) r7 <<= 16                  ; R7_w=scalar(smax=9223372036854710272,umax=18446744073709486080,var_off=(0x0; 0xffffffffffff0000),s32_max=2147418112,u32_max=-65536)
1777: (4f) r7 |= r0                   ; R0_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R7_w=scalar()
; __jhash_final(a, b, c);
1778: (bf) r3 = r5                    ; R3_w=scalar(id=174) R5=scalar(id=174)
1779: (af) r3 ^= r2                   ; R2=scalar(id=172) R3_w=scalar()
1780: (1f) r3 -= r7                   ; R3_w=scalar() R7_w=scalar()
1781: (05) goto pc+0
1782: (05) goto pc+0
1783: (05) goto pc+0
1784: (bc) w0 = w3                    ; R0_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1785: (77) r0 >>= 28                  ; R0_w=scalar(umax=15,var_off=(0x0; 0xf))
1786: (bf) r7 = r3                    ; R3=scalar(id=175) R7_w=scalar(id=175)
1787: (67) r7 <<= 4                   ; R7_w=scalar(smax=9223372036854775792,umax=18446744073709551600,var_off=(0x0; 0xfffffffffffffff0),s32_max=2147483632,u32_max=-16)
1788: (4f) r7 |= r0                   ; R0_w=scalar(umax=15,var_off=(0x0; 0xf)) R7_w=scalar()
; __jhash_final(a, b, c);
1789: (bf) r2 = r3                    ; R2_w=scalar(id=175) R3=scalar(id=175)
1790: (af) r2 ^= r4                   ; R2_w=scalar() R4=scalar(id=173)
1791: (1f) r2 -= r7                   ; R2_w=scalar() R7_w=scalar()
1792: (05) goto pc+0
1793: (bc) w4 = w2                    ; R2=scalar() R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1794: (77) r4 >>= 18                  ; R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1795: (bf) r1 = r2                    ; R1_w=scalar(id=176) R2=scalar(id=176)
1796: (67) r1 <<= 14                  ; R1_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1797: (4f) r1 |= r4                   ; R1_w=scalar() R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
; __jhash_final(a, b, c);
1798: (af) r2 ^= r5                   ; R2_w=scalar() R5=scalar(id=174)
1799: (1f) r2 -= r1                   ; R1_w=scalar() R2_w=scalar()
1800: (05) goto pc+0
1801: (05) goto pc+0
1802: (05) goto pc+0
1803: (bc) w4 = w2                    ; R2=scalar() R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1804: (77) r4 >>= 8                   ; R4_w=scalar(umax=16777215,var_off=(0x0; 0xffffff))
1805: (bf) r1 = r2                    ; R1_w=scalar(id=177) R2=scalar(id=177)
1806: (67) r1 <<= 24                  ; R1_w=scalar(smax=9223372036837998592,umax=18446744073692774400,var_off=(0x0; 0xffffffffff000000),s32_max=2130706432,u32_max=-16777216)
1807: (4f) r1 |= r4                   ; R1_w=scalar() R4_w=scalar(umax=16777215,var_off=(0x0; 0xffffff))
; __jhash_final(a, b, c);
1808: (af) r2 ^= r3                   ; R2_w=scalar() R3=scalar(id=175)
1809: (1f) r2 -= r1                   ; R1_w=scalar() R2_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1810: (79) r1 = *(u64 *)(r10 -144)    ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
1811: (61) r1 = *(u32 *)(r1 +4)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; key = RING_SIZE * (vip_info->vip_num) + hash;
1812: (27) r1 *= 65537                ; R1_w=scalar(umax=281479271612415,var_off=(0x0; 0x1ffffffffffff))
; __jhash_final(a, b, c);
1813: (bc) w2 = w2                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
1814: (05) goto pc+0
; hash = get_packet_hash(pckt, hash_16bytes) % RING_SIZE;
1815: (97) r2 %= 65537                ; R2_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1816: (0f) r2 += r1                   ; R1=scalar(umax=281479271612415,var_off=(0x0; 0x1ffffffffffff)) R2_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1817: (63) *(u32 *)(r10 -20) = r2     ; R2_w=scalar() R10=fp0 fp-24=mmmm????
1818: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1819: (07) r2 += -20                  ; R2_w=fp-20
; real_pos = bpf_map_lookup_elem(&ch_rings, &key);
1820: (18) r1 = 0xffffaebaa0631000    ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
1822: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=178,off=0,ks=4,vs=4,imm=0)
; if (!real_pos) {
1823: (15) if r0 == 0x0 goto pc+33    ; R0_w=map_value(off=0,ks=4,vs=4,imm=0)
; key = *real_pos;
1824: (61) r1 = *(u32 *)(r0 +0)       ; R0_w=map_value(off=0,ks=4,vs=4,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; key = *real_pos;
1825: (63) *(u32 *)(r10 -20) = r1     ; R1=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-24=mmmm????
; if (key == 0) {
1826: (55) if r1 != 0x0 goto pc+12    ; R1=0
1827: (05) goto pc+0
; __u32 ch_drop_stats_key = MAX_VIPS + CH_DROP_STATS;
1828: (62) *(u32 *)(r10 -28) = 521    ; R10=fp0 fp-32=mmmm????
1829: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1830: (07) r2 += -28                  ; R2_w=fp-28
; bpf_map_lookup_elem(&stats, &ch_drop_stats_key);
1831: (18) r1 = 0xffffa03499be8000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
1833: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=179,off=0,ks=4,vs=16,imm=0)
; if (!ch_drop_stats) {
1834: (15) if r0 == 0x0 goto pc+3     ; R0_w=map_value(off=0,ks=4,vs=16,imm=0)
; ch_drop_stats->v2 += 1;
1835: (79) r1 = *(u64 *)(r0 +8)       ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1836: (07) r1 += 1                    ; R1_w=scalar()
1837: (7b) *(u64 *)(r0 +8) = r1       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1=scalar()
; pckt->real_index = key;
1838: (61) r1 = *(u32 *)(r10 -20)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; pckt->real_index = key;
1839: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1840: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1841: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1842: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1844: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=180,off=0,ks=4,vs=20,imm=0)
; if (!(*real)) {
1845: (55) if r0 != 0x0 goto pc+14    ; R0_w=0
1846: (05) goto pc+0
1847: safe

from 1845 to 1860: R0=map_value(off=0,ks=4,vs=20,imm=0) R6=ctx(off=0,imm=0) R7=scalar() R8=0 R9=scalar(id=170) R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0
; }
1860: (7b) *(u64 *)(r10 -176) = r0    ; R0=map_value(off=0,ks=4,vs=20,imm=0) R10=fp0 fp-176_w=map_value
; if (lru_map && !(vip_info->flags & F_LRU_BYPASS) && !under_flood) {
1861: (79) r1 = *(u64 *)(r10 -152)    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0
1862: (15) if r1 == 0x0 goto pc+18    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0)
; if (lru_map && !(vip_info->flags & F_LRU_BYPASS) && !under_flood) {
1863: (79) r1 = *(u64 *)(r10 -144)    ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
1864: (61) r1 = *(u32 *)(r1 +0)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (lru_map && !(vip_info->flags & F_LRU_BYPASS) && !under_flood) {
1865: (57) r1 &= 2                    ; R1_w=scalar(umax=2,var_off=(0x0; 0x2))
1866: (77) r1 >>= 1                   ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
; if (lru_map && !(vip_info->flags & F_LRU_BYPASS) && !under_flood) {
1867: (4f) r8 |= r1                   ; R1_w=scalar(umax=1,var_off=(0x0; 0x1)) R8_w=scalar()
1868: (55) if r8 != 0x0 goto pc+12    ; R8_w=0
; if (pckt->flow.proto == IPPROTO_UDP) {
1869: (71) r1 = *(u8 *)(r10 -44)      ; R1=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (pckt->flow.proto == IPPROTO_UDP) {
1870: (55) if r1 != 0x11 goto pc+1    ; R1=17
; new_dst_lru.atime = cur_time;
1871: (7b) *(u64 *)(r10 -8) = r9      ; R9=scalar(id=170) R10=fp0 fp-8_w=mmmmmmmm
; new_dst_lru.pos = key;
1872: (61) r1 = *(u32 *)(r10 -20)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; new_dst_lru.pos = key;
1873: (63) *(u32 *)(r10 -16) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-16=
1874: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; new_dst_lru.pos = key;
1875: (07) r2 += -80                  ; R2_w=fp-80
1876: (bf) r3 = r10                   ; R3_w=fp0 R10=fp0
1877: (07) r3 += -16                  ; R3_w=fp-16
; bpf_map_update_elem(lru_map, &pckt->flow, &new_dst_lru, BPF_ANY);
1878: (79) r1 = *(u64 *)(r10 -152)    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0
1879: (b7) r4 = 0                     ; R4_w=0
1880: (85) call bpf_map_update_elem#2
1881: safe

from 1870 to 1872: R0=map_value(off=0,ks=4,vs=20,imm=0) R1=scalar(umax=255,var_off=(0x0; 0xff)) R6=ctx(off=0,imm=0) R7=scalar() R8=0 R9=scalar(id=170) R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=map_value
; new_dst_lru.pos = key;
1872: (61) r1 = *(u32 *)(r10 -20)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; new_dst_lru.pos = key;
1873: (63) *(u32 *)(r10 -16) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-16=
1874: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; new_dst_lru.pos = key;
1875: (07) r2 += -80                  ; R2_w=fp-80
1876: (bf) r3 = r10                   ; R3_w=fp0 R10=fp0
1877: (07) r3 += -16                  ; R3_w=fp-16
; bpf_map_update_elem(lru_map, &pckt->flow, &new_dst_lru, BPF_ANY);
1878: (79) r1 = *(u64 *)(r10 -152)    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0
1879: (b7) r4 = 0                     ; R4_w=0
1880: (85) call bpf_map_update_elem#2
1881: safe

from 1868 to 1881: safe

from 1862 to 1881: safe

from 1834 to 1838: safe

from 1826 to 1839: R0=map_value(off=0,ks=4,vs=4,imm=0) R1=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6=ctx(off=0,imm=0) R7=scalar() R8=0 R9=scalar(id=170) R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0
; pckt->real_index = key;
1839: (63) *(u32 *)(r10 -40) = r1     ; R1=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1840: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1841: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1842: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1844: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=181,off=0,ks=4,vs=20,imm=0)
; if (!(*real)) {
1845: (55) if r0 != 0x0 goto pc+14    ; R0=0
1846: (05) goto pc+0
1847: safe

from 1845 to 1860: safe

from 1823 to 1857: safe

from 1726 to 1729: R0=scalar(id=170) R1=scalar(umax=8,var_off=(0x0; 0x8)) R2=scalar(umin=1000000001) R6=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=16,imm=0) R8=0 R9=scalar(id=170) R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0
; pckt->flow.port16[0] = pckt->flow.port16[1];
1729: (69) r1 = *(u16 *)(r10 -46)     ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; pckt->flow.port16[0] = pckt->flow.port16[1];
1730: (6b) *(u16 *)(r10 -48) = r1     ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-48=
1731: (b7) r5 = 0                     ; R5_w=0
; memset(pckt->flow.srcv6, 0, 16);
1732: (7b) *(u64 *)(r10 -80) = r5
last_idx 1732 first_idx 1726
regs=20 stack=0 before 1731: (b7) r5 = 0
1733: R5_w=P0 R10=fp0 fp-80_w=00000000
1733: (7b) *(u64 *)(r10 -72) = r5     ; R5=P0 R10=fp0 fp-72=00000000
; return jhash_2words(pckt->flow.src, pckt->flow.ports, INIT_JHASH_SEED);
1734: (61) r3 = *(u32 *)(r10 -48)     ; R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; b += initval;
1735: (07) r3 += -525483785           ; R3_w=scalar(smin=-525483785,smax=3769483510)
1736: (05) goto pc+0
1737: (05) goto pc+0
1738: (05) goto pc+0
1739: (bc) w2 = w3                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3_w=scalar(smin=-525483785,smax=3769483510)
; return (word << shift) | (word >> ((-shift) & 31));
1740: (77) r2 >>= 18                  ; R2_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1741: (bf) r4 = r3                    ; R3_w=scalar(id=182,smin=-525483785,smax=3769483510) R4_w=scalar(id=182,smin=-525483785,smax=3769483510)
1742: (67) r4 <<= 14                  ; R4_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1743: (4f) r4 |= r2                   ; R2_w=scalar(umax=16383,var_off=(0x0; 0x3fff)) R4_w=scalar()
; __jhash_final(a, b, c);
1744: (bf) r2 = r3                    ; R2_w=scalar(id=182,smin=-525483785,smax=3769483510) R3_w=scalar(id=182,smin=-525483785,smax=3769483510)
1745: (a7) r2 ^= -525483785           ; R2_w=scalar()
1746: (1f) r2 -= r4                   ; R2_w=scalar() R4_w=scalar()
1747: (05) goto pc+0
1748: (05) goto pc+0
1749: (bf) r0 = r2                    ; R0_w=scalar(id=183) R2=scalar(id=183)
1750: (67) r0 <<= 32                  ; R0_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
; return (word << shift) | (word >> ((-shift) & 31));
1751: (77) r0 >>= 53                  ; R0_w=scalar(umax=2047,var_off=(0x0; 0x7ff))
1752: (bf) r7 = r2                    ; R2=scalar(id=183) R7_w=scalar(id=183)
1753: (67) r7 <<= 11                  ; R7_w=scalar(smax=9223372036854773760,umax=18446744073709549568,var_off=(0x0; 0xfffffffffffff800),s32_max=2147481600,u32_max=-2048)
1754: (4f) r7 |= r0                   ; R0_w=scalar(umax=2047,var_off=(0x0; 0x7ff)) R7_w=scalar()
; a += initval;
1755: (07) r5 += -525483785           ; R5_w=P-525483785
; __jhash_final(a, b, c);
1756: (bf) r4 = r2                    ; R2=scalar(id=183) R4_w=scalar(id=183)
1757: (af) r4 ^= r5                   ; R4_w=scalar() R5_w=P-525483785
1758: (1f) r4 -= r7                   ; R4_w=scalar() R7_w=scalar()
1759: (05) goto pc+0
1760: (05) goto pc+0
1761: (05) goto pc+0
1762: (bc) w0 = w4                    ; R0_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R4=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1763: (77) r0 >>= 7                   ; R0_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff))
1764: (bf) r7 = r4                    ; R4=scalar(id=184) R7_w=scalar(id=184)
1765: (67) r7 <<= 25                  ; R7_w=scalar(smax=9223372036821221376,umax=18446744073675997184,var_off=(0x0; 0xfffffffffe000000),s32_max=2113929216,u32_max=-33554432)
1766: (4f) r7 |= r0                   ; R0_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff)) R7_w=scalar()
; __jhash_final(a, b, c);
1767: (bf) r5 = r4                    ; R4=scalar(id=184) R5_w=scalar(id=184)
1768: (af) r5 ^= r3                   ; R3=scalar(id=182,smin=-525483785,smax=3769483510) R5_w=scalar()
1769: (1f) r5 -= r7                   ; R5_w=scalar() R7_w=scalar()
1770: (05) goto pc+0
1771: (05) goto pc+0
1772: (05) goto pc+0
1773: (bc) w0 = w5                    ; R0_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R5=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1774: (77) r0 >>= 16                  ; R0_w=scalar(umax=65535,var_off=(0x0; 0xffff))
1775: (bf) r7 = r5                    ; R5=scalar(id=185) R7_w=scalar(id=185)
1776: (67) r7 <<= 16                  ; R7_w=scalar(smax=9223372036854710272,umax=18446744073709486080,var_off=(0x0; 0xffffffffffff0000),s32_max=2147418112,u32_max=-65536)
1777: (4f) r7 |= r0                   ; R0_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R7_w=scalar()
; __jhash_final(a, b, c);
1778: (bf) r3 = r5                    ; R3_w=scalar(id=185) R5=scalar(id=185)
1779: (af) r3 ^= r2                   ; R2=scalar(id=183) R3_w=scalar()
1780: (1f) r3 -= r7                   ; R3_w=scalar() R7_w=scalar()
1781: (05) goto pc+0
1782: (05) goto pc+0
1783: (05) goto pc+0
1784: (bc) w0 = w3                    ; R0_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1785: (77) r0 >>= 28                  ; R0_w=scalar(umax=15,var_off=(0x0; 0xf))
1786: (bf) r7 = r3                    ; R3=scalar(id=186) R7_w=scalar(id=186)
1787: (67) r7 <<= 4                   ; R7_w=scalar(smax=9223372036854775792,umax=18446744073709551600,var_off=(0x0; 0xfffffffffffffff0),s32_max=2147483632,u32_max=-16)
1788: (4f) r7 |= r0                   ; R0_w=scalar(umax=15,var_off=(0x0; 0xf)) R7_w=scalar()
; __jhash_final(a, b, c);
1789: (bf) r2 = r3                    ; R2_w=scalar(id=186) R3=scalar(id=186)
1790: (af) r2 ^= r4                   ; R2_w=scalar() R4=scalar(id=184)
1791: (1f) r2 -= r7                   ; R2_w=scalar() R7_w=scalar()
1792: (05) goto pc+0
1793: (bc) w4 = w2                    ; R2=scalar() R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1794: (77) r4 >>= 18                  ; R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1795: (bf) r1 = r2                    ; R1_w=scalar(id=187) R2=scalar(id=187)
1796: (67) r1 <<= 14                  ; R1_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1797: (4f) r1 |= r4                   ; R1_w=scalar() R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
; __jhash_final(a, b, c);
1798: (af) r2 ^= r5                   ; R2_w=scalar() R5=scalar(id=185)
1799: (1f) r2 -= r1                   ; R1_w=scalar() R2_w=scalar()
1800: (05) goto pc+0
1801: (05) goto pc+0
1802: (05) goto pc+0
1803: (bc) w4 = w2                    ; R2=scalar() R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1804: (77) r4 >>= 8                   ; R4_w=scalar(umax=16777215,var_off=(0x0; 0xffffff))
1805: (bf) r1 = r2                    ; R1_w=scalar(id=188) R2=scalar(id=188)
1806: (67) r1 <<= 24                  ; R1_w=scalar(smax=9223372036837998592,umax=18446744073692774400,var_off=(0x0; 0xffffffffff000000),s32_max=2130706432,u32_max=-16777216)
1807: (4f) r1 |= r4                   ; R1_w=scalar() R4_w=scalar(umax=16777215,var_off=(0x0; 0xffffff))
; __jhash_final(a, b, c);
1808: (af) r2 ^= r3                   ; R2_w=scalar() R3=scalar(id=186)
1809: (1f) r2 -= r1                   ; R1_w=scalar() R2_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1810: (79) r1 = *(u64 *)(r10 -144)    ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
1811: (61) r1 = *(u32 *)(r1 +4)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; key = RING_SIZE * (vip_info->vip_num) + hash;
1812: (27) r1 *= 65537                ; R1_w=scalar(umax=281479271612415,var_off=(0x0; 0x1ffffffffffff))
; __jhash_final(a, b, c);
1813: (bc) w2 = w2                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
1814: (05) goto pc+0
; hash = get_packet_hash(pckt, hash_16bytes) % RING_SIZE;
1815: (97) r2 %= 65537                ; R2_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1816: (0f) r2 += r1                   ; R1=scalar(umax=281479271612415,var_off=(0x0; 0x1ffffffffffff)) R2_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1817: (63) *(u32 *)(r10 -20) = r2     ; R2_w=scalar() R10=fp0 fp-24=mmmm????
1818: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1819: (07) r2 += -20                  ; R2_w=fp-20
; real_pos = bpf_map_lookup_elem(&ch_rings, &key);
1820: (18) r1 = 0xffffaebaa0631000    ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
1822: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=189,off=0,ks=4,vs=4,imm=0)
; if (!real_pos) {
1823: (15) if r0 == 0x0 goto pc+33    ; R0_w=map_value(off=0,ks=4,vs=4,imm=0)
; key = *real_pos;
1824: (61) r1 = *(u32 *)(r0 +0)       ; R0_w=map_value(off=0,ks=4,vs=4,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; key = *real_pos;
1825: (63) *(u32 *)(r10 -20) = r1     ; R1=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-24=mmmm????
; if (key == 0) {
1826: (55) if r1 != 0x0 goto pc+12    ; R1=0
1827: (05) goto pc+0
; __u32 ch_drop_stats_key = MAX_VIPS + CH_DROP_STATS;
1828: (62) *(u32 *)(r10 -28) = 521    ; R10=fp0 fp-32=mmmm????
1829: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1830: (07) r2 += -28                  ; R2_w=fp-28
; bpf_map_lookup_elem(&stats, &ch_drop_stats_key);
1831: (18) r1 = 0xffffa03499be8000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
1833: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=190,off=0,ks=4,vs=16,imm=0)
; if (!ch_drop_stats) {
1834: (15) if r0 == 0x0 goto pc+3     ; R0_w=map_value(off=0,ks=4,vs=16,imm=0)
; ch_drop_stats->v2 += 1;
1835: (79) r1 = *(u64 *)(r0 +8)       ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1836: (07) r1 += 1                    ; R1_w=scalar()
1837: (7b) *(u64 *)(r0 +8) = r1       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1=scalar()
; pckt->real_index = key;
1838: (61) r1 = *(u32 *)(r10 -20)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; pckt->real_index = key;
1839: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1840: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1841: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1842: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1844: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=191,off=0,ks=4,vs=20,imm=0)
; if (!(*real)) {
1845: (55) if r0 != 0x0 goto pc+14    ; R0_w=0
1846: (05) goto pc+0
1847: safe

from 1845 to 1860: R0=map_value(off=0,ks=4,vs=20,imm=0) R6=ctx(off=0,imm=0) R7=scalar() R8=0 R9=scalar(id=170) R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=00000000 fp-80=00000000 fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0
; }
1860: (7b) *(u64 *)(r10 -176) = r0    ; R0=map_value(off=0,ks=4,vs=20,imm=0) R10=fp0 fp-176_w=map_value
; if (lru_map && !(vip_info->flags & F_LRU_BYPASS) && !under_flood) {
1861: (79) r1 = *(u64 *)(r10 -152)    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0
1862: (15) if r1 == 0x0 goto pc+18    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0)
; if (lru_map && !(vip_info->flags & F_LRU_BYPASS) && !under_flood) {
1863: (79) r1 = *(u64 *)(r10 -144)    ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
1864: (61) r1 = *(u32 *)(r1 +0)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (lru_map && !(vip_info->flags & F_LRU_BYPASS) && !under_flood) {
1865: (57) r1 &= 2                    ; R1_w=scalar(umax=2,var_off=(0x0; 0x2))
1866: (77) r1 >>= 1                   ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
; if (lru_map && !(vip_info->flags & F_LRU_BYPASS) && !under_flood) {
1867: (4f) r8 |= r1                   ; R1_w=scalar(umax=1,var_off=(0x0; 0x1)) R8_w=scalar()
1868: (55) if r8 != 0x0 goto pc+12    ; R8_w=0
; if (pckt->flow.proto == IPPROTO_UDP) {
1869: (71) r1 = *(u8 *)(r10 -44)      ; R1=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (pckt->flow.proto == IPPROTO_UDP) {
1870: (55) if r1 != 0x11 goto pc+1    ; R1=17
; new_dst_lru.atime = cur_time;
1871: (7b) *(u64 *)(r10 -8) = r9      ; R9=scalar(id=170) R10=fp0 fp-8_w=mmmmmmmm
; new_dst_lru.pos = key;
1872: (61) r1 = *(u32 *)(r10 -20)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; new_dst_lru.pos = key;
1873: (63) *(u32 *)(r10 -16) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-16=
1874: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; new_dst_lru.pos = key;
1875: (07) r2 += -80                  ; R2_w=fp-80
1876: (bf) r3 = r10                   ; R3_w=fp0 R10=fp0
1877: (07) r3 += -16                  ; R3_w=fp-16
; bpf_map_update_elem(lru_map, &pckt->flow, &new_dst_lru, BPF_ANY);
1878: (79) r1 = *(u64 *)(r10 -152)    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0
1879: (b7) r4 = 0                     ; R4_w=0
1880: (85) call bpf_map_update_elem#2
1881: safe

from 1870 to 1872: R0=map_value(off=0,ks=4,vs=20,imm=0) R1=scalar(umax=255,var_off=(0x0; 0xff)) R6=ctx(off=0,imm=0) R7=scalar() R8=0 R9=scalar(id=170) R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=00000000 fp-80=00000000 fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=map_value
; new_dst_lru.pos = key;
1872: (61) r1 = *(u32 *)(r10 -20)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; new_dst_lru.pos = key;
1873: (63) *(u32 *)(r10 -16) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-16=
1874: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; new_dst_lru.pos = key;
1875: (07) r2 += -80                  ; R2_w=fp-80
1876: (bf) r3 = r10                   ; R3_w=fp0 R10=fp0
1877: (07) r3 += -16                  ; R3_w=fp-16
; bpf_map_update_elem(lru_map, &pckt->flow, &new_dst_lru, BPF_ANY);
1878: (79) r1 = *(u64 *)(r10 -152)    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0
1879: (b7) r4 = 0                     ; R4_w=0
1880: (85) call bpf_map_update_elem#2
1881: safe
frame -168: propagating fp0
last_idx 1881 first_idx 1860
regs=0 stack=100000 before 1868: (55) if r8 != 0x0 goto pc+12
regs=0 stack=100000 before 1867: (4f) r8 |= r1
regs=0 stack=100000 before 1866: (77) r1 >>= 1
regs=0 stack=100000 before 1865: (57) r1 &= 2
regs=0 stack=100000 before 1864: (61) r1 = *(u32 *)(r1 +0)
regs=0 stack=100000 before 1863: (79) r1 = *(u64 *)(r10 -144)
regs=0 stack=100000 before 1862: (15) if r1 == 0x0 goto pc+18
regs=0 stack=100000 before 1861: (79) r1 = *(u64 *)(r10 -152)
regs=0 stack=100000 before 1860: (7b) *(u64 *)(r10 -176) = r0
parent didn't have regs=0 stack=100000 marks: R0_rw=map_value(off=0,ks=4,vs=20,imm=0) R6_r=ctx(off=0,imm=0) R7=scalar() R8_r=0 R9_r=scalar(id=170) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-24_r=mmmm???? fp-32_r=mmmm???? fp-40_r= fp-48_r= fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P fp-176=0
last_idx 1845 first_idx 1838
regs=0 stack=100000 before 1845: (55) if r0 != 0x0 goto pc+14
regs=0 stack=100000 before 1844: (85) call bpf_map_lookup_elem#1
regs=0 stack=100000 before 1842: (18) r1 = 0xffffaeba8c207000
regs=0 stack=100000 before 1841: (07) r2 += -20
regs=0 stack=100000 before 1840: (bf) r2 = r10
regs=0 stack=100000 before 1839: (63) *(u32 *)(r10 -40) = r1
regs=0 stack=100000 before 1838: (61) r1 = *(u32 *)(r10 -20)
parent didn't have regs=0 stack=100000 marks: R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar() R6_r=ctx(off=0,imm=0) R7=scalar() R8_r=0 R9_r=scalar(id=170) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-24_r=mmmm???? fp-32_r=mmmm???? fp-40_r= fp-48_r= fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P fp-176=0
last_idx 1837 first_idx 1826
regs=0 stack=100000 before 1837: (7b) *(u64 *)(r0 +8) = r1
regs=0 stack=100000 before 1836: (07) r1 += 1
regs=0 stack=100000 before 1835: (79) r1 = *(u64 *)(r0 +8)
regs=0 stack=100000 before 1834: (15) if r0 == 0x0 goto pc+3
regs=0 stack=100000 before 1833: (85) call bpf_map_lookup_elem#1
regs=0 stack=100000 before 1831: (18) r1 = 0xffffa03499be8000
regs=0 stack=100000 before 1830: (07) r2 += -28
regs=0 stack=100000 before 1829: (bf) r2 = r10
regs=0 stack=100000 before 1828: (62) *(u32 *)(r10 -28) = 521
regs=0 stack=100000 before 1827: (05) goto pc+0
regs=0 stack=100000 before 1826: (55) if r1 != 0x0 goto pc+12
parent didn't have regs=0 stack=100000 marks: R0_w=map_value(off=0,ks=4,vs=4,imm=0) R1_rw=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6_r=ctx(off=0,imm=0) R7=scalar() R8_r=0 R9_r=scalar(id=170) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-24_r=mmmm???? fp-32_r=mmmm???? fp-40_r= fp-48_r= fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P fp-176=0
last_idx 1825 first_idx 1815
regs=0 stack=100000 before 1825: (63) *(u32 *)(r10 -20) = r1
regs=0 stack=100000 before 1824: (61) r1 = *(u32 *)(r0 +0)
regs=0 stack=100000 before 1823: (15) if r0 == 0x0 goto pc+33
regs=0 stack=100000 before 1822: (85) call bpf_map_lookup_elem#1
regs=0 stack=100000 before 1820: (18) r1 = 0xffffaebaa0631000
regs=0 stack=100000 before 1819: (07) r2 += -20
regs=0 stack=100000 before 1818: (bf) r2 = r10
regs=0 stack=100000 before 1817: (63) *(u32 *)(r10 -20) = r2
regs=0 stack=100000 before 1816: (0f) r2 += r1
regs=0 stack=100000 before 1815: (97) r2 %= 65537
parent didn't have regs=0 stack=100000 marks: R0=scalar(umax=15,var_off=(0x0; 0xf)) R1_rw=scalar(umax=281479271612415,var_off=(0x0; 0x1ffffffffffff)) R2_rw=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3=scalar(id=186) R4_w=scalar(umax=16777215,var_off=(0x0; 0xffffff)) R5=scalar(id=185) R6_r=ctx(off=0,imm=0) R7=scalar() R8_r=0 R9_r=scalar(id=170) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r= fp-48_r= fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P fp-176=0
last_idx 1814 first_idx 1802
regs=0 stack=100000 before 1814: (05) goto pc+0
regs=0 stack=100000 before 1813: (bc) w2 = w2
regs=0 stack=100000 before 1812: (27) r1 *= 65537
regs=0 stack=100000 before 1811: (61) r1 = *(u32 *)(r1 +4)
regs=0 stack=100000 before 1810: (79) r1 = *(u64 *)(r10 -144)
regs=0 stack=100000 before 1809: (1f) r2 -= r1
regs=0 stack=100000 before 1808: (af) r2 ^= r3
regs=0 stack=100000 before 1807: (4f) r1 |= r4
regs=0 stack=100000 before 1806: (67) r1 <<= 24
regs=0 stack=100000 before 1805: (bf) r1 = r2
regs=0 stack=100000 before 1804: (77) r4 >>= 8
regs=0 stack=100000 before 1803: (bc) w4 = w2
regs=0 stack=100000 before 1802: (05) goto pc+0
parent didn't have regs=0 stack=100000 marks: R0=scalar(umax=15,var_off=(0x0; 0xf)) R1_w=scalar() R2_rw=scalar() R3_r=scalar(id=186) R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff)) R5=scalar(id=185) R6_r=ctx(off=0,imm=0) R7=scalar() R8_r=0 R9_r=scalar(id=170) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r= fp-48_r= fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P fp-176=0
last_idx 1801 first_idx 1793
regs=0 stack=100000 before 1801: (05) goto pc+0
regs=0 stack=100000 before 1800: (05) goto pc+0
regs=0 stack=100000 before 1799: (1f) r2 -= r1
regs=0 stack=100000 before 1798: (af) r2 ^= r5
regs=0 stack=100000 before 1797: (4f) r1 |= r4
regs=0 stack=100000 before 1796: (67) r1 <<= 14
regs=0 stack=100000 before 1795: (bf) r1 = r2
regs=0 stack=100000 before 1794: (77) r4 >>= 18
regs=0 stack=100000 before 1793: (bc) w4 = w2
parent didn't have regs=0 stack=100000 marks: R0_w=scalar(umax=15,var_off=(0x0; 0xf)) R1=scalar(umax=65535,var_off=(0x0; 0xffff)) R2_rw=scalar() R3_r=scalar(id=186) R4=scalar(id=184) R5_r=scalar(id=185) R6_r=ctx(off=0,imm=0) R7_w=scalar() R8_r=0 R9_r=scalar(id=170) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r= fp-48_r= fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P fp-176=0
last_idx 1792 first_idx 1782
regs=0 stack=100000 before 1792: (05) goto pc+0
regs=0 stack=100000 before 1791: (1f) r2 -= r7
regs=0 stack=100000 before 1790: (af) r2 ^= r4
regs=0 stack=100000 before 1789: (bf) r2 = r3
regs=0 stack=100000 before 1788: (4f) r7 |= r0
regs=0 stack=100000 before 1787: (67) r7 <<= 4
regs=0 stack=100000 before 1786: (bf) r7 = r3
regs=0 stack=100000 before 1785: (77) r0 >>= 28
regs=0 stack=100000 before 1784: (bc) w0 = w3
regs=0 stack=100000 before 1783: (05) goto pc+0
regs=0 stack=100000 before 1782: (05) goto pc+0
parent didn't have regs=0 stack=100000 marks: R0_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R1=scalar(umax=65535,var_off=(0x0; 0xffff)) R2=scalar(id=183) R3_rw=scalar() R4_r=scalar(id=184) R5_r=scalar(id=185) R6_r=ctx(off=0,imm=0) R7_w=scalar() R8_r=0 R9_r=scalar(id=170) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r= fp-48_r= fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P fp-176=0
last_idx 1781 first_idx 1771
regs=0 stack=100000 before 1781: (05) goto pc+0
regs=0 stack=100000 before 1780: (1f) r3 -= r7
regs=0 stack=100000 before 1779: (af) r3 ^= r2
regs=0 stack=100000 before 1778: (bf) r3 = r5
regs=0 stack=100000 before 1777: (4f) r7 |= r0
regs=0 stack=100000 before 1776: (67) r7 <<= 16
regs=0 stack=100000 before 1775: (bf) r7 = r5
regs=0 stack=100000 before 1774: (77) r0 >>= 16
regs=0 stack=100000 before 1773: (bc) w0 = w5
regs=0 stack=100000 before 1772: (05) goto pc+0
regs=0 stack=100000 before 1771: (05) goto pc+0
parent didn't have regs=0 stack=100000 marks: R0_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff)) R1=scalar(umax=65535,var_off=(0x0; 0xffff)) R2_r=scalar(id=183) R3=scalar(id=182,smin=-525483785,smax=3769483510) R4_r=scalar(id=184) R5_rw=scalar() R6_r=ctx(off=0,imm=0) R7_w=scalar() R8_r=0 R9_r=scalar(id=170) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r= fp-48_r= fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P fp-176=0
last_idx 1770 first_idx 1760
regs=0 stack=100000 before 1770: (05) goto pc+0
regs=0 stack=100000 before 1769: (1f) r5 -= r7
regs=0 stack=100000 before 1768: (af) r5 ^= r3
regs=0 stack=100000 before 1767: (bf) r5 = r4
regs=0 stack=100000 before 1766: (4f) r7 |= r0
regs=0 stack=100000 before 1765: (67) r7 <<= 25
regs=0 stack=100000 before 1764: (bf) r7 = r4
regs=0 stack=100000 before 1763: (77) r0 >>= 7
regs=0 stack=100000 before 1762: (bc) w0 = w4
regs=0 stack=100000 before 1761: (05) goto pc+0
regs=0 stack=100000 before 1760: (05) goto pc+0
parent didn't have regs=0 stack=100000 marks: R0_w=scalar(umax=2047,var_off=(0x0; 0x7ff)) R1=scalar(umax=65535,var_off=(0x0; 0xffff)) R2_r=scalar(id=183) R3_r=scalar(id=182,smin=-525483785,smax=3769483510) R4_rw=scalar() R5_w=P-525483785 R6_r=ctx(off=0,imm=0) R7_w=scalar() R8_r=0 R9_r=scalar(id=170) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r= fp-48_r= fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P fp-176=0
last_idx 1759 first_idx 1748
regs=0 stack=100000 before 1759: (05) goto pc+0
regs=0 stack=100000 before 1758: (1f) r4 -= r7
regs=0 stack=100000 before 1757: (af) r4 ^= r5
regs=0 stack=100000 before 1756: (bf) r4 = r2
regs=0 stack=100000 before 1755: (07) r5 += -525483785
regs=0 stack=100000 before 1754: (4f) r7 |= r0
regs=0 stack=100000 before 1753: (67) r7 <<= 11
regs=0 stack=100000 before 1752: (bf) r7 = r2
regs=0 stack=100000 before 1751: (77) r0 >>= 53
regs=0 stack=100000 before 1750: (67) r0 <<= 32
regs=0 stack=100000 before 1749: (bf) r0 = r2
regs=0 stack=100000 before 1748: (05) goto pc+0
parent didn't have regs=0 stack=100000 marks: R0=scalar(id=170) R1=scalar(umax=65535,var_off=(0x0; 0xffff)) R2_rw=scalar() R3_rw=scalar(id=182,smin=-525483785,smax=3769483510) R4_w=scalar() R5_r=P0 R6_r=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=16,imm=0) R8_r=0 R9_r=scalar(id=170) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r= fp-48_r= fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P fp-176=0
last_idx 1747 first_idx 1734
regs=0 stack=100000 before 1747: (05) goto pc+0
regs=0 stack=100000 before 1746: (1f) r2 -= r4
regs=0 stack=100000 before 1745: (a7) r2 ^= -525483785
regs=0 stack=100000 before 1744: (bf) r2 = r3
regs=0 stack=100000 before 1743: (4f) r4 |= r2
regs=0 stack=100000 before 1742: (67) r4 <<= 14
regs=0 stack=100000 before 1741: (bf) r4 = r3
regs=0 stack=100000 before 1740: (77) r2 >>= 18
regs=0 stack=100000 before 1739: (bc) w2 = w3
regs=0 stack=100000 before 1738: (05) goto pc+0
regs=0 stack=100000 before 1737: (05) goto pc+0
regs=0 stack=100000 before 1736: (05) goto pc+0
regs=0 stack=100000 before 1735: (07) r3 += -525483785
regs=0 stack=100000 before 1734: (61) r3 = *(u32 *)(r10 -48)
parent didn't have regs=0 stack=100000 marks: R0=scalar(id=170) R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R2=scalar(umin=1000000001) R5_rw=P0 R6_r=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=16,imm=0) R8_r=0 R9_r=scalar(id=170) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r= fp-48_r= fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_rw=00000000 fp-80_rw=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P fp-176=0
last_idx 1733 first_idx 1726
regs=0 stack=100000 before 1733: (7b) *(u64 *)(r10 -72) = r5
regs=0 stack=100000 before 1732: (7b) *(u64 *)(r10 -80) = r5
regs=0 stack=100000 before 1731: (b7) r5 = 0
regs=0 stack=100000 before 1730: (6b) *(u16 *)(r10 -48) = r1
regs=0 stack=100000 before 1729: (69) r1 = *(u16 *)(r10 -46)
regs=0 stack=100000 before 1726: (55) if r1 != 0x0 goto pc+2
parent didn't have regs=0 stack=100000 marks: R0=scalar(id=170) R1_rw=scalar(umax=8,var_off=(0x0; 0x8)) R2=scalar(umin=1000000001) R6_r=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=16,imm=0) R8_rw=0 R9_r=scalar(id=170) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r= fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P fp-176=0
last_idx 1725 first_idx 1713
regs=0 stack=100000 before 1725: (57) r1 &= 8
regs=0 stack=100000 before 1724: (61) r1 = *(u32 *)(r1 +0)
regs=0 stack=100000 before 1723: (79) r1 = *(u64 *)(r10 -144)
regs=0 stack=100000 before 1722: (b7) r8 = 0
regs=0 stack=100000 before 1717: (05) goto pc+4
regs=0 stack=100000 before 1716: (7a) *(u64 *)(r7 +0) = 1
regs=0 stack=100000 before 1715: (05) goto pc+0
regs=0 stack=100000 before 1714: (7b) *(u64 *)(r7 +8) = r9
regs=0 stack=100000 before 1713: (2d) if r1 > r2 goto pc+4
parent didn't have regs=0 stack=100000 marks: R0_w=scalar(id=170) R1_rw=1000000001 R2_rw=scalar() R6_r=ctx(off=0,imm=0) R7_rw=map_value(off=0,ks=4,vs=16,imm=0) R8_w=1 R9_rw=scalar(id=170) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r= fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P fp-176=0
last_idx 1712 first_idx 1704
regs=0 stack=100000 before 1712: (b7) r1 = 1000000001
regs=0 stack=100000 before 1711: (1f) r2 -= r1
regs=0 stack=100000 before 1710: (bf) r2 = r9
regs=0 stack=100000 before 1709: (79) r1 = *(u64 *)(r7 +8)
regs=0 stack=100000 before 1708: (bf) r9 = r0
regs=0 stack=100000 before 1707: (85) call bpf_ktime_get_ns#5
regs=0 stack=100000 before 1706: (15) if r7 == 0x0 goto pc+16
regs=0 stack=100000 before 1705: (b7) r8 = 1
regs=0 stack=100000 before 1704: (bf) r7 = r0
parent didn't have regs=0 stack=100000 marks: R0_rw=map_value_or_null(id=169,off=0,ks=4,vs=16,imm=0) R6_r=ctx(off=0,imm=0) R7=map_value(off=0,ks=40,vs=16,imm=0) R8=pkt_end(off=0,imm=0) R9_w=P0 R10=fp0 fp-8_rw=00000000 fp-16_rw=00000000 fp-32_r=mmmm???? fp-40_r= fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P fp-176=0
last_idx 1703 first_idx 1694
regs=0 stack=100000 before 1703: (85) call bpf_map_lookup_elem#1
regs=0 stack=100000 before 1701: (18) r1 = 0xffffa03499be8000
regs=0 stack=100000 before 1700: (07) r2 += -28
regs=0 stack=100000 before 1699: (bf) r2 = r10
regs=0 stack=100000 before 1698: (62) *(u32 *)(r10 -28) = 514
regs=0 stack=100000 before 1697: (05) goto pc+0
regs=0 stack=100000 before 1696: (7b) *(u64 *)(r10 -16) = r9
regs=0 stack=100000 before 1695: (7b) *(u64 *)(r10 -8) = r9
regs=0 stack=100000 before 1694: (b7) r9 = 0
parent didn't have regs=0 stack=100000 marks: R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar() R2_w=scalar(umax=2,var_off=(0x0; 0x2)) R6_r=ctx(off=0,imm=0) R7=map_value(off=0,ks=40,vs=16,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16=????mmmm fp-40_r= fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P fp-176=0
last_idx 1693 first_idx 1683
regs=0 stack=100000 before 1693: (7b) *(u64 *)(r0 +0) = r1
regs=0 stack=100000 before 1692: (07) r1 += 1
regs=0 stack=100000 before 1691: (79) r1 = *(u64 *)(r0 +0)
regs=0 stack=100000 before 1690: (0f) r0 += r1
regs=0 stack=100000 before 1689: (67) r1 <<= 3
regs=0 stack=100000 before 1688: (b7) r1 = 0
regs=0 stack=100000 before 1687: (15) if r2 == 0x0 goto pc+1
regs=0 stack=100000 before 1686: (b7) r1 = 1
regs=0 stack=100000 before 1685: (57) r2 &= 2
regs=0 stack=100000 before 1684: (71) r2 = *(u8 *)(r10 -36)
regs=0 stack=100000 before 1683: (15) if r0 == 0x0 goto pc+173
parent didn't have regs=0 stack=100000 marks: R0_rw=map_value_or_null(id=168,off=0,ks=4,vs=16,imm=0) R6_r=ctx(off=0,imm=0) R7=map_value(off=0,ks=40,vs=16,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16=????mmmm fp-40_r= fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P fp-176_w=0
last_idx 1682 first_idx 1672
regs=0 stack=100000 before 1682: (85) call bpf_map_lookup_elem#1
regs=0 stack=100000 before 1680: (18) r1 = 0xffffa03499be8000
regs=0 stack=100000 before 1679: (07) r2 += -16
regs=0 stack=100000 before 1678: (bf) r2 = r10
regs=0 stack=100000 before 1677: (62) *(u32 *)(r10 -16) = 513
regs=0 stack=100000 before 1676: (05) goto pc+0
regs=0 stack=100000 before 1675: (55) if r1 != 0x6 goto pc+18
regs=0 stack=100000 before 1674: (71) r1 = *(u8 *)(r10 -44)
regs=0 stack=100000 before 1673: (55) if r0 != 0x0 goto pc+239
regs=0 stack=100000 before 1672: (7b) *(u64 *)(r10 -176) = r0
parent didn't have regs=0 stack=100000 marks: R0_rw=map_value_or_null(id=167,off=0,ks=4,vs=20,imm=0) R6_r=ctx(off=0,imm=0) R7=map_value(off=0,ks=40,vs=16,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16_r=????mmmm fp-40_r= fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1671 first_idx 1662
regs=0 stack=100000 before 1671: (85) call bpf_map_lookup_elem#1
regs=0 stack=100000 before 1669: (18) r1 = 0xffffaeba8c207000
regs=0 stack=100000 before 1668: (07) r2 += -16
regs=0 stack=100000 before 1667: (bf) r2 = r10
regs=0 stack=100000 before 1666: (63) *(u32 *)(r10 -16) = r1
regs=0 stack=100000 before 1665: (63) *(u32 *)(r10 -40) = r1
regs=0 stack=100000 before 1664: (61) r1 = *(u32 *)(r7 +0)
regs=0 stack=100000 before 1663: (7b) *(u64 *)(r7 +8) = r0
regs=0 stack=100000 before 1662: (2d) if r2 > r1 goto pc+11
parent didn't have regs=0 stack=100000 marks: R0_rw=scalar(id=166) R1_rw=30000000000 R2_rw=scalar() R6_r=ctx(off=0,imm=0) R7_rw=map_value(off=0,ks=40,vs=16,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16_r=????mmmm fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1660 first_idx 1652
regs=0 stack=100000 before 1660: (18) r1 = 0x6fc23ac00
regs=0 stack=100000 before 1659: (1f) r2 -= r1
regs=0 stack=100000 before 1658: (bf) r2 = r0
regs=0 stack=100000 before 1657: (79) r1 = *(u64 *)(r7 +8)
regs=0 stack=100000 before 1656: (85) call bpf_ktime_get_ns#5
regs=0 stack=100000 before 1655: (55) if r1 != 0x11 goto pc+8
regs=0 stack=100000 before 1654: (71) r1 = *(u8 *)(r10 -44)
regs=0 stack=100000 before 1653: (15) if r7 == 0x0 goto pc+20
regs=0 stack=100000 before 1652: (bf) r7 = r0
parent didn't have regs=0 stack=100000 marks: R0_rw=map_value_or_null(id=165,off=0,ks=40,vs=16,imm=0) R6_r=ctx(off=0,imm=0) R7=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16_r=????mmmm fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1651 first_idx 1644
regs=0 stack=100000 before 1651: (85) call bpf_map_lookup_elem#1
regs=0 stack=100000 before 1650: (79) r1 = *(u64 *)(r10 -152)
regs=0 stack=100000 before 1649: (07) r2 += -80
regs=0 stack=100000 before 1648: (bf) r2 = r10
regs=0 stack=100000 before 1647: (55) if r1 != 0x0 goto pc+26
regs=0 stack=100000 before 1646: (57) r1 &= 2
regs=0 stack=100000 before 1645: (61) r1 = *(u32 *)(r9 +0)
regs=0 stack=100000 before 1644: (55) if r1 != 0x0 goto pc+29
parent didn't have regs=0 stack=100000 marks: R0=map_value(off=0,ks=4,vs=16,imm=0) R1_rw=scalar(umax=2,var_off=(0x0; 0x2)) R6_r=ctx(off=0,imm=0) R7=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9_rw=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16_r=????mmmm fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_rw=P
last_idx 1643 first_idx 640
regs=0 stack=100000 before 1643: (57) r1 &= 2
regs=0 stack=100000 before 1642: (71) r1 = *(u8 *)(r10 -36)
regs=0 stack=100000 before 1641: (7b) *(u64 *)(r10 -168) = r1
regs=2 stack=0 before 1640: (69) r1 = *(u16 *)(r10 -48)
regs=0 stack=20 before 1639: (79) r9 = *(u64 *)(r10 -144)
regs=0 stack=20 before 644: (05) goto pc+994
regs=0 stack=20 before 643: (7b) *(u64 *)(r0 +8) = r1
regs=0 stack=20 before 642: (07) r1 += 1
regs=0 stack=20 before 641: (79) r1 = *(u64 *)(r0 +8)
regs=0 stack=20 before 640: (55) if r1 != 0x1 goto pc+998
parent already had regs=0 stack=0 marks: R0_rw=map_value(off=0,ks=4,vs=16,imm=0) R1_rw=scalar(umax=253,var_off=(0x0; 0xfd)) R6_r=ctx(off=0,imm=0) R7=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16_r=????mmmm fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168=

from 1868 to 1881: safe
frame -168: propagating fp0
last_idx 1881 first_idx 1860
regs=0 stack=100000 before 1862: (15) if r1 == 0x0 goto pc+18
regs=0 stack=100000 before 1861: (79) r1 = *(u64 *)(r10 -152)
regs=0 stack=100000 before 1860: (7b) *(u64 *)(r10 -176) = r0
parent already had regs=0 stack=100000 marks: R0_rw=map_value(off=0,ks=4,vs=20,imm=0) R6_r=ctx(off=0,imm=0) R7=scalar() R8_r=0 R9_r=scalar(id=170) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-24_r=mmmm???? fp-32_r=mmmm???? fp-40_r= fp-48_r= fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P fp-176=0

from 1862 to 1881: safe
frame -168: propagating fp0
last_idx 1838 first_idx 1826
regs=0 stack=100000 before 1834: (15) if r0 == 0x0 goto pc+3
regs=0 stack=100000 before 1833: (85) call bpf_map_lookup_elem#1
regs=0 stack=100000 before 1831: (18) r1 = 0xffffa03499be8000
regs=0 stack=100000 before 1830: (07) r2 += -28
regs=0 stack=100000 before 1829: (bf) r2 = r10
regs=0 stack=100000 before 1828: (62) *(u32 *)(r10 -28) = 521
regs=0 stack=100000 before 1827: (05) goto pc+0
regs=0 stack=100000 before 1826: (55) if r1 != 0x0 goto pc+12
parent already had regs=0 stack=100000 marks: R0_w=map_value(off=0,ks=4,vs=4,imm=0) R1_rw=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6_r=ctx(off=0,imm=0) R7=scalar() R8_r=0 R9_r=scalar(id=170) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-24_r=mmmm???? fp-32_r=mmmm???? fp-40_r= fp-48_r= fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P fp-176=0

from 1834 to 1838: safe

from 1826 to 1839: R0=map_value(off=0,ks=4,vs=4,imm=0) R1=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6=ctx(off=0,imm=0) R7=scalar() R8=0 R9=scalar(id=170) R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=00000000 fp-80=00000000 fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0
; pckt->real_index = key;
1839: (63) *(u32 *)(r10 -40) = r1     ; R1=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1840: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1841: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1842: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1844: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=192,off=0,ks=4,vs=20,imm=0)
; if (!(*real)) {
1845: (55) if r0 != 0x0 goto pc+14    ; R0=0
1846: (05) goto pc+0
1847: safe
frame -168: propagating fp0
last_idx 1860 first_idx 1845
regs=0 stack=100000 before 1845: (55) if r0 != 0x0 goto pc+14
parent didn't have regs=0 stack=100000 marks: R0_rw=map_value_or_null(id=192,off=0,ks=4,vs=20,imm=0) R6_r=ctx(off=0,imm=0) R7=scalar() R8_r=0 R9_r=scalar(id=170) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-24_r=mmmm???? fp-32_r=mmmm???? fp-40_r= fp-48_r= fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P fp-176=0
last_idx 1844 first_idx 1826
regs=0 stack=100000 before 1844: (85) call bpf_map_lookup_elem#1
regs=0 stack=100000 before 1842: (18) r1 = 0xffffaeba8c207000
regs=0 stack=100000 before 1841: (07) r2 += -20
regs=0 stack=100000 before 1840: (bf) r2 = r10
regs=0 stack=100000 before 1839: (63) *(u32 *)(r10 -40) = r1
regs=0 stack=100000 before 1826: (55) if r1 != 0x0 goto pc+12
parent already had regs=0 stack=100000 marks: R0_w=map_value(off=0,ks=4,vs=4,imm=0) R1_rw=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6_r=ctx(off=0,imm=0) R7=scalar() R8_r=0 R9_r=scalar(id=170) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-24_r=mmmm???? fp-32_r=mmmm???? fp-40_r= fp-48_r= fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P fp-176=0

from 1845 to 1860: safe

from 1823 to 1857: safe

from 1713 to 1718: R0=scalar(id=170) R1=1000000001 R2=scalar(umax=1000000000,var_off=(0x0; 0x3fffffff)) R6=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=16,imm=0) R8=1 R9=scalar(id=170) R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0
; conn_rate_stats->v1 += 1;
1718: (79) r1 = *(u64 *)(r7 +0)       ; R1_w=scalar() R7=map_value(off=0,ks=4,vs=16,imm=0)
1719: (07) r1 += 1                    ; R1_w=scalar()
1720: (7b) *(u64 *)(r7 +0) = r1       ; R1=scalar() R7=map_value(off=0,ks=4,vs=16,imm=0)
; if (conn_rate_stats->v1 > MAX_CONN_RATE) {
1721: (25) if r1 > 0x1e848 goto pc+1          ; R1=scalar(umax=125000,var_off=(0x0; 0x1ffff))
1722: (b7) r8 = 0                     ; R8_w=0
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
1723: (79) r1 = *(u64 *)(r10 -144)    ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
1724: (61) r1 = *(u32 *)(r1 +0)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
1725: (57) r1 &= 8
frame -168: propagating fp0
last_idx 1726 first_idx 1721
regs=0 stack=100000 before 1725: (57) r1 &= 8
regs=0 stack=100000 before 1724: (61) r1 = *(u32 *)(r1 +0)
regs=0 stack=100000 before 1723: (79) r1 = *(u64 *)(r10 -144)
regs=0 stack=100000 before 1722: (b7) r8 = 0
regs=0 stack=100000 before 1721: (25) if r1 > 0x1e848 goto pc+1
parent didn't have regs=0 stack=100000 marks: R0=scalar(id=170) R1_rw=scalar() R2=scalar(umax=1000000000,var_off=(0x0; 0x3fffffff)) R6_r=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=16,imm=0) R8=1 R9_r=scalar(id=170) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r= fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P fp-176=0
last_idx 1720 first_idx 1713
regs=0 stack=100000 before 1720: (7b) *(u64 *)(r7 +0) = r1
regs=0 stack=100000 before 1719: (07) r1 += 1
regs=0 stack=100000 before 1718: (79) r1 = *(u64 *)(r7 +0)
regs=0 stack=100000 before 1713: (2d) if r1 > r2 goto pc+4
parent already had regs=0 stack=100000 marks: R0_w=scalar(id=170) R1_rw=1000000001 R2_rw=scalar() R6_r=ctx(off=0,imm=0) R7_rw=map_value(off=0,ks=4,vs=16,imm=0) R8_w=1 R9_rw=scalar(id=170) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r= fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P fp-176=0
1726: safe

from 1721 to 1723: R0=scalar(id=170) R1=scalar(umin=125001) R2=scalar(umax=1000000000,var_off=(0x0; 0x3fffffff)) R6=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=16,imm=0) R8=1 R9=scalar(id=170) R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
1723: (79) r1 = *(u64 *)(r10 -144)    ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
1724: (61) r1 = *(u32 *)(r1 +0)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
1725: (57) r1 &= 8
frame -168: propagating fp0
last_idx 1726 first_idx 1721
regs=0 stack=100000 before 1725: (57) r1 &= 8
regs=0 stack=100000 before 1724: (61) r1 = *(u32 *)(r1 +0)
regs=0 stack=100000 before 1723: (79) r1 = *(u64 *)(r10 -144)
regs=0 stack=100000 before 1721: (25) if r1 > 0x1e848 goto pc+1
parent already had regs=0 stack=100000 marks: R0=scalar(id=170) R1_rw=scalar() R2=scalar(umax=1000000000,var_off=(0x0; 0x3fffffff)) R6_r=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=16,imm=0) R8_r=1 R9_r=scalar(id=170) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r= fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P fp-176=0
1726: safe

from 1706 to 1723: R0=0 R6=ctx(off=0,imm=0) R7_w=0 R8_w=1 R9=P0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
1723: (79) r1 = *(u64 *)(r10 -144)    ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
1724: (61) r1 = *(u32 *)(r1 +0)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
1725: (57) r1 &= 8
frame -168: propagating fp0
last_idx 1726 first_idx 1704
regs=0 stack=100000 before 1725: (57) r1 &= 8
regs=0 stack=100000 before 1724: (61) r1 = *(u32 *)(r1 +0)
regs=0 stack=100000 before 1723: (79) r1 = *(u64 *)(r10 -144)
regs=0 stack=100000 before 1706: (15) if r7 == 0x0 goto pc+16
regs=0 stack=100000 before 1705: (b7) r8 = 1
regs=0 stack=100000 before 1704: (bf) r7 = r0
parent already had regs=0 stack=100000 marks: R0_rw=map_value_or_null(id=169,off=0,ks=4,vs=16,imm=0) R6_r=ctx(off=0,imm=0) R7=map_value(off=0,ks=40,vs=16,imm=0) R8=pkt_end(off=0,imm=0) R9_rw=P0 R10=fp0 fp-8_rw=00000000 fp-16_rw=00000000 fp-32_r=mmmm???? fp-40_r= fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P fp-176=0
1726: safe

from 1687 to 1689: R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=1 R2_w=0 R6=ctx(off=0,imm=0) R7=map_value(off=0,ks=40,vs=16,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16=????mmmm fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0
; if (pckt.flags & F_SYN_SET) {
1689: (67) r1 <<= 3                   ; R1_w=8
; 
1690: (0f) r0 += r1
last_idx 1690 first_idx 1683
regs=2 stack=0 before 1689: (67) r1 <<= 3
regs=2 stack=0 before 1687: (15) if r2 == 0x0 goto pc+1
regs=2 stack=0 before 1686: (b7) r1 = 1
1691: R0_w=map_value(off=8,ks=4,vs=16,imm=0) R1_w=P8
1691: (79) r1 = *(u64 *)(r0 +0)       ; R0_w=map_value(off=8,ks=4,vs=16,imm=0) R1_w=scalar()
1692: (07) r1 += 1                    ; R1_w=scalar()
1693: (7b) *(u64 *)(r0 +0) = r1
frame -168: propagating fp0
last_idx 1694 first_idx 1683
regs=0 stack=100000 before 1693: (7b) *(u64 *)(r0 +0) = r1
regs=0 stack=100000 before 1692: (07) r1 += 1
regs=0 stack=100000 before 1691: (79) r1 = *(u64 *)(r0 +0)
regs=0 stack=100000 before 1690: (0f) r0 += r1
regs=0 stack=100000 before 1689: (67) r1 <<= 3
regs=0 stack=100000 before 1687: (15) if r2 == 0x0 goto pc+1
regs=0 stack=100000 before 1686: (b7) r1 = 1
regs=0 stack=100000 before 1685: (57) r2 &= 2
regs=0 stack=100000 before 1684: (71) r2 = *(u8 *)(r10 -36)
regs=0 stack=100000 before 1683: (15) if r0 == 0x0 goto pc+173
parent already had regs=0 stack=100000 marks: R0_rw=map_value_or_null(id=168,off=0,ks=4,vs=16,imm=0) R6_r=ctx(off=0,imm=0) R7=map_value(off=0,ks=40,vs=16,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16=????mmmm fp-40_r= fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P fp-176_w=0
1694: safe

from 1683 to 1857: safe
frame -168: propagating fp0
last_idx 1694 first_idx 1672
regs=0 stack=100000 before 1675: (55) if r1 != 0x6 goto pc+18
regs=0 stack=100000 before 1674: (71) r1 = *(u8 *)(r10 -44)
regs=0 stack=100000 before 1673: (55) if r0 != 0x0 goto pc+239
regs=0 stack=100000 before 1672: (7b) *(u64 *)(r10 -176) = r0
parent already had regs=0 stack=100000 marks: R0_rw=map_value_or_null(id=167,off=0,ks=4,vs=20,imm=0) R6_r=ctx(off=0,imm=0) R7=map_value(off=0,ks=40,vs=16,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16_r=????mmmm fp-40_r= fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P

from 1675 to 1694: safe

from 1673 to 1913: R0=map_value(off=0,ks=4,vs=20,imm=0) R6=ctx(off=0,imm=0) R7=map_value(off=0,ks=40,vs=16,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16=????mmmm fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176_w=map_value
; data_stats->v2 += 1;
1913: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1914: (07) r2 += -112                 ; R2_w=fp-112
; cval = bpf_map_lookup_elem(&ctl_array, &mac_addr_pos);
1915: (18) r1 = 0xffffa03553eeca00    ; R1_w=map_ptr(off=0,ks=4,vs=8,imm=0)
1917: (85) call bpf_map_lookup_elem#1
1918: safe

from 1662 to 1674: R0=scalar(id=166) R1=30000000000 R2=scalar(umin=30000000001) R6=ctx(off=0,imm=0) R7=map_value(off=0,ks=40,vs=16,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (pckt.flow.proto == IPPROTO_TCP) {
1674: (71) r1 = *(u8 *)(r10 -44)      ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (pckt.flow.proto == IPPROTO_TCP) {
1675: (55) if r1 != 0x6 goto pc+18    ; R1_w=6
1676: (05) goto pc+0
; __u32 lru_stats_key = MAX_VIPS + LRU_MISS_CNTR;
1677: (62) *(u32 *)(r10 -16) = 513    ; R10=fp0 fp-16=????mmmm
1678: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1679: (07) r2 += -16                  ; R2_w=fp-16
; bpf_map_lookup_elem(&stats, &lru_stats_key);
1680: (18) r1 = 0xffffa03499be8000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
1682: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=194,off=0,ks=4,vs=16,imm=0)
; if (!lru_stats) {
1683: (15) if r0 == 0x0 goto pc+173   ; R0=map_value(off=0,ks=4,vs=16,imm=0)
; if (pckt.flags & F_SYN_SET) {
1684: (71) r2 = *(u8 *)(r10 -36)      ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (pckt.flags & F_SYN_SET) {
1685: (57) r2 &= 2                    ; R2_w=scalar(umax=2,var_off=(0x0; 0x2))
1686: (b7) r1 = 1                     ; R1_w=1
1687: (15) if r2 == 0x0 goto pc+1     ; R2_w=scalar(umax=2,var_off=(0x0; 0x2))
1688: (b7) r1 = 0                     ; R1_w=0
; if (pckt.flags & F_SYN_SET) {
1689: (67) r1 <<= 3                   ; R1_w=0
; 
1690: (0f) r0 += r1
last_idx 1690 first_idx 1683
regs=2 stack=0 before 1689: (67) r1 <<= 3
regs=2 stack=0 before 1688: (b7) r1 = 0
1691: R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=P0
1691: (79) r1 = *(u64 *)(r0 +0)       ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1692: (07) r1 += 1                    ; R1_w=scalar()
1693: (7b) *(u64 *)(r0 +0) = r1       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1=scalar()
1694: (b7) r9 = 0                     ; R9_w=0
; struct real_pos_lru new_dst_lru = {};
1695: (7b) *(u64 *)(r10 -8) = r9
last_idx 1695 first_idx 1694
regs=200 stack=0 before 1694: (b7) r9 = 0
1696: R9_w=P0 R10=fp0 fp-8_w=00000000
1696: (7b) *(u64 *)(r10 -16) = r9     ; R9_w=P0 R10=fp0 fp-16_w=00000000
1697: (05) goto pc+0
; __u32 conn_rate_key = MAX_VIPS + NEW_CONN_RATE_CNTR;
1698: (62) *(u32 *)(r10 -28) = 514    ; R10=fp0 fp-32=mmmm????
1699: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1700: (07) r2 += -28                  ; R2_w=fp-28
; bpf_map_lookup_elem(&stats, &conn_rate_key);
1701: (18) r1 = 0xffffa03499be8000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
1703: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=195,off=0,ks=4,vs=16,imm=0)
1704: (bf) r7 = r0                    ; R0=map_value_or_null(id=195,off=0,ks=4,vs=16,imm=0) R7_w=map_value_or_null(id=195,off=0,ks=4,vs=16,imm=0)
1705: (b7) r8 = 1                     ; R8_w=1
; if (!conn_rate_stats) {
1706: (15) if r7 == 0x0 goto pc+16    ; R7_w=map_value(off=0,ks=4,vs=16,imm=0)
; *cur_time = bpf_ktime_get_ns();
1707: (85) call bpf_ktime_get_ns#5    ; R0_w=scalar()
1708: (bf) r9 = r0                    ; R0_w=scalar(id=196) R9_w=scalar(id=196)
; if ((*cur_time - conn_rate_stats->v2) > ONE_SEC) {
1709: (79) r1 = *(u64 *)(r7 +8)       ; R1_w=scalar() R7_w=map_value(off=0,ks=4,vs=16,imm=0)
; if ((*cur_time - conn_rate_stats->v2) > ONE_SEC) {
1710: (bf) r2 = r9                    ; R2_w=scalar(id=196) R9_w=scalar(id=196)
1711: (1f) r2 -= r1                   ; R1_w=scalar() R2_w=scalar()
1712: (b7) r1 = 1000000001            ; R1=1000000001
; if ((*cur_time - conn_rate_stats->v2) > ONE_SEC) {
1713: (2d) if r1 > r2 goto pc+4       ; R1=1000000001 R2=scalar(umin=1000000001)
; conn_rate_stats->v2 = *cur_time;
1714: (7b) *(u64 *)(r7 +8) = r9       ; R7=map_value(off=0,ks=4,vs=16,imm=0) R9=scalar(id=196)
1715: (05) goto pc+0
; conn_rate_stats->v1 = 1;
1716: (7a) *(u64 *)(r7 +0) = 1        ; R7=map_value(off=0,ks=4,vs=16,imm=0)
1717: (05) goto pc+4
; if (conn_rate_stats->v1 > MAX_CONN_RATE) {
1722: (b7) r8 = 0                     ; R8_w=0
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
1723: (79) r1 = *(u64 *)(r10 -144)    ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
1724: (61) r1 = *(u32 *)(r1 +0)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
1725: (57) r1 &= 8                    ; R1=scalar(umax=8,var_off=(0x0; 0x8))
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
1726: (55) if r1 != 0x0 goto pc+2     ; R1=0
; return jhash_2words(pckt->flow.src, pckt->flow.ports, INIT_JHASH_SEED);
1727: (61) r5 = *(u32 *)(r10 -80)     ; R5_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
1728: (05) goto pc+5
; return jhash_2words(pckt->flow.src, pckt->flow.ports, INIT_JHASH_SEED);
1734: (61) r3 = *(u32 *)(r10 -48)     ; R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; b += initval;
1735: (07) r3 += -525483785           ; R3_w=scalar(smin=-525483785,smax=3769483510)
1736: (05) goto pc+0
1737: (05) goto pc+0
1738: (05) goto pc+0
1739: (bc) w2 = w3                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3=scalar(smin=-525483785,smax=3769483510)
; return (word << shift) | (word >> ((-shift) & 31));
1740: (77) r2 >>= 18                  ; R2_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1741: (bf) r4 = r3                    ; R3=scalar(id=197,smin=-525483785,smax=3769483510) R4_w=scalar(id=197,smin=-525483785,smax=3769483510)
1742: (67) r4 <<= 14                  ; R4_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1743: (4f) r4 |= r2                   ; R2_w=scalar(umax=16383,var_off=(0x0; 0x3fff)) R4_w=scalar()
; __jhash_final(a, b, c);
1744: (bf) r2 = r3                    ; R2_w=scalar(id=197,smin=-525483785,smax=3769483510) R3=scalar(id=197,smin=-525483785,smax=3769483510)
1745: (a7) r2 ^= -525483785           ; R2_w=scalar()
1746: (1f) r2 -= r4                   ; R2_w=scalar() R4_w=scalar()
1747: (05) goto pc+0
1748: (05) goto pc+0
1749: (bf) r0 = r2                    ; R0_w=scalar(id=198) R2=scalar(id=198)
1750: (67) r0 <<= 32                  ; R0_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
; return (word << shift) | (word >> ((-shift) & 31));
1751: (77) r0 >>= 53                  ; R0_w=scalar(umax=2047,var_off=(0x0; 0x7ff))
1752: (bf) r7 = r2                    ; R2=scalar(id=198) R7_w=scalar(id=198)
1753: (67) r7 <<= 11                  ; R7_w=scalar(smax=9223372036854773760,umax=18446744073709549568,var_off=(0x0; 0xfffffffffffff800),s32_max=2147481600,u32_max=-2048)
1754: (4f) r7 |= r0                   ; R0_w=scalar(umax=2047,var_off=(0x0; 0x7ff)) R7_w=scalar()
; a += initval;
1755: (07) r5 += -525483785           ; R5_w=scalar(smin=-525483785,smax=3769483510)
; __jhash_final(a, b, c);
1756: (bf) r4 = r2                    ; R2=scalar(id=198) R4_w=scalar(id=198)
1757: (af) r4 ^= r5                   ; R4_w=scalar() R5_w=scalar(smin=-525483785,smax=3769483510)
1758: (1f) r4 -= r7                   ; R4_w=scalar() R7_w=scalar()
1759: (05) goto pc+0
1760: (05) goto pc+0
1761: (05) goto pc+0
1762: (bc) w0 = w4                    ; R0_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R4=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1763: (77) r0 >>= 7                   ; R0_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff))
1764: (bf) r7 = r4                    ; R4=scalar(id=199) R7_w=scalar(id=199)
1765: (67) r7 <<= 25                  ; R7_w=scalar(smax=9223372036821221376,umax=18446744073675997184,var_off=(0x0; 0xfffffffffe000000),s32_max=2113929216,u32_max=-33554432)
1766: (4f) r7 |= r0                   ; R0_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff)) R7_w=scalar()
; __jhash_final(a, b, c);
1767: (bf) r5 = r4                    ; R4=scalar(id=199) R5_w=scalar(id=199)
1768: (af) r5 ^= r3                   ; R3=scalar(id=197,smin=-525483785,smax=3769483510) R5_w=scalar()
1769: (1f) r5 -= r7                   ; R5_w=scalar() R7_w=scalar()
1770: (05) goto pc+0
1771: (05) goto pc+0
1772: (05) goto pc+0
1773: (bc) w0 = w5                    ; R0_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R5=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1774: (77) r0 >>= 16                  ; R0_w=scalar(umax=65535,var_off=(0x0; 0xffff))
1775: (bf) r7 = r5                    ; R5=scalar(id=200) R7_w=scalar(id=200)
1776: (67) r7 <<= 16                  ; R7_w=scalar(smax=9223372036854710272,umax=18446744073709486080,var_off=(0x0; 0xffffffffffff0000),s32_max=2147418112,u32_max=-65536)
1777: (4f) r7 |= r0                   ; R0_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R7_w=scalar()
; __jhash_final(a, b, c);
1778: (bf) r3 = r5                    ; R3_w=scalar(id=200) R5=scalar(id=200)
1779: (af) r3 ^= r2                   ; R2=scalar(id=198) R3_w=scalar()
1780: (1f) r3 -= r7                   ; R3_w=scalar() R7_w=scalar()
1781: (05) goto pc+0
1782: (05) goto pc+0
1783: (05) goto pc+0
1784: (bc) w0 = w3                    ; R0_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1785: (77) r0 >>= 28                  ; R0_w=scalar(umax=15,var_off=(0x0; 0xf))
1786: (bf) r7 = r3                    ; R3=scalar(id=201) R7_w=scalar(id=201)
1787: (67) r7 <<= 4                   ; R7_w=scalar(smax=9223372036854775792,umax=18446744073709551600,var_off=(0x0; 0xfffffffffffffff0),s32_max=2147483632,u32_max=-16)
1788: (4f) r7 |= r0                   ; R0_w=scalar(umax=15,var_off=(0x0; 0xf)) R7_w=scalar()
; __jhash_final(a, b, c);
1789: (bf) r2 = r3                    ; R2_w=scalar(id=201) R3=scalar(id=201)
1790: (af) r2 ^= r4                   ; R2_w=scalar() R4=scalar(id=199)
1791: (1f) r2 -= r7                   ; R2_w=scalar() R7_w=scalar()
1792: (05) goto pc+0
1793: (bc) w4 = w2                    ; R2=scalar() R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1794: (77) r4 >>= 18                  ; R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1795: (bf) r1 = r2                    ; R1_w=scalar(id=202) R2=scalar(id=202)
1796: (67) r1 <<= 14                  ; R1_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1797: (4f) r1 |= r4                   ; R1_w=scalar() R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
; __jhash_final(a, b, c);
1798: (af) r2 ^= r5                   ; R2_w=scalar() R5=scalar(id=200)
1799: (1f) r2 -= r1                   ; R1_w=scalar() R2_w=scalar()
1800: (05) goto pc+0
1801: (05) goto pc+0
1802: (05) goto pc+0
1803: (bc) w4 = w2                    ; R2=scalar() R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1804: (77) r4 >>= 8                   ; R4_w=scalar(umax=16777215,var_off=(0x0; 0xffffff))
1805: (bf) r1 = r2                    ; R1_w=scalar(id=203) R2=scalar(id=203)
1806: (67) r1 <<= 24                  ; R1_w=scalar(smax=9223372036837998592,umax=18446744073692774400,var_off=(0x0; 0xffffffffff000000),s32_max=2130706432,u32_max=-16777216)
1807: (4f) r1 |= r4                   ; R1_w=scalar() R4_w=scalar(umax=16777215,var_off=(0x0; 0xffffff))
; __jhash_final(a, b, c);
1808: (af) r2 ^= r3                   ; R2_w=scalar() R3=scalar(id=201)
1809: (1f) r2 -= r1                   ; R1_w=scalar() R2_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1810: (79) r1 = *(u64 *)(r10 -144)    ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
1811: (61) r1 = *(u32 *)(r1 +4)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; key = RING_SIZE * (vip_info->vip_num) + hash;
1812: (27) r1 *= 65537                ; R1_w=scalar(umax=281479271612415,var_off=(0x0; 0x1ffffffffffff))
; __jhash_final(a, b, c);
1813: (bc) w2 = w2                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
1814: (05) goto pc+0
; hash = get_packet_hash(pckt, hash_16bytes) % RING_SIZE;
1815: (97) r2 %= 65537                ; R2_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1816: (0f) r2 += r1                   ; R1=scalar(umax=281479271612415,var_off=(0x0; 0x1ffffffffffff)) R2_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1817: (63) *(u32 *)(r10 -20) = r2     ; R2_w=scalar() R10=fp0 fp-24=mmmm????
1818: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1819: (07) r2 += -20                  ; R2_w=fp-20
; real_pos = bpf_map_lookup_elem(&ch_rings, &key);
1820: (18) r1 = 0xffffaebaa0631000    ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
1822: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=204,off=0,ks=4,vs=4,imm=0)
; if (!real_pos) {
1823: (15) if r0 == 0x0 goto pc+33    ; R0_w=map_value(off=0,ks=4,vs=4,imm=0)
; key = *real_pos;
1824: (61) r1 = *(u32 *)(r0 +0)       ; R0_w=map_value(off=0,ks=4,vs=4,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; key = *real_pos;
1825: (63) *(u32 *)(r10 -20) = r1     ; R1=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-24=mmmm????
; if (key == 0) {
1826: (55) if r1 != 0x0 goto pc+12    ; R1=0
1827: (05) goto pc+0
; __u32 ch_drop_stats_key = MAX_VIPS + CH_DROP_STATS;
1828: (62) *(u32 *)(r10 -28) = 521    ; R10=fp0 fp-32=mmmm????
1829: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1830: (07) r2 += -28                  ; R2_w=fp-28
; bpf_map_lookup_elem(&stats, &ch_drop_stats_key);
1831: (18) r1 = 0xffffa03499be8000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
1833: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=205,off=0,ks=4,vs=16,imm=0)
; if (!ch_drop_stats) {
1834: (15) if r0 == 0x0 goto pc+3     ; R0_w=map_value(off=0,ks=4,vs=16,imm=0)
; ch_drop_stats->v2 += 1;
1835: (79) r1 = *(u64 *)(r0 +8)       ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1836: (07) r1 += 1                    ; R1_w=scalar()
1837: (7b) *(u64 *)(r0 +8) = r1       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1=scalar()
; pckt->real_index = key;
1838: (61) r1 = *(u32 *)(r10 -20)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; pckt->real_index = key;
1839: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1840: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1841: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1842: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1844: (85) call bpf_map_lookup_elem#1
1845: safe

from 1834 to 1838: safe

from 1826 to 1839: R0=map_value(off=0,ks=4,vs=4,imm=0) R1=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6=ctx(off=0,imm=0) R7=scalar() R8=0 R9=scalar(id=196) R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; pckt->real_index = key;
1839: (63) *(u32 *)(r10 -40) = r1     ; R1=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1840: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1841: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1842: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1844: (85) call bpf_map_lookup_elem#1
1845: safe

from 1823 to 1857: safe

from 1726 to 1729: R0=scalar(id=196) R1=scalar(umax=8,var_off=(0x0; 0x8)) R2=scalar(umin=1000000001) R6=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=16,imm=0) R8=0 R9=scalar(id=196) R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; pckt->flow.port16[0] = pckt->flow.port16[1];
1729: (69) r1 = *(u16 *)(r10 -46)     ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; pckt->flow.port16[0] = pckt->flow.port16[1];
1730: (6b) *(u16 *)(r10 -48) = r1     ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-48=
1731: (b7) r5 = 0                     ; R5_w=0
; memset(pckt->flow.srcv6, 0, 16);
1732: (7b) *(u64 *)(r10 -80) = r5
last_idx 1732 first_idx 1729
regs=20 stack=0 before 1731: (b7) r5 = 0
1733: R5_w=P0 R10=fp0 fp-80_w=00000000
1733: (7b) *(u64 *)(r10 -72) = r5     ; R5_w=P0 R10=fp0 fp-72_w=00000000
; return jhash_2words(pckt->flow.src, pckt->flow.ports, INIT_JHASH_SEED);
1734: (61) r3 = *(u32 *)(r10 -48)     ; R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; b += initval;
1735: (07) r3 += -525483785           ; R3_w=scalar(smin=-525483785,smax=3769483510)
1736: (05) goto pc+0
1737: (05) goto pc+0
1738: (05) goto pc+0
1739: (bc) w2 = w3                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3=scalar(smin=-525483785,smax=3769483510)
; return (word << shift) | (word >> ((-shift) & 31));
1740: (77) r2 >>= 18                  ; R2_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1741: (bf) r4 = r3                    ; R3=scalar(id=208,smin=-525483785,smax=3769483510) R4_w=scalar(id=208,smin=-525483785,smax=3769483510)
1742: (67) r4 <<= 14                  ; R4_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1743: (4f) r4 |= r2                   ; R2_w=scalar(umax=16383,var_off=(0x0; 0x3fff)) R4_w=scalar()
; __jhash_final(a, b, c);
1744: (bf) r2 = r3                    ; R2_w=scalar(id=208,smin=-525483785,smax=3769483510) R3=scalar(id=208,smin=-525483785,smax=3769483510)
1745: (a7) r2 ^= -525483785           ; R2_w=scalar()
1746: (1f) r2 -= r4                   ; R2_w=scalar() R4_w=scalar()
1747: (05) goto pc+0
1748: (05) goto pc+0
1749: (bf) r0 = r2                    ; R0_w=scalar(id=209) R2=scalar(id=209)
1750: (67) r0 <<= 32                  ; R0_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
; return (word << shift) | (word >> ((-shift) & 31));
1751: (77) r0 >>= 53                  ; R0_w=scalar(umax=2047,var_off=(0x0; 0x7ff))
1752: (bf) r7 = r2                    ; R2=scalar(id=209) R7_w=scalar(id=209)
1753: (67) r7 <<= 11                  ; R7_w=scalar(smax=9223372036854773760,umax=18446744073709549568,var_off=(0x0; 0xfffffffffffff800),s32_max=2147481600,u32_max=-2048)
1754: (4f) r7 |= r0                   ; R0_w=scalar(umax=2047,var_off=(0x0; 0x7ff)) R7_w=scalar()
; a += initval;
1755: (07) r5 += -525483785           ; R5_w=P-525483785
; __jhash_final(a, b, c);
1756: (bf) r4 = r2                    ; R2=scalar(id=209) R4_w=scalar(id=209)
1757: (af) r4 ^= r5                   ; R4_w=scalar() R5_w=P-525483785
1758: (1f) r4 -= r7                   ; R4_w=scalar() R7_w=scalar()
1759: (05) goto pc+0
1760: (05) goto pc+0
1761: (05) goto pc+0
1762: (bc) w0 = w4                    ; R0_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R4=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1763: (77) r0 >>= 7                   ; R0_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff))
1764: (bf) r7 = r4                    ; R4=scalar(id=210) R7_w=scalar(id=210)
1765: (67) r7 <<= 25                  ; R7_w=scalar(smax=9223372036821221376,umax=18446744073675997184,var_off=(0x0; 0xfffffffffe000000),s32_max=2113929216,u32_max=-33554432)
1766: (4f) r7 |= r0                   ; R0_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff)) R7_w=scalar()
; __jhash_final(a, b, c);
1767: (bf) r5 = r4                    ; R4=scalar(id=210) R5_w=scalar(id=210)
1768: (af) r5 ^= r3                   ; R3=scalar(id=208,smin=-525483785,smax=3769483510) R5_w=scalar()
1769: (1f) r5 -= r7                   ; R5_w=scalar() R7_w=scalar()
1770: (05) goto pc+0
1771: (05) goto pc+0
1772: (05) goto pc+0
1773: (bc) w0 = w5                    ; R0_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R5=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1774: (77) r0 >>= 16                  ; R0_w=scalar(umax=65535,var_off=(0x0; 0xffff))
1775: (bf) r7 = r5                    ; R5=scalar(id=211) R7_w=scalar(id=211)
1776: (67) r7 <<= 16                  ; R7_w=scalar(smax=9223372036854710272,umax=18446744073709486080,var_off=(0x0; 0xffffffffffff0000),s32_max=2147418112,u32_max=-65536)
1777: (4f) r7 |= r0                   ; R0_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R7_w=scalar()
; __jhash_final(a, b, c);
1778: (bf) r3 = r5                    ; R3_w=scalar(id=211) R5=scalar(id=211)
1779: (af) r3 ^= r2                   ; R2=scalar(id=209) R3_w=scalar()
1780: (1f) r3 -= r7                   ; R3_w=scalar() R7_w=scalar()
1781: (05) goto pc+0
1782: (05) goto pc+0
1783: (05) goto pc+0
1784: (bc) w0 = w3                    ; R0_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1785: (77) r0 >>= 28                  ; R0_w=scalar(umax=15,var_off=(0x0; 0xf))
1786: (bf) r7 = r3                    ; R3=scalar(id=212) R7_w=scalar(id=212)
1787: (67) r7 <<= 4                   ; R7_w=scalar(smax=9223372036854775792,umax=18446744073709551600,var_off=(0x0; 0xfffffffffffffff0),s32_max=2147483632,u32_max=-16)
1788: (4f) r7 |= r0                   ; R0_w=scalar(umax=15,var_off=(0x0; 0xf)) R7_w=scalar()
; __jhash_final(a, b, c);
1789: (bf) r2 = r3                    ; R2_w=scalar(id=212) R3=scalar(id=212)
1790: (af) r2 ^= r4                   ; R2_w=scalar() R4=scalar(id=210)
1791: (1f) r2 -= r7                   ; R2_w=scalar() R7_w=scalar()
1792: (05) goto pc+0
1793: (bc) w4 = w2                    ; R2=scalar() R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1794: (77) r4 >>= 18                  ; R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1795: (bf) r1 = r2                    ; R1_w=scalar(id=213) R2=scalar(id=213)
1796: (67) r1 <<= 14                  ; R1_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1797: (4f) r1 |= r4                   ; R1_w=scalar() R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
; __jhash_final(a, b, c);
1798: (af) r2 ^= r5                   ; R2_w=scalar() R5=scalar(id=211)
1799: (1f) r2 -= r1                   ; R1_w=scalar() R2_w=scalar()
1800: (05) goto pc+0
1801: (05) goto pc+0
1802: (05) goto pc+0
1803: (bc) w4 = w2                    ; R2=scalar() R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1804: (77) r4 >>= 8                   ; R4_w=scalar(umax=16777215,var_off=(0x0; 0xffffff))
1805: (bf) r1 = r2                    ; R1_w=scalar(id=214) R2=scalar(id=214)
1806: (67) r1 <<= 24                  ; R1_w=scalar(smax=9223372036837998592,umax=18446744073692774400,var_off=(0x0; 0xffffffffff000000),s32_max=2130706432,u32_max=-16777216)
1807: (4f) r1 |= r4                   ; R1_w=scalar() R4_w=scalar(umax=16777215,var_off=(0x0; 0xffffff))
; __jhash_final(a, b, c);
1808: (af) r2 ^= r3                   ; R2_w=scalar() R3=scalar(id=212)
1809: (1f) r2 -= r1                   ; R1_w=scalar() R2_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1810: (79) r1 = *(u64 *)(r10 -144)    ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
1811: (61) r1 = *(u32 *)(r1 +4)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; key = RING_SIZE * (vip_info->vip_num) + hash;
1812: (27) r1 *= 65537                ; R1_w=scalar(umax=281479271612415,var_off=(0x0; 0x1ffffffffffff))
; __jhash_final(a, b, c);
1813: (bc) w2 = w2                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
1814: (05) goto pc+0
; hash = get_packet_hash(pckt, hash_16bytes) % RING_SIZE;
1815: (97) r2 %= 65537                ; R2_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1816: (0f) r2 += r1                   ; R1=scalar(umax=281479271612415,var_off=(0x0; 0x1ffffffffffff)) R2_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1817: (63) *(u32 *)(r10 -20) = r2     ; R2_w=scalar() R10=fp0 fp-24=mmmm????
1818: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1819: (07) r2 += -20                  ; R2_w=fp-20
; real_pos = bpf_map_lookup_elem(&ch_rings, &key);
1820: (18) r1 = 0xffffaebaa0631000    ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
1822: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=215,off=0,ks=4,vs=4,imm=0)
; if (!real_pos) {
1823: (15) if r0 == 0x0 goto pc+33    ; R0_w=map_value(off=0,ks=4,vs=4,imm=0)
; key = *real_pos;
1824: (61) r1 = *(u32 *)(r0 +0)       ; R0_w=map_value(off=0,ks=4,vs=4,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; key = *real_pos;
1825: (63) *(u32 *)(r10 -20) = r1     ; R1=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-24=mmmm????
; if (key == 0) {
1826: (55) if r1 != 0x0 goto pc+12    ; R1=0
1827: (05) goto pc+0
; __u32 ch_drop_stats_key = MAX_VIPS + CH_DROP_STATS;
1828: (62) *(u32 *)(r10 -28) = 521    ; R10=fp0 fp-32=mmmm????
1829: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1830: (07) r2 += -28                  ; R2_w=fp-28
; bpf_map_lookup_elem(&stats, &ch_drop_stats_key);
1831: (18) r1 = 0xffffa03499be8000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
1833: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=216,off=0,ks=4,vs=16,imm=0)
; if (!ch_drop_stats) {
1834: (15) if r0 == 0x0 goto pc+3     ; R0_w=map_value(off=0,ks=4,vs=16,imm=0)
; ch_drop_stats->v2 += 1;
1835: (79) r1 = *(u64 *)(r0 +8)       ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1836: (07) r1 += 1                    ; R1_w=scalar()
1837: (7b) *(u64 *)(r0 +8) = r1       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1=scalar()
; pckt->real_index = key;
1838: (61) r1 = *(u32 *)(r10 -20)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; pckt->real_index = key;
1839: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1840: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1841: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1842: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1844: (85) call bpf_map_lookup_elem#1
frame -168: propagating fp0
last_idx 1845 first_idx 1838
regs=0 stack=100000 before 1844: (85) call bpf_map_lookup_elem#1
regs=0 stack=100000 before 1842: (18) r1 = 0xffffaeba8c207000
regs=0 stack=100000 before 1841: (07) r2 += -20
regs=0 stack=100000 before 1840: (bf) r2 = r10
regs=0 stack=100000 before 1839: (63) *(u32 *)(r10 -40) = r1
regs=0 stack=100000 before 1838: (61) r1 = *(u32 *)(r10 -20)
parent didn't have regs=0 stack=100000 marks: R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar() R6_r=ctx(off=0,imm=0) R7=scalar() R8_r=0 R9_r=scalar(id=196) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-24_r=mmmm???? fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r= fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1837 first_idx 1826
regs=0 stack=100000 before 1837: (7b) *(u64 *)(r0 +8) = r1
regs=0 stack=100000 before 1836: (07) r1 += 1
regs=0 stack=100000 before 1835: (79) r1 = *(u64 *)(r0 +8)
regs=0 stack=100000 before 1834: (15) if r0 == 0x0 goto pc+3
regs=0 stack=100000 before 1833: (85) call bpf_map_lookup_elem#1
regs=0 stack=100000 before 1831: (18) r1 = 0xffffa03499be8000
regs=0 stack=100000 before 1830: (07) r2 += -28
regs=0 stack=100000 before 1829: (bf) r2 = r10
regs=0 stack=100000 before 1828: (62) *(u32 *)(r10 -28) = 521
regs=0 stack=100000 before 1827: (05) goto pc+0
regs=0 stack=100000 before 1826: (55) if r1 != 0x0 goto pc+12
parent didn't have regs=0 stack=100000 marks: R0_w=map_value(off=0,ks=4,vs=4,imm=0) R1_rw=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6_r=ctx(off=0,imm=0) R7=scalar() R8_r=0 R9_r=scalar(id=196) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-24_r=mmmm???? fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r= fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1825 first_idx 1815
regs=0 stack=100000 before 1825: (63) *(u32 *)(r10 -20) = r1
regs=0 stack=100000 before 1824: (61) r1 = *(u32 *)(r0 +0)
regs=0 stack=100000 before 1823: (15) if r0 == 0x0 goto pc+33
regs=0 stack=100000 before 1822: (85) call bpf_map_lookup_elem#1
regs=0 stack=100000 before 1820: (18) r1 = 0xffffaebaa0631000
regs=0 stack=100000 before 1819: (07) r2 += -20
regs=0 stack=100000 before 1818: (bf) r2 = r10
regs=0 stack=100000 before 1817: (63) *(u32 *)(r10 -20) = r2
regs=0 stack=100000 before 1816: (0f) r2 += r1
regs=0 stack=100000 before 1815: (97) r2 %= 65537
parent didn't have regs=0 stack=100000 marks: R0=scalar(umax=15,var_off=(0x0; 0xf)) R1_rw=scalar(umax=281479271612415,var_off=(0x0; 0x1ffffffffffff)) R2_rw=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3=scalar(id=212) R4_w=scalar(umax=16777215,var_off=(0x0; 0xffffff)) R5=scalar(id=211) R6_r=ctx(off=0,imm=0) R7=scalar() R8_r=0 R9_r=scalar(id=196) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r= fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1814 first_idx 1802
regs=0 stack=100000 before 1814: (05) goto pc+0
regs=0 stack=100000 before 1813: (bc) w2 = w2
regs=0 stack=100000 before 1812: (27) r1 *= 65537
regs=0 stack=100000 before 1811: (61) r1 = *(u32 *)(r1 +4)
regs=0 stack=100000 before 1810: (79) r1 = *(u64 *)(r10 -144)
regs=0 stack=100000 before 1809: (1f) r2 -= r1
regs=0 stack=100000 before 1808: (af) r2 ^= r3
regs=0 stack=100000 before 1807: (4f) r1 |= r4
regs=0 stack=100000 before 1806: (67) r1 <<= 24
regs=0 stack=100000 before 1805: (bf) r1 = r2
regs=0 stack=100000 before 1804: (77) r4 >>= 8
regs=0 stack=100000 before 1803: (bc) w4 = w2
regs=0 stack=100000 before 1802: (05) goto pc+0
parent didn't have regs=0 stack=100000 marks: R0=scalar(umax=15,var_off=(0x0; 0xf)) R1_w=scalar() R2_rw=scalar() R3_r=scalar(id=212) R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff)) R5=scalar(id=211) R6_r=ctx(off=0,imm=0) R7=scalar() R8_r=0 R9_r=scalar(id=196) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r= fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1801 first_idx 1793
regs=0 stack=100000 before 1801: (05) goto pc+0
regs=0 stack=100000 before 1800: (05) goto pc+0
regs=0 stack=100000 before 1799: (1f) r2 -= r1
regs=0 stack=100000 before 1798: (af) r2 ^= r5
regs=0 stack=100000 before 1797: (4f) r1 |= r4
regs=0 stack=100000 before 1796: (67) r1 <<= 14
regs=0 stack=100000 before 1795: (bf) r1 = r2
regs=0 stack=100000 before 1794: (77) r4 >>= 18
regs=0 stack=100000 before 1793: (bc) w4 = w2
parent didn't have regs=0 stack=100000 marks: R0_w=scalar(umax=15,var_off=(0x0; 0xf)) R1=scalar(umax=65535,var_off=(0x0; 0xffff)) R2_rw=scalar() R3_r=scalar(id=212) R4=scalar(id=210) R5_r=scalar(id=211) R6_r=ctx(off=0,imm=0) R7_w=scalar() R8_r=0 R9_r=scalar(id=196) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r= fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1792 first_idx 1782
regs=0 stack=100000 before 1792: (05) goto pc+0
regs=0 stack=100000 before 1791: (1f) r2 -= r7
regs=0 stack=100000 before 1790: (af) r2 ^= r4
regs=0 stack=100000 before 1789: (bf) r2 = r3
regs=0 stack=100000 before 1788: (4f) r7 |= r0
regs=0 stack=100000 before 1787: (67) r7 <<= 4
regs=0 stack=100000 before 1786: (bf) r7 = r3
regs=0 stack=100000 before 1785: (77) r0 >>= 28
regs=0 stack=100000 before 1784: (bc) w0 = w3
regs=0 stack=100000 before 1783: (05) goto pc+0
regs=0 stack=100000 before 1782: (05) goto pc+0
parent didn't have regs=0 stack=100000 marks: R0_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R1=scalar(umax=65535,var_off=(0x0; 0xffff)) R2=scalar(id=209) R3_rw=scalar() R4_r=scalar(id=210) R5_r=scalar(id=211) R6_r=ctx(off=0,imm=0) R7_w=scalar() R8_r=0 R9_r=scalar(id=196) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r= fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1781 first_idx 1771
regs=0 stack=100000 before 1781: (05) goto pc+0
regs=0 stack=100000 before 1780: (1f) r3 -= r7
regs=0 stack=100000 before 1779: (af) r3 ^= r2
regs=0 stack=100000 before 1778: (bf) r3 = r5
regs=0 stack=100000 before 1777: (4f) r7 |= r0
regs=0 stack=100000 before 1776: (67) r7 <<= 16
regs=0 stack=100000 before 1775: (bf) r7 = r5
regs=0 stack=100000 before 1774: (77) r0 >>= 16
regs=0 stack=100000 before 1773: (bc) w0 = w5
regs=0 stack=100000 before 1772: (05) goto pc+0
regs=0 stack=100000 before 1771: (05) goto pc+0
parent didn't have regs=0 stack=100000 marks: R0_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff)) R1=scalar(umax=65535,var_off=(0x0; 0xffff)) R2_r=scalar(id=209) R3=scalar(id=208,smin=-525483785,smax=3769483510) R4_r=scalar(id=210) R5_rw=scalar() R6_r=ctx(off=0,imm=0) R7_w=scalar() R8_r=0 R9_r=scalar(id=196) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r= fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1770 first_idx 1760
regs=0 stack=100000 before 1770: (05) goto pc+0
regs=0 stack=100000 before 1769: (1f) r5 -= r7
regs=0 stack=100000 before 1768: (af) r5 ^= r3
regs=0 stack=100000 before 1767: (bf) r5 = r4
regs=0 stack=100000 before 1766: (4f) r7 |= r0
regs=0 stack=100000 before 1765: (67) r7 <<= 25
regs=0 stack=100000 before 1764: (bf) r7 = r4
regs=0 stack=100000 before 1763: (77) r0 >>= 7
regs=0 stack=100000 before 1762: (bc) w0 = w4
regs=0 stack=100000 before 1761: (05) goto pc+0
regs=0 stack=100000 before 1760: (05) goto pc+0
parent didn't have regs=0 stack=100000 marks: R0_w=scalar(umax=2047,var_off=(0x0; 0x7ff)) R1=scalar(umax=65535,var_off=(0x0; 0xffff)) R2_r=scalar(id=209) R3_r=scalar(id=208,smin=-525483785,smax=3769483510) R4_rw=scalar() R5_w=P-525483785 R6_r=ctx(off=0,imm=0) R7_w=scalar() R8_r=0 R9_r=scalar(id=196) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r= fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1759 first_idx 1748
regs=0 stack=100000 before 1759: (05) goto pc+0
regs=0 stack=100000 before 1758: (1f) r4 -= r7
regs=0 stack=100000 before 1757: (af) r4 ^= r5
regs=0 stack=100000 before 1756: (bf) r4 = r2
regs=0 stack=100000 before 1755: (07) r5 += -525483785
regs=0 stack=100000 before 1754: (4f) r7 |= r0
regs=0 stack=100000 before 1753: (67) r7 <<= 11
regs=0 stack=100000 before 1752: (bf) r7 = r2
regs=0 stack=100000 before 1751: (77) r0 >>= 53
regs=0 stack=100000 before 1750: (67) r0 <<= 32
regs=0 stack=100000 before 1749: (bf) r0 = r2
regs=0 stack=100000 before 1748: (05) goto pc+0
parent didn't have regs=0 stack=100000 marks: R0=scalar(id=196) R1=scalar(umax=65535,var_off=(0x0; 0xffff)) R2_rw=scalar() R3_r=scalar(id=208,smin=-525483785,smax=3769483510) R4_w=scalar() R5_r=P0 R6_r=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=16,imm=0) R8_r=0 R9_r=scalar(id=196) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r= fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1747 first_idx 1738
regs=0 stack=100000 before 1747: (05) goto pc+0
regs=0 stack=100000 before 1746: (1f) r2 -= r4
regs=0 stack=100000 before 1745: (a7) r2 ^= -525483785
regs=0 stack=100000 before 1744: (bf) r2 = r3
regs=0 stack=100000 before 1743: (4f) r4 |= r2
regs=0 stack=100000 before 1742: (67) r4 <<= 14
regs=0 stack=100000 before 1741: (bf) r4 = r3
regs=0 stack=100000 before 1740: (77) r2 >>= 18
regs=0 stack=100000 before 1739: (bc) w2 = w3
regs=0 stack=100000 before 1738: (05) goto pc+0
parent didn't have regs=0 stack=100000 marks: R0=scalar(id=196) R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R2=scalar(umin=1000000001) R3_rw=scalar(smin=-525483785,smax=3769483510) R5_rw=P0 R6_r=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=16,imm=0) R8_r=0 R9_r=scalar(id=196) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r= fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_rw=00000000 fp-80_rw=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1737 first_idx 1729
regs=0 stack=100000 before 1737: (05) goto pc+0
regs=0 stack=100000 before 1736: (05) goto pc+0
regs=0 stack=100000 before 1735: (07) r3 += -525483785
regs=0 stack=100000 before 1734: (61) r3 = *(u32 *)(r10 -48)
regs=0 stack=100000 before 1733: (7b) *(u64 *)(r10 -72) = r5
regs=0 stack=100000 before 1732: (7b) *(u64 *)(r10 -80) = r5
regs=0 stack=100000 before 1731: (b7) r5 = 0
regs=0 stack=100000 before 1730: (6b) *(u16 *)(r10 -48) = r1
regs=0 stack=100000 before 1729: (69) r1 = *(u16 *)(r10 -46)
parent didn't have regs=0 stack=100000 marks: R0=scalar(id=196) R1=scalar(umax=8,var_off=(0x0; 0x8)) R2=scalar(umin=1000000001) R6_r=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=16,imm=0) R8_r=0 R9_r=scalar(id=196) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1726 first_idx 1726
regs=0 stack=100000 before 1726: (55) if r1 != 0x0 goto pc+2
parent didn't have regs=0 stack=100000 marks: R0=scalar(id=196) R1_rw=scalar(umax=8,var_off=(0x0; 0x8)) R2=scalar(umin=1000000001) R6_r=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=16,imm=0) R8_rw=0 R9_r=scalar(id=196) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1725 first_idx 1713
regs=0 stack=100000 before 1725: (57) r1 &= 8
regs=0 stack=100000 before 1724: (61) r1 = *(u32 *)(r1 +0)
regs=0 stack=100000 before 1723: (79) r1 = *(u64 *)(r10 -144)
regs=0 stack=100000 before 1722: (b7) r8 = 0
regs=0 stack=100000 before 1717: (05) goto pc+4
regs=0 stack=100000 before 1716: (7a) *(u64 *)(r7 +0) = 1
regs=0 stack=100000 before 1715: (05) goto pc+0
regs=0 stack=100000 before 1714: (7b) *(u64 *)(r7 +8) = r9
regs=0 stack=100000 before 1713: (2d) if r1 > r2 goto pc+4
parent didn't have regs=0 stack=100000 marks: R0_w=scalar(id=196) R1_rw=1000000001 R2_rw=scalar() R6_r=ctx(off=0,imm=0) R7_rw=map_value(off=0,ks=4,vs=16,imm=0) R8_w=1 R9_rw=scalar(id=196) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1712 first_idx 1704
regs=0 stack=100000 before 1712: (b7) r1 = 1000000001
regs=0 stack=100000 before 1711: (1f) r2 -= r1
regs=0 stack=100000 before 1710: (bf) r2 = r9
regs=0 stack=100000 before 1709: (79) r1 = *(u64 *)(r7 +8)
regs=0 stack=100000 before 1708: (bf) r9 = r0
regs=0 stack=100000 before 1707: (85) call bpf_ktime_get_ns#5
regs=0 stack=100000 before 1706: (15) if r7 == 0x0 goto pc+16
regs=0 stack=100000 before 1705: (b7) r8 = 1
regs=0 stack=100000 before 1704: (bf) r7 = r0
parent didn't have regs=0 stack=100000 marks: R0_rw=map_value_or_null(id=195,off=0,ks=4,vs=16,imm=0) R6_r=ctx(off=0,imm=0) R7=map_value(off=0,ks=40,vs=16,imm=0) R8=pkt_end(off=0,imm=0) R9_w=P0 R10=fp0 fp-8_rw=00000000 fp-16_rw=00000000 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1703 first_idx 1694
regs=0 stack=100000 before 1703: (85) call bpf_map_lookup_elem#1
regs=0 stack=100000 before 1701: (18) r1 = 0xffffa03499be8000
regs=0 stack=100000 before 1700: (07) r2 += -28
regs=0 stack=100000 before 1699: (bf) r2 = r10
regs=0 stack=100000 before 1698: (62) *(u32 *)(r10 -28) = 514
regs=0 stack=100000 before 1697: (05) goto pc+0
regs=0 stack=100000 before 1696: (7b) *(u64 *)(r10 -16) = r9
regs=0 stack=100000 before 1695: (7b) *(u64 *)(r10 -8) = r9
regs=0 stack=100000 before 1694: (b7) r9 = 0
parent didn't have regs=0 stack=100000 marks: R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar() R2_w=scalar(umax=2,var_off=(0x0; 0x2)) R6_r=ctx(off=0,imm=0) R7=map_value(off=0,ks=40,vs=16,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16=????mmmm fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1693 first_idx 1683
regs=0 stack=100000 before 1693: (7b) *(u64 *)(r0 +0) = r1
regs=0 stack=100000 before 1692: (07) r1 += 1
regs=0 stack=100000 before 1691: (79) r1 = *(u64 *)(r0 +0)
regs=0 stack=100000 before 1690: (0f) r0 += r1
regs=0 stack=100000 before 1689: (67) r1 <<= 3
regs=0 stack=100000 before 1688: (b7) r1 = 0
regs=0 stack=100000 before 1687: (15) if r2 == 0x0 goto pc+1
regs=0 stack=100000 before 1686: (b7) r1 = 1
regs=0 stack=100000 before 1685: (57) r2 &= 2
regs=0 stack=100000 before 1684: (71) r2 = *(u8 *)(r10 -36)
regs=0 stack=100000 before 1683: (15) if r0 == 0x0 goto pc+173
parent didn't have regs=0 stack=100000 marks: R0_rw=map_value_or_null(id=194,off=0,ks=4,vs=16,imm=0) R6_r=ctx(off=0,imm=0) R7=map_value(off=0,ks=40,vs=16,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16=????mmmm fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1682 first_idx 1674
regs=0 stack=100000 before 1682: (85) call bpf_map_lookup_elem#1
regs=0 stack=100000 before 1680: (18) r1 = 0xffffa03499be8000
regs=0 stack=100000 before 1679: (07) r2 += -16
regs=0 stack=100000 before 1678: (bf) r2 = r10
regs=0 stack=100000 before 1677: (62) *(u32 *)(r10 -16) = 513
regs=0 stack=100000 before 1676: (05) goto pc+0
regs=0 stack=100000 before 1675: (55) if r1 != 0x6 goto pc+18
regs=0 stack=100000 before 1674: (71) r1 = *(u8 *)(r10 -44)
parent didn't have regs=0 stack=100000 marks: R0=scalar(id=166) R1=30000000000 R2=scalar(umin=30000000001) R6_r=ctx(off=0,imm=0) R7=map_value(off=0,ks=40,vs=16,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16_r=????mmmm fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1662 first_idx 1662
regs=0 stack=100000 before 1662: (2d) if r2 > r1 goto pc+11
parent already had regs=0 stack=100000 marks: R0_rw=scalar(id=166) R1_rw=30000000000 R2_rw=scalar() R6_r=ctx(off=0,imm=0) R7_rw=map_value(off=0,ks=40,vs=16,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16_r=????mmmm fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
1845: safe
frame -168: propagating fp0
last_idx 1838 first_idx 1826
regs=0 stack=100000 before 1834: (15) if r0 == 0x0 goto pc+3
regs=0 stack=100000 before 1833: (85) call bpf_map_lookup_elem#1
regs=0 stack=100000 before 1831: (18) r1 = 0xffffa03499be8000
regs=0 stack=100000 before 1830: (07) r2 += -28
regs=0 stack=100000 before 1829: (bf) r2 = r10
regs=0 stack=100000 before 1828: (62) *(u32 *)(r10 -28) = 521
regs=0 stack=100000 before 1827: (05) goto pc+0
regs=0 stack=100000 before 1826: (55) if r1 != 0x0 goto pc+12
parent already had regs=0 stack=100000 marks: R0_w=map_value(off=0,ks=4,vs=4,imm=0) R1_rw=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6_r=ctx(off=0,imm=0) R7=scalar() R8_r=0 R9_r=scalar(id=196) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-24_r=mmmm???? fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r= fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P

from 1834 to 1838: safe

from 1826 to 1839: R0=map_value(off=0,ks=4,vs=4,imm=0) R1=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6=ctx(off=0,imm=0) R7=scalar() R8=0 R9=scalar(id=196) R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40=mmmmmmmm fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=00000000 fp-80=00000000 fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; pckt->real_index = key;
1839: (63) *(u32 *)(r10 -40) = r1     ; R1=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1840: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1841: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1842: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1844: (85) call bpf_map_lookup_elem#1
frame -168: propagating fp0
last_idx 1845 first_idx 1826
regs=0 stack=100000 before 1844: (85) call bpf_map_lookup_elem#1
regs=0 stack=100000 before 1842: (18) r1 = 0xffffaeba8c207000
regs=0 stack=100000 before 1841: (07) r2 += -20
regs=0 stack=100000 before 1840: (bf) r2 = r10
regs=0 stack=100000 before 1839: (63) *(u32 *)(r10 -40) = r1
regs=0 stack=100000 before 1826: (55) if r1 != 0x0 goto pc+12
parent already had regs=0 stack=100000 marks: R0_w=map_value(off=0,ks=4,vs=4,imm=0) R1_rw=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6_r=ctx(off=0,imm=0) R7=scalar() R8_r=0 R9_r=scalar(id=196) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-24_r=mmmm???? fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r= fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
1845: safe

from 1823 to 1857: safe

from 1713 to 1718: R0=scalar(id=196) R1=1000000001 R2=scalar(umax=1000000000,var_off=(0x0; 0x3fffffff)) R6=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=16,imm=0) R8=1 R9=scalar(id=196) R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; conn_rate_stats->v1 += 1;
1718: (79) r1 = *(u64 *)(r7 +0)       ; R1_w=scalar() R7=map_value(off=0,ks=4,vs=16,imm=0)
1719: (07) r1 += 1                    ; R1_w=scalar()
1720: (7b) *(u64 *)(r7 +0) = r1       ; R1_w=scalar() R7=map_value(off=0,ks=4,vs=16,imm=0)
; if (conn_rate_stats->v1 > MAX_CONN_RATE) {
1721: (25) if r1 > 0x1e848 goto pc+1          ; R1_w=scalar(umax=125000,var_off=(0x0; 0x1ffff))
1722: (b7) r8 = 0                     ; R8_w=0
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
1723: (79) r1 = *(u64 *)(r10 -144)    ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
1724: (61) r1 = *(u32 *)(r1 +0)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
1725: (57) r1 &= 8
frame -168: propagating fp0
last_idx 1726 first_idx 1718
regs=0 stack=100000 before 1725: (57) r1 &= 8
regs=0 stack=100000 before 1724: (61) r1 = *(u32 *)(r1 +0)
regs=0 stack=100000 before 1723: (79) r1 = *(u64 *)(r10 -144)
regs=0 stack=100000 before 1722: (b7) r8 = 0
regs=0 stack=100000 before 1721: (25) if r1 > 0x1e848 goto pc+1
regs=0 stack=100000 before 1720: (7b) *(u64 *)(r7 +0) = r1
regs=0 stack=100000 before 1719: (07) r1 += 1
regs=0 stack=100000 before 1718: (79) r1 = *(u64 *)(r7 +0)
parent didn't have regs=0 stack=100000 marks: R0=scalar(id=196) R1=1000000001 R2=scalar(umax=1000000000,var_off=(0x0; 0x3fffffff)) R6_r=ctx(off=0,imm=0) R7_r=map_value(off=0,ks=4,vs=16,imm=0) R8=1 R9_r=scalar(id=196) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1713 first_idx 1713
regs=0 stack=100000 before 1713: (2d) if r1 > r2 goto pc+4
parent already had regs=0 stack=100000 marks: R0_w=scalar(id=196) R1_rw=1000000001 R2_rw=scalar() R6_r=ctx(off=0,imm=0) R7_rw=map_value(off=0,ks=4,vs=16,imm=0) R8_w=1 R9_rw=scalar(id=196) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
1726: safe

from 1721 to 1723: R0=scalar(id=196) R1_w=scalar(umin=125001) R2=scalar(umax=1000000000,var_off=(0x0; 0x3fffffff)) R6=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=16,imm=0) R8=1 R9=scalar(id=196) R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
1723: (79) r1 = *(u64 *)(r10 -144)    ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
1724: (61) r1 = *(u32 *)(r1 +0)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
1725: (57) r1 &= 8
frame -168: propagating fp0
last_idx 1726 first_idx 1718
regs=0 stack=100000 before 1725: (57) r1 &= 8
regs=0 stack=100000 before 1724: (61) r1 = *(u32 *)(r1 +0)
regs=0 stack=100000 before 1723: (79) r1 = *(u64 *)(r10 -144)
regs=0 stack=100000 before 1721: (25) if r1 > 0x1e848 goto pc+1
regs=0 stack=100000 before 1720: (7b) *(u64 *)(r7 +0) = r1
regs=0 stack=100000 before 1719: (07) r1 += 1
regs=0 stack=100000 before 1718: (79) r1 = *(u64 *)(r7 +0)
parent already had regs=0 stack=100000 marks: R0=scalar(id=196) R1=1000000001 R2=scalar(umax=1000000000,var_off=(0x0; 0x3fffffff)) R6_r=ctx(off=0,imm=0) R7_r=map_value(off=0,ks=4,vs=16,imm=0) R8_r=1 R9_r=scalar(id=196) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
1726: safe

from 1706 to 1723: R0=0 R6=ctx(off=0,imm=0) R7_w=0 R8_w=1 R9=P0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
1723: (79) r1 = *(u64 *)(r10 -144)    ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
1724: (61) r1 = *(u32 *)(r1 +0)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
1725: (57) r1 &= 8
frame -168: propagating fp0
last_idx 1726 first_idx 1704
regs=0 stack=100000 before 1725: (57) r1 &= 8
regs=0 stack=100000 before 1724: (61) r1 = *(u32 *)(r1 +0)
regs=0 stack=100000 before 1723: (79) r1 = *(u64 *)(r10 -144)
regs=0 stack=100000 before 1706: (15) if r7 == 0x0 goto pc+16
regs=0 stack=100000 before 1705: (b7) r8 = 1
regs=0 stack=100000 before 1704: (bf) r7 = r0
parent already had regs=0 stack=100000 marks: R0_rw=map_value_or_null(id=195,off=0,ks=4,vs=16,imm=0) R6_r=ctx(off=0,imm=0) R7=map_value(off=0,ks=40,vs=16,imm=0) R8=pkt_end(off=0,imm=0) R9_rw=P0 R10=fp0 fp-8_rw=00000000 fp-16_rw=00000000 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
1726: safe

from 1687 to 1689: R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=1 R2_w=0 R6=ctx(off=0,imm=0) R7=map_value(off=0,ks=40,vs=16,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (pckt.flags & F_SYN_SET) {
1689: (67) r1 <<= 3                   ; R1_w=8
; 
1690: (0f) r0 += r1
last_idx 1690 first_idx 1683
regs=2 stack=0 before 1689: (67) r1 <<= 3
regs=2 stack=0 before 1687: (15) if r2 == 0x0 goto pc+1
regs=2 stack=0 before 1686: (b7) r1 = 1
1691: R0_w=map_value(off=8,ks=4,vs=16,imm=0) R1_w=P8
1691: (79) r1 = *(u64 *)(r0 +0)       ; R0_w=map_value(off=8,ks=4,vs=16,imm=0) R1_w=scalar()
1692: (07) r1 += 1                    ; R1_w=scalar()
1693: (7b) *(u64 *)(r0 +0) = r1
frame -168: propagating fp0
last_idx 1694 first_idx 1683
regs=0 stack=100000 before 1693: (7b) *(u64 *)(r0 +0) = r1
regs=0 stack=100000 before 1692: (07) r1 += 1
regs=0 stack=100000 before 1691: (79) r1 = *(u64 *)(r0 +0)
regs=0 stack=100000 before 1690: (0f) r0 += r1
regs=0 stack=100000 before 1689: (67) r1 <<= 3
regs=0 stack=100000 before 1687: (15) if r2 == 0x0 goto pc+1
regs=0 stack=100000 before 1686: (b7) r1 = 1
regs=0 stack=100000 before 1685: (57) r2 &= 2
regs=0 stack=100000 before 1684: (71) r2 = *(u8 *)(r10 -36)
regs=0 stack=100000 before 1683: (15) if r0 == 0x0 goto pc+173
parent already had regs=0 stack=100000 marks: R0_rw=map_value_or_null(id=194,off=0,ks=4,vs=16,imm=0) R6_r=ctx(off=0,imm=0) R7=map_value(off=0,ks=40,vs=16,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16=????mmmm fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
1694: safe

from 1683 to 1857: safe
frame -168: propagating fp0
last_idx 1694 first_idx 1674
regs=0 stack=100000 before 1675: (55) if r1 != 0x6 goto pc+18
regs=0 stack=100000 before 1674: (71) r1 = *(u8 *)(r10 -44)
parent already had regs=0 stack=100000 marks: R0=scalar(id=166) R1=30000000000 R2=scalar(umin=30000000001) R6_r=ctx(off=0,imm=0) R7=map_value(off=0,ks=40,vs=16,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16_r=????mmmm fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P

from 1675 to 1694: safe

from 1655 to 1664: R0=map_value(off=0,ks=40,vs=16,imm=0) R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R6=ctx(off=0,imm=0) R7_w=map_value(off=0,ks=40,vs=16,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; key = dst_lru->pos;
1664: (61) r1 = *(u32 *)(r7 +0)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R7_w=map_value(off=0,ks=40,vs=16,imm=0)
; pckt->real_index = key;
1665: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
; key = dst_lru->pos;
1666: (63) *(u32 *)(r10 -16) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-16=
1667: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; key = dst_lru->pos;
1668: (07) r2 += -16                  ; R2_w=fp-16
; *real = bpf_map_lookup_elem(&reals, &key);
1669: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1671: (85) call bpf_map_lookup_elem#1
frame -168: propagating fp0
last_idx 1672 first_idx 1652
regs=0 stack=100000 before 1671: (85) call bpf_map_lookup_elem#1
regs=0 stack=100000 before 1669: (18) r1 = 0xffffaeba8c207000
regs=0 stack=100000 before 1668: (07) r2 += -16
regs=0 stack=100000 before 1667: (bf) r2 = r10
regs=0 stack=100000 before 1666: (63) *(u32 *)(r10 -16) = r1
regs=0 stack=100000 before 1665: (63) *(u32 *)(r10 -40) = r1
regs=0 stack=100000 before 1664: (61) r1 = *(u32 *)(r7 +0)
regs=0 stack=100000 before 1655: (55) if r1 != 0x11 goto pc+8
regs=0 stack=100000 before 1654: (71) r1 = *(u8 *)(r10 -44)
regs=0 stack=100000 before 1653: (15) if r7 == 0x0 goto pc+20
regs=0 stack=100000 before 1652: (bf) r7 = r0
parent already had regs=0 stack=100000 marks: R0_rw=map_value_or_null(id=165,off=0,ks=40,vs=16,imm=0) R6_r=ctx(off=0,imm=0) R7=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16_r=????mmmm fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
1672: safe
frame -168: propagating fp0
last_idx 1674 first_idx 1652
regs=0 stack=100000 before 1653: (15) if r7 == 0x0 goto pc+20
regs=0 stack=100000 before 1652: (bf) r7 = r0
parent already had regs=0 stack=100000 marks: R0_rw=map_value_or_null(id=165,off=0,ks=40,vs=16,imm=0) R6_r=ctx(off=0,imm=0) R7=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16_r=????mmmm fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P

from 1653 to 1674: safe

from 1647 to 1674: R0=map_value(off=0,ks=4,vs=16,imm=0) R1=scalar(umax=2,var_off=(0x0; 0x2)) R6=ctx(off=0,imm=0) R7=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (pckt.flow.proto == IPPROTO_TCP) {
1674: (71) r1 = *(u8 *)(r10 -44)      ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (pckt.flow.proto == IPPROTO_TCP) {
1675: (55) if r1 != 0x6 goto pc+18    ; R1_w=6
1676: (05) goto pc+0
; __u32 lru_stats_key = MAX_VIPS + LRU_MISS_CNTR;
1677: (62) *(u32 *)(r10 -16) = 513    ; R10=fp0 fp-16=????mmmm
1678: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1679: (07) r2 += -16                  ; R2_w=fp-16
; bpf_map_lookup_elem(&stats, &lru_stats_key);
1680: (18) r1 = 0xffffa03499be8000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
1682: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=220,off=0,ks=4,vs=16,imm=0)
; if (!lru_stats) {
1683: (15) if r0 == 0x0 goto pc+173   ; R0=map_value(off=0,ks=4,vs=16,imm=0)
; if (pckt.flags & F_SYN_SET) {
1684: (71) r2 = *(u8 *)(r10 -36)      ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (pckt.flags & F_SYN_SET) {
1685: (57) r2 &= 2                    ; R2_w=scalar(umax=2,var_off=(0x0; 0x2))
1686: (b7) r1 = 1                     ; R1_w=1
1687: (15) if r2 == 0x0 goto pc+1     ; R2_w=scalar(umax=2,var_off=(0x0; 0x2))
1688: (b7) r1 = 0                     ; R1_w=0
; if (pckt.flags & F_SYN_SET) {
1689: (67) r1 <<= 3                   ; R1_w=0
; 
1690: (0f) r0 += r1
last_idx 1690 first_idx 1683
regs=2 stack=0 before 1689: (67) r1 <<= 3
regs=2 stack=0 before 1688: (b7) r1 = 0
1691: R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=P0
1691: (79) r1 = *(u64 *)(r0 +0)       ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1692: (07) r1 += 1                    ; R1_w=scalar()
1693: (7b) *(u64 *)(r0 +0) = r1       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1=scalar()
1694: (b7) r9 = 0                     ; R9_w=0
; struct real_pos_lru new_dst_lru = {};
1695: (7b) *(u64 *)(r10 -8) = r9
last_idx 1695 first_idx 1694
regs=200 stack=0 before 1694: (b7) r9 = 0
1696: R9_w=P0 R10=fp0 fp-8_w=00000000
1696: (7b) *(u64 *)(r10 -16) = r9     ; R9_w=P0 R10=fp0 fp-16_w=00000000
1697: (05) goto pc+0
; __u32 conn_rate_key = MAX_VIPS + NEW_CONN_RATE_CNTR;
1698: (62) *(u32 *)(r10 -28) = 514    ; R10=fp0 fp-32=mmmm????
1699: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1700: (07) r2 += -28                  ; R2_w=fp-28
; bpf_map_lookup_elem(&stats, &conn_rate_key);
1701: (18) r1 = 0xffffa03499be8000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
1703: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=221,off=0,ks=4,vs=16,imm=0)
1704: (bf) r7 = r0                    ; R0=map_value_or_null(id=221,off=0,ks=4,vs=16,imm=0) R7_w=map_value_or_null(id=221,off=0,ks=4,vs=16,imm=0)
1705: (b7) r8 = 1                     ; R8_w=1
; if (!conn_rate_stats) {
1706: (15) if r7 == 0x0 goto pc+16    ; R7_w=map_value(off=0,ks=4,vs=16,imm=0)
; *cur_time = bpf_ktime_get_ns();
1707: (85) call bpf_ktime_get_ns#5    ; R0_w=scalar()
1708: (bf) r9 = r0                    ; R0_w=scalar(id=222) R9_w=scalar(id=222)
; if ((*cur_time - conn_rate_stats->v2) > ONE_SEC) {
1709: (79) r1 = *(u64 *)(r7 +8)       ; R1_w=scalar() R7_w=map_value(off=0,ks=4,vs=16,imm=0)
; if ((*cur_time - conn_rate_stats->v2) > ONE_SEC) {
1710: (bf) r2 = r9                    ; R2_w=scalar(id=222) R9_w=scalar(id=222)
1711: (1f) r2 -= r1                   ; R1_w=scalar() R2_w=scalar()
1712: (b7) r1 = 1000000001            ; R1=1000000001
; if ((*cur_time - conn_rate_stats->v2) > ONE_SEC) {
1713: (2d) if r1 > r2 goto pc+4       ; R1=1000000001 R2=scalar(umin=1000000001)
; conn_rate_stats->v2 = *cur_time;
1714: (7b) *(u64 *)(r7 +8) = r9       ; R7=map_value(off=0,ks=4,vs=16,imm=0) R9=scalar(id=222)
1715: (05) goto pc+0
; conn_rate_stats->v1 = 1;
1716: (7a) *(u64 *)(r7 +0) = 1        ; R7=map_value(off=0,ks=4,vs=16,imm=0)
1717: (05) goto pc+4
; if (conn_rate_stats->v1 > MAX_CONN_RATE) {
1722: (b7) r8 = 0                     ; R8_w=0
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
1723: (79) r1 = *(u64 *)(r10 -144)    ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
1724: (61) r1 = *(u32 *)(r1 +0)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
1725: (57) r1 &= 8                    ; R1=scalar(umax=8,var_off=(0x0; 0x8))
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
1726: (55) if r1 != 0x0 goto pc+2     ; R1=0
; return jhash_2words(pckt->flow.src, pckt->flow.ports, INIT_JHASH_SEED);
1727: (61) r5 = *(u32 *)(r10 -80)     ; R5_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
1728: (05) goto pc+5
; return jhash_2words(pckt->flow.src, pckt->flow.ports, INIT_JHASH_SEED);
1734: (61) r3 = *(u32 *)(r10 -48)     ; R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; b += initval;
1735: (07) r3 += -525483785           ; R3_w=scalar(smin=-525483785,smax=3769483510)
1736: (05) goto pc+0
1737: (05) goto pc+0
1738: (05) goto pc+0
1739: (bc) w2 = w3                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3=scalar(smin=-525483785,smax=3769483510)
; return (word << shift) | (word >> ((-shift) & 31));
1740: (77) r2 >>= 18                  ; R2_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1741: (bf) r4 = r3                    ; R3=scalar(id=223,smin=-525483785,smax=3769483510) R4_w=scalar(id=223,smin=-525483785,smax=3769483510)
1742: (67) r4 <<= 14                  ; R4_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1743: (4f) r4 |= r2                   ; R2_w=scalar(umax=16383,var_off=(0x0; 0x3fff)) R4_w=scalar()
; __jhash_final(a, b, c);
1744: (bf) r2 = r3                    ; R2_w=scalar(id=223,smin=-525483785,smax=3769483510) R3=scalar(id=223,smin=-525483785,smax=3769483510)
1745: (a7) r2 ^= -525483785           ; R2_w=scalar()
1746: (1f) r2 -= r4                   ; R2_w=scalar() R4_w=scalar()
1747: (05) goto pc+0
1748: (05) goto pc+0
1749: (bf) r0 = r2                    ; R0_w=scalar(id=224) R2=scalar(id=224)
1750: (67) r0 <<= 32                  ; R0_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
; return (word << shift) | (word >> ((-shift) & 31));
1751: (77) r0 >>= 53                  ; R0_w=scalar(umax=2047,var_off=(0x0; 0x7ff))
1752: (bf) r7 = r2                    ; R2=scalar(id=224) R7_w=scalar(id=224)
1753: (67) r7 <<= 11                  ; R7_w=scalar(smax=9223372036854773760,umax=18446744073709549568,var_off=(0x0; 0xfffffffffffff800),s32_max=2147481600,u32_max=-2048)
1754: (4f) r7 |= r0                   ; R0_w=scalar(umax=2047,var_off=(0x0; 0x7ff)) R7_w=scalar()
; a += initval;
1755: (07) r5 += -525483785           ; R5_w=scalar(smin=-525483785,smax=3769483510)
; __jhash_final(a, b, c);
1756: (bf) r4 = r2                    ; R2=scalar(id=224) R4_w=scalar(id=224)
1757: (af) r4 ^= r5                   ; R4_w=scalar() R5_w=scalar(smin=-525483785,smax=3769483510)
1758: (1f) r4 -= r7                   ; R4_w=scalar() R7_w=scalar()
1759: (05) goto pc+0
1760: (05) goto pc+0
1761: (05) goto pc+0
1762: (bc) w0 = w4                    ; R0_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R4=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1763: (77) r0 >>= 7                   ; R0_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff))
1764: (bf) r7 = r4                    ; R4=scalar(id=225) R7_w=scalar(id=225)
1765: (67) r7 <<= 25                  ; R7_w=scalar(smax=9223372036821221376,umax=18446744073675997184,var_off=(0x0; 0xfffffffffe000000),s32_max=2113929216,u32_max=-33554432)
1766: (4f) r7 |= r0                   ; R0_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff)) R7_w=scalar()
; __jhash_final(a, b, c);
1767: (bf) r5 = r4                    ; R4=scalar(id=225) R5_w=scalar(id=225)
1768: (af) r5 ^= r3                   ; R3=scalar(id=223,smin=-525483785,smax=3769483510) R5_w=scalar()
1769: (1f) r5 -= r7                   ; R5_w=scalar() R7_w=scalar()
1770: (05) goto pc+0
1771: (05) goto pc+0
1772: (05) goto pc+0
1773: (bc) w0 = w5                    ; R0_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R5=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1774: (77) r0 >>= 16                  ; R0_w=scalar(umax=65535,var_off=(0x0; 0xffff))
1775: (bf) r7 = r5                    ; R5=scalar(id=226) R7_w=scalar(id=226)
1776: (67) r7 <<= 16                  ; R7_w=scalar(smax=9223372036854710272,umax=18446744073709486080,var_off=(0x0; 0xffffffffffff0000),s32_max=2147418112,u32_max=-65536)
1777: (4f) r7 |= r0                   ; R0_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R7_w=scalar()
; __jhash_final(a, b, c);
1778: (bf) r3 = r5                    ; R3_w=scalar(id=226) R5=scalar(id=226)
1779: (af) r3 ^= r2                   ; R2=scalar(id=224) R3_w=scalar()
1780: (1f) r3 -= r7                   ; R3_w=scalar() R7_w=scalar()
1781: (05) goto pc+0
1782: (05) goto pc+0
1783: (05) goto pc+0
1784: (bc) w0 = w3                    ; R0_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1785: (77) r0 >>= 28                  ; R0_w=scalar(umax=15,var_off=(0x0; 0xf))
1786: (bf) r7 = r3                    ; R3=scalar(id=227) R7_w=scalar(id=227)
1787: (67) r7 <<= 4                   ; R7_w=scalar(smax=9223372036854775792,umax=18446744073709551600,var_off=(0x0; 0xfffffffffffffff0),s32_max=2147483632,u32_max=-16)
1788: (4f) r7 |= r0                   ; R0_w=scalar(umax=15,var_off=(0x0; 0xf)) R7_w=scalar()
; __jhash_final(a, b, c);
1789: (bf) r2 = r3                    ; R2_w=scalar(id=227) R3=scalar(id=227)
1790: (af) r2 ^= r4                   ; R2_w=scalar() R4=scalar(id=225)
1791: (1f) r2 -= r7                   ; R2_w=scalar() R7_w=scalar()
1792: (05) goto pc+0
1793: (bc) w4 = w2                    ; R2=scalar() R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1794: (77) r4 >>= 18                  ; R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1795: (bf) r1 = r2                    ; R1_w=scalar(id=228) R2=scalar(id=228)
1796: (67) r1 <<= 14                  ; R1_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1797: (4f) r1 |= r4                   ; R1_w=scalar() R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
; __jhash_final(a, b, c);
1798: (af) r2 ^= r5                   ; R2_w=scalar() R5=scalar(id=226)
1799: (1f) r2 -= r1                   ; R1_w=scalar() R2_w=scalar()
1800: (05) goto pc+0
1801: (05) goto pc+0
1802: (05) goto pc+0
1803: (bc) w4 = w2                    ; R2=scalar() R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1804: (77) r4 >>= 8                   ; R4_w=scalar(umax=16777215,var_off=(0x0; 0xffffff))
1805: (bf) r1 = r2                    ; R1_w=scalar(id=229) R2=scalar(id=229)
1806: (67) r1 <<= 24                  ; R1_w=scalar(smax=9223372036837998592,umax=18446744073692774400,var_off=(0x0; 0xffffffffff000000),s32_max=2130706432,u32_max=-16777216)
1807: (4f) r1 |= r4                   ; R1_w=scalar() R4_w=scalar(umax=16777215,var_off=(0x0; 0xffffff))
; __jhash_final(a, b, c);
1808: (af) r2 ^= r3                   ; R2_w=scalar() R3=scalar(id=227)
1809: (1f) r2 -= r1                   ; R1_w=scalar() R2_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1810: (79) r1 = *(u64 *)(r10 -144)    ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
1811: (61) r1 = *(u32 *)(r1 +4)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; key = RING_SIZE * (vip_info->vip_num) + hash;
1812: (27) r1 *= 65537                ; R1_w=scalar(umax=281479271612415,var_off=(0x0; 0x1ffffffffffff))
; __jhash_final(a, b, c);
1813: (bc) w2 = w2                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
1814: (05) goto pc+0
; hash = get_packet_hash(pckt, hash_16bytes) % RING_SIZE;
1815: (97) r2 %= 65537                ; R2_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1816: (0f) r2 += r1                   ; R1=scalar(umax=281479271612415,var_off=(0x0; 0x1ffffffffffff)) R2_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1817: (63) *(u32 *)(r10 -20) = r2     ; R2_w=scalar() R10=fp0 fp-24=mmmm????
1818: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1819: (07) r2 += -20                  ; R2_w=fp-20
; real_pos = bpf_map_lookup_elem(&ch_rings, &key);
1820: (18) r1 = 0xffffaebaa0631000    ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
1822: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=230,off=0,ks=4,vs=4,imm=0)
; if (!real_pos) {
1823: (15) if r0 == 0x0 goto pc+33    ; R0_w=map_value(off=0,ks=4,vs=4,imm=0)
; key = *real_pos;
1824: (61) r1 = *(u32 *)(r0 +0)       ; R0_w=map_value(off=0,ks=4,vs=4,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; key = *real_pos;
1825: (63) *(u32 *)(r10 -20) = r1     ; R1=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-24=mmmm????
; if (key == 0) {
1826: (55) if r1 != 0x0 goto pc+12    ; R1=0
1827: (05) goto pc+0
; __u32 ch_drop_stats_key = MAX_VIPS + CH_DROP_STATS;
1828: (62) *(u32 *)(r10 -28) = 521    ; R10=fp0 fp-32=mmmm????
1829: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1830: (07) r2 += -28                  ; R2_w=fp-28
; bpf_map_lookup_elem(&stats, &ch_drop_stats_key);
1831: (18) r1 = 0xffffa03499be8000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
1833: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=231,off=0,ks=4,vs=16,imm=0)
; if (!ch_drop_stats) {
1834: (15) if r0 == 0x0 goto pc+3     ; R0_w=map_value(off=0,ks=4,vs=16,imm=0)
; ch_drop_stats->v2 += 1;
1835: (79) r1 = *(u64 *)(r0 +8)       ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1836: (07) r1 += 1                    ; R1_w=scalar()
1837: (7b) *(u64 *)(r0 +8) = r1       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1=scalar()
; pckt->real_index = key;
1838: (61) r1 = *(u32 *)(r10 -20)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; pckt->real_index = key;
1839: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1840: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1841: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1842: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1844: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=232,off=0,ks=4,vs=20,imm=0)
; if (!(*real)) {
1845: (55) if r0 != 0x0 goto pc+14    ; R0_w=0
1846: (05) goto pc+0
1847: safe

from 1845 to 1860: R0=map_value(off=0,ks=4,vs=20,imm=0) R6=ctx(off=0,imm=0) R7=scalar() R8=0 R9=scalar(id=222) R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; }
1860: (7b) *(u64 *)(r10 -176) = r0    ; R0=map_value(off=0,ks=4,vs=20,imm=0) R10=fp0 fp-176_w=map_value
; if (lru_map && !(vip_info->flags & F_LRU_BYPASS) && !under_flood) {
1861: (79) r1 = *(u64 *)(r10 -152)    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0
1862: (15) if r1 == 0x0 goto pc+18    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0)
; if (lru_map && !(vip_info->flags & F_LRU_BYPASS) && !under_flood) {
1863: (79) r1 = *(u64 *)(r10 -144)    ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
1864: (61) r1 = *(u32 *)(r1 +0)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (lru_map && !(vip_info->flags & F_LRU_BYPASS) && !under_flood) {
1865: (57) r1 &= 2                    ; R1_w=scalar(umax=2,var_off=(0x0; 0x2))
1866: (77) r1 >>= 1                   ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
; if (lru_map && !(vip_info->flags & F_LRU_BYPASS) && !under_flood) {
1867: (4f) r8 |= r1                   ; R1_w=scalar(umax=1,var_off=(0x0; 0x1)) R8_w=scalar()
1868: (55) if r8 != 0x0 goto pc+12    ; R8_w=0
; if (pckt->flow.proto == IPPROTO_UDP) {
1869: (71) r1 = *(u8 *)(r10 -44)      ; R1=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (pckt->flow.proto == IPPROTO_UDP) {
1870: (55) if r1 != 0x11 goto pc+1    ; R1=17
; new_dst_lru.atime = cur_time;
1871: (7b) *(u64 *)(r10 -8) = r9      ; R9=scalar(id=222) R10=fp0 fp-8_w=mmmmmmmm
; new_dst_lru.pos = key;
1872: (61) r1 = *(u32 *)(r10 -20)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; new_dst_lru.pos = key;
1873: (63) *(u32 *)(r10 -16) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-16=
1874: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; new_dst_lru.pos = key;
1875: (07) r2 += -80                  ; R2_w=fp-80
1876: (bf) r3 = r10                   ; R3_w=fp0 R10=fp0
1877: (07) r3 += -16                  ; R3_w=fp-16
; bpf_map_update_elem(lru_map, &pckt->flow, &new_dst_lru, BPF_ANY);
1878: (79) r1 = *(u64 *)(r10 -152)    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0
1879: (b7) r4 = 0                     ; R4_w=0
1880: (85) call bpf_map_update_elem#2
1881: safe

from 1870 to 1872: R0=map_value(off=0,ks=4,vs=20,imm=0) R1=scalar(umax=255,var_off=(0x0; 0xff)) R6=ctx(off=0,imm=0) R7=scalar() R8=0 R9=scalar(id=222) R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=map_value
; new_dst_lru.pos = key;
1872: (61) r1 = *(u32 *)(r10 -20)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; new_dst_lru.pos = key;
1873: (63) *(u32 *)(r10 -16) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-16=
1874: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; new_dst_lru.pos = key;
1875: (07) r2 += -80                  ; R2_w=fp-80
1876: (bf) r3 = r10                   ; R3_w=fp0 R10=fp0
1877: (07) r3 += -16                  ; R3_w=fp-16
; bpf_map_update_elem(lru_map, &pckt->flow, &new_dst_lru, BPF_ANY);
1878: (79) r1 = *(u64 *)(r10 -152)    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0
1879: (b7) r4 = 0                     ; R4_w=0
1880: (85) call bpf_map_update_elem#2
1881: safe

from 1868 to 1881: R0=map_value(off=0,ks=4,vs=20,imm=0) R1_w=scalar(umax=1,var_off=(0x0; 0x1)) R6=ctx(off=0,imm=0) R7=scalar() R8_w=scalar() R9=scalar(id=222) R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176_w=map_value
1881: (05) goto pc+0
1882: safe

from 1862 to 1881: R0=map_value(off=0,ks=4,vs=20,imm=0) R1=map_ptr(off=0,ks=40,vs=16,imm=0) R6=ctx(off=0,imm=0) R7=scalar() R8=0 R9=scalar(id=222) R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=map_value
1881: (05) goto pc+0
1882: safe

from 1834 to 1838: safe

from 1826 to 1839: R0=map_value(off=0,ks=4,vs=4,imm=0) R1=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6=ctx(off=0,imm=0) R7=scalar() R8=0 R9=scalar(id=222) R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; pckt->real_index = key;
1839: (63) *(u32 *)(r10 -40) = r1     ; R1=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1840: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1841: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1842: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1844: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=233,off=0,ks=4,vs=20,imm=0)
; if (!(*real)) {
1845: (55) if r0 != 0x0 goto pc+14    ; R0=0
1846: (05) goto pc+0
1847: safe

from 1845 to 1860: safe

from 1823 to 1857: safe

from 1726 to 1729: R0=scalar(id=222) R1=scalar(umax=8,var_off=(0x0; 0x8)) R2=scalar(umin=1000000001) R6=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=16,imm=0) R8=0 R9=scalar(id=222) R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; pckt->flow.port16[0] = pckt->flow.port16[1];
1729: (69) r1 = *(u16 *)(r10 -46)     ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; pckt->flow.port16[0] = pckt->flow.port16[1];
1730: (6b) *(u16 *)(r10 -48) = r1     ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-48=
1731: (b7) r5 = 0                     ; R5_w=0
; memset(pckt->flow.srcv6, 0, 16);
1732: (7b) *(u64 *)(r10 -80) = r5
last_idx 1732 first_idx 1726
regs=20 stack=0 before 1731: (b7) r5 = 0
1733: R5_w=P0 R10=fp0 fp-80_w=00000000
1733: (7b) *(u64 *)(r10 -72) = r5     ; R5=P0 R10=fp0 fp-72=00000000
; return jhash_2words(pckt->flow.src, pckt->flow.ports, INIT_JHASH_SEED);
1734: (61) r3 = *(u32 *)(r10 -48)     ; R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; b += initval;
1735: (07) r3 += -525483785           ; R3_w=scalar(smin=-525483785,smax=3769483510)
1736: (05) goto pc+0
1737: (05) goto pc+0
1738: (05) goto pc+0
1739: (bc) w2 = w3                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3_w=scalar(smin=-525483785,smax=3769483510)
; return (word << shift) | (word >> ((-shift) & 31));
1740: (77) r2 >>= 18                  ; R2_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1741: (bf) r4 = r3                    ; R3_w=scalar(id=234,smin=-525483785,smax=3769483510) R4_w=scalar(id=234,smin=-525483785,smax=3769483510)
1742: (67) r4 <<= 14                  ; R4_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1743: (4f) r4 |= r2                   ; R2_w=scalar(umax=16383,var_off=(0x0; 0x3fff)) R4_w=scalar()
; __jhash_final(a, b, c);
1744: (bf) r2 = r3                    ; R2_w=scalar(id=234,smin=-525483785,smax=3769483510) R3_w=scalar(id=234,smin=-525483785,smax=3769483510)
1745: (a7) r2 ^= -525483785           ; R2_w=scalar()
1746: (1f) r2 -= r4                   ; R2_w=scalar() R4_w=scalar()
1747: (05) goto pc+0
1748: (05) goto pc+0
1749: (bf) r0 = r2                    ; R0_w=scalar(id=235) R2=scalar(id=235)
1750: (67) r0 <<= 32                  ; R0_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
; return (word << shift) | (word >> ((-shift) & 31));
1751: (77) r0 >>= 53                  ; R0_w=scalar(umax=2047,var_off=(0x0; 0x7ff))
1752: (bf) r7 = r2                    ; R2=scalar(id=235) R7_w=scalar(id=235)
1753: (67) r7 <<= 11                  ; R7_w=scalar(smax=9223372036854773760,umax=18446744073709549568,var_off=(0x0; 0xfffffffffffff800),s32_max=2147481600,u32_max=-2048)
1754: (4f) r7 |= r0                   ; R0_w=scalar(umax=2047,var_off=(0x0; 0x7ff)) R7_w=scalar()
; a += initval;
1755: (07) r5 += -525483785           ; R5_w=P-525483785
; __jhash_final(a, b, c);
1756: (bf) r4 = r2                    ; R2=scalar(id=235) R4_w=scalar(id=235)
1757: (af) r4 ^= r5                   ; R4_w=scalar() R5_w=P-525483785
1758: (1f) r4 -= r7                   ; R4_w=scalar() R7_w=scalar()
1759: (05) goto pc+0
1760: (05) goto pc+0
1761: (05) goto pc+0
1762: (bc) w0 = w4                    ; R0_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R4=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1763: (77) r0 >>= 7                   ; R0_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff))
1764: (bf) r7 = r4                    ; R4=scalar(id=236) R7_w=scalar(id=236)
1765: (67) r7 <<= 25                  ; R7_w=scalar(smax=9223372036821221376,umax=18446744073675997184,var_off=(0x0; 0xfffffffffe000000),s32_max=2113929216,u32_max=-33554432)
1766: (4f) r7 |= r0                   ; R0_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff)) R7_w=scalar()
; __jhash_final(a, b, c);
1767: (bf) r5 = r4                    ; R4=scalar(id=236) R5_w=scalar(id=236)
1768: (af) r5 ^= r3                   ; R3=scalar(id=234,smin=-525483785,smax=3769483510) R5_w=scalar()
1769: (1f) r5 -= r7                   ; R5_w=scalar() R7_w=scalar()
1770: (05) goto pc+0
1771: (05) goto pc+0
1772: (05) goto pc+0
1773: (bc) w0 = w5                    ; R0_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R5=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1774: (77) r0 >>= 16                  ; R0_w=scalar(umax=65535,var_off=(0x0; 0xffff))
1775: (bf) r7 = r5                    ; R5=scalar(id=237) R7_w=scalar(id=237)
1776: (67) r7 <<= 16                  ; R7_w=scalar(smax=9223372036854710272,umax=18446744073709486080,var_off=(0x0; 0xffffffffffff0000),s32_max=2147418112,u32_max=-65536)
1777: (4f) r7 |= r0                   ; R0_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R7_w=scalar()
; __jhash_final(a, b, c);
1778: (bf) r3 = r5                    ; R3_w=scalar(id=237) R5=scalar(id=237)
1779: (af) r3 ^= r2                   ; R2=scalar(id=235) R3_w=scalar()
1780: (1f) r3 -= r7                   ; R3_w=scalar() R7_w=scalar()
1781: (05) goto pc+0
1782: (05) goto pc+0
1783: (05) goto pc+0
1784: (bc) w0 = w3                    ; R0_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1785: (77) r0 >>= 28                  ; R0_w=scalar(umax=15,var_off=(0x0; 0xf))
1786: (bf) r7 = r3                    ; R3=scalar(id=238) R7_w=scalar(id=238)
1787: (67) r7 <<= 4                   ; R7_w=scalar(smax=9223372036854775792,umax=18446744073709551600,var_off=(0x0; 0xfffffffffffffff0),s32_max=2147483632,u32_max=-16)
1788: (4f) r7 |= r0                   ; R0_w=scalar(umax=15,var_off=(0x0; 0xf)) R7_w=scalar()
; __jhash_final(a, b, c);
1789: (bf) r2 = r3                    ; R2_w=scalar(id=238) R3=scalar(id=238)
1790: (af) r2 ^= r4                   ; R2_w=scalar() R4=scalar(id=236)
1791: (1f) r2 -= r7                   ; R2_w=scalar() R7_w=scalar()
1792: (05) goto pc+0
1793: (bc) w4 = w2                    ; R2=scalar() R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1794: (77) r4 >>= 18                  ; R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1795: (bf) r1 = r2                    ; R1_w=scalar(id=239) R2=scalar(id=239)
1796: (67) r1 <<= 14                  ; R1_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1797: (4f) r1 |= r4                   ; R1_w=scalar() R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
; __jhash_final(a, b, c);
1798: (af) r2 ^= r5                   ; R2_w=scalar() R5=scalar(id=237)
1799: (1f) r2 -= r1                   ; R1_w=scalar() R2_w=scalar()
1800: (05) goto pc+0
1801: (05) goto pc+0
1802: (05) goto pc+0
1803: (bc) w4 = w2                    ; R2=scalar() R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1804: (77) r4 >>= 8                   ; R4_w=scalar(umax=16777215,var_off=(0x0; 0xffffff))
1805: (bf) r1 = r2                    ; R1_w=scalar(id=240) R2=scalar(id=240)
1806: (67) r1 <<= 24                  ; R1_w=scalar(smax=9223372036837998592,umax=18446744073692774400,var_off=(0x0; 0xffffffffff000000),s32_max=2130706432,u32_max=-16777216)
1807: (4f) r1 |= r4                   ; R1_w=scalar() R4_w=scalar(umax=16777215,var_off=(0x0; 0xffffff))
; __jhash_final(a, b, c);
1808: (af) r2 ^= r3                   ; R2_w=scalar() R3=scalar(id=238)
1809: (1f) r2 -= r1                   ; R1_w=scalar() R2_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1810: (79) r1 = *(u64 *)(r10 -144)    ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
1811: (61) r1 = *(u32 *)(r1 +4)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; key = RING_SIZE * (vip_info->vip_num) + hash;
1812: (27) r1 *= 65537                ; R1_w=scalar(umax=281479271612415,var_off=(0x0; 0x1ffffffffffff))
; __jhash_final(a, b, c);
1813: (bc) w2 = w2                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
1814: (05) goto pc+0
; hash = get_packet_hash(pckt, hash_16bytes) % RING_SIZE;
1815: (97) r2 %= 65537                ; R2_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1816: (0f) r2 += r1                   ; R1=scalar(umax=281479271612415,var_off=(0x0; 0x1ffffffffffff)) R2_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1817: (63) *(u32 *)(r10 -20) = r2     ; R2_w=scalar() R10=fp0 fp-24=mmmm????
1818: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1819: (07) r2 += -20                  ; R2_w=fp-20
; real_pos = bpf_map_lookup_elem(&ch_rings, &key);
1820: (18) r1 = 0xffffaebaa0631000    ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
1822: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=241,off=0,ks=4,vs=4,imm=0)
; if (!real_pos) {
1823: (15) if r0 == 0x0 goto pc+33    ; R0_w=map_value(off=0,ks=4,vs=4,imm=0)
; key = *real_pos;
1824: (61) r1 = *(u32 *)(r0 +0)       ; R0_w=map_value(off=0,ks=4,vs=4,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; key = *real_pos;
1825: (63) *(u32 *)(r10 -20) = r1     ; R1=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-24=mmmm????
; if (key == 0) {
1826: (55) if r1 != 0x0 goto pc+12    ; R1=0
1827: (05) goto pc+0
; __u32 ch_drop_stats_key = MAX_VIPS + CH_DROP_STATS;
1828: (62) *(u32 *)(r10 -28) = 521    ; R10=fp0 fp-32=mmmm????
1829: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1830: (07) r2 += -28                  ; R2_w=fp-28
; bpf_map_lookup_elem(&stats, &ch_drop_stats_key);
1831: (18) r1 = 0xffffa03499be8000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
1833: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=242,off=0,ks=4,vs=16,imm=0)
; if (!ch_drop_stats) {
1834: (15) if r0 == 0x0 goto pc+3     ; R0_w=map_value(off=0,ks=4,vs=16,imm=0)
; ch_drop_stats->v2 += 1;
1835: (79) r1 = *(u64 *)(r0 +8)       ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1836: (07) r1 += 1                    ; R1_w=scalar()
1837: (7b) *(u64 *)(r0 +8) = r1       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1=scalar()
; pckt->real_index = key;
1838: (61) r1 = *(u32 *)(r10 -20)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; pckt->real_index = key;
1839: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1840: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1841: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1842: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1844: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=243,off=0,ks=4,vs=20,imm=0)
; if (!(*real)) {
1845: (55) if r0 != 0x0 goto pc+14    ; R0_w=0
1846: (05) goto pc+0
1847: safe

from 1845 to 1860: R0=map_value(off=0,ks=4,vs=20,imm=0) R6=ctx(off=0,imm=0) R7=scalar() R8=0 R9=scalar(id=222) R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64= fp-72=00000000 fp-80=00000000 fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; }
1860: (7b) *(u64 *)(r10 -176) = r0    ; R0=map_value(off=0,ks=4,vs=20,imm=0) R10=fp0 fp-176_w=map_value
; if (lru_map && !(vip_info->flags & F_LRU_BYPASS) && !under_flood) {
1861: (79) r1 = *(u64 *)(r10 -152)    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0
1862: (15) if r1 == 0x0 goto pc+18    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0)
; if (lru_map && !(vip_info->flags & F_LRU_BYPASS) && !under_flood) {
1863: (79) r1 = *(u64 *)(r10 -144)    ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
1864: (61) r1 = *(u32 *)(r1 +0)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (lru_map && !(vip_info->flags & F_LRU_BYPASS) && !under_flood) {
1865: (57) r1 &= 2                    ; R1_w=scalar(umax=2,var_off=(0x0; 0x2))
1866: (77) r1 >>= 1                   ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
; if (lru_map && !(vip_info->flags & F_LRU_BYPASS) && !under_flood) {
1867: (4f) r8 |= r1                   ; R1_w=scalar(umax=1,var_off=(0x0; 0x1)) R8_w=scalar()
1868: (55) if r8 != 0x0 goto pc+12    ; R8_w=0
; if (pckt->flow.proto == IPPROTO_UDP) {
1869: (71) r1 = *(u8 *)(r10 -44)      ; R1=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (pckt->flow.proto == IPPROTO_UDP) {
1870: (55) if r1 != 0x11 goto pc+1    ; R1=17
; new_dst_lru.atime = cur_time;
1871: (7b) *(u64 *)(r10 -8) = r9      ; R9=scalar(id=222) R10=fp0 fp-8_w=mmmmmmmm
; new_dst_lru.pos = key;
1872: (61) r1 = *(u32 *)(r10 -20)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; new_dst_lru.pos = key;
1873: (63) *(u32 *)(r10 -16) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-16=
1874: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; new_dst_lru.pos = key;
1875: (07) r2 += -80                  ; R2_w=fp-80
1876: (bf) r3 = r10                   ; R3_w=fp0 R10=fp0
1877: (07) r3 += -16                  ; R3_w=fp-16
; bpf_map_update_elem(lru_map, &pckt->flow, &new_dst_lru, BPF_ANY);
1878: (79) r1 = *(u64 *)(r10 -152)    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0
1879: (b7) r4 = 0                     ; R4_w=0
1880: (85) call bpf_map_update_elem#2
1881: safe

from 1870 to 1872: R0=map_value(off=0,ks=4,vs=20,imm=0) R1=scalar(umax=255,var_off=(0x0; 0xff)) R6=ctx(off=0,imm=0) R7=scalar() R8=0 R9=scalar(id=222) R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64= fp-72=00000000 fp-80=00000000 fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=map_value
; new_dst_lru.pos = key;
1872: (61) r1 = *(u32 *)(r10 -20)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; new_dst_lru.pos = key;
1873: (63) *(u32 *)(r10 -16) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-16=
1874: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; new_dst_lru.pos = key;
1875: (07) r2 += -80                  ; R2_w=fp-80
1876: (bf) r3 = r10                   ; R3_w=fp0 R10=fp0
1877: (07) r3 += -16                  ; R3_w=fp-16
; bpf_map_update_elem(lru_map, &pckt->flow, &new_dst_lru, BPF_ANY);
1878: (79) r1 = *(u64 *)(r10 -152)    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0
1879: (b7) r4 = 0                     ; R4_w=0
1880: (85) call bpf_map_update_elem#2
1881: safe
frame -168: propagating fp0
last_idx 1881 first_idx 1860
regs=0 stack=100000 before 1868: (55) if r8 != 0x0 goto pc+12
regs=0 stack=100000 before 1867: (4f) r8 |= r1
regs=0 stack=100000 before 1866: (77) r1 >>= 1
regs=0 stack=100000 before 1865: (57) r1 &= 2
regs=0 stack=100000 before 1864: (61) r1 = *(u32 *)(r1 +0)
regs=0 stack=100000 before 1863: (79) r1 = *(u64 *)(r10 -144)
regs=0 stack=100000 before 1862: (15) if r1 == 0x0 goto pc+18
regs=0 stack=100000 before 1861: (79) r1 = *(u64 *)(r10 -152)
regs=0 stack=100000 before 1860: (7b) *(u64 *)(r10 -176) = r0
parent didn't have regs=0 stack=100000 marks: R0_rw=map_value(off=0,ks=4,vs=20,imm=0) R6_r=ctx(off=0,imm=0) R7=scalar() R8_r=0 R9_r=scalar(id=222) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-24_r=mmmm???? fp-32_r=mmmm???? fp-40_r= fp-48_r= fp-56_r=mmmmmmmm fp-64_r= fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1845 first_idx 1838
regs=0 stack=100000 before 1845: (55) if r0 != 0x0 goto pc+14
regs=0 stack=100000 before 1844: (85) call bpf_map_lookup_elem#1
regs=0 stack=100000 before 1842: (18) r1 = 0xffffaeba8c207000
regs=0 stack=100000 before 1841: (07) r2 += -20
regs=0 stack=100000 before 1840: (bf) r2 = r10
regs=0 stack=100000 before 1839: (63) *(u32 *)(r10 -40) = r1
regs=0 stack=100000 before 1838: (61) r1 = *(u32 *)(r10 -20)
parent didn't have regs=0 stack=100000 marks: R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar() R6_r=ctx(off=0,imm=0) R7=scalar() R8_r=0 R9_r=scalar(id=222) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-24_r=mmmm???? fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r= fp-56_r=mmmmmmmm fp-64_r= fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1837 first_idx 1826
regs=0 stack=100000 before 1837: (7b) *(u64 *)(r0 +8) = r1
regs=0 stack=100000 before 1836: (07) r1 += 1
regs=0 stack=100000 before 1835: (79) r1 = *(u64 *)(r0 +8)
regs=0 stack=100000 before 1834: (15) if r0 == 0x0 goto pc+3
regs=0 stack=100000 before 1833: (85) call bpf_map_lookup_elem#1
regs=0 stack=100000 before 1831: (18) r1 = 0xffffa03499be8000
regs=0 stack=100000 before 1830: (07) r2 += -28
regs=0 stack=100000 before 1829: (bf) r2 = r10
regs=0 stack=100000 before 1828: (62) *(u32 *)(r10 -28) = 521
regs=0 stack=100000 before 1827: (05) goto pc+0
regs=0 stack=100000 before 1826: (55) if r1 != 0x0 goto pc+12
parent didn't have regs=0 stack=100000 marks: R0_w=map_value(off=0,ks=4,vs=4,imm=0) R1_rw=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6_r=ctx(off=0,imm=0) R7=scalar() R8_r=0 R9_r=scalar(id=222) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-24_r=mmmm???? fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r= fp-56_r=mmmmmmmm fp-64_r= fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1825 first_idx 1815
regs=0 stack=100000 before 1825: (63) *(u32 *)(r10 -20) = r1
regs=0 stack=100000 before 1824: (61) r1 = *(u32 *)(r0 +0)
regs=0 stack=100000 before 1823: (15) if r0 == 0x0 goto pc+33
regs=0 stack=100000 before 1822: (85) call bpf_map_lookup_elem#1
regs=0 stack=100000 before 1820: (18) r1 = 0xffffaebaa0631000
regs=0 stack=100000 before 1819: (07) r2 += -20
regs=0 stack=100000 before 1818: (bf) r2 = r10
regs=0 stack=100000 before 1817: (63) *(u32 *)(r10 -20) = r2
regs=0 stack=100000 before 1816: (0f) r2 += r1
regs=0 stack=100000 before 1815: (97) r2 %= 65537
parent didn't have regs=0 stack=100000 marks: R0=scalar(umax=15,var_off=(0x0; 0xf)) R1_rw=scalar(umax=281479271612415,var_off=(0x0; 0x1ffffffffffff)) R2_rw=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3=scalar(id=238) R4_w=scalar(umax=16777215,var_off=(0x0; 0xffffff)) R5=scalar(id=237) R6_r=ctx(off=0,imm=0) R7=scalar() R8_r=0 R9_r=scalar(id=222) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r= fp-56_r=mmmmmmmm fp-64_r= fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1814 first_idx 1802
regs=0 stack=100000 before 1814: (05) goto pc+0
regs=0 stack=100000 before 1813: (bc) w2 = w2
regs=0 stack=100000 before 1812: (27) r1 *= 65537
regs=0 stack=100000 before 1811: (61) r1 = *(u32 *)(r1 +4)
regs=0 stack=100000 before 1810: (79) r1 = *(u64 *)(r10 -144)
regs=0 stack=100000 before 1809: (1f) r2 -= r1
regs=0 stack=100000 before 1808: (af) r2 ^= r3
regs=0 stack=100000 before 1807: (4f) r1 |= r4
regs=0 stack=100000 before 1806: (67) r1 <<= 24
regs=0 stack=100000 before 1805: (bf) r1 = r2
regs=0 stack=100000 before 1804: (77) r4 >>= 8
regs=0 stack=100000 before 1803: (bc) w4 = w2
regs=0 stack=100000 before 1802: (05) goto pc+0
parent didn't have regs=0 stack=100000 marks: R0=scalar(umax=15,var_off=(0x0; 0xf)) R1_w=scalar() R2_rw=scalar() R3_r=scalar(id=238) R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff)) R5=scalar(id=237) R6_r=ctx(off=0,imm=0) R7=scalar() R8_r=0 R9_r=scalar(id=222) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r= fp-56_r=mmmmmmmm fp-64_r= fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1801 first_idx 1793
regs=0 stack=100000 before 1801: (05) goto pc+0
regs=0 stack=100000 before 1800: (05) goto pc+0
regs=0 stack=100000 before 1799: (1f) r2 -= r1
regs=0 stack=100000 before 1798: (af) r2 ^= r5
regs=0 stack=100000 before 1797: (4f) r1 |= r4
regs=0 stack=100000 before 1796: (67) r1 <<= 14
regs=0 stack=100000 before 1795: (bf) r1 = r2
regs=0 stack=100000 before 1794: (77) r4 >>= 18
regs=0 stack=100000 before 1793: (bc) w4 = w2
parent didn't have regs=0 stack=100000 marks: R0_w=scalar(umax=15,var_off=(0x0; 0xf)) R1=scalar(umax=65535,var_off=(0x0; 0xffff)) R2_rw=scalar() R3_r=scalar(id=238) R4=scalar(id=236) R5_r=scalar(id=237) R6_r=ctx(off=0,imm=0) R7_w=scalar() R8_r=0 R9_r=scalar(id=222) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r= fp-56_r=mmmmmmmm fp-64_r= fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1792 first_idx 1782
regs=0 stack=100000 before 1792: (05) goto pc+0
regs=0 stack=100000 before 1791: (1f) r2 -= r7
regs=0 stack=100000 before 1790: (af) r2 ^= r4
regs=0 stack=100000 before 1789: (bf) r2 = r3
regs=0 stack=100000 before 1788: (4f) r7 |= r0
regs=0 stack=100000 before 1787: (67) r7 <<= 4
regs=0 stack=100000 before 1786: (bf) r7 = r3
regs=0 stack=100000 before 1785: (77) r0 >>= 28
regs=0 stack=100000 before 1784: (bc) w0 = w3
regs=0 stack=100000 before 1783: (05) goto pc+0
regs=0 stack=100000 before 1782: (05) goto pc+0
parent didn't have regs=0 stack=100000 marks: R0_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R1=scalar(umax=65535,var_off=(0x0; 0xffff)) R2=scalar(id=235) R3_rw=scalar() R4_r=scalar(id=236) R5_r=scalar(id=237) R6_r=ctx(off=0,imm=0) R7_w=scalar() R8_r=0 R9_r=scalar(id=222) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r= fp-56_r=mmmmmmmm fp-64_r= fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1781 first_idx 1771
regs=0 stack=100000 before 1781: (05) goto pc+0
regs=0 stack=100000 before 1780: (1f) r3 -= r7
regs=0 stack=100000 before 1779: (af) r3 ^= r2
regs=0 stack=100000 before 1778: (bf) r3 = r5
regs=0 stack=100000 before 1777: (4f) r7 |= r0
regs=0 stack=100000 before 1776: (67) r7 <<= 16
regs=0 stack=100000 before 1775: (bf) r7 = r5
regs=0 stack=100000 before 1774: (77) r0 >>= 16
regs=0 stack=100000 before 1773: (bc) w0 = w5
regs=0 stack=100000 before 1772: (05) goto pc+0
regs=0 stack=100000 before 1771: (05) goto pc+0
parent didn't have regs=0 stack=100000 marks: R0_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff)) R1=scalar(umax=65535,var_off=(0x0; 0xffff)) R2_r=scalar(id=235) R3=scalar(id=234,smin=-525483785,smax=3769483510) R4_r=scalar(id=236) R5_rw=scalar() R6_r=ctx(off=0,imm=0) R7_w=scalar() R8_r=0 R9_r=scalar(id=222) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r= fp-56_r=mmmmmmmm fp-64_r= fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1770 first_idx 1760
regs=0 stack=100000 before 1770: (05) goto pc+0
regs=0 stack=100000 before 1769: (1f) r5 -= r7
regs=0 stack=100000 before 1768: (af) r5 ^= r3
regs=0 stack=100000 before 1767: (bf) r5 = r4
regs=0 stack=100000 before 1766: (4f) r7 |= r0
regs=0 stack=100000 before 1765: (67) r7 <<= 25
regs=0 stack=100000 before 1764: (bf) r7 = r4
regs=0 stack=100000 before 1763: (77) r0 >>= 7
regs=0 stack=100000 before 1762: (bc) w0 = w4
regs=0 stack=100000 before 1761: (05) goto pc+0
regs=0 stack=100000 before 1760: (05) goto pc+0
parent didn't have regs=0 stack=100000 marks: R0_w=scalar(umax=2047,var_off=(0x0; 0x7ff)) R1=scalar(umax=65535,var_off=(0x0; 0xffff)) R2_r=scalar(id=235) R3_r=scalar(id=234,smin=-525483785,smax=3769483510) R4_rw=scalar() R5_w=P-525483785 R6_r=ctx(off=0,imm=0) R7_w=scalar() R8_r=0 R9_r=scalar(id=222) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r= fp-56_r=mmmmmmmm fp-64_r= fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1759 first_idx 1748
regs=0 stack=100000 before 1759: (05) goto pc+0
regs=0 stack=100000 before 1758: (1f) r4 -= r7
regs=0 stack=100000 before 1757: (af) r4 ^= r5
regs=0 stack=100000 before 1756: (bf) r4 = r2
regs=0 stack=100000 before 1755: (07) r5 += -525483785
regs=0 stack=100000 before 1754: (4f) r7 |= r0
regs=0 stack=100000 before 1753: (67) r7 <<= 11
regs=0 stack=100000 before 1752: (bf) r7 = r2
regs=0 stack=100000 before 1751: (77) r0 >>= 53
regs=0 stack=100000 before 1750: (67) r0 <<= 32
regs=0 stack=100000 before 1749: (bf) r0 = r2
regs=0 stack=100000 before 1748: (05) goto pc+0
parent didn't have regs=0 stack=100000 marks: R0=scalar(id=222) R1=scalar(umax=65535,var_off=(0x0; 0xffff)) R2_rw=scalar() R3_rw=scalar(id=234,smin=-525483785,smax=3769483510) R4_w=scalar() R5_r=P0 R6_r=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=16,imm=0) R8_r=0 R9_r=scalar(id=222) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r= fp-56_r=mmmmmmmm fp-64_r= fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1747 first_idx 1734
regs=0 stack=100000 before 1747: (05) goto pc+0
regs=0 stack=100000 before 1746: (1f) r2 -= r4
regs=0 stack=100000 before 1745: (a7) r2 ^= -525483785
regs=0 stack=100000 before 1744: (bf) r2 = r3
regs=0 stack=100000 before 1743: (4f) r4 |= r2
regs=0 stack=100000 before 1742: (67) r4 <<= 14
regs=0 stack=100000 before 1741: (bf) r4 = r3
regs=0 stack=100000 before 1740: (77) r2 >>= 18
regs=0 stack=100000 before 1739: (bc) w2 = w3
regs=0 stack=100000 before 1738: (05) goto pc+0
regs=0 stack=100000 before 1737: (05) goto pc+0
regs=0 stack=100000 before 1736: (05) goto pc+0
regs=0 stack=100000 before 1735: (07) r3 += -525483785
regs=0 stack=100000 before 1734: (61) r3 = *(u32 *)(r10 -48)
parent didn't have regs=0 stack=100000 marks: R0=scalar(id=222) R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R2=scalar(umin=1000000001) R5_rw=P0 R6_r=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=16,imm=0) R8_r=0 R9_r=scalar(id=222) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r= fp-56_r=mmmmmmmm fp-64_r= fp-72_rw=00000000 fp-80_rw=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1733 first_idx 1726
regs=0 stack=100000 before 1733: (7b) *(u64 *)(r10 -72) = r5
regs=0 stack=100000 before 1732: (7b) *(u64 *)(r10 -80) = r5
regs=0 stack=100000 before 1731: (b7) r5 = 0
regs=0 stack=100000 before 1730: (6b) *(u16 *)(r10 -48) = r1
regs=0 stack=100000 before 1729: (69) r1 = *(u16 *)(r10 -46)
regs=0 stack=100000 before 1726: (55) if r1 != 0x0 goto pc+2
parent didn't have regs=0 stack=100000 marks: R0=scalar(id=222) R1_rw=scalar(umax=8,var_off=(0x0; 0x8)) R2=scalar(umin=1000000001) R6_r=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=16,imm=0) R8_rw=0 R9_r=scalar(id=222) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1725 first_idx 1713
regs=0 stack=100000 before 1725: (57) r1 &= 8
regs=0 stack=100000 before 1724: (61) r1 = *(u32 *)(r1 +0)
regs=0 stack=100000 before 1723: (79) r1 = *(u64 *)(r10 -144)
regs=0 stack=100000 before 1722: (b7) r8 = 0
regs=0 stack=100000 before 1717: (05) goto pc+4
regs=0 stack=100000 before 1716: (7a) *(u64 *)(r7 +0) = 1
regs=0 stack=100000 before 1715: (05) goto pc+0
regs=0 stack=100000 before 1714: (7b) *(u64 *)(r7 +8) = r9
regs=0 stack=100000 before 1713: (2d) if r1 > r2 goto pc+4
parent didn't have regs=0 stack=100000 marks: R0_w=scalar(id=222) R1_rw=1000000001 R2_rw=scalar() R6_r=ctx(off=0,imm=0) R7_rw=map_value(off=0,ks=4,vs=16,imm=0) R8_w=1 R9_rw=scalar(id=222) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1712 first_idx 1704
regs=0 stack=100000 before 1712: (b7) r1 = 1000000001
regs=0 stack=100000 before 1711: (1f) r2 -= r1
regs=0 stack=100000 before 1710: (bf) r2 = r9
regs=0 stack=100000 before 1709: (79) r1 = *(u64 *)(r7 +8)
regs=0 stack=100000 before 1708: (bf) r9 = r0
regs=0 stack=100000 before 1707: (85) call bpf_ktime_get_ns#5
regs=0 stack=100000 before 1706: (15) if r7 == 0x0 goto pc+16
regs=0 stack=100000 before 1705: (b7) r8 = 1
regs=0 stack=100000 before 1704: (bf) r7 = r0
parent didn't have regs=0 stack=100000 marks: R0_rw=map_value_or_null(id=221,off=0,ks=4,vs=16,imm=0) R6_r=ctx(off=0,imm=0) R7=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9_w=P0 R10=fp0 fp-8_rw=00000000 fp-16_rw=00000000 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1703 first_idx 1694
regs=0 stack=100000 before 1703: (85) call bpf_map_lookup_elem#1
regs=0 stack=100000 before 1701: (18) r1 = 0xffffa03499be8000
regs=0 stack=100000 before 1700: (07) r2 += -28
regs=0 stack=100000 before 1699: (bf) r2 = r10
regs=0 stack=100000 before 1698: (62) *(u32 *)(r10 -28) = 514
regs=0 stack=100000 before 1697: (05) goto pc+0
regs=0 stack=100000 before 1696: (7b) *(u64 *)(r10 -16) = r9
regs=0 stack=100000 before 1695: (7b) *(u64 *)(r10 -8) = r9
regs=0 stack=100000 before 1694: (b7) r9 = 0
parent didn't have regs=0 stack=100000 marks: R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar() R2_w=scalar(umax=2,var_off=(0x0; 0x2)) R6_r=ctx(off=0,imm=0) R7=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16=????mmmm fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1693 first_idx 1683
regs=0 stack=100000 before 1693: (7b) *(u64 *)(r0 +0) = r1
regs=0 stack=100000 before 1692: (07) r1 += 1
regs=0 stack=100000 before 1691: (79) r1 = *(u64 *)(r0 +0)
regs=0 stack=100000 before 1690: (0f) r0 += r1
regs=0 stack=100000 before 1689: (67) r1 <<= 3
regs=0 stack=100000 before 1688: (b7) r1 = 0
regs=0 stack=100000 before 1687: (15) if r2 == 0x0 goto pc+1
regs=0 stack=100000 before 1686: (b7) r1 = 1
regs=0 stack=100000 before 1685: (57) r2 &= 2
regs=0 stack=100000 before 1684: (71) r2 = *(u8 *)(r10 -36)
regs=0 stack=100000 before 1683: (15) if r0 == 0x0 goto pc+173
parent didn't have regs=0 stack=100000 marks: R0_rw=map_value_or_null(id=220,off=0,ks=4,vs=16,imm=0) R6_r=ctx(off=0,imm=0) R7=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16=????mmmm fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1682 first_idx 1674
regs=0 stack=100000 before 1682: (85) call bpf_map_lookup_elem#1
regs=0 stack=100000 before 1680: (18) r1 = 0xffffa03499be8000
regs=0 stack=100000 before 1679: (07) r2 += -16
regs=0 stack=100000 before 1678: (bf) r2 = r10
regs=0 stack=100000 before 1677: (62) *(u32 *)(r10 -16) = 513
regs=0 stack=100000 before 1676: (05) goto pc+0
regs=0 stack=100000 before 1675: (55) if r1 != 0x6 goto pc+18
regs=0 stack=100000 before 1674: (71) r1 = *(u8 *)(r10 -44)
parent didn't have regs=0 stack=100000 marks: R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar(umax=2,var_off=(0x0; 0x2)) R6_r=ctx(off=0,imm=0) R7=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16_r=????mmmm fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1647 first_idx 1644
regs=0 stack=100000 before 1647: (55) if r1 != 0x0 goto pc+26
regs=0 stack=100000 before 1646: (57) r1 &= 2
regs=0 stack=100000 before 1645: (61) r1 = *(u32 *)(r9 +0)
regs=0 stack=100000 before 1644: (55) if r1 != 0x0 goto pc+29
parent already had regs=0 stack=100000 marks: R0=map_value(off=0,ks=4,vs=16,imm=0) R1_rw=scalar(umax=2,var_off=(0x0; 0x2)) R6_r=ctx(off=0,imm=0) R7=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9_rw=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16_r=????mmmm fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_rw=P

from 1868 to 1881: safe
frame -168: propagating fp0
last_idx 1881 first_idx 1860
regs=0 stack=100000 before 1862: (15) if r1 == 0x0 goto pc+18
regs=0 stack=100000 before 1861: (79) r1 = *(u64 *)(r10 -152)
regs=0 stack=100000 before 1860: (7b) *(u64 *)(r10 -176) = r0
parent already had regs=0 stack=100000 marks: R0_rw=map_value(off=0,ks=4,vs=20,imm=0) R6_r=ctx(off=0,imm=0) R7=scalar() R8_r=0 R9_r=scalar(id=222) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-24_r=mmmm???? fp-32_r=mmmm???? fp-40_r= fp-48_r= fp-56_r=mmmmmmmm fp-64_r= fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P

from 1862 to 1881: safe
frame -168: propagating fp0
last_idx 1838 first_idx 1826
regs=0 stack=100000 before 1834: (15) if r0 == 0x0 goto pc+3
regs=0 stack=100000 before 1833: (85) call bpf_map_lookup_elem#1
regs=0 stack=100000 before 1831: (18) r1 = 0xffffa03499be8000
regs=0 stack=100000 before 1830: (07) r2 += -28
regs=0 stack=100000 before 1829: (bf) r2 = r10
regs=0 stack=100000 before 1828: (62) *(u32 *)(r10 -28) = 521
regs=0 stack=100000 before 1827: (05) goto pc+0
regs=0 stack=100000 before 1826: (55) if r1 != 0x0 goto pc+12
parent already had regs=0 stack=100000 marks: R0_w=map_value(off=0,ks=4,vs=4,imm=0) R1_rw=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6_r=ctx(off=0,imm=0) R7=scalar() R8_r=0 R9_r=scalar(id=222) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-24_r=mmmm???? fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r= fp-56_r=mmmmmmmm fp-64_r= fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P

from 1834 to 1838: safe

from 1826 to 1839: R0=map_value(off=0,ks=4,vs=4,imm=0) R1=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6=ctx(off=0,imm=0) R7=scalar() R8=0 R9=scalar(id=222) R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40=mmmmmmmm fp-48= fp-56=mmmmmmmm fp-64= fp-72=00000000 fp-80=00000000 fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; pckt->real_index = key;
1839: (63) *(u32 *)(r10 -40) = r1     ; R1=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1840: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1841: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1842: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1844: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=244,off=0,ks=4,vs=20,imm=0)
; if (!(*real)) {
1845: (55) if r0 != 0x0 goto pc+14    ; R0=0
1846: (05) goto pc+0
1847: safe
frame -168: propagating fp0
last_idx 1860 first_idx 1845
regs=0 stack=100000 before 1845: (55) if r0 != 0x0 goto pc+14
parent didn't have regs=0 stack=100000 marks: R0_rw=map_value_or_null(id=244,off=0,ks=4,vs=20,imm=0) R6_r=ctx(off=0,imm=0) R7=scalar() R8_r=0 R9_r=scalar(id=222) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-24_r=mmmm???? fp-32_r=mmmm???? fp-40_r= fp-48_r= fp-56_r=mmmmmmmm fp-64_r= fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1844 first_idx 1826
regs=0 stack=100000 before 1844: (85) call bpf_map_lookup_elem#1
regs=0 stack=100000 before 1842: (18) r1 = 0xffffaeba8c207000
regs=0 stack=100000 before 1841: (07) r2 += -20
regs=0 stack=100000 before 1840: (bf) r2 = r10
regs=0 stack=100000 before 1839: (63) *(u32 *)(r10 -40) = r1
regs=0 stack=100000 before 1826: (55) if r1 != 0x0 goto pc+12
parent already had regs=0 stack=100000 marks: R0_w=map_value(off=0,ks=4,vs=4,imm=0) R1_rw=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6_r=ctx(off=0,imm=0) R7=scalar() R8_r=0 R9_r=scalar(id=222) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-24_r=mmmm???? fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r= fp-56_r=mmmmmmmm fp-64_r= fp-72_r=00000000 fp-80_r=00000000 fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P

from 1845 to 1860: safe

from 1823 to 1857: safe

from 1713 to 1718: R0=scalar(id=222) R1=1000000001 R2=scalar(umax=1000000000,var_off=(0x0; 0x3fffffff)) R6=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=16,imm=0) R8=1 R9=scalar(id=222) R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; conn_rate_stats->v1 += 1;
1718: (79) r1 = *(u64 *)(r7 +0)       ; R1_w=scalar() R7=map_value(off=0,ks=4,vs=16,imm=0)
1719: (07) r1 += 1                    ; R1_w=scalar()
1720: (7b) *(u64 *)(r7 +0) = r1       ; R1=scalar() R7=map_value(off=0,ks=4,vs=16,imm=0)
; if (conn_rate_stats->v1 > MAX_CONN_RATE) {
1721: (25) if r1 > 0x1e848 goto pc+1          ; R1=scalar(umax=125000,var_off=(0x0; 0x1ffff))
1722: (b7) r8 = 0                     ; R8_w=0
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
1723: (79) r1 = *(u64 *)(r10 -144)    ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
1724: (61) r1 = *(u32 *)(r1 +0)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
1725: (57) r1 &= 8
frame -168: propagating fp0
last_idx 1726 first_idx 1721
regs=0 stack=100000 before 1725: (57) r1 &= 8
regs=0 stack=100000 before 1724: (61) r1 = *(u32 *)(r1 +0)
regs=0 stack=100000 before 1723: (79) r1 = *(u64 *)(r10 -144)
regs=0 stack=100000 before 1722: (b7) r8 = 0
regs=0 stack=100000 before 1721: (25) if r1 > 0x1e848 goto pc+1
parent didn't have regs=0 stack=100000 marks: R0=scalar(id=222) R1_rw=scalar() R2=scalar(umax=1000000000,var_off=(0x0; 0x3fffffff)) R6_r=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=16,imm=0) R8=1 R9_r=scalar(id=222) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1720 first_idx 1713
regs=0 stack=100000 before 1720: (7b) *(u64 *)(r7 +0) = r1
regs=0 stack=100000 before 1719: (07) r1 += 1
regs=0 stack=100000 before 1718: (79) r1 = *(u64 *)(r7 +0)
regs=0 stack=100000 before 1713: (2d) if r1 > r2 goto pc+4
parent already had regs=0 stack=100000 marks: R0_w=scalar(id=222) R1_rw=1000000001 R2_rw=scalar() R6_r=ctx(off=0,imm=0) R7_rw=map_value(off=0,ks=4,vs=16,imm=0) R8_w=1 R9_rw=scalar(id=222) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
1726: safe

from 1721 to 1723: R0=scalar(id=222) R1=scalar(umin=125001) R2=scalar(umax=1000000000,var_off=(0x0; 0x3fffffff)) R6=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=16,imm=0) R8=1 R9=scalar(id=222) R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
1723: (79) r1 = *(u64 *)(r10 -144)    ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
1724: (61) r1 = *(u32 *)(r1 +0)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
1725: (57) r1 &= 8
frame -168: propagating fp0
last_idx 1726 first_idx 1721
regs=0 stack=100000 before 1725: (57) r1 &= 8
regs=0 stack=100000 before 1724: (61) r1 = *(u32 *)(r1 +0)
regs=0 stack=100000 before 1723: (79) r1 = *(u64 *)(r10 -144)
regs=0 stack=100000 before 1721: (25) if r1 > 0x1e848 goto pc+1
parent already had regs=0 stack=100000 marks: R0=scalar(id=222) R1_rw=scalar() R2=scalar(umax=1000000000,var_off=(0x0; 0x3fffffff)) R6_r=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=16,imm=0) R8_r=1 R9_r=scalar(id=222) R10=fp0 fp-8_r=00000000 fp-16_r=00000000 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
1726: safe

from 1706 to 1723: R0=0 R6=ctx(off=0,imm=0) R7_w=0 R8_w=1 R9=P0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
1723: (79) r1 = *(u64 *)(r10 -144)    ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
1724: (61) r1 = *(u32 *)(r1 +0)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
1725: (57) r1 &= 8
frame -168: propagating fp0
last_idx 1726 first_idx 1704
regs=0 stack=100000 before 1725: (57) r1 &= 8
regs=0 stack=100000 before 1724: (61) r1 = *(u32 *)(r1 +0)
regs=0 stack=100000 before 1723: (79) r1 = *(u64 *)(r10 -144)
regs=0 stack=100000 before 1706: (15) if r7 == 0x0 goto pc+16
regs=0 stack=100000 before 1705: (b7) r8 = 1
regs=0 stack=100000 before 1704: (bf) r7 = r0
parent already had regs=0 stack=100000 marks: R0_rw=map_value_or_null(id=221,off=0,ks=4,vs=16,imm=0) R6_r=ctx(off=0,imm=0) R7=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9_rw=P0 R10=fp0 fp-8_rw=00000000 fp-16_rw=00000000 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
1726: safe

from 1687 to 1689: R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=1 R2_w=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (pckt.flags & F_SYN_SET) {
1689: (67) r1 <<= 3                   ; R1_w=8
; 
1690: (0f) r0 += r1
last_idx 1690 first_idx 1683
regs=2 stack=0 before 1689: (67) r1 <<= 3
regs=2 stack=0 before 1687: (15) if r2 == 0x0 goto pc+1
regs=2 stack=0 before 1686: (b7) r1 = 1
1691: R0_w=map_value(off=8,ks=4,vs=16,imm=0) R1_w=P8
1691: (79) r1 = *(u64 *)(r0 +0)       ; R0_w=map_value(off=8,ks=4,vs=16,imm=0) R1_w=scalar()
1692: (07) r1 += 1                    ; R1_w=scalar()
1693: (7b) *(u64 *)(r0 +0) = r1
frame -168: propagating fp0
last_idx 1694 first_idx 1683
regs=0 stack=100000 before 1693: (7b) *(u64 *)(r0 +0) = r1
regs=0 stack=100000 before 1692: (07) r1 += 1
regs=0 stack=100000 before 1691: (79) r1 = *(u64 *)(r0 +0)
regs=0 stack=100000 before 1690: (0f) r0 += r1
regs=0 stack=100000 before 1689: (67) r1 <<= 3
regs=0 stack=100000 before 1687: (15) if r2 == 0x0 goto pc+1
regs=0 stack=100000 before 1686: (b7) r1 = 1
regs=0 stack=100000 before 1685: (57) r2 &= 2
regs=0 stack=100000 before 1684: (71) r2 = *(u8 *)(r10 -36)
regs=0 stack=100000 before 1683: (15) if r0 == 0x0 goto pc+173
parent already had regs=0 stack=100000 marks: R0_rw=map_value_or_null(id=220,off=0,ks=4,vs=16,imm=0) R6_r=ctx(off=0,imm=0) R7=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16=????mmmm fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
1694: safe

from 1683 to 1857: safe
frame -168: propagating fp0
last_idx 1694 first_idx 1674
regs=0 stack=100000 before 1675: (55) if r1 != 0x6 goto pc+18
regs=0 stack=100000 before 1674: (71) r1 = *(u8 *)(r10 -44)
parent already had regs=0 stack=100000 marks: R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar(umax=2,var_off=(0x0; 0x2)) R6_r=ctx(off=0,imm=0) R7=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16_r=????mmmm fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P

from 1675 to 1694: safe
frame -168: propagating fp0
last_idx 1674 first_idx 1644
regs=0 stack=100000 before 1644: (55) if r1 != 0x0 goto pc+29
parent already had regs=0 stack=100000 marks: R0=map_value(off=0,ks=4,vs=16,imm=0) R1_rw=scalar(umax=2,var_off=(0x0; 0x2)) R6_r=ctx(off=0,imm=0) R7=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9_rw=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16_r=????mmmm fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_rw=P

from 1644 to 1674: safe

from 640 to 1639: R0=map_value(off=0,ks=4,vs=16,imm=0) R1=scalar(umax=253,var_off=(0x0; 0xfd)) R6=ctx(off=0,imm=0) R7=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; 
1639: (79) r9 = *(u64 *)(r10 -144)    ; R9_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
; original_sport = pckt.flow.port16[0];
1640: (69) r1 = *(u16 *)(r10 -48)     ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
1641: (7b) *(u64 *)(r10 -168) = r1    ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-168_w=
1642: (71) r1 = *(u8 *)(r10 -36)      ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
1643: (57) r1 &= 2
frame -168: propagating fp0
last_idx 1644 first_idx 640
regs=0 stack=100000 before 1643: (57) r1 &= 2
regs=0 stack=100000 before 1642: (71) r1 = *(u8 *)(r10 -36)
regs=0 stack=100000 before 1641: (7b) *(u64 *)(r10 -168) = r1
regs=2 stack=0 before 1640: (69) r1 = *(u16 *)(r10 -48)
regs=0 stack=20 before 1639: (79) r9 = *(u64 *)(r10 -144)
regs=0 stack=20 before 640: (55) if r1 != 0x1 goto pc+998
parent already had regs=0 stack=0 marks: R0_rw=map_value(off=0,ks=4,vs=16,imm=0) R1_rw=scalar(umax=253,var_off=(0x0; 0xfd)) R6_r=ctx(off=0,imm=0) R7=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16_r=????mmmm fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168=
1644: safe

from 634 to 1857: safe

from 626 to 718: R0=map_ptr(off=0,ks=40,vs=16,imm=0) R1_w=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152_w=map_ptr fp-160=map_value fp-168=
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
718: (05) goto pc+0
; __u32 quic_packets_stats_key = 0;
719: (62) *(u32 *)(r10 -28) = 0       ; R10=fp0 fp-32=mmmm????
720: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
721: (07) r2 += -28                   ; R2_w=fp-28
; bpf_map_lookup_elem(&quic_stats_map, &quic_packets_stats_key);
722: (18) r1 = 0xffffa03587064800     ; R1_w=map_ptr(off=0,ks=4,vs=104,imm=0)
724: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=245,off=0,ks=4,vs=104,imm=0)
725: (bf) r9 = r0                     ; R0_w=map_value_or_null(id=245,off=0,ks=4,vs=104,imm=0) R9_w=map_value_or_null(id=245,off=0,ks=4,vs=104,imm=0)
; if (!quic_packets_stats) {
726: (15) if r9 == 0x0 goto pc+1130   ; R9_w=map_value(off=0,ks=4,vs=104,imm=0)
; bool is_icmp = (pckt->flags & F_ICMP);
727: (71) r2 = *(u8 *)(r10 -36)       ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; bool is_icmp = (pckt->flags & F_ICMP);
728: (57) r2 &= 1                     ; R2_w=scalar(umax=1,var_off=(0x0; 0x1))
729: (b7) r1 = 34                     ; R1=34
; if (is_ipv6) {
730: (15) if r2 == 0x0 goto pc+1      ; R2=scalar(umax=1,var_off=(0x0; 0x1))
731: (b7) r1 = 62                     ; R1_w=62
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
732: (0f) r7 += r1
last_idx 732 first_idx 730
regs=2 stack=0 before 731: (b7) r1 = 62
733: R1_w=P62 R7_w=pkt(off=62,r=82,imm=0)
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
733: (bf) r1 = r7                     ; R1_w=pkt(off=62,r=82,imm=0) R7_w=pkt(off=62,r=82,imm=0)
734: (07) r1 += 9                     ; R1_w=pkt(off=71,r=82,imm=0)
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
735: (2d) if r1 > r8 goto pc+900      ; R1_w=pkt(off=71,r=82,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
736: (71) r2 = *(u8 *)(r7 +8)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=62,r=82,imm=0)
737: (67) r2 <<= 56                   ; R2_w=scalar(smax=9151314442816847872,umax=18374686479671623680,var_off=(0x0; 0xff00000000000000),s32_min=0,s32_max=0,u32_max=0)
738: (c7) r2 s>>= 56                  ; R2=scalar(smin=-128,smax=127)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
739: (65) if r2 s> 0xffffffff goto pc+30      ; R2=scalar(umin=18446744073709551488,var_off=(0xffffffffffffff80; 0x7f),u32_min=-128)
; if (quic_data + sizeof(struct quic_long_header) > data_end) {
740: (bf) r1 = r7                     ; R1_w=pkt(off=62,r=82,imm=0) R7=pkt(off=62,r=82,imm=0)
741: (07) r1 += 22                    ; R1_w=pkt(off=84,r=82,imm=0)
; if (quic_data + sizeof(struct quic_long_header) > data_end) {
742: (2d) if r1 > r8 goto pc+893      ; R1_w=pkt(off=84,r=84,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_PACKET_TYPE_MASK) < QUIC_HANDSHAKE) {
743: (57) r2 &= 32                    ; R2_w=scalar(umax=32,var_off=(0x0; 0x20))
; if ((*pkt_type & QUIC_PACKET_TYPE_MASK) < QUIC_HANDSHAKE) {
744: (15) if r2 == 0x0 goto pc+817    ; R2_w=scalar(umax=32,var_off=(0x0; 0x20))
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
745: (71) r1 = *(u8 *)(r7 +13)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=62,r=84,imm=0)
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
746: (07) r7 += 14                    ; R7=pkt(off=76,r=84,imm=0)
747: (25) if r1 > 0x7 goto pc+26      ; R1=scalar(umax=7,var_off=(0x0; 0x7))
748: (05) goto pc+887
; 
1636: (79) r1 = *(u64 *)(r9 +0)       ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
1637: (07) r1 += 1                    ; R1_w=scalar()
1638: (7b) *(u64 *)(r9 +0) = r1       ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
1639: (79) r9 = *(u64 *)(r10 -144)    ; R9_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
; original_sport = pckt.flow.port16[0];
1640: (69) r1 = *(u16 *)(r10 -48)     ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
1641: (7b) *(u64 *)(r10 -168) = r1    ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-168_w=
1642: (71) r1 = *(u8 *)(r10 -36)      ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
1643: (57) r1 &= 2
frame -168: propagating fp0
last_idx 1644 first_idx 747
regs=0 stack=100000 before 1643: (57) r1 &= 2
regs=0 stack=100000 before 1642: (71) r1 = *(u8 *)(r10 -36)
regs=0 stack=100000 before 1641: (7b) *(u64 *)(r10 -168) = r1
regs=2 stack=0 before 1640: (69) r1 = *(u16 *)(r10 -48)
regs=0 stack=20 before 1639: (79) r9 = *(u64 *)(r10 -144)
regs=0 stack=20 before 1638: (7b) *(u64 *)(r9 +0) = r1
regs=0 stack=20 before 1637: (07) r1 += 1
regs=0 stack=20 before 1636: (79) r1 = *(u64 *)(r9 +0)
regs=0 stack=20 before 748: (05) goto pc+887
regs=0 stack=20 before 747: (25) if r1 > 0x7 goto pc+26
parent already had regs=0 stack=0 marks: R0=map_value(off=0,ks=4,vs=104,imm=0) R1_rw=scalar(umax=255,var_off=(0x0; 0xff)) R2_w=scalar(umax=32,var_off=(0x0; 0x20)) R6_r=ctx(off=0,imm=0) R7_w=pkt(off=76,r=84,imm=0) R8=pkt_end(off=0,imm=0) R9_r=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16_r=????mmmm fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168=
1644: safe

from 747 to 774: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(umin=8,umax=255,var_off=(0x0; 0xff)) R2=scalar(umax=32,var_off=(0x0; 0x20)) R6=ctx(off=0,imm=0) R7=pkt(off=76,r=84,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (!connId) {
774: (15) if r7 == 0x0 goto pc+861    ; R7=pkt(off=76,r=84,imm=0)
; __u8 connIdVersion = (connId[0] >> 6);
775: (71) r1 = *(u8 *)(r7 +0)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=76,r=84,imm=0)
776: (bf) r2 = r1                     ; R1_w=scalar(id=246,umax=255,var_off=(0x0; 0xff)) R2_w=scalar(id=246,umax=255,var_off=(0x0; 0xff))
777: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
; if (connIdVersion == QUIC_CONNID_VERSION_V1) {
778: (15) if r2 == 0x3 goto pc+798    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
779: (15) if r2 == 0x2 goto pc+809    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
780: (55) if r2 != 0x1 goto pc+855    ; R2_w=1
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
781: (57) r1 &= 63                    ; R1_w=scalar(umax=63,var_off=(0x0; 0x3f))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
782: (67) r1 <<= 10                   ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
783: (71) r8 = *(u8 *)(r7 +1)         ; R7=pkt(off=76,r=84,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
784: (67) r8 <<= 2                    ; R8_w=scalar(umax=1020,var_off=(0x0; 0x3fc))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
785: (4f) r8 |= r1                    ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00)) R8_w=scalar()
786: (18) r1 = 0x100000000            ; R1_w=4294967296
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
788: (71) r2 = *(u8 *)(r7 +2)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=76,r=84,imm=0)
789: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
790: (05) goto pc+806
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1597: (57) r2 &= 255                  ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
; 
1598: (4f) r8 |= r2                   ; R2_w=scalar(umax=3,var_off=(0x0; 0x3)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1599: (bf) r2 = r8                    ; R2_w=scalar(id=247) R8_w=scalar(id=247)
1600: (67) r2 <<= 32                  ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
1601: (c7) r2 s>>= 32                 ; R2_w=scalar(smin=-2147483648,smax=2147483647)
1602: (b7) r3 = 1                     ; R3_w=1
; if (qpr.server_id > 0) {
1603: (6d) if r3 s> r2 goto pc+32     ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1604: (77) r1 >>= 32                  ; R1_w=1
; if (cid_version == QUIC_CONNID_VERSION_V1) {
1605: (15) if r1 == 0x3 goto pc+5
last_idx 1605 first_idx 1597
regs=2 stack=0 before 1604: (77) r1 >>= 32
regs=2 stack=0 before 1603: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 1602: (b7) r3 = 1
regs=2 stack=0 before 1601: (c7) r2 s>>= 32
regs=2 stack=0 before 1600: (67) r2 <<= 32
regs=2 stack=0 before 1599: (bf) r2 = r8
regs=2 stack=0 before 1598: (4f) r8 |= r2
regs=2 stack=0 before 1597: (57) r2 &= 255
parent didn't have regs=2 stack=0 marks: R0=map_value(off=0,ks=4,vs=104,imm=0) R1_rw=P4294967296 R2_rw=scalar(umax=3,var_off=(0x0; 0x3)) R6=ctx(off=0,imm=0) R7=pkt(off=76,r=84,imm=0) R8_rw=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
last_idx 790 first_idx 774
regs=2 stack=0 before 790: (05) goto pc+806
regs=2 stack=0 before 789: (77) r2 >>= 6
regs=2 stack=0 before 788: (71) r2 = *(u8 *)(r7 +2)
regs=2 stack=0 before 786: (18) r1 = 0x100000000
1606: (15) if r1 == 0x2 goto pc+7     ; R1=P1
1607: (55) if r1 != 0x1 goto pc+9     ; R1=P1
; quic_packets_stats->cid_v1 += 1;
1608: (bf) r1 = r9                    ; R1_w=map_value(off=0,ks=4,vs=104,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0)
1609: (07) r1 += 56                   ; R1_w=map_value(off=56,ks=4,vs=104,imm=0)
1610: (05) goto pc+8
; 
1619: (79) r2 = *(u64 *)(r1 +0)       ; R1_w=map_value(off=56,ks=4,vs=104,imm=0) R2_w=scalar()
1620: (07) r2 += 1                    ; R2_w=scalar()
1621: (7b) *(u64 *)(r1 +0) = r2       ; R1_w=map_value(off=56,ks=4,vs=104,imm=0) R2_w=scalar()
; __u32 key = qpr.server_id;
1622: (63) *(u32 *)(r10 -20) = r8     ; R8=scalar(id=247) R10=fp0 fp-24=mmmm????
1623: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1624: (07) r2 += -20                  ; R2_w=fp-20
; __u32* real_pos = bpf_map_lookup_elem(&server_id_map, &key);
1625: (18) r1 = 0xffffaebab0634000    ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
1627: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=248,off=0,ks=4,vs=4,imm=0)
; if (real_pos) {
1628: (15) if r0 == 0x0 goto pc+7     ; R0=map_value(off=0,ks=4,vs=4,imm=0)
; key = *real_pos;
1629: (61) r1 = *(u32 *)(r0 +0)       ; R0=map_value(off=0,ks=4,vs=4,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; key = *real_pos;
1630: (63) *(u32 *)(r10 -20) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-24=mmmm????
; if (key == 0) {
1631: (55) if r1 != 0x0 goto pc+496   ; R1_w=0
; quic_packets_stats->cid_invalid_server_id_sample = qpr.server_id;
1632: (7b) *(u64 *)(r9 +24) = r8      ; R8=scalar(id=247) R9=map_value(off=0,ks=4,vs=104,imm=0)
; quic_packets_stats->cid_invalid_server_id += 1;
1633: (79) r1 = *(u64 *)(r9 +16)      ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
1634: (07) r1 += 1                    ; R1_w=scalar()
1635: (7b) *(u64 *)(r9 +16) = r1      ; R1=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
; 
1636: (79) r1 = *(u64 *)(r9 +0)       ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
1637: (07) r1 += 1                    ; R1_w=scalar()
1638: (7b) *(u64 *)(r9 +0) = r1       ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
1639: (79) r9 = *(u64 *)(r10 -144)    ; R9_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
; original_sport = pckt.flow.port16[0];
1640: (69) r1 = *(u16 *)(r10 -48)     ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
1641: (7b) *(u64 *)(r10 -168) = r1    ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-168_w=
1642: (71) r1 = *(u8 *)(r10 -36)      ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
1643: (57) r1 &= 2
frame -168: propagating fp0
last_idx 1644 first_idx 1636
regs=0 stack=100000 before 1643: (57) r1 &= 2
regs=0 stack=100000 before 1642: (71) r1 = *(u8 *)(r10 -36)
regs=0 stack=100000 before 1641: (7b) *(u64 *)(r10 -168) = r1
regs=2 stack=0 before 1640: (69) r1 = *(u16 *)(r10 -48)
regs=0 stack=20 before 1639: (79) r9 = *(u64 *)(r10 -144)
regs=0 stack=20 before 1638: (7b) *(u64 *)(r9 +0) = r1
regs=0 stack=20 before 1637: (07) r1 += 1
regs=0 stack=20 before 1636: (79) r1 = *(u64 *)(r9 +0)
parent already had regs=0 stack=0 marks: R0=map_value(off=0,ks=4,vs=4,imm=0) R1_w=scalar() R6_r=ctx(off=0,imm=0) R7=pkt(off=76,r=84,imm=0) R8=scalar(id=247) R9_r=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16_r=????mmmm fp-24_r=mmmm???? fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168=
1644: safe

from 1631 to 2128: R0=map_value(off=0,ks=4,vs=4,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6=ctx(off=0,imm=0) R7=pkt(off=76,r=84,imm=0) R8=scalar(id=247) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-24=mmmm???? fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; pckt.real_index = key;
2128: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
2129: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
2130: (07) r2 += -20                  ; R2_w=fp-20
; dst = bpf_map_lookup_elem(&reals, &key);
2131: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
2133: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=249,off=0,ks=4,vs=20,imm=0)
2134: (7b) *(u64 *)(r10 -176) = r0    ; R0_w=map_value_or_null(id=249,off=0,ks=4,vs=20,imm=0) R10=fp0 fp-176_w=map_value_or_null
; if (!dst) {
2135: (55) if r0 != 0x0 goto pc+4     ; R0_w=0
2136: safe

from 2135 to 2140: R0=map_value(off=0,ks=4,vs=20,imm=0) R6=ctx(off=0,imm=0) R7=pkt(off=76,r=84,imm=0) R8=scalar(id=247) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=map_value
; quic_packets_stats->cid_unknown_real_dropped += 1;
2140: (05) goto pc+0
; __u32 flags_key = 0;
2141: (62) *(u32 *)(r10 -124) = 0     ; R10=fp0 fp-128=mmmm????
2142: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
2143: (07) r2 += -124                 ; R2_w=fp-124
; bpf_map_lookup_elem(&server_id_flags, &flags_key);
2144: (18) r1 = 0xffffa03587066800    ; R1_w=map_ptr(off=0,ks=4,vs=1,imm=0)
2146: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=250,off=0,ks=4,vs=1,imm=0)
; flags_value && flags_value->update_quic_sid_based_dst_in_lru;
2147: (15) if r0 == 0x0 goto pc+86    ; R0_w=map_value(off=0,ks=4,vs=1,imm=0)
; flags_value && flags_value->update_quic_sid_based_dst_in_lru;
2148: (71) r7 = *(u8 *)(r0 +0)        ; R0_w=map_value(off=0,ks=4,vs=1,imm=0) R7_w=scalar(umax=255,var_off=(0x0; 0xff))
2149: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
2150: (07) r2 += -80                  ; R2_w=fp-80
; struct real_pos_lru* dst_lru = bpf_map_lookup_elem(lru_map, &pckt->flow);
2151: (79) r1 = *(u64 *)(r10 -152)    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0
2152: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=251,off=0,ks=40,vs=16,imm=0)
; if (dst_lru) {
2153: (15) if r0 == 0x0 goto pc+29    ; R0=map_value(off=0,ks=40,vs=16,imm=0)
; if (dst_lru->pos == pckt->real_index) {
2154: (61) r1 = *(u32 *)(r10 -40)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; if (dst_lru->pos == pckt->real_index) {
2155: (61) r2 = *(u32 *)(r0 +0)       ; R0=map_value(off=0,ks=40,vs=16,imm=0) R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; flags_value && flags_value->update_quic_sid_based_dst_in_lru;
2156: (bf) r3 = r7                    ; R3_w=scalar(id=252,umax=255,var_off=(0x0; 0xff)) R7=scalar(id=252,umax=255,var_off=(0x0; 0xff))
; if (dst_lru->pos == pckt->real_index) {
2157: (15) if r3 == 0x0 goto pc+99    ; R3_w=scalar(id=252,umax=255,var_off=(0x0; 0xff))
2158: (bf) r3 = r1                    ; R1_w=scalar(id=253,umax=4294967295,var_off=(0x0; 0xffffffff)) R3_w=scalar(id=253,umax=4294967295,var_off=(0x0; 0xffffffff))
2159: (bf) r4 = r2                    ; R2_w=scalar(id=254,umax=4294967295,var_off=(0x0; 0xffffffff)) R4_w=scalar(id=254,umax=4294967295,var_off=(0x0; 0xffffffff))
2160: (1d) if r4 == r3 goto pc+96     ; R3_w=scalar(id=253,umax=4294967295,var_off=(0x0; 0xffffffff)) R4_w=scalar(id=254,umax=4294967295,var_off=(0x0; 0xffffffff))
; dst_lru->pos = pckt->real_index;
2161: (63) *(u32 *)(r0 +0) = r1       ; R0=map_value(off=0,ks=40,vs=16,imm=0) R1_w=scalar(id=253,umax=4294967295,var_off=(0x0; 0xffffffff))
; vip_num, /* new conn */ false, /* mismatch in lru */ true);
2162: (61) r1 = *(u32 *)(r10 -108)    ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; if (res == DST_MATCH_IN_LRU) {
2163: (7b) *(u64 *)(r10 -168) = r1    ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-168_w=
2164: (05) goto pc+77
2242: safe

from 2160 to 2257: safe

from 2157 to 2257: safe

from 2153 to 2183: R0=0 R6=ctx(off=0,imm=0) R7=scalar(umax=255,var_off=(0x0; 0xff)) R8=scalar(id=247) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-128=mmmm???? fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=map_value
; flags_value && flags_value->update_quic_sid_based_dst_in_lru;
2183: (bf) r1 = r7                    ; R1_w=scalar(id=255,umax=255,var_off=(0x0; 0xff)) R7=scalar(id=255,umax=255,var_off=(0x0; 0xff))
; if (update_lru) {
2184: (15) if r1 == 0x0 goto pc+12    ; R1_w=scalar(id=255,umax=255,var_off=(0x0; 0xff))
2185: (05) goto pc+0
; struct real_pos_lru new_dst_lru = {};
2186: (7a) *(u64 *)(r10 -16) = 0      ; R10=fp0 fp-16_w=mmmmmmmm
; new_dst_lru.pos = pckt->real_index;
2187: (61) r2 = *(u32 *)(r10 -40)     ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; new_dst_lru.pos = pckt->real_index;
2188: (63) *(u32 *)(r10 -16) = r2     ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-16_w=
; struct real_pos_lru new_dst_lru = {};
2189: (7a) *(u64 *)(r10 -8) = 0       ; R10=fp0 fp-8_w=mmmmmmmm
2190: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
2191: (07) r2 += -80                  ; R2_w=fp-80
2192: (bf) r3 = r10                   ; R3_w=fp0 R10=fp0
2193: (07) r3 += -16                  ; R3_w=fp-16
; bpf_map_update_elem(lru_map, &pckt->flow, &new_dst_lru, BPF_ANY);
2194: (79) r1 = *(u64 *)(r10 -152)    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0
2195: (b7) r4 = 0                     ; R4_w=0
2196: (85) call bpf_map_update_elem#2
2197: safe

from 2184 to 2197: safe

from 2147 to 2234: R0=0 R6=ctx(off=0,imm=0) R7=pkt(off=76,r=84,imm=0) R8=scalar(id=247) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-128=mmmm???? fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=map_value
; if (!dst) {
2234: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
2235: (07) r2 += -80                  ; R2_w=fp-80
; struct real_pos_lru* dst_lru = bpf_map_lookup_elem(lru_map, &pckt->flow);
2236: (79) r1 = *(u64 *)(r10 -152)    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0
2237: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=256,off=0,ks=40,vs=16,imm=0)
; if (dst_lru) {
2238: (15) if r0 == 0x0 goto pc-42    ; R0_w=map_value(off=0,ks=40,vs=16,imm=0)
; if (dst_lru->pos == pckt->real_index) {
2239: (61) r1 = *(u32 *)(r0 +0)       ; R0_w=map_value(off=0,ks=40,vs=16,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (dst_lru->pos == pckt->real_index) {
2240: (61) r2 = *(u32 *)(r10 -40)     ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; if (res == DST_MATCH_IN_LRU) {
2241: (1d) if r1 == r2 goto pc+16     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
2242: safe

from 2241 to 2258: R0=map_value(off=0,ks=40,vs=16,imm=0) R1=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R2=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6=ctx(off=0,imm=0) R7=pkt(off=76,r=84,imm=0) R8=scalar(id=247) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-128=mmmm???? fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=map_value
; quic_packets_stats->dst_match_in_lru += 1;
2258: (79) r1 = *(u64 *)(r9 +80)      ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
2259: (07) r1 += 1                    ; R1_w=scalar()
2260: (7b) *(u64 *)(r9 +80) = r1
2261: safe

from 2238 to 2197: safe

from 1628 to 1636: safe

from 1603 to 1636: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=4294967296 R2_w=scalar(smin=-2147483648,smax=0) R3_w=1 R6=ctx(off=0,imm=0) R7=pkt(off=76,r=84,imm=0) R8_w=scalar(id=247) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; 
1636: (79) r1 = *(u64 *)(r9 +0)       ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
1637: (07) r1 += 1                    ; R1_w=scalar()
1638: (7b) *(u64 *)(r9 +0) = r1       ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
1639: (79) r9 = *(u64 *)(r10 -144)    ; R9_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
; original_sport = pckt.flow.port16[0];
1640: (69) r1 = *(u16 *)(r10 -48)     ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
1641: (7b) *(u64 *)(r10 -168) = r1    ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-168_w=
1642: (71) r1 = *(u8 *)(r10 -36)      ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
1643: (57) r1 &= 2
frame -168: propagating fp0
last_idx 1644 first_idx 1597
regs=0 stack=100000 before 1643: (57) r1 &= 2
regs=0 stack=100000 before 1642: (71) r1 = *(u8 *)(r10 -36)
regs=0 stack=100000 before 1641: (7b) *(u64 *)(r10 -168) = r1
regs=2 stack=0 before 1640: (69) r1 = *(u16 *)(r10 -48)
regs=0 stack=20 before 1639: (79) r9 = *(u64 *)(r10 -144)
regs=0 stack=20 before 1638: (7b) *(u64 *)(r9 +0) = r1
regs=0 stack=20 before 1637: (07) r1 += 1
regs=0 stack=20 before 1636: (79) r1 = *(u64 *)(r9 +0)
regs=0 stack=20 before 1603: (6d) if r3 s> r2 goto pc+32
regs=0 stack=20 before 1602: (b7) r3 = 1
regs=0 stack=20 before 1601: (c7) r2 s>>= 32
regs=0 stack=20 before 1600: (67) r2 <<= 32
regs=0 stack=20 before 1599: (bf) r2 = r8
regs=0 stack=20 before 1598: (4f) r8 |= r2
regs=0 stack=20 before 1597: (57) r2 &= 255
parent already had regs=0 stack=0 marks: R0=map_value(off=0,ks=4,vs=104,imm=0) R1_rw=P4294967296 R2_rw=scalar(umax=3,var_off=(0x0; 0x3)) R6_r=ctx(off=0,imm=0) R7=pkt(off=76,r=84,imm=0) R8_rw=scalar() R9_r=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16_r=????mmmm fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=
1644: safe

from 780 to 1636: R0=map_value(off=0,ks=4,vs=104,imm=0) R1_w=scalar(id=246,umax=255,var_off=(0x0; 0xff)) R2_w=scalar(umax=3,var_off=(0x0; 0x3)) R6=ctx(off=0,imm=0) R7=pkt(off=76,r=84,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; 
1636: (79) r1 = *(u64 *)(r9 +0)       ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
1637: (07) r1 += 1                    ; R1_w=scalar()
1638: (7b) *(u64 *)(r9 +0) = r1       ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
1639: (79) r9 = *(u64 *)(r10 -144)    ; R9_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
; original_sport = pckt.flow.port16[0];
1640: (69) r1 = *(u16 *)(r10 -48)     ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
1641: (7b) *(u64 *)(r10 -168) = r1    ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-168_w=
1642: (71) r1 = *(u8 *)(r10 -36)      ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
1643: (57) r1 &= 2
frame -168: propagating fp0
last_idx 1644 first_idx 774
regs=0 stack=100000 before 1643: (57) r1 &= 2
regs=0 stack=100000 before 1642: (71) r1 = *(u8 *)(r10 -36)
regs=0 stack=100000 before 1641: (7b) *(u64 *)(r10 -168) = r1
regs=2 stack=0 before 1640: (69) r1 = *(u16 *)(r10 -48)
regs=0 stack=20 before 1639: (79) r9 = *(u64 *)(r10 -144)
regs=0 stack=20 before 1638: (7b) *(u64 *)(r9 +0) = r1
regs=0 stack=20 before 1637: (07) r1 += 1
regs=0 stack=20 before 1636: (79) r1 = *(u64 *)(r9 +0)
regs=0 stack=20 before 780: (55) if r2 != 0x1 goto pc+855
regs=0 stack=20 before 779: (15) if r2 == 0x2 goto pc+809
regs=0 stack=20 before 778: (15) if r2 == 0x3 goto pc+798
regs=0 stack=20 before 777: (77) r2 >>= 6
regs=0 stack=20 before 776: (bf) r2 = r1
regs=0 stack=20 before 775: (71) r1 = *(u8 *)(r7 +0)
regs=0 stack=20 before 774: (15) if r7 == 0x0 goto pc+861
parent already had regs=0 stack=0 marks: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(umin=8,umax=255,var_off=(0x0; 0xff)) R2=scalar(umax=32,var_off=(0x0; 0x20)) R6_r=ctx(off=0,imm=0) R7_r=pkt(off=76,r=84,imm=0) R8=pkt_end(off=0,imm=0) R9_r=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16_r=????mmmm fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=
1644: safe

from 779 to 1589: R0=map_value(off=0,ks=4,vs=104,imm=0) R1_w=scalar(id=246,umax=255,var_off=(0x0; 0xff)) R2_w=2 R6=ctx(off=0,imm=0) R7=pkt(off=76,r=84,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1589: (71) r1 = *(u8 *)(r7 +1)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=76,r=84,imm=0)
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1590: (67) r1 <<= 16                  ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1591: (71) r8 = *(u8 *)(r7 +2)        ; R7=pkt(off=76,r=84,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1592: (67) r8 <<= 8                   ; R8_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1593: (4f) r8 |= r1                   ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000)) R8_w=scalar()
1594: (18) r1 = 0x200000000           ; R1_w=8589934592
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1596: (71) r2 = *(u8 *)(r7 +3)        ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=76,r=84,imm=0)
1597: (57) r2 &= 255                  ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
1598: (4f) r8 |= r2                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1599: (bf) r2 = r8                    ; R2_w=scalar(id=257) R8_w=scalar(id=257)
1600: (67) r2 <<= 32                  ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
1601: (c7) r2 s>>= 32                 ; R2_w=scalar(smin=-2147483648,smax=2147483647)
1602: (b7) r3 = 1                     ; R3_w=1
; if (qpr.server_id > 0) {
1603: (6d) if r3 s> r2 goto pc+32     ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1604: (77) r1 >>= 32                  ; R1_w=2
; if (cid_version == QUIC_CONNID_VERSION_V1) {
1605: (15) if r1 == 0x3 goto pc+5
last_idx 1605 first_idx 774
regs=2 stack=0 before 1604: (77) r1 >>= 32
regs=2 stack=0 before 1603: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 1602: (b7) r3 = 1
regs=2 stack=0 before 1601: (c7) r2 s>>= 32
regs=2 stack=0 before 1600: (67) r2 <<= 32
regs=2 stack=0 before 1599: (bf) r2 = r8
regs=2 stack=0 before 1598: (4f) r8 |= r2
regs=2 stack=0 before 1597: (57) r2 &= 255
regs=2 stack=0 before 1596: (71) r2 = *(u8 *)(r7 +3)
regs=2 stack=0 before 1594: (18) r1 = 0x200000000
1606: R1=P2
1606: (15) if r1 == 0x2 goto pc+7     ; R1=P2
; quic_packets_stats->cid_v2 += 1;
1614: (bf) r1 = r9                    ; R1_w=map_value(off=0,ks=4,vs=104,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0)
1615: (07) r1 += 64                   ; R1_w=map_value(off=64,ks=4,vs=104,imm=0)
1616: (05) goto pc+2
; 
1619: (79) r2 = *(u64 *)(r1 +0)       ; R1_w=map_value(off=64,ks=4,vs=104,imm=0) R2_w=scalar()
1620: (07) r2 += 1                    ; R2_w=scalar()
1621: (7b) *(u64 *)(r1 +0) = r2       ; R1_w=map_value(off=64,ks=4,vs=104,imm=0) R2_w=scalar()
; __u32 key = qpr.server_id;
1622: (63) *(u32 *)(r10 -20) = r8     ; R8=scalar(id=257) R10=fp0 fp-24=mmmm????
1623: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1624: (07) r2 += -20                  ; R2_w=fp-20
; __u32* real_pos = bpf_map_lookup_elem(&server_id_map, &key);
1625: (18) r1 = 0xffffaebab0634000    ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
1627: (85) call bpf_map_lookup_elem#1
1628: safe

from 1603 to 1636: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=8589934592 R2=scalar(smin=-2147483648,smax=0) R3=1 R6=ctx(off=0,imm=0) R7=pkt(off=76,r=84,imm=0) R8=scalar(id=257) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; 
1636: (79) r1 = *(u64 *)(r9 +0)       ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
1637: (07) r1 += 1                    ; R1_w=scalar()
1638: (7b) *(u64 *)(r9 +0) = r1       ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
1639: (79) r9 = *(u64 *)(r10 -144)    ; R9_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
; original_sport = pckt.flow.port16[0];
1640: (69) r1 = *(u16 *)(r10 -48)     ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
1641: (7b) *(u64 *)(r10 -168) = r1    ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-168_w=
1642: (71) r1 = *(u8 *)(r10 -36)      ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
1643: (57) r1 &= 2
frame -168: propagating fp0
last_idx 1644 first_idx 1636
regs=0 stack=100000 before 1643: (57) r1 &= 2
regs=0 stack=100000 before 1642: (71) r1 = *(u8 *)(r10 -36)
regs=0 stack=100000 before 1641: (7b) *(u64 *)(r10 -168) = r1
regs=2 stack=0 before 1640: (69) r1 = *(u16 *)(r10 -48)
regs=0 stack=20 before 1639: (79) r9 = *(u64 *)(r10 -144)
regs=0 stack=20 before 1638: (7b) *(u64 *)(r9 +0) = r1
regs=0 stack=20 before 1637: (07) r1 += 1
regs=0 stack=20 before 1636: (79) r1 = *(u64 *)(r9 +0)
parent already had regs=0 stack=0 marks: R0=map_value(off=0,ks=4,vs=104,imm=0) R1_w=8589934592 R2_w=scalar(smin=-2147483648,smax=0) R3_w=1 R6_r=ctx(off=0,imm=0) R7=pkt(off=76,r=84,imm=0) R8_w=scalar(id=257) R9_r=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16_r=????mmmm fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168=
1644: safe

from 778 to 1577: R0=map_value(off=0,ks=4,vs=104,imm=0) R1_w=scalar(id=246,umax=255,var_off=(0x0; 0xff)) R2_w=3 R6=ctx(off=0,imm=0) R7=pkt(off=76,r=84,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1577: (71) r1 = *(u8 *)(r7 +1)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=76,r=84,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1578: (67) r1 <<= 24                  ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1579: (71) r8 = *(u8 *)(r7 +2)        ; R7=pkt(off=76,r=84,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1580: (67) r8 <<= 16                  ; R8_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1581: (4f) r8 |= r1                   ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432) R8_w=scalar()
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1582: (71) r1 = *(u8 *)(r7 +3)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=76,r=84,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1583: (67) r1 <<= 8                   ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1584: (4f) r8 |= r1                   ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00)) R8_w=scalar()
1585: (18) r1 = 0x300000000           ; R1_w=12884901888
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1587: (71) r2 = *(u8 *)(r7 +4)        ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=76,r=84,imm=0)
1588: (05) goto pc+8
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1597: (57) r2 &= 255                  ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
1598: (4f) r8 |= r2                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1599: (bf) r2 = r8                    ; R2_w=scalar(id=259) R8_w=scalar(id=259)
1600: (67) r2 <<= 32                  ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
1601: (c7) r2 s>>= 32                 ; R2_w=scalar(smin=-2147483648,smax=2147483647)
1602: (b7) r3 = 1                     ; R3_w=1
; if (qpr.server_id > 0) {
1603: (6d) if r3 s> r2 goto pc+32     ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1604: (77) r1 >>= 32                  ; R1=3
; if (cid_version == QUIC_CONNID_VERSION_V1) {
1605: (15) if r1 == 0x3 goto pc+5
last_idx 1605 first_idx 1605
parent didn't have regs=2 stack=0 marks: R0=map_value(off=0,ks=4,vs=104,imm=0) R1_rw=P3 R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1 R6=ctx(off=0,imm=0) R7=pkt(off=76,r=84,imm=0) R8_w=scalar(id=259) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
last_idx 1604 first_idx 774
regs=2 stack=0 before 1604: (77) r1 >>= 32
regs=2 stack=0 before 1603: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 1602: (b7) r3 = 1
regs=2 stack=0 before 1601: (c7) r2 s>>= 32
regs=2 stack=0 before 1600: (67) r2 <<= 32
regs=2 stack=0 before 1599: (bf) r2 = r8
regs=2 stack=0 before 1598: (4f) r8 |= r2
regs=2 stack=0 before 1597: (57) r2 &= 255
regs=2 stack=0 before 1588: (05) goto pc+8
regs=2 stack=0 before 1587: (71) r2 = *(u8 *)(r7 +4)
regs=2 stack=0 before 1585: (18) r1 = 0x300000000
; quic_packets_stats->cid_v3 += 1;
1611: (bf) r1 = r9                    ; R1_w=map_value(off=0,ks=4,vs=104,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0)
1612: (07) r1 += 72                   ; R1_w=map_value(off=72,ks=4,vs=104,imm=0)
1613: (05) goto pc+5
; 
1619: (79) r2 = *(u64 *)(r1 +0)       ; R1_w=map_value(off=72,ks=4,vs=104,imm=0) R2_w=scalar()
1620: (07) r2 += 1                    ; R2_w=scalar()
1621: (7b) *(u64 *)(r1 +0) = r2       ; R1_w=map_value(off=72,ks=4,vs=104,imm=0) R2_w=scalar()
; __u32 key = qpr.server_id;
1622: (63) *(u32 *)(r10 -20) = r8     ; R8=scalar(id=259) R10=fp0 fp-24=mmmm????
1623: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1624: (07) r2 += -20                  ; R2_w=fp-20
; __u32* real_pos = bpf_map_lookup_elem(&server_id_map, &key);
1625: (18) r1 = 0xffffaebab0634000    ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
1627: (85) call bpf_map_lookup_elem#1
1628: safe

from 1603 to 1636: safe

from 774 to 1636: safe

from 744 to 1562: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=pkt(off=84,r=84,imm=0) R2=0 R6=ctx(off=0,imm=0) R7=pkt(off=62,r=84,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; quic_packets_stats->cid_initial += 1;
1562: (79) r1 = *(u64 *)(r9 +8)       ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
1563: (07) r1 += 1                    ; R1_w=scalar()
1564: (7b) *(u64 *)(r9 +8) = r1       ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
1565: (79) r1 = *(u64 *)(r10 -168)    ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
1566: (63) *(u32 *)(r10 -16) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-16=
1567: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1568: (07) r2 += -16                  ; R2_w=fp-16
; bpf_map_lookup_elem(&server_id_stats, &vip_num);
1569: (18) r1 = 0xffffa0364c1b2000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
1571: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=261,off=0,ks=4,vs=16,imm=0)
; if (!per_vip_stats) {
1572: (15) if r0 == 0x0 goto pc+66    ; R0_w=map_value(off=0,ks=4,vs=16,imm=0)
; per_vip_stats->v1 += 1;
1573: (79) r1 = *(u64 *)(r0 +0)       ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1574: (07) r1 += 1                    ; R1_w=scalar()
1575: (7b) *(u64 *)(r0 +0) = r1       ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1576: (05) goto pc+62
; 
1639: (79) r9 = *(u64 *)(r10 -144)    ; R9_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
; original_sport = pckt.flow.port16[0];
1640: (69) r1 = *(u16 *)(r10 -48)     ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
1641: (7b) *(u64 *)(r10 -168) = r1    ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-168_w=
1642: (71) r1 = *(u8 *)(r10 -36)      ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
1643: (57) r1 &= 2
frame -168: propagating fp0
last_idx 1644 first_idx 1639
regs=0 stack=100000 before 1643: (57) r1 &= 2
regs=0 stack=100000 before 1642: (71) r1 = *(u8 *)(r10 -36)
regs=0 stack=100000 before 1641: (7b) *(u64 *)(r10 -168) = r1
regs=2 stack=0 before 1640: (69) r1 = *(u16 *)(r10 -48)
regs=0 stack=20 before 1639: (79) r9 = *(u64 *)(r10 -144)
parent already had regs=0 stack=0 marks: R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar() R6_r=ctx(off=0,imm=0) R7=pkt(off=62,r=84,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16_r=????mmmm fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168=
1644: safe

from 1572 to 1639: safe

from 742 to 1636: safe

from 739 to 770: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=pkt(off=71,r=82,imm=0) R2=scalar(umax=127,var_off=(0x0; 0x7f)) R6=ctx(off=0,imm=0) R7=pkt(off=62,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (quic_data + sizeof(struct quic_short_header) > data_end) {
770: (bf) r2 = r7                     ; R2_w=pkt(off=62,r=82,imm=0) R7=pkt(off=62,r=82,imm=0)
771: (07) r2 += 17                    ; R2_w=pkt(off=79,r=82,imm=0)
772: (bf) r7 = r1                     ; R1=pkt(off=71,r=82,imm=0) R7_w=pkt(off=71,r=82,imm=0)
; if (quic_data + sizeof(struct quic_short_header) > data_end) {
773: (2d) if r2 > r8 goto pc+862      ; R2_w=pkt(off=79,r=82,imm=0) R8=pkt_end(off=0,imm=0)
; if (!connId) {
774: (15) if r7 == 0x0 goto pc+861    ; R7_w=pkt(off=71,r=82,imm=0)
; __u8 connIdVersion = (connId[0] >> 6);
775: (71) r1 = *(u8 *)(r7 +0)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=71,r=82,imm=0)
776: (bf) r2 = r1                     ; R1_w=scalar(id=262,umax=255,var_off=(0x0; 0xff)) R2_w=scalar(id=262,umax=255,var_off=(0x0; 0xff))
777: (77) r2 >>= 6                    ; R2=scalar(umax=3,var_off=(0x0; 0x3))
; if (connIdVersion == QUIC_CONNID_VERSION_V1) {
778: (15) if r2 == 0x3 goto pc+798    ; R2=scalar(umax=3,var_off=(0x0; 0x3))
779: (15) if r2 == 0x2 goto pc+809    ; R2=scalar(umax=3,var_off=(0x0; 0x3))
780: (55) if r2 != 0x1 goto pc+855    ; R2=1
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
781: (57) r1 &= 63                    ; R1_w=scalar(umax=63,var_off=(0x0; 0x3f))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
782: (67) r1 <<= 10                   ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
783: (71) r8 = *(u8 *)(r7 +1)         ; R7=pkt(off=71,r=82,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
784: (67) r8 <<= 2                    ; R8_w=scalar(umax=1020,var_off=(0x0; 0x3fc))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
785: (4f) r8 |= r1                    ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00)) R8_w=scalar()
786: (18) r1 = 0x100000000            ; R1_w=4294967296
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
788: (71) r2 = *(u8 *)(r7 +2)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=71,r=82,imm=0)
789: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
790: (05) goto pc+806
frame 1: propagating r0
last_idx 1597 first_idx 778
regs=2 stack=0 before 790: (05) goto pc+806
regs=2 stack=0 before 789: (77) r2 >>= 6
regs=2 stack=0 before 788: (71) r2 = *(u8 *)(r7 +2)
regs=2 stack=0 before 786: (18) r1 = 0x100000000
1597: safe

from 780 to 1636: safe

from 779 to 1589: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=262,umax=255,var_off=(0x0; 0xff)) R2=2 R6=ctx(off=0,imm=0) R7=pkt(off=71,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1589: (71) r1 = *(u8 *)(r7 +1)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=71,r=82,imm=0)
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1590: (67) r1 <<= 16                  ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1591: (71) r8 = *(u8 *)(r7 +2)        ; R7=pkt(off=71,r=82,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1592: (67) r8 <<= 8                   ; R8_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1593: (4f) r8 |= r1                   ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000)) R8_w=scalar()
1594: (18) r1 = 0x200000000           ; R1_w=8589934592
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1596: (71) r2 = *(u8 *)(r7 +3)        ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=71,r=82,imm=0)
1597: (57) r2 &= 255                  ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
1598: (4f) r8 |= r2                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1599: (bf) r2 = r8                    ; R2_w=scalar(id=263) R8_w=scalar(id=263)
1600: (67) r2 <<= 32                  ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
1601: (c7) r2 s>>= 32                 ; R2_w=scalar(smin=-2147483648,smax=2147483647)
1602: (b7) r3 = 1                     ; R3_w=1
; if (qpr.server_id > 0) {
1603: (6d) if r3 s> r2 goto pc+32     ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1604: (77) r1 >>= 32                  ; R1_w=2
; if (cid_version == QUIC_CONNID_VERSION_V1) {
1605: (15) if r1 == 0x3 goto pc+5
last_idx 1605 first_idx 1589
regs=2 stack=0 before 1604: (77) r1 >>= 32
regs=2 stack=0 before 1603: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 1602: (b7) r3 = 1
regs=2 stack=0 before 1601: (c7) r2 s>>= 32
regs=2 stack=0 before 1600: (67) r2 <<= 32
regs=2 stack=0 before 1599: (bf) r2 = r8
regs=2 stack=0 before 1598: (4f) r8 |= r2
regs=2 stack=0 before 1597: (57) r2 &= 255
regs=2 stack=0 before 1596: (71) r2 = *(u8 *)(r7 +3)
regs=2 stack=0 before 1594: (18) r1 = 0x200000000
frame 1: propagating r0
1606: safe

from 1603 to 1636: safe

from 778 to 1577: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=262,umax=255,var_off=(0x0; 0xff)) R2=3 R6=ctx(off=0,imm=0) R7=pkt(off=71,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1577: (71) r1 = *(u8 *)(r7 +1)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=71,r=82,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1578: (67) r1 <<= 24                  ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1579: (71) r8 = *(u8 *)(r7 +2)        ; R7=pkt(off=71,r=82,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1580: (67) r8 <<= 16                  ; R8_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1581: (4f) r8 |= r1                   ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432) R8_w=scalar()
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1582: (71) r1 = *(u8 *)(r7 +3)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=71,r=82,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1583: (67) r1 <<= 8                   ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1584: (4f) r8 |= r1                   ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00)) R8_w=scalar()
1585: (18) r1 = 0x300000000           ; R1_w=12884901888
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1587: (71) r2 = *(u8 *)(r7 +4)        ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=71,r=82,imm=0)
1588: (05) goto pc+8
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1597: (57) r2 &= 255                  ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
1598: (4f) r8 |= r2                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1599: (bf) r2 = r8                    ; R2_w=scalar(id=264) R8_w=scalar(id=264)
1600: (67) r2 <<= 32                  ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
1601: (c7) r2 s>>= 32                 ; R2_w=scalar(smin=-2147483648,smax=2147483647)
1602: (b7) r3 = 1                     ; R3_w=1
; if (qpr.server_id > 0) {
1603: (6d) if r3 s> r2 goto pc+32     ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1604: (77) r1 >>= 32
frame 1: propagating r0
last_idx 1605 first_idx 1577
regs=2 stack=0 before 1604: (77) r1 >>= 32
regs=2 stack=0 before 1603: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 1602: (b7) r3 = 1
regs=2 stack=0 before 1601: (c7) r2 s>>= 32
regs=2 stack=0 before 1600: (67) r2 <<= 32
regs=2 stack=0 before 1599: (bf) r2 = r8
regs=2 stack=0 before 1598: (4f) r8 |= r2
regs=2 stack=0 before 1597: (57) r2 &= 255
regs=2 stack=0 before 1588: (05) goto pc+8
regs=2 stack=0 before 1587: (71) r2 = *(u8 *)(r7 +4)
regs=2 stack=0 before 1585: (18) r1 = 0x300000000
1605: safe

from 1603 to 1636: safe

from 774 to 1636: safe

from 773 to 1636: safe

from 735 to 1636: safe

from 730 to 732: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=34 R2=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
732: (0f) r7 += r1
last_idx 732 first_idx 732
parent didn't have regs=2 stack=0 marks: R0=map_value(off=0,ks=4,vs=104,imm=0) R1_r=P34 R2=0 R6=ctx(off=0,imm=0) R7_r=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
last_idx 730 first_idx 730
regs=2 stack=0 before 730: (15) if r2 == 0x0 goto pc+1
parent didn't have regs=2 stack=0 marks: R0_w=map_value(off=0,ks=4,vs=104,imm=0) R1_rw=P34 R2_rw=scalar(umax=1,var_off=(0x0; 0x1)) R6_r=ctx(off=0,imm=0) R7_r=pkt(off=0,r=82,imm=0) R8_r=pkt_end(off=0,imm=0) R9_rw=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16_r=????mmmm fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=
last_idx 729 first_idx 719
regs=2 stack=0 before 729: (b7) r1 = 34
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
733: (bf) r1 = r7                     ; R1_w=pkt(off=34,r=82,imm=0) R7_w=pkt(off=34,r=82,imm=0)
734: (07) r1 += 9                     ; R1_w=pkt(off=43,r=82,imm=0)
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
735: (2d) if r1 > r8 goto pc+900      ; R1_w=pkt(off=43,r=82,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
736: (71) r2 = *(u8 *)(r7 +8)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=34,r=82,imm=0)
737: (67) r2 <<= 56                   ; R2_w=scalar(smax=9151314442816847872,umax=18374686479671623680,var_off=(0x0; 0xff00000000000000),s32_min=0,s32_max=0,u32_max=0)
738: (c7) r2 s>>= 56                  ; R2_w=scalar(smin=-128,smax=127)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
739: (65) if r2 s> 0xffffffff goto pc+30      ; R2_w=scalar(umin=18446744073709551488,var_off=(0xffffffffffffff80; 0x7f),u32_min=-128)
; if (quic_data + sizeof(struct quic_long_header) > data_end) {
740: (bf) r1 = r7                     ; R1_w=pkt(off=34,r=82,imm=0) R7_w=pkt(off=34,r=82,imm=0)
741: (07) r1 += 22                    ; R1=pkt(off=56,r=82,imm=0)
; if (quic_data + sizeof(struct quic_long_header) > data_end) {
742: (2d) if r1 > r8 goto pc+893      ; R1=pkt(off=56,r=82,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_PACKET_TYPE_MASK) < QUIC_HANDSHAKE) {
743: (57) r2 &= 32                    ; R2_w=scalar(umax=32,var_off=(0x0; 0x20))
; if ((*pkt_type & QUIC_PACKET_TYPE_MASK) < QUIC_HANDSHAKE) {
744: (15) if r2 == 0x0 goto pc+817    ; R2_w=scalar(umax=32,var_off=(0x0; 0x20))
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
745: (71) r1 = *(u8 *)(r7 +13)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=34,r=82,imm=0)
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
746: (07) r7 += 14                    ; R7_w=pkt(off=48,r=82,imm=0)
747: (25) if r1 > 0x7 goto pc+26      ; R1_w=scalar(umax=7,var_off=(0x0; 0x7))
748: (05) goto pc+887
1636: safe

from 747 to 774: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(umin=8,umax=255,var_off=(0x0; 0xff)) R2=scalar(umax=32,var_off=(0x0; 0x20)) R6=ctx(off=0,imm=0) R7=pkt(off=48,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (!connId) {
774: (15) if r7 == 0x0 goto pc+861    ; R7=pkt(off=48,r=82,imm=0)
; __u8 connIdVersion = (connId[0] >> 6);
775: (71) r1 = *(u8 *)(r7 +0)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=48,r=82,imm=0)
776: (bf) r2 = r1                     ; R1_w=scalar(id=265,umax=255,var_off=(0x0; 0xff)) R2_w=scalar(id=265,umax=255,var_off=(0x0; 0xff))
777: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
; if (connIdVersion == QUIC_CONNID_VERSION_V1) {
778: (15) if r2 == 0x3 goto pc+798    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
779: (15) if r2 == 0x2 goto pc+809    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
780: (55) if r2 != 0x1 goto pc+855    ; R2_w=1
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
781: (57) r1 &= 63                    ; R1_w=scalar(umax=63,var_off=(0x0; 0x3f))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
782: (67) r1 <<= 10                   ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
783: (71) r8 = *(u8 *)(r7 +1)         ; R7=pkt(off=48,r=82,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
784: (67) r8 <<= 2                    ; R8_w=scalar(umax=1020,var_off=(0x0; 0x3fc))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
785: (4f) r8 |= r1                    ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00)) R8_w=scalar()
786: (18) r1 = 0x100000000            ; R1_w=4294967296
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
788: (71) r2 = *(u8 *)(r7 +2)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=48,r=82,imm=0)
789: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
790: (05) goto pc+806
frame 1: propagating r0
last_idx 1597 first_idx 774
regs=2 stack=0 before 790: (05) goto pc+806
regs=2 stack=0 before 789: (77) r2 >>= 6
regs=2 stack=0 before 788: (71) r2 = *(u8 *)(r7 +2)
regs=2 stack=0 before 786: (18) r1 = 0x100000000
1597: safe

from 780 to 1636: safe

from 779 to 1589: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=265,umax=255,var_off=(0x0; 0xff)) R2=2 R6=ctx(off=0,imm=0) R7=pkt(off=48,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1589: (71) r1 = *(u8 *)(r7 +1)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=48,r=82,imm=0)
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1590: (67) r1 <<= 16                  ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1591: (71) r8 = *(u8 *)(r7 +2)        ; R7=pkt(off=48,r=82,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1592: (67) r8 <<= 8                   ; R8_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1593: (4f) r8 |= r1                   ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000)) R8_w=scalar()
1594: (18) r1 = 0x200000000           ; R1_w=8589934592
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1596: (71) r2 = *(u8 *)(r7 +3)        ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=48,r=82,imm=0)
1597: (57) r2 &= 255                  ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
1598: (4f) r8 |= r2                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1599: (bf) r2 = r8                    ; R2_w=scalar(id=266) R8_w=scalar(id=266)
1600: (67) r2 <<= 32                  ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
1601: (c7) r2 s>>= 32                 ; R2_w=scalar(smin=-2147483648,smax=2147483647)
1602: (b7) r3 = 1                     ; R3_w=1
; if (qpr.server_id > 0) {
1603: (6d) if r3 s> r2 goto pc+32     ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1604: (77) r1 >>= 32                  ; R1_w=2
; if (cid_version == QUIC_CONNID_VERSION_V1) {
1605: (15) if r1 == 0x3 goto pc+5
last_idx 1605 first_idx 1589
regs=2 stack=0 before 1604: (77) r1 >>= 32
regs=2 stack=0 before 1603: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 1602: (b7) r3 = 1
regs=2 stack=0 before 1601: (c7) r2 s>>= 32
regs=2 stack=0 before 1600: (67) r2 <<= 32
regs=2 stack=0 before 1599: (bf) r2 = r8
regs=2 stack=0 before 1598: (4f) r8 |= r2
regs=2 stack=0 before 1597: (57) r2 &= 255
regs=2 stack=0 before 1596: (71) r2 = *(u8 *)(r7 +3)
regs=2 stack=0 before 1594: (18) r1 = 0x200000000
frame 1: propagating r0
1606: safe

from 1603 to 1636: safe

from 778 to 1577: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=265,umax=255,var_off=(0x0; 0xff)) R2=3 R6=ctx(off=0,imm=0) R7=pkt(off=48,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1577: (71) r1 = *(u8 *)(r7 +1)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=48,r=82,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1578: (67) r1 <<= 24                  ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1579: (71) r8 = *(u8 *)(r7 +2)        ; R7=pkt(off=48,r=82,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1580: (67) r8 <<= 16                  ; R8_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1581: (4f) r8 |= r1                   ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432) R8_w=scalar()
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1582: (71) r1 = *(u8 *)(r7 +3)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=48,r=82,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1583: (67) r1 <<= 8                   ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1584: (4f) r8 |= r1                   ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00)) R8_w=scalar()
1585: (18) r1 = 0x300000000           ; R1_w=12884901888
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1587: (71) r2 = *(u8 *)(r7 +4)        ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=48,r=82,imm=0)
1588: (05) goto pc+8
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1597: (57) r2 &= 255                  ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
1598: (4f) r8 |= r2                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1599: (bf) r2 = r8                    ; R2_w=scalar(id=267) R8_w=scalar(id=267)
1600: (67) r2 <<= 32                  ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
1601: (c7) r2 s>>= 32                 ; R2_w=scalar(smin=-2147483648,smax=2147483647)
1602: (b7) r3 = 1                     ; R3_w=1
; if (qpr.server_id > 0) {
1603: (6d) if r3 s> r2 goto pc+32     ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1604: (77) r1 >>= 32
frame 1: propagating r0
last_idx 1605 first_idx 1577
regs=2 stack=0 before 1604: (77) r1 >>= 32
regs=2 stack=0 before 1603: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 1602: (b7) r3 = 1
regs=2 stack=0 before 1601: (c7) r2 s>>= 32
regs=2 stack=0 before 1600: (67) r2 <<= 32
regs=2 stack=0 before 1599: (bf) r2 = r8
regs=2 stack=0 before 1598: (4f) r8 |= r2
regs=2 stack=0 before 1597: (57) r2 &= 255
regs=2 stack=0 before 1588: (05) goto pc+8
regs=2 stack=0 before 1587: (71) r2 = *(u8 *)(r7 +4)
regs=2 stack=0 before 1585: (18) r1 = 0x300000000
1605: safe

from 1603 to 1636: safe

from 774 to 1636: safe

from 744 to 1562: safe

from 742 to 1636: safe

from 739 to 770: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=pkt(off=43,r=82,imm=0) R2=scalar(umax=127,var_off=(0x0; 0x7f)) R6=ctx(off=0,imm=0) R7=pkt(off=34,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (quic_data + sizeof(struct quic_short_header) > data_end) {
770: (bf) r2 = r7                     ; R2_w=pkt(off=34,r=82,imm=0) R7=pkt(off=34,r=82,imm=0)
771: (07) r2 += 17                    ; R2_w=pkt(off=51,r=82,imm=0)
772: (bf) r7 = r1                     ; R1=pkt(off=43,r=82,imm=0) R7_w=pkt(off=43,r=82,imm=0)
; if (quic_data + sizeof(struct quic_short_header) > data_end) {
773: (2d) if r2 > r8 goto pc+862      ; R2_w=pkt(off=51,r=82,imm=0) R8=pkt_end(off=0,imm=0)
; if (!connId) {
774: (15) if r7 == 0x0 goto pc+861    ; R7_w=pkt(off=43,r=82,imm=0)
; __u8 connIdVersion = (connId[0] >> 6);
775: (71) r1 = *(u8 *)(r7 +0)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=43,r=82,imm=0)
776: (bf) r2 = r1                     ; R1_w=scalar(id=268,umax=255,var_off=(0x0; 0xff)) R2_w=scalar(id=268,umax=255,var_off=(0x0; 0xff))
777: (77) r2 >>= 6                    ; R2=scalar(umax=3,var_off=(0x0; 0x3))
; if (connIdVersion == QUIC_CONNID_VERSION_V1) {
778: (15) if r2 == 0x3 goto pc+798    ; R2=scalar(umax=3,var_off=(0x0; 0x3))
779: (15) if r2 == 0x2 goto pc+809    ; R2=scalar(umax=3,var_off=(0x0; 0x3))
780: (55) if r2 != 0x1 goto pc+855    ; R2=1
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
781: (57) r1 &= 63                    ; R1_w=scalar(umax=63,var_off=(0x0; 0x3f))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
782: (67) r1 <<= 10                   ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
783: (71) r8 = *(u8 *)(r7 +1)         ; R7=pkt(off=43,r=82,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
784: (67) r8 <<= 2                    ; R8_w=scalar(umax=1020,var_off=(0x0; 0x3fc))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
785: (4f) r8 |= r1                    ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00)) R8_w=scalar()
786: (18) r1 = 0x100000000            ; R1_w=4294967296
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
788: (71) r2 = *(u8 *)(r7 +2)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=43,r=82,imm=0)
789: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
790: (05) goto pc+806
frame 1: propagating r0
last_idx 1597 first_idx 778
regs=2 stack=0 before 790: (05) goto pc+806
regs=2 stack=0 before 789: (77) r2 >>= 6
regs=2 stack=0 before 788: (71) r2 = *(u8 *)(r7 +2)
regs=2 stack=0 before 786: (18) r1 = 0x100000000
1597: safe

from 780 to 1636: safe

from 779 to 1589: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=268,umax=255,var_off=(0x0; 0xff)) R2=2 R6=ctx(off=0,imm=0) R7=pkt(off=43,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1589: (71) r1 = *(u8 *)(r7 +1)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=43,r=82,imm=0)
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1590: (67) r1 <<= 16                  ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1591: (71) r8 = *(u8 *)(r7 +2)        ; R7=pkt(off=43,r=82,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1592: (67) r8 <<= 8                   ; R8_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1593: (4f) r8 |= r1                   ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000)) R8_w=scalar()
1594: (18) r1 = 0x200000000           ; R1_w=8589934592
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1596: (71) r2 = *(u8 *)(r7 +3)        ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=43,r=82,imm=0)
1597: (57) r2 &= 255                  ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
1598: (4f) r8 |= r2                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1599: (bf) r2 = r8                    ; R2_w=scalar(id=269) R8_w=scalar(id=269)
1600: (67) r2 <<= 32                  ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
1601: (c7) r2 s>>= 32                 ; R2_w=scalar(smin=-2147483648,smax=2147483647)
1602: (b7) r3 = 1                     ; R3_w=1
; if (qpr.server_id > 0) {
1603: (6d) if r3 s> r2 goto pc+32     ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1604: (77) r1 >>= 32                  ; R1_w=2
; if (cid_version == QUIC_CONNID_VERSION_V1) {
1605: (15) if r1 == 0x3 goto pc+5
last_idx 1605 first_idx 1589
regs=2 stack=0 before 1604: (77) r1 >>= 32
regs=2 stack=0 before 1603: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 1602: (b7) r3 = 1
regs=2 stack=0 before 1601: (c7) r2 s>>= 32
regs=2 stack=0 before 1600: (67) r2 <<= 32
regs=2 stack=0 before 1599: (bf) r2 = r8
regs=2 stack=0 before 1598: (4f) r8 |= r2
regs=2 stack=0 before 1597: (57) r2 &= 255
regs=2 stack=0 before 1596: (71) r2 = *(u8 *)(r7 +3)
regs=2 stack=0 before 1594: (18) r1 = 0x200000000
frame 1: propagating r0
1606: safe

from 1603 to 1636: safe

from 778 to 1577: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=268,umax=255,var_off=(0x0; 0xff)) R2=3 R6=ctx(off=0,imm=0) R7=pkt(off=43,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1577: (71) r1 = *(u8 *)(r7 +1)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=43,r=82,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1578: (67) r1 <<= 24                  ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1579: (71) r8 = *(u8 *)(r7 +2)        ; R7=pkt(off=43,r=82,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1580: (67) r8 <<= 16                  ; R8_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1581: (4f) r8 |= r1                   ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432) R8_w=scalar()
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1582: (71) r1 = *(u8 *)(r7 +3)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=43,r=82,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1583: (67) r1 <<= 8                   ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1584: (4f) r8 |= r1                   ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00)) R8_w=scalar()
1585: (18) r1 = 0x300000000           ; R1_w=12884901888
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1587: (71) r2 = *(u8 *)(r7 +4)        ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=43,r=82,imm=0)
1588: (05) goto pc+8
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1597: (57) r2 &= 255                  ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
1598: (4f) r8 |= r2                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1599: (bf) r2 = r8                    ; R2_w=scalar(id=270) R8_w=scalar(id=270)
1600: (67) r2 <<= 32                  ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
1601: (c7) r2 s>>= 32                 ; R2_w=scalar(smin=-2147483648,smax=2147483647)
1602: (b7) r3 = 1                     ; R3_w=1
; if (qpr.server_id > 0) {
1603: (6d) if r3 s> r2 goto pc+32     ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1604: (77) r1 >>= 32
frame 1: propagating r0
last_idx 1605 first_idx 1577
regs=2 stack=0 before 1604: (77) r1 >>= 32
regs=2 stack=0 before 1603: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 1602: (b7) r3 = 1
regs=2 stack=0 before 1601: (c7) r2 s>>= 32
regs=2 stack=0 before 1600: (67) r2 <<= 32
regs=2 stack=0 before 1599: (bf) r2 = r8
regs=2 stack=0 before 1598: (4f) r8 |= r2
regs=2 stack=0 before 1597: (57) r2 &= 255
regs=2 stack=0 before 1588: (05) goto pc+8
regs=2 stack=0 before 1587: (71) r2 = *(u8 *)(r7 +4)
regs=2 stack=0 before 1585: (18) r1 = 0x300000000
1605: safe

from 1603 to 1636: safe

from 774 to 1636: safe

from 773 to 1636: safe

from 735 to 1636: safe

from 726 to 1857: safe

from 623 to 1640: R0=map_ptr(off=0,ks=40,vs=16,imm=0) R1=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; original_sport = pckt.flow.port16[0];
1640: (69) r1 = *(u16 *)(r10 -48)     ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
1641: (7b) *(u64 *)(r10 -168) = r1    ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-168_w=
1642: (71) r1 = *(u8 *)(r10 -36)      ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
1643: (57) r1 &= 2
frame -168: propagating fp0
last_idx 1644 first_idx 1640
regs=0 stack=100000 before 1643: (57) r1 &= 2
regs=0 stack=100000 before 1642: (71) r1 = *(u8 *)(r10 -36)
regs=0 stack=100000 before 1641: (7b) *(u64 *)(r10 -168) = r1
regs=2 stack=0 before 1640: (69) r1 = *(u16 *)(r10 -48)
parent already had regs=0 stack=0 marks: R0=map_ptr(off=0,ks=40,vs=16,imm=0) R1_w=0 R6_r=ctx(off=0,imm=0) R7=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9_r=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16_r=????mmmm fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_rw=map_ptr fp-160_r=map_value fp-168=
1644: safe

from 591 to 594: R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm fp-120=mmmm???? fp-136= fp-144=map_value fp-160_w=map_value
; vip_num = vip_info->vip_num;
594: (61) r1 = *(u32 *)(r9 +4)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9_w=map_value(off=0,ks=20,vs=8,imm=0)
595: (7b) *(u64 *)(r10 -168) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-168_w=
; vip_num = vip_info->vip_num;
596: (63) *(u32 *)(r10 -108) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-112=mmmmmmmm
; __u32 cpu_num = bpf_get_smp_processor_id();
597: (85) call bpf_get_smp_processor_id#8     ; R0_w=scalar()
; __u32 cpu_num = bpf_get_smp_processor_id();
598: (63) *(u32 *)(r10 -120) = r0     ; R0_w=scalar() R10=fp0 fp-120=mmmmmmmm
599: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; 
600: (07) r2 += -120                  ; R2_w=fp-120
; void* lru_map = bpf_map_lookup_elem(&lru_mapping, &cpu_num);
601: (18) r1 = 0xffffa0376748a000     ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
603: (85) call bpf_map_lookup_elem#1
604: safe

from 583 to 1858: safe

from 574 to 1858: safe

from 568 to 571: R0=map_value(off=0,ks=20,vs=8,imm=0) R1=scalar(umax=136,var_off=(0x0; 0x88)) R6=ctx(off=0,imm=0) R7=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=2 R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm fp-136= fp-144=pkt
; if (data_end - data > MAX_PCKT_SIZE) {
571: (bf) r1 = r8                     ; R1_w=pkt_end(off=0,imm=0) R8=pkt_end(off=0,imm=0)
572: (1f) r1 -= r7                    ; R1_w=scalar() R7=pkt(off=0,r=82,imm=0)
573: (b7) r9 = 1
574: safe

from 565 to 1858: safe

from 556 to 571: safe

from 459 to 462: R0_w=0 R1=6 R2=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3=scalar(id=17,umin=1,umax=255,var_off=(0x1; 0xfe)) R4=P1 R5=pkt(off=62,r=82,imm=0) R6=ctx(off=0,imm=0) R7=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=1 R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm fp-136= fp-144=pkt
; pckt->flags |= F_SYN_SET;
462: (b7) r3 = 1                      ; R3_w=1
; bool is_icmp = !((pckt->flags & F_ICMP) == 0);
463: (15) if r4 == 0x0 goto pc+1      ; R4=P1
464: (b7) r3 = 0
frame 3: propagating r0
last_idx 465 first_idx 456
regs=8 stack=0 before 464: (b7) r3 = 0
frame 4: propagating r0
465: safe

from 456 to 1858: safe

from 445 to 1858: safe

from 443 to 527: R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=17 R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3_w=scalar(umin=1,umax=255,var_off=(0x1; 0xfe)) R4_w=17 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=62,imm=0) R8=pkt_end(off=0,imm=0) R9=1 R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm fp-136= fp-144=pkt
; bool is_icmp = !((pckt->flags & F_ICMP) == 0);
527: (57) r3 &= 1                     ; R3_w=1
528: (b7) r5 = 34                     ; R5_w=34
; if (is_ipv6) {
529: (15) if r3 == 0x0 goto pc+1
last_idx 529 first_idx 677
regs=8 stack=0 before 528: (b7) r5 = 34
regs=8 stack=0 before 527: (57) r3 &= 1
regs=8 stack=0 before 443: (15) if r4 == 0x11 goto pc+83
regs=8 stack=0 before 442: (bf) r4 = r1
regs=8 stack=0 before 441: (63) *(u32 *)(r10 -64) = r2
regs=8 stack=0 before 440: (61) r2 = *(u32 *)(r2 +0)
regs=8 stack=0 before 686: (05) goto pc-247
regs=8 stack=0 before 685: (07) r2 += 54
regs=8 stack=0 before 684: (bf) r2 = r7
regs=8 stack=0 before 683: (63) *(u32 *)(r10 -80) = r2
regs=8 stack=0 before 682: (61) r2 = *(u32 *)(r7 +58)
regs=8 stack=0 before 681: (73) *(u8 *)(r10 -36) = r3
regs=8 stack=0 before 680: (47) r3 |= 1
regs=8 stack=0 before 679: (71) r3 = *(u8 *)(r10 -36)
regs=0 stack=10 before 678: (73) *(u8 *)(r10 -44) = r1
regs=0 stack=10 before 677: (71) r1 = *(u8 *)(r7 +51)
parent already had regs=0 stack=0 marks: R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=5 R4=pkt(off=42,r=62,imm=0) R6_r=ctx(off=0,imm=0) R7_r=pkt(off=0,r=62,imm=0) R8_r=pkt_end(off=0,imm=0) R9=1 R10=fp0 fp-16_r=????mmmm fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96_r=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=????mmmm fp-136_r= fp-144=pkt
530: (b7) r5 = 62                     ; R5=62
; udp = data + off;
531: (bf) r4 = r7                     ; R4_w=pkt(off=0,r=62,imm=0) R7=pkt(off=0,r=62,imm=0)
532: (0f) r4 += r5
last_idx 532 first_idx 531
regs=20 stack=0 before 531: (bf) r4 = r7
parent didn't have regs=20 stack=0 marks: R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=17 R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3_w=P1 R4_w=17 R5_rw=P62 R6=ctx(off=0,imm=0) R7_r=pkt(off=0,r=62,imm=0) R8=pkt_end(off=0,imm=0) R9=1 R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm fp-136= fp-144=pkt
last_idx 530 first_idx 677
regs=20 stack=0 before 530: (b7) r5 = 62
; if (udp + 1 > data_end) {
533: (bf) r5 = r4                     ; R4_w=pkt(off=62,r=62,imm=0) R5_w=pkt(off=62,r=62,imm=0)
534: (07) r5 += 8                     ; R5_w=pkt(off=70,r=62,imm=0)
; if (udp + 1 > data_end) {
535: (2d) if r5 > r8 goto pc+1322     ; R5_w=pkt(off=70,r=70,imm=0) R8=pkt_end(off=0,imm=0)
536: (b7) r5 = 1                      ; R5_w=1
; bool is_icmp = !((pckt->flags & F_ICMP) == 0);
537: (15) if r3 == 0x0 goto pc+1      ; R3=P1
538: (b7) r5 = 0                      ; R5=0
539: (67) r3 <<= 1                    ; R3_w=P2
; 
540: (bf) r0 = r4                     ; R0_w=pkt(off=62,r=70,imm=0) R4=pkt(off=62,r=70,imm=0)
541: (0f) r0 += r3                    ; R0_w=pkt(off=64,r=70,imm=0) R3_w=P2
542: (69) r3 = *(u16 *)(r0 +0)        ; R0_w=pkt(off=64,r=70,imm=0) R3_w=scalar(umax=65535,var_off=(0x0; 0xffff))
543: (6b) *(u16 *)(r10 -48) = r3      ; R3_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-48=
544: (67) r5 <<= 1                    ; R5_w=0
545: (0f) r4 += r5
last_idx 545 first_idx 539
regs=20 stack=0 before 544: (67) r5 <<= 1
regs=20 stack=0 before 543: (6b) *(u16 *)(r10 -48) = r3
regs=20 stack=0 before 542: (69) r3 = *(u16 *)(r0 +0)
regs=20 stack=0 before 541: (0f) r0 += r3
regs=20 stack=0 before 540: (bf) r0 = r4
regs=20 stack=0 before 539: (67) r3 <<= 1
parent didn't have regs=20 stack=0 marks: R0=map_value(off=0,ks=4,vs=16,imm=0) R1=17 R2=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3_r=P1 R4_rw=pkt(off=62,r=70,imm=0) R5_rw=P0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=70,imm=0) R8=pkt_end(off=0,imm=0) R9=1 R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm fp-136= fp-144=pkt
last_idx 538 first_idx 531
regs=20 stack=0 before 538: (b7) r5 = 0
546: (69) r3 = *(u16 *)(r4 +0)        ; R3_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R4_w=pkt(off=62,r=70,imm=0)
; 
547: (6b) *(u16 *)(r10 -46) = r3      ; R3_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-48=mmmmmmmm
; vip.proto = pckt.flow.proto;
548: (73) *(u8 *)(r10 -86) = r1       ; R1=17 R10=fp0 fp-88=????mmmm
; vip.port = pckt.flow.port16[1];
549: (6b) *(u16 *)(r10 -88) = r3      ; R3_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-88=
; vip.vip = pckt.flow.dst;
550: (63) *(u32 *)(r10 -104) = r2     ; R2=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-104=
551: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; 
552: (07) r2 += -104                  ; R2_w=fp-104
; vip_info = bpf_map_lookup_elem(&vip_map, &vip);
553: (18) r1 = 0xffffa03557866800     ; R1_w=map_ptr(off=0,ks=20,vs=8,imm=0)
555: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=272,off=0,ks=20,vs=8,imm=0)
; if (!vip_info) {
556: (55) if r0 != 0x0 goto pc+14     ; R0_w=0
557: (05) goto pc+0
; vip.port = 0;
558: (6a) *(u16 *)(r10 -88) = 0       ; R10=fp0 fp-88=????mmmm
559: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
560: (07) r2 += -104                  ; R2_w=fp-104
; vip_info = bpf_map_lookup_elem(&vip_map, &vip);
561: (18) r1 = 0xffffa03557866800     ; R1_w=map_ptr(off=0,ks=20,vs=8,imm=0)
563: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=273,off=0,ks=20,vs=8,imm=0)
564: (b7) r9 = 2                      ; R9_w=2
; if (!vip_info) {
565: (15) if r0 == 0x0 goto pc+1292   ; R0_w=map_value(off=0,ks=20,vs=8,imm=0)
; if (!(vip_info->flags & F_HASH_DPORT_ONLY) &&
566: (61) r1 = *(u32 *)(r0 +0)        ; R0_w=map_value(off=0,ks=20,vs=8,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (!(vip_info->flags & F_HASH_DPORT_ONLY) &&
567: (57) r1 &= 136                   ; R1=scalar(umax=136,var_off=(0x0; 0x88))
568: (55) if r1 != 0x0 goto pc+2      ; R1=0
569: (05) goto pc+0
; pckt.flow.port16[1] = 0;
570: (6a) *(u16 *)(r10 -46) = 0       ; R10=fp0 fp-48=mmmmmmmm
; if (data_end - data > MAX_PCKT_SIZE) {
571: (bf) r1 = r8                     ; R1_w=pkt_end(off=0,imm=0) R8=pkt_end(off=0,imm=0)
572: (1f) r1 -= r7                    ; R1_w=scalar() R7=pkt(off=0,r=70,imm=0)
573: (b7) r9 = 1                      ; R9_w=1
; if (data_end - data > MAX_PCKT_SIZE) {
574: (65) if r1 s> 0x5ea goto pc+1283         ; R1_w=scalar(smax=1514)
575: (7b) *(u64 *)(r10 -144) = r0     ; R0=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-144_w=map_value
576: (05) goto pc+0
; __u32 stats_key = MAX_VIPS + LRU_CNTRS;
577: (62) *(u32 *)(r10 -116) = 512    ; R10=fp0 fp-120=mmmm????
578: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; 
579: (07) r2 += -116                  ; R2_w=fp-116
; data_stats = bpf_map_lookup_elem(&stats, &stats_key);
580: (18) r1 = 0xffffa03499be8000     ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
582: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=274,off=0,ks=4,vs=16,imm=0)
; if (!data_stats) {
583: (15) if r0 == 0x0 goto pc+1274   ; R0_w=map_value(off=0,ks=4,vs=16,imm=0)
; data_stats->v1 += 1;
584: (79) r1 = *(u64 *)(r0 +0)        ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
585: (07) r1 += 1                     ; R1_w=scalar()
586: (7b) *(u64 *)(r10 -160) = r0     ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R10=fp0 fp-160_w=map_value
587: (7b) *(u64 *)(r0 +0) = r1        ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
588: (79) r9 = *(u64 *)(r10 -144)     ; R9_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
; if ((vip_info->flags & F_HASH_NO_SRC_PORT)) {
589: (61) r1 = *(u32 *)(r9 +0)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9_w=map_value(off=0,ks=20,vs=8,imm=0)
; if ((vip_info->flags & F_HASH_NO_SRC_PORT)) {
590: (57) r1 &= 1                     ; R1=scalar(umax=1,var_off=(0x0; 0x1))
; if ((vip_info->flags & F_HASH_NO_SRC_PORT)) {
591: (15) if r1 == 0x0 goto pc+2      ; R1=scalar(umax=1,var_off=(0x0; 0x1))
592: (05) goto pc+0
; pckt.flow.port16[0] = 0;
593: (6a) *(u16 *)(r10 -48) = 0       ; R10=fp0 fp-48=mmmmmmmm
; vip_num = vip_info->vip_num;
594: (61) r1 = *(u32 *)(r9 +4)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9=map_value(off=0,ks=20,vs=8,imm=0)
595: (7b) *(u64 *)(r10 -168) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-168_w=
; vip_num = vip_info->vip_num;
596: (63) *(u32 *)(r10 -108) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-112=mmmmmmmm
; __u32 cpu_num = bpf_get_smp_processor_id();
597: (85) call bpf_get_smp_processor_id#8     ; R0_w=scalar()
; __u32 cpu_num = bpf_get_smp_processor_id();
598: (63) *(u32 *)(r10 -120) = r0     ; R0_w=scalar() R10=fp0 fp-120=mmmmmmmm
599: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; 
600: (07) r2 += -120                  ; R2_w=fp-120
; void* lru_map = bpf_map_lookup_elem(&lru_mapping, &cpu_num);
601: (18) r1 = 0xffffa0376748a000     ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
603: (85) call bpf_map_lookup_elem#1          ; R0=map_value_or_null(id=275,off=0,ks=4,vs=4,imm=0)
604: (7b) *(u64 *)(r10 -152) = r0     ; R0=map_value_or_null(id=275,off=0,ks=4,vs=4,imm=0) R10=fp0 fp-152_w=map_value_or_null
; if (!lru_map) {
605: (55) if r0 != 0x0 goto pc+15     ; R0=0
606: (05) goto pc+0
; __u32 lru_stats_key = MAX_VIPS + FALLBACK_LRU_CNTR;
607: (62) *(u32 *)(r10 -16) = 515     ; R10=fp0 fp-16=????mmmm
608: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
609: (07) r2 += -16                   ; R2_w=fp-16
; struct lb_stats* lru_stats = bpf_map_lookup_elem(&stats, &lru_stats_key);
610: (18) r1 = 0xffffa03499be8000     ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
612: (85) call bpf_map_lookup_elem#1          ; R0=map_value_or_null(id=276,off=0,ks=4,vs=16,imm=0)
; if (!lru_stats) {
613: (15) if r0 == 0x0 goto pc+1243   ; R0=map_value(off=0,ks=4,vs=16,imm=0)
; lru_stats->v1 += 1;
614: (79) r1 = *(u64 *)(r0 +0)        ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
615: (07) r1 += 1                     ; R1_w=scalar()
616: (7b) *(u64 *)(r0 +0) = r1        ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
617: (18) r1 = 0xffffa03557862800     ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0)
619: (7b) *(u64 *)(r10 -152) = r1     ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0 fp-152_w=map_ptr
620: (79) r9 = *(u64 *)(r10 -144)     ; R9_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
; if ((vip_info->flags & F_QUIC_VIP)) {
621: (61) r1 = *(u32 *)(r9 +0)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9_w=map_value(off=0,ks=20,vs=8,imm=0)
; if ((vip_info->flags & F_QUIC_VIP)) {
622: (57) r1 &= 4                     ; R1_w=scalar(umax=4,var_off=(0x0; 0x4))
; if ((vip_info->flags & F_QUIC_VIP)) {
623: (15) if r1 == 0x0 goto pc+1016   ; R1_w=scalar(umax=4,var_off=(0x0; 0x4))
; bool is_icmp = (pckt.flags & F_ICMP);
624: (71) r1 = *(u8 *)(r10 -36)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; bool is_icmp = (pckt.flags & F_ICMP);
625: (57) r1 &= 1                     ; R1=scalar(umax=1,var_off=(0x0; 0x1))
; if (is_icmp) {
626: (15) if r1 == 0x0 goto pc+91     ; R1=scalar(umax=1,var_off=(0x0; 0x1))
627: (05) goto pc+0
; __u32 stats_key = MAX_VIPS + QUIC_ICMP_STATS;
628: (62) *(u32 *)(r10 -16) = 523     ; R10=fp0 fp-16=????mmmm
629: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
630: (07) r2 += -16                   ; R2_w=fp-16
; struct lb_stats* data_stats = bpf_map_lookup_elem(&stats, &stats_key);
631: (18) r1 = 0xffffa03499be8000     ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
633: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=277,off=0,ks=4,vs=16,imm=0)
; if (!data_stats) {
634: (15) if r0 == 0x0 goto pc+1222   ; R0_w=map_value(off=0,ks=4,vs=16,imm=0)
; data_stats->v1 += 1;
635: (79) r1 = *(u64 *)(r0 +0)        ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
636: (07) r1 += 1                     ; R1_w=scalar()
637: (7b) *(u64 *)(r0 +0) = r1        ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
; (icmp_hdr->code == ICMP_PORT_UNREACH) ||
638: (71) r1 = *(u8 *)(r7 +35)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=70,imm=0)
; (icmp_hdr->code == ICMP_PORT_UNREACH) ||
639: (57) r1 &= 253
640: safe

from 634 to 1857: safe

from 626 to 718: R0=map_value(off=0,ks=4,vs=16,imm=0) R1=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=70,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
718: (05) goto pc+0
; __u32 quic_packets_stats_key = 0;
719: (62) *(u32 *)(r10 -28) = 0       ; R10=fp0 fp-32=mmmm????
720: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
721: (07) r2 += -28                   ; R2_w=fp-28
; bpf_map_lookup_elem(&quic_stats_map, &quic_packets_stats_key);
722: (18) r1 = 0xffffa03587064800     ; R1_w=map_ptr(off=0,ks=4,vs=104,imm=0)
724: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=278,off=0,ks=4,vs=104,imm=0)
725: (bf) r9 = r0                     ; R0_w=map_value_or_null(id=278,off=0,ks=4,vs=104,imm=0) R9_w=map_value_or_null(id=278,off=0,ks=4,vs=104,imm=0)
; if (!quic_packets_stats) {
726: (15) if r9 == 0x0 goto pc+1130   ; R9_w=map_value(off=0,ks=4,vs=104,imm=0)
; bool is_icmp = (pckt->flags & F_ICMP);
727: (71) r2 = *(u8 *)(r10 -36)       ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; bool is_icmp = (pckt->flags & F_ICMP);
728: (57) r2 &= 1                     ; R2_w=scalar(umax=1,var_off=(0x0; 0x1))
729: (b7) r1 = 34                     ; R1=34
; if (is_ipv6) {
730: (15) if r2 == 0x0 goto pc+1      ; R2=scalar(umax=1,var_off=(0x0; 0x1))
731: (b7) r1 = 62                     ; R1_w=62
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
732: (0f) r7 += r1
last_idx 732 first_idx 730
regs=2 stack=0 before 731: (b7) r1 = 62
733: R1_w=P62 R7_w=pkt(off=62,r=70,imm=0)
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
733: (bf) r1 = r7                     ; R1_w=pkt(off=62,r=70,imm=0) R7_w=pkt(off=62,r=70,imm=0)
734: (07) r1 += 9                     ; R1_w=pkt(off=71,r=70,imm=0)
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
735: (2d) if r1 > r8 goto pc+900      ; R1_w=pkt(off=71,r=71,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
736: (71) r2 = *(u8 *)(r7 +8)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=62,r=71,imm=0)
737: (67) r2 <<= 56                   ; R2_w=scalar(smax=9151314442816847872,umax=18374686479671623680,var_off=(0x0; 0xff00000000000000),s32_min=0,s32_max=0,u32_max=0)
738: (c7) r2 s>>= 56                  ; R2=scalar(smin=-128,smax=127)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
739: (65) if r2 s> 0xffffffff goto pc+30      ; R2=scalar(umin=18446744073709551488,var_off=(0xffffffffffffff80; 0x7f),u32_min=-128)
; if (quic_data + sizeof(struct quic_long_header) > data_end) {
740: (bf) r1 = r7                     ; R1_w=pkt(off=62,r=71,imm=0) R7=pkt(off=62,r=71,imm=0)
741: (07) r1 += 22                    ; R1_w=pkt(off=84,r=71,imm=0)
; if (quic_data + sizeof(struct quic_long_header) > data_end) {
742: (2d) if r1 > r8 goto pc+893      ; R1_w=pkt(off=84,r=84,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_PACKET_TYPE_MASK) < QUIC_HANDSHAKE) {
743: (57) r2 &= 32                    ; R2_w=scalar(umax=32,var_off=(0x0; 0x20))
; if ((*pkt_type & QUIC_PACKET_TYPE_MASK) < QUIC_HANDSHAKE) {
744: (15) if r2 == 0x0 goto pc+817    ; R2_w=scalar(umax=32,var_off=(0x0; 0x20))
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
745: (71) r1 = *(u8 *)(r7 +13)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=62,r=84,imm=0)
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
746: (07) r7 += 14
747: safe

from 744 to 1562: safe

from 742 to 1636: safe

from 739 to 770: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=pkt(off=71,r=71,imm=0) R2=scalar(umax=127,var_off=(0x0; 0x7f)) R6=ctx(off=0,imm=0) R7=pkt(off=62,r=71,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (quic_data + sizeof(struct quic_short_header) > data_end) {
770: (bf) r2 = r7                     ; R2_w=pkt(off=62,r=71,imm=0) R7=pkt(off=62,r=71,imm=0)
771: (07) r2 += 17                    ; R2_w=pkt(off=79,r=71,imm=0)
772: (bf) r7 = r1                     ; R1=pkt(off=71,r=71,imm=0) R7_w=pkt(off=71,r=71,imm=0)
; if (quic_data + sizeof(struct quic_short_header) > data_end) {
773: (2d) if r2 > r8 goto pc+862      ; R2_w=pkt(off=79,r=79,imm=0) R8=pkt_end(off=0,imm=0)
; if (!connId) {
774: (15) if r7 == 0x0 goto pc+861    ; R7_w=pkt(off=71,r=79,imm=0)
; __u8 connIdVersion = (connId[0] >> 6);
775: (71) r1 = *(u8 *)(r7 +0)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=71,r=79,imm=0)
776: (bf) r2 = r1                     ; R1_w=scalar(id=279,umax=255,var_off=(0x0; 0xff)) R2_w=scalar(id=279,umax=255,var_off=(0x0; 0xff))
777: (77) r2 >>= 6                    ; R2=scalar(umax=3,var_off=(0x0; 0x3))
; if (connIdVersion == QUIC_CONNID_VERSION_V1) {
778: (15) if r2 == 0x3 goto pc+798    ; R2=scalar(umax=3,var_off=(0x0; 0x3))
779: (15) if r2 == 0x2 goto pc+809    ; R2=scalar(umax=3,var_off=(0x0; 0x3))
780: (55) if r2 != 0x1 goto pc+855    ; R2=1
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
781: (57) r1 &= 63                    ; R1_w=scalar(umax=63,var_off=(0x0; 0x3f))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
782: (67) r1 <<= 10                   ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
783: (71) r8 = *(u8 *)(r7 +1)         ; R7=pkt(off=71,r=79,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
784: (67) r8 <<= 2                    ; R8_w=scalar(umax=1020,var_off=(0x0; 0x3fc))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
785: (4f) r8 |= r1                    ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00)) R8_w=scalar()
786: (18) r1 = 0x100000000            ; R1_w=4294967296
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
788: (71) r2 = *(u8 *)(r7 +2)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=71,r=79,imm=0)
789: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
790: (05) goto pc+806
frame 1: propagating r0
last_idx 1597 first_idx 778
regs=2 stack=0 before 790: (05) goto pc+806
regs=2 stack=0 before 789: (77) r2 >>= 6
regs=2 stack=0 before 788: (71) r2 = *(u8 *)(r7 +2)
regs=2 stack=0 before 786: (18) r1 = 0x100000000
1597: safe

from 780 to 1636: safe

from 779 to 1589: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=279,umax=255,var_off=(0x0; 0xff)) R2=2 R6=ctx(off=0,imm=0) R7=pkt(off=71,r=79,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1589: (71) r1 = *(u8 *)(r7 +1)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=71,r=79,imm=0)
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1590: (67) r1 <<= 16                  ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1591: (71) r8 = *(u8 *)(r7 +2)        ; R7=pkt(off=71,r=79,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1592: (67) r8 <<= 8                   ; R8_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1593: (4f) r8 |= r1                   ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000)) R8_w=scalar()
1594: (18) r1 = 0x200000000           ; R1_w=8589934592
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1596: (71) r2 = *(u8 *)(r7 +3)        ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=71,r=79,imm=0)
1597: (57) r2 &= 255                  ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
1598: (4f) r8 |= r2                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1599: (bf) r2 = r8                    ; R2_w=scalar(id=280) R8_w=scalar(id=280)
1600: (67) r2 <<= 32                  ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
1601: (c7) r2 s>>= 32                 ; R2_w=scalar(smin=-2147483648,smax=2147483647)
1602: (b7) r3 = 1                     ; R3_w=1
; if (qpr.server_id > 0) {
1603: (6d) if r3 s> r2 goto pc+32     ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1604: (77) r1 >>= 32                  ; R1_w=2
; if (cid_version == QUIC_CONNID_VERSION_V1) {
1605: (15) if r1 == 0x3 goto pc+5
last_idx 1605 first_idx 1589
regs=2 stack=0 before 1604: (77) r1 >>= 32
regs=2 stack=0 before 1603: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 1602: (b7) r3 = 1
regs=2 stack=0 before 1601: (c7) r2 s>>= 32
regs=2 stack=0 before 1600: (67) r2 <<= 32
regs=2 stack=0 before 1599: (bf) r2 = r8
regs=2 stack=0 before 1598: (4f) r8 |= r2
regs=2 stack=0 before 1597: (57) r2 &= 255
regs=2 stack=0 before 1596: (71) r2 = *(u8 *)(r7 +3)
regs=2 stack=0 before 1594: (18) r1 = 0x200000000
frame 1: propagating r0
1606: safe

from 1603 to 1636: safe

from 778 to 1577: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=279,umax=255,var_off=(0x0; 0xff)) R2=3 R6=ctx(off=0,imm=0) R7=pkt(off=71,r=79,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1577: (71) r1 = *(u8 *)(r7 +1)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=71,r=79,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1578: (67) r1 <<= 24                  ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1579: (71) r8 = *(u8 *)(r7 +2)        ; R7=pkt(off=71,r=79,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1580: (67) r8 <<= 16                  ; R8_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1581: (4f) r8 |= r1                   ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432) R8_w=scalar()
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1582: (71) r1 = *(u8 *)(r7 +3)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=71,r=79,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1583: (67) r1 <<= 8                   ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1584: (4f) r8 |= r1                   ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00)) R8_w=scalar()
1585: (18) r1 = 0x300000000           ; R1_w=12884901888
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1587: (71) r2 = *(u8 *)(r7 +4)        ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=71,r=79,imm=0)
1588: (05) goto pc+8
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1597: (57) r2 &= 255                  ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
1598: (4f) r8 |= r2                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1599: (bf) r2 = r8                    ; R2_w=scalar(id=281) R8_w=scalar(id=281)
1600: (67) r2 <<= 32                  ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
1601: (c7) r2 s>>= 32                 ; R2_w=scalar(smin=-2147483648,smax=2147483647)
1602: (b7) r3 = 1                     ; R3_w=1
; if (qpr.server_id > 0) {
1603: (6d) if r3 s> r2 goto pc+32     ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1604: (77) r1 >>= 32
frame 1: propagating r0
last_idx 1605 first_idx 1577
regs=2 stack=0 before 1604: (77) r1 >>= 32
regs=2 stack=0 before 1603: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 1602: (b7) r3 = 1
regs=2 stack=0 before 1601: (c7) r2 s>>= 32
regs=2 stack=0 before 1600: (67) r2 <<= 32
regs=2 stack=0 before 1599: (bf) r2 = r8
regs=2 stack=0 before 1598: (4f) r8 |= r2
regs=2 stack=0 before 1597: (57) r2 &= 255
regs=2 stack=0 before 1588: (05) goto pc+8
regs=2 stack=0 before 1587: (71) r2 = *(u8 *)(r7 +4)
regs=2 stack=0 before 1585: (18) r1 = 0x300000000
1605: safe

from 1603 to 1636: safe

from 774 to 1636: safe

from 773 to 1636: safe

from 735 to 1636: safe

from 730 to 732: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=34 R2=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=70,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
732: (0f) r7 += r1
last_idx 732 first_idx 732
parent didn't have regs=2 stack=0 marks: R0=map_value(off=0,ks=4,vs=104,imm=0) R1_r=P34 R2=0 R6=ctx(off=0,imm=0) R7_r=pkt(off=0,r=70,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
last_idx 730 first_idx 730
regs=2 stack=0 before 730: (15) if r2 == 0x0 goto pc+1
parent didn't have regs=2 stack=0 marks: R0_w=map_value(off=0,ks=4,vs=104,imm=0) R1_rw=P34 R2_rw=scalar(umax=1,var_off=(0x0; 0x1)) R6_r=ctx(off=0,imm=0) R7_r=pkt(off=0,r=70,imm=0) R8_r=pkt_end(off=0,imm=0) R9_rw=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16_r=????mmmm fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=
last_idx 729 first_idx 718
regs=2 stack=0 before 729: (b7) r1 = 34
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
733: (bf) r1 = r7                     ; R1_w=pkt(off=34,r=70,imm=0) R7_w=pkt(off=34,r=70,imm=0)
734: (07) r1 += 9                     ; R1_w=pkt(off=43,r=70,imm=0)
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
735: (2d) if r1 > r8 goto pc+900      ; R1_w=pkt(off=43,r=70,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
736: (71) r2 = *(u8 *)(r7 +8)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=34,r=70,imm=0)
737: (67) r2 <<= 56                   ; R2_w=scalar(smax=9151314442816847872,umax=18374686479671623680,var_off=(0x0; 0xff00000000000000),s32_min=0,s32_max=0,u32_max=0)
738: (c7) r2 s>>= 56                  ; R2_w=scalar(smin=-128,smax=127)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
739: (65) if r2 s> 0xffffffff goto pc+30      ; R2_w=scalar(umin=18446744073709551488,var_off=(0xffffffffffffff80; 0x7f),u32_min=-128)
; if (quic_data + sizeof(struct quic_long_header) > data_end) {
740: (bf) r1 = r7                     ; R1_w=pkt(off=34,r=70,imm=0) R7_w=pkt(off=34,r=70,imm=0)
741: (07) r1 += 22                    ; R1=pkt(off=56,r=70,imm=0)
; if (quic_data + sizeof(struct quic_long_header) > data_end) {
742: (2d) if r1 > r8 goto pc+893      ; R1=pkt(off=56,r=70,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_PACKET_TYPE_MASK) < QUIC_HANDSHAKE) {
743: (57) r2 &= 32                    ; R2_w=scalar(umax=32,var_off=(0x0; 0x20))
; if ((*pkt_type & QUIC_PACKET_TYPE_MASK) < QUIC_HANDSHAKE) {
744: (15) if r2 == 0x0 goto pc+817    ; R2_w=scalar(umax=32,var_off=(0x0; 0x20))
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
745: (71) r1 = *(u8 *)(r7 +13)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=34,r=70,imm=0)
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
746: (07) r7 += 14                    ; R7_w=pkt(off=48,r=70,imm=0)
747: (25) if r1 > 0x7 goto pc+26      ; R1_w=scalar(umax=7,var_off=(0x0; 0x7))
748: (05) goto pc+887
1636: safe

from 747 to 774: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(umin=8,umax=255,var_off=(0x0; 0xff)) R2=scalar(umax=32,var_off=(0x0; 0x20)) R6=ctx(off=0,imm=0) R7=pkt(off=48,r=70,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (!connId) {
774: (15) if r7 == 0x0 goto pc+861    ; R7=pkt(off=48,r=70,imm=0)
; __u8 connIdVersion = (connId[0] >> 6);
775: (71) r1 = *(u8 *)(r7 +0)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=48,r=70,imm=0)
776: (bf) r2 = r1                     ; R1_w=scalar(id=282,umax=255,var_off=(0x0; 0xff)) R2_w=scalar(id=282,umax=255,var_off=(0x0; 0xff))
777: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
; if (connIdVersion == QUIC_CONNID_VERSION_V1) {
778: (15) if r2 == 0x3 goto pc+798    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
779: (15) if r2 == 0x2 goto pc+809    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
780: (55) if r2 != 0x1 goto pc+855    ; R2_w=1
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
781: (57) r1 &= 63                    ; R1_w=scalar(umax=63,var_off=(0x0; 0x3f))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
782: (67) r1 <<= 10                   ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
783: (71) r8 = *(u8 *)(r7 +1)         ; R7=pkt(off=48,r=70,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
784: (67) r8 <<= 2                    ; R8_w=scalar(umax=1020,var_off=(0x0; 0x3fc))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
785: (4f) r8 |= r1                    ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00)) R8_w=scalar()
786: (18) r1 = 0x100000000            ; R1_w=4294967296
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
788: (71) r2 = *(u8 *)(r7 +2)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=48,r=70,imm=0)
789: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
790: (05) goto pc+806
frame 1: propagating r0
last_idx 1597 first_idx 774
regs=2 stack=0 before 790: (05) goto pc+806
regs=2 stack=0 before 789: (77) r2 >>= 6
regs=2 stack=0 before 788: (71) r2 = *(u8 *)(r7 +2)
regs=2 stack=0 before 786: (18) r1 = 0x100000000
1597: safe

from 780 to 1636: safe

from 779 to 1589: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=282,umax=255,var_off=(0x0; 0xff)) R2=2 R6=ctx(off=0,imm=0) R7=pkt(off=48,r=70,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1589: (71) r1 = *(u8 *)(r7 +1)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=48,r=70,imm=0)
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1590: (67) r1 <<= 16                  ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1591: (71) r8 = *(u8 *)(r7 +2)        ; R7=pkt(off=48,r=70,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1592: (67) r8 <<= 8                   ; R8_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1593: (4f) r8 |= r1                   ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000)) R8_w=scalar()
1594: (18) r1 = 0x200000000           ; R1_w=8589934592
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1596: (71) r2 = *(u8 *)(r7 +3)        ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=48,r=70,imm=0)
1597: (57) r2 &= 255                  ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
1598: (4f) r8 |= r2                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1599: (bf) r2 = r8                    ; R2_w=scalar(id=283) R8_w=scalar(id=283)
1600: (67) r2 <<= 32                  ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
1601: (c7) r2 s>>= 32                 ; R2_w=scalar(smin=-2147483648,smax=2147483647)
1602: (b7) r3 = 1                     ; R3_w=1
; if (qpr.server_id > 0) {
1603: (6d) if r3 s> r2 goto pc+32     ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1604: (77) r1 >>= 32                  ; R1_w=2
; if (cid_version == QUIC_CONNID_VERSION_V1) {
1605: (15) if r1 == 0x3 goto pc+5
last_idx 1605 first_idx 1589
regs=2 stack=0 before 1604: (77) r1 >>= 32
regs=2 stack=0 before 1603: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 1602: (b7) r3 = 1
regs=2 stack=0 before 1601: (c7) r2 s>>= 32
regs=2 stack=0 before 1600: (67) r2 <<= 32
regs=2 stack=0 before 1599: (bf) r2 = r8
regs=2 stack=0 before 1598: (4f) r8 |= r2
regs=2 stack=0 before 1597: (57) r2 &= 255
regs=2 stack=0 before 1596: (71) r2 = *(u8 *)(r7 +3)
regs=2 stack=0 before 1594: (18) r1 = 0x200000000
frame 1: propagating r0
1606: safe

from 1603 to 1636: safe

from 778 to 1577: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=282,umax=255,var_off=(0x0; 0xff)) R2=3 R6=ctx(off=0,imm=0) R7=pkt(off=48,r=70,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1577: (71) r1 = *(u8 *)(r7 +1)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=48,r=70,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1578: (67) r1 <<= 24                  ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1579: (71) r8 = *(u8 *)(r7 +2)        ; R7=pkt(off=48,r=70,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1580: (67) r8 <<= 16                  ; R8_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1581: (4f) r8 |= r1                   ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432) R8_w=scalar()
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1582: (71) r1 = *(u8 *)(r7 +3)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=48,r=70,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1583: (67) r1 <<= 8                   ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1584: (4f) r8 |= r1                   ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00)) R8_w=scalar()
1585: (18) r1 = 0x300000000           ; R1_w=12884901888
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1587: (71) r2 = *(u8 *)(r7 +4)        ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=48,r=70,imm=0)
1588: (05) goto pc+8
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1597: (57) r2 &= 255                  ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
1598: (4f) r8 |= r2                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1599: (bf) r2 = r8                    ; R2_w=scalar(id=284) R8_w=scalar(id=284)
1600: (67) r2 <<= 32                  ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
1601: (c7) r2 s>>= 32                 ; R2_w=scalar(smin=-2147483648,smax=2147483647)
1602: (b7) r3 = 1                     ; R3_w=1
; if (qpr.server_id > 0) {
1603: (6d) if r3 s> r2 goto pc+32     ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1604: (77) r1 >>= 32
frame 1: propagating r0
last_idx 1605 first_idx 1577
regs=2 stack=0 before 1604: (77) r1 >>= 32
regs=2 stack=0 before 1603: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 1602: (b7) r3 = 1
regs=2 stack=0 before 1601: (c7) r2 s>>= 32
regs=2 stack=0 before 1600: (67) r2 <<= 32
regs=2 stack=0 before 1599: (bf) r2 = r8
regs=2 stack=0 before 1598: (4f) r8 |= r2
regs=2 stack=0 before 1597: (57) r2 &= 255
regs=2 stack=0 before 1588: (05) goto pc+8
regs=2 stack=0 before 1587: (71) r2 = *(u8 *)(r7 +4)
regs=2 stack=0 before 1585: (18) r1 = 0x300000000
1605: safe

from 1603 to 1636: safe

from 774 to 1636: safe

from 744 to 1562: safe

from 742 to 1636: safe

from 739 to 770: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=pkt(off=43,r=70,imm=0) R2=scalar(umax=127,var_off=(0x0; 0x7f)) R6=ctx(off=0,imm=0) R7=pkt(off=34,r=70,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (quic_data + sizeof(struct quic_short_header) > data_end) {
770: (bf) r2 = r7                     ; R2_w=pkt(off=34,r=70,imm=0) R7=pkt(off=34,r=70,imm=0)
771: (07) r2 += 17                    ; R2_w=pkt(off=51,r=70,imm=0)
772: (bf) r7 = r1                     ; R1=pkt(off=43,r=70,imm=0) R7_w=pkt(off=43,r=70,imm=0)
; if (quic_data + sizeof(struct quic_short_header) > data_end) {
773: (2d) if r2 > r8 goto pc+862      ; R2_w=pkt(off=51,r=70,imm=0) R8=pkt_end(off=0,imm=0)
; if (!connId) {
774: (15) if r7 == 0x0 goto pc+861    ; R7_w=pkt(off=43,r=70,imm=0)
; __u8 connIdVersion = (connId[0] >> 6);
775: (71) r1 = *(u8 *)(r7 +0)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=43,r=70,imm=0)
776: (bf) r2 = r1                     ; R1_w=scalar(id=285,umax=255,var_off=(0x0; 0xff)) R2_w=scalar(id=285,umax=255,var_off=(0x0; 0xff))
777: (77) r2 >>= 6                    ; R2=scalar(umax=3,var_off=(0x0; 0x3))
; if (connIdVersion == QUIC_CONNID_VERSION_V1) {
778: (15) if r2 == 0x3 goto pc+798    ; R2=scalar(umax=3,var_off=(0x0; 0x3))
779: (15) if r2 == 0x2 goto pc+809    ; R2=scalar(umax=3,var_off=(0x0; 0x3))
780: (55) if r2 != 0x1 goto pc+855    ; R2=1
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
781: (57) r1 &= 63                    ; R1_w=scalar(umax=63,var_off=(0x0; 0x3f))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
782: (67) r1 <<= 10                   ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
783: (71) r8 = *(u8 *)(r7 +1)         ; R7=pkt(off=43,r=70,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
784: (67) r8 <<= 2                    ; R8_w=scalar(umax=1020,var_off=(0x0; 0x3fc))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
785: (4f) r8 |= r1                    ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00)) R8_w=scalar()
786: (18) r1 = 0x100000000            ; R1_w=4294967296
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
788: (71) r2 = *(u8 *)(r7 +2)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=43,r=70,imm=0)
789: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
790: (05) goto pc+806
frame 1: propagating r0
last_idx 1597 first_idx 778
regs=2 stack=0 before 790: (05) goto pc+806
regs=2 stack=0 before 789: (77) r2 >>= 6
regs=2 stack=0 before 788: (71) r2 = *(u8 *)(r7 +2)
regs=2 stack=0 before 786: (18) r1 = 0x100000000
1597: safe

from 780 to 1636: safe

from 779 to 1589: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=285,umax=255,var_off=(0x0; 0xff)) R2=2 R6=ctx(off=0,imm=0) R7=pkt(off=43,r=70,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1589: (71) r1 = *(u8 *)(r7 +1)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=43,r=70,imm=0)
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1590: (67) r1 <<= 16                  ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1591: (71) r8 = *(u8 *)(r7 +2)        ; R7=pkt(off=43,r=70,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1592: (67) r8 <<= 8                   ; R8_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1593: (4f) r8 |= r1                   ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000)) R8_w=scalar()
1594: (18) r1 = 0x200000000           ; R1_w=8589934592
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1596: (71) r2 = *(u8 *)(r7 +3)        ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=43,r=70,imm=0)
1597: (57) r2 &= 255                  ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
1598: (4f) r8 |= r2                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1599: (bf) r2 = r8                    ; R2_w=scalar(id=286) R8_w=scalar(id=286)
1600: (67) r2 <<= 32                  ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
1601: (c7) r2 s>>= 32                 ; R2_w=scalar(smin=-2147483648,smax=2147483647)
1602: (b7) r3 = 1                     ; R3_w=1
; if (qpr.server_id > 0) {
1603: (6d) if r3 s> r2 goto pc+32     ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1604: (77) r1 >>= 32                  ; R1_w=2
; if (cid_version == QUIC_CONNID_VERSION_V1) {
1605: (15) if r1 == 0x3 goto pc+5
last_idx 1605 first_idx 1589
regs=2 stack=0 before 1604: (77) r1 >>= 32
regs=2 stack=0 before 1603: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 1602: (b7) r3 = 1
regs=2 stack=0 before 1601: (c7) r2 s>>= 32
regs=2 stack=0 before 1600: (67) r2 <<= 32
regs=2 stack=0 before 1599: (bf) r2 = r8
regs=2 stack=0 before 1598: (4f) r8 |= r2
regs=2 stack=0 before 1597: (57) r2 &= 255
regs=2 stack=0 before 1596: (71) r2 = *(u8 *)(r7 +3)
regs=2 stack=0 before 1594: (18) r1 = 0x200000000
frame 1: propagating r0
1606: safe

from 1603 to 1636: safe

from 778 to 1577: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=285,umax=255,var_off=(0x0; 0xff)) R2=3 R6=ctx(off=0,imm=0) R7=pkt(off=43,r=70,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1577: (71) r1 = *(u8 *)(r7 +1)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=43,r=70,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1578: (67) r1 <<= 24                  ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1579: (71) r8 = *(u8 *)(r7 +2)        ; R7=pkt(off=43,r=70,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1580: (67) r8 <<= 16                  ; R8_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1581: (4f) r8 |= r1                   ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432) R8_w=scalar()
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1582: (71) r1 = *(u8 *)(r7 +3)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=43,r=70,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1583: (67) r1 <<= 8                   ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1584: (4f) r8 |= r1                   ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00)) R8_w=scalar()
1585: (18) r1 = 0x300000000           ; R1_w=12884901888
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1587: (71) r2 = *(u8 *)(r7 +4)        ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=43,r=70,imm=0)
1588: (05) goto pc+8
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1597: (57) r2 &= 255                  ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
1598: (4f) r8 |= r2                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1599: (bf) r2 = r8                    ; R2_w=scalar(id=287) R8_w=scalar(id=287)
1600: (67) r2 <<= 32                  ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
1601: (c7) r2 s>>= 32                 ; R2_w=scalar(smin=-2147483648,smax=2147483647)
1602: (b7) r3 = 1                     ; R3_w=1
; if (qpr.server_id > 0) {
1603: (6d) if r3 s> r2 goto pc+32     ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1604: (77) r1 >>= 32
frame 1: propagating r0
last_idx 1605 first_idx 1577
regs=2 stack=0 before 1604: (77) r1 >>= 32
regs=2 stack=0 before 1603: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 1602: (b7) r3 = 1
regs=2 stack=0 before 1601: (c7) r2 s>>= 32
regs=2 stack=0 before 1600: (67) r2 <<= 32
regs=2 stack=0 before 1599: (bf) r2 = r8
regs=2 stack=0 before 1598: (4f) r8 |= r2
regs=2 stack=0 before 1597: (57) r2 &= 255
regs=2 stack=0 before 1588: (05) goto pc+8
regs=2 stack=0 before 1587: (71) r2 = *(u8 *)(r7 +4)
regs=2 stack=0 before 1585: (18) r1 = 0x300000000
1605: safe

from 1603 to 1636: safe

from 774 to 1636: safe

from 773 to 1636: safe

from 735 to 1636: safe

from 726 to 1857: safe

from 623 to 1640: safe

from 613 to 1857: safe

from 605 to 621: R0=map_ptr(off=0,ks=40,vs=16,imm=0) R6=ctx(off=0,imm=0) R7=pkt(off=0,r=70,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if ((vip_info->flags & F_QUIC_VIP)) {
621: (61) r1 = *(u32 *)(r9 +0)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9=map_value(off=0,ks=20,vs=8,imm=0)
; if ((vip_info->flags & F_QUIC_VIP)) {
622: (57) r1 &= 4                     ; R1_w=scalar(umax=4,var_off=(0x0; 0x4))
; if ((vip_info->flags & F_QUIC_VIP)) {
623: (15) if r1 == 0x0 goto pc+1016   ; R1_w=scalar(umax=4,var_off=(0x0; 0x4))
; bool is_icmp = (pckt.flags & F_ICMP);
624: (71) r1 = *(u8 *)(r10 -36)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; bool is_icmp = (pckt.flags & F_ICMP);
625: (57) r1 &= 1                     ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
; if (is_icmp) {
626: (15) if r1 == 0x0 goto pc+91     ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
627: (05) goto pc+0
; __u32 stats_key = MAX_VIPS + QUIC_ICMP_STATS;
628: (62) *(u32 *)(r10 -16) = 523     ; R10=fp0 fp-16=????mmmm
629: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
630: (07) r2 += -16                   ; R2_w=fp-16
; struct lb_stats* data_stats = bpf_map_lookup_elem(&stats, &stats_key);
631: (18) r1 = 0xffffa03499be8000     ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
633: (85) call bpf_map_lookup_elem#1          ; R0=map_value_or_null(id=288,off=0,ks=4,vs=16,imm=0)
; if (!data_stats) {
634: (15) if r0 == 0x0 goto pc+1222   ; R0=map_value(off=0,ks=4,vs=16,imm=0)
; data_stats->v1 += 1;
635: (79) r1 = *(u64 *)(r0 +0)        ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
636: (07) r1 += 1                     ; R1_w=scalar()
637: (7b) *(u64 *)(r0 +0) = r1        ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
; (icmp_hdr->code == ICMP_PORT_UNREACH) ||
638: (71) r1 = *(u8 *)(r7 +35)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=70,imm=0)
; (icmp_hdr->code == ICMP_PORT_UNREACH) ||
639: (57) r1 &= 253
640: safe

from 634 to 1857: safe

from 626 to 718: R0=map_ptr(off=0,ks=40,vs=16,imm=0) R1_w=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=70,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
718: (05) goto pc+0
; __u32 quic_packets_stats_key = 0;
719: (62) *(u32 *)(r10 -28) = 0       ; R10=fp0 fp-32=mmmm????
720: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
721: (07) r2 += -28                   ; R2_w=fp-28
; bpf_map_lookup_elem(&quic_stats_map, &quic_packets_stats_key);
722: (18) r1 = 0xffffa03587064800     ; R1_w=map_ptr(off=0,ks=4,vs=104,imm=0)
724: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=289,off=0,ks=4,vs=104,imm=0)
725: (bf) r9 = r0                     ; R0_w=map_value_or_null(id=289,off=0,ks=4,vs=104,imm=0) R9_w=map_value_or_null(id=289,off=0,ks=4,vs=104,imm=0)
; if (!quic_packets_stats) {
726: (15) if r9 == 0x0 goto pc+1130   ; R9_w=map_value(off=0,ks=4,vs=104,imm=0)
; bool is_icmp = (pckt->flags & F_ICMP);
727: (71) r2 = *(u8 *)(r10 -36)       ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; bool is_icmp = (pckt->flags & F_ICMP);
728: (57) r2 &= 1                     ; R2_w=scalar(umax=1,var_off=(0x0; 0x1))
729: (b7) r1 = 34                     ; R1=34
; if (is_ipv6) {
730: (15) if r2 == 0x0 goto pc+1      ; R2=scalar(umax=1,var_off=(0x0; 0x1))
731: (b7) r1 = 62                     ; R1_w=62
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
732: (0f) r7 += r1
last_idx 732 first_idx 730
regs=2 stack=0 before 731: (b7) r1 = 62
733: R1_w=P62 R7_w=pkt(off=62,r=70,imm=0)
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
733: (bf) r1 = r7                     ; R1_w=pkt(off=62,r=70,imm=0) R7_w=pkt(off=62,r=70,imm=0)
734: (07) r1 += 9                     ; R1_w=pkt(off=71,r=70,imm=0)
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
735: (2d) if r1 > r8 goto pc+900      ; R1_w=pkt(off=71,r=71,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
736: (71) r2 = *(u8 *)(r7 +8)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=62,r=71,imm=0)
737: (67) r2 <<= 56                   ; R2_w=scalar(smax=9151314442816847872,umax=18374686479671623680,var_off=(0x0; 0xff00000000000000),s32_min=0,s32_max=0,u32_max=0)
738: (c7) r2 s>>= 56                  ; R2=scalar(smin=-128,smax=127)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
739: (65) if r2 s> 0xffffffff goto pc+30      ; R2=scalar(umin=18446744073709551488,var_off=(0xffffffffffffff80; 0x7f),u32_min=-128)
; if (quic_data + sizeof(struct quic_long_header) > data_end) {
740: (bf) r1 = r7                     ; R1_w=pkt(off=62,r=71,imm=0) R7=pkt(off=62,r=71,imm=0)
741: (07) r1 += 22                    ; R1_w=pkt(off=84,r=71,imm=0)
; if (quic_data + sizeof(struct quic_long_header) > data_end) {
742: (2d) if r1 > r8 goto pc+893      ; R1_w=pkt(off=84,r=84,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_PACKET_TYPE_MASK) < QUIC_HANDSHAKE) {
743: (57) r2 &= 32                    ; R2_w=scalar(umax=32,var_off=(0x0; 0x20))
; if ((*pkt_type & QUIC_PACKET_TYPE_MASK) < QUIC_HANDSHAKE) {
744: (15) if r2 == 0x0 goto pc+817    ; R2_w=scalar(umax=32,var_off=(0x0; 0x20))
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
745: (71) r1 = *(u8 *)(r7 +13)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=62,r=84,imm=0)
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
746: (07) r7 += 14
747: safe

from 744 to 1562: safe

from 742 to 1636: safe

from 739 to 770: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=pkt(off=71,r=71,imm=0) R2=scalar(umax=127,var_off=(0x0; 0x7f)) R6=ctx(off=0,imm=0) R7=pkt(off=62,r=71,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (quic_data + sizeof(struct quic_short_header) > data_end) {
770: (bf) r2 = r7                     ; R2_w=pkt(off=62,r=71,imm=0) R7=pkt(off=62,r=71,imm=0)
771: (07) r2 += 17                    ; R2_w=pkt(off=79,r=71,imm=0)
772: (bf) r7 = r1                     ; R1=pkt(off=71,r=71,imm=0) R7_w=pkt(off=71,r=71,imm=0)
; if (quic_data + sizeof(struct quic_short_header) > data_end) {
773: (2d) if r2 > r8 goto pc+862      ; R2_w=pkt(off=79,r=79,imm=0) R8=pkt_end(off=0,imm=0)
; if (!connId) {
774: (15) if r7 == 0x0 goto pc+861    ; R7_w=pkt(off=71,r=79,imm=0)
; __u8 connIdVersion = (connId[0] >> 6);
775: (71) r1 = *(u8 *)(r7 +0)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=71,r=79,imm=0)
776: (bf) r2 = r1                     ; R1_w=scalar(id=290,umax=255,var_off=(0x0; 0xff)) R2_w=scalar(id=290,umax=255,var_off=(0x0; 0xff))
777: (77) r2 >>= 6                    ; R2=scalar(umax=3,var_off=(0x0; 0x3))
; if (connIdVersion == QUIC_CONNID_VERSION_V1) {
778: (15) if r2 == 0x3 goto pc+798    ; R2=scalar(umax=3,var_off=(0x0; 0x3))
779: (15) if r2 == 0x2 goto pc+809    ; R2=scalar(umax=3,var_off=(0x0; 0x3))
780: (55) if r2 != 0x1 goto pc+855    ; R2=1
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
781: (57) r1 &= 63                    ; R1_w=scalar(umax=63,var_off=(0x0; 0x3f))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
782: (67) r1 <<= 10                   ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
783: (71) r8 = *(u8 *)(r7 +1)         ; R7=pkt(off=71,r=79,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
784: (67) r8 <<= 2                    ; R8_w=scalar(umax=1020,var_off=(0x0; 0x3fc))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
785: (4f) r8 |= r1                    ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00)) R8_w=scalar()
786: (18) r1 = 0x100000000            ; R1_w=4294967296
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
788: (71) r2 = *(u8 *)(r7 +2)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=71,r=79,imm=0)
789: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
790: (05) goto pc+806
frame 1: propagating r0
last_idx 1597 first_idx 778
regs=2 stack=0 before 790: (05) goto pc+806
regs=2 stack=0 before 789: (77) r2 >>= 6
regs=2 stack=0 before 788: (71) r2 = *(u8 *)(r7 +2)
regs=2 stack=0 before 786: (18) r1 = 0x100000000
1597: safe

from 780 to 1636: safe

from 779 to 1589: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=290,umax=255,var_off=(0x0; 0xff)) R2=2 R6=ctx(off=0,imm=0) R7=pkt(off=71,r=79,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1589: (71) r1 = *(u8 *)(r7 +1)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=71,r=79,imm=0)
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1590: (67) r1 <<= 16                  ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1591: (71) r8 = *(u8 *)(r7 +2)        ; R7=pkt(off=71,r=79,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1592: (67) r8 <<= 8                   ; R8_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1593: (4f) r8 |= r1                   ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000)) R8_w=scalar()
1594: (18) r1 = 0x200000000           ; R1_w=8589934592
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1596: (71) r2 = *(u8 *)(r7 +3)        ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=71,r=79,imm=0)
1597: (57) r2 &= 255                  ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
1598: (4f) r8 |= r2                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1599: (bf) r2 = r8                    ; R2_w=scalar(id=291) R8_w=scalar(id=291)
1600: (67) r2 <<= 32                  ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
1601: (c7) r2 s>>= 32                 ; R2_w=scalar(smin=-2147483648,smax=2147483647)
1602: (b7) r3 = 1                     ; R3_w=1
; if (qpr.server_id > 0) {
1603: (6d) if r3 s> r2 goto pc+32     ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1604: (77) r1 >>= 32                  ; R1_w=2
; if (cid_version == QUIC_CONNID_VERSION_V1) {
1605: (15) if r1 == 0x3 goto pc+5
last_idx 1605 first_idx 1589
regs=2 stack=0 before 1604: (77) r1 >>= 32
regs=2 stack=0 before 1603: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 1602: (b7) r3 = 1
regs=2 stack=0 before 1601: (c7) r2 s>>= 32
regs=2 stack=0 before 1600: (67) r2 <<= 32
regs=2 stack=0 before 1599: (bf) r2 = r8
regs=2 stack=0 before 1598: (4f) r8 |= r2
regs=2 stack=0 before 1597: (57) r2 &= 255
regs=2 stack=0 before 1596: (71) r2 = *(u8 *)(r7 +3)
regs=2 stack=0 before 1594: (18) r1 = 0x200000000
frame 1: propagating r0
1606: safe

from 1603 to 1636: safe

from 778 to 1577: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=290,umax=255,var_off=(0x0; 0xff)) R2=3 R6=ctx(off=0,imm=0) R7=pkt(off=71,r=79,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1577: (71) r1 = *(u8 *)(r7 +1)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=71,r=79,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1578: (67) r1 <<= 24                  ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1579: (71) r8 = *(u8 *)(r7 +2)        ; R7=pkt(off=71,r=79,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1580: (67) r8 <<= 16                  ; R8_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1581: (4f) r8 |= r1                   ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432) R8_w=scalar()
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1582: (71) r1 = *(u8 *)(r7 +3)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=71,r=79,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1583: (67) r1 <<= 8                   ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1584: (4f) r8 |= r1                   ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00)) R8_w=scalar()
1585: (18) r1 = 0x300000000           ; R1_w=12884901888
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1587: (71) r2 = *(u8 *)(r7 +4)        ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=71,r=79,imm=0)
1588: (05) goto pc+8
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1597: (57) r2 &= 255                  ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
1598: (4f) r8 |= r2                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1599: (bf) r2 = r8                    ; R2_w=scalar(id=292) R8_w=scalar(id=292)
1600: (67) r2 <<= 32                  ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
1601: (c7) r2 s>>= 32                 ; R2_w=scalar(smin=-2147483648,smax=2147483647)
1602: (b7) r3 = 1                     ; R3_w=1
; if (qpr.server_id > 0) {
1603: (6d) if r3 s> r2 goto pc+32     ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1604: (77) r1 >>= 32
frame 1: propagating r0
last_idx 1605 first_idx 1577
regs=2 stack=0 before 1604: (77) r1 >>= 32
regs=2 stack=0 before 1603: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 1602: (b7) r3 = 1
regs=2 stack=0 before 1601: (c7) r2 s>>= 32
regs=2 stack=0 before 1600: (67) r2 <<= 32
regs=2 stack=0 before 1599: (bf) r2 = r8
regs=2 stack=0 before 1598: (4f) r8 |= r2
regs=2 stack=0 before 1597: (57) r2 &= 255
regs=2 stack=0 before 1588: (05) goto pc+8
regs=2 stack=0 before 1587: (71) r2 = *(u8 *)(r7 +4)
regs=2 stack=0 before 1585: (18) r1 = 0x300000000
1605: safe

from 1603 to 1636: safe

from 774 to 1636: safe

from 773 to 1636: safe

from 735 to 1636: safe

from 730 to 732: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=34 R2=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=70,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
732: (0f) r7 += r1
last_idx 732 first_idx 732
parent didn't have regs=2 stack=0 marks: R0=map_value(off=0,ks=4,vs=104,imm=0) R1_r=P34 R2=0 R6=ctx(off=0,imm=0) R7_r=pkt(off=0,r=70,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
last_idx 730 first_idx 730
regs=2 stack=0 before 730: (15) if r2 == 0x0 goto pc+1
parent didn't have regs=2 stack=0 marks: R0_w=map_value(off=0,ks=4,vs=104,imm=0) R1_rw=P34 R2_rw=scalar(umax=1,var_off=(0x0; 0x1)) R6_r=ctx(off=0,imm=0) R7_r=pkt(off=0,r=70,imm=0) R8_r=pkt_end(off=0,imm=0) R9_rw=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16_r=????mmmm fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=
last_idx 729 first_idx 719
regs=2 stack=0 before 729: (b7) r1 = 34
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
733: (bf) r1 = r7                     ; R1_w=pkt(off=34,r=70,imm=0) R7_w=pkt(off=34,r=70,imm=0)
734: (07) r1 += 9                     ; R1_w=pkt(off=43,r=70,imm=0)
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
735: (2d) if r1 > r8 goto pc+900      ; R1_w=pkt(off=43,r=70,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
736: (71) r2 = *(u8 *)(r7 +8)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=34,r=70,imm=0)
737: (67) r2 <<= 56                   ; R2_w=scalar(smax=9151314442816847872,umax=18374686479671623680,var_off=(0x0; 0xff00000000000000),s32_min=0,s32_max=0,u32_max=0)
738: (c7) r2 s>>= 56                  ; R2_w=scalar(smin=-128,smax=127)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
739: (65) if r2 s> 0xffffffff goto pc+30      ; R2_w=scalar(umin=18446744073709551488,var_off=(0xffffffffffffff80; 0x7f),u32_min=-128)
; if (quic_data + sizeof(struct quic_long_header) > data_end) {
740: (bf) r1 = r7                     ; R1_w=pkt(off=34,r=70,imm=0) R7_w=pkt(off=34,r=70,imm=0)
741: (07) r1 += 22                    ; R1=pkt(off=56,r=70,imm=0)
; if (quic_data + sizeof(struct quic_long_header) > data_end) {
742: (2d) if r1 > r8 goto pc+893      ; R1=pkt(off=56,r=70,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_PACKET_TYPE_MASK) < QUIC_HANDSHAKE) {
743: (57) r2 &= 32                    ; R2_w=scalar(umax=32,var_off=(0x0; 0x20))
; if ((*pkt_type & QUIC_PACKET_TYPE_MASK) < QUIC_HANDSHAKE) {
744: (15) if r2 == 0x0 goto pc+817    ; R2_w=scalar(umax=32,var_off=(0x0; 0x20))
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
745: (71) r1 = *(u8 *)(r7 +13)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=34,r=70,imm=0)
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
746: (07) r7 += 14                    ; R7_w=pkt(off=48,r=70,imm=0)
747: (25) if r1 > 0x7 goto pc+26      ; R1_w=scalar(umax=7,var_off=(0x0; 0x7))
748: (05) goto pc+887
1636: safe

from 747 to 774: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(umin=8,umax=255,var_off=(0x0; 0xff)) R2=scalar(umax=32,var_off=(0x0; 0x20)) R6=ctx(off=0,imm=0) R7=pkt(off=48,r=70,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (!connId) {
774: (15) if r7 == 0x0 goto pc+861    ; R7=pkt(off=48,r=70,imm=0)
; __u8 connIdVersion = (connId[0] >> 6);
775: (71) r1 = *(u8 *)(r7 +0)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=48,r=70,imm=0)
776: (bf) r2 = r1                     ; R1_w=scalar(id=293,umax=255,var_off=(0x0; 0xff)) R2_w=scalar(id=293,umax=255,var_off=(0x0; 0xff))
777: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
; if (connIdVersion == QUIC_CONNID_VERSION_V1) {
778: (15) if r2 == 0x3 goto pc+798    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
779: (15) if r2 == 0x2 goto pc+809    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
780: (55) if r2 != 0x1 goto pc+855    ; R2_w=1
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
781: (57) r1 &= 63                    ; R1_w=scalar(umax=63,var_off=(0x0; 0x3f))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
782: (67) r1 <<= 10                   ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
783: (71) r8 = *(u8 *)(r7 +1)         ; R7=pkt(off=48,r=70,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
784: (67) r8 <<= 2                    ; R8_w=scalar(umax=1020,var_off=(0x0; 0x3fc))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
785: (4f) r8 |= r1                    ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00)) R8_w=scalar()
786: (18) r1 = 0x100000000            ; R1_w=4294967296
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
788: (71) r2 = *(u8 *)(r7 +2)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=48,r=70,imm=0)
789: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
790: (05) goto pc+806
frame 1: propagating r0
last_idx 1597 first_idx 774
regs=2 stack=0 before 790: (05) goto pc+806
regs=2 stack=0 before 789: (77) r2 >>= 6
regs=2 stack=0 before 788: (71) r2 = *(u8 *)(r7 +2)
regs=2 stack=0 before 786: (18) r1 = 0x100000000
1597: safe

from 780 to 1636: safe

from 779 to 1589: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=293,umax=255,var_off=(0x0; 0xff)) R2=2 R6=ctx(off=0,imm=0) R7=pkt(off=48,r=70,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1589: (71) r1 = *(u8 *)(r7 +1)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=48,r=70,imm=0)
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1590: (67) r1 <<= 16                  ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1591: (71) r8 = *(u8 *)(r7 +2)        ; R7=pkt(off=48,r=70,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1592: (67) r8 <<= 8                   ; R8_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1593: (4f) r8 |= r1                   ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000)) R8_w=scalar()
1594: (18) r1 = 0x200000000           ; R1_w=8589934592
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1596: (71) r2 = *(u8 *)(r7 +3)        ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=48,r=70,imm=0)
1597: (57) r2 &= 255                  ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
1598: (4f) r8 |= r2                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1599: (bf) r2 = r8                    ; R2_w=scalar(id=294) R8_w=scalar(id=294)
1600: (67) r2 <<= 32                  ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
1601: (c7) r2 s>>= 32                 ; R2_w=scalar(smin=-2147483648,smax=2147483647)
1602: (b7) r3 = 1                     ; R3_w=1
; if (qpr.server_id > 0) {
1603: (6d) if r3 s> r2 goto pc+32     ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1604: (77) r1 >>= 32                  ; R1_w=2
; if (cid_version == QUIC_CONNID_VERSION_V1) {
1605: (15) if r1 == 0x3 goto pc+5
last_idx 1605 first_idx 1589
regs=2 stack=0 before 1604: (77) r1 >>= 32
regs=2 stack=0 before 1603: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 1602: (b7) r3 = 1
regs=2 stack=0 before 1601: (c7) r2 s>>= 32
regs=2 stack=0 before 1600: (67) r2 <<= 32
regs=2 stack=0 before 1599: (bf) r2 = r8
regs=2 stack=0 before 1598: (4f) r8 |= r2
regs=2 stack=0 before 1597: (57) r2 &= 255
regs=2 stack=0 before 1596: (71) r2 = *(u8 *)(r7 +3)
regs=2 stack=0 before 1594: (18) r1 = 0x200000000
frame 1: propagating r0
1606: safe

from 1603 to 1636: safe

from 778 to 1577: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=293,umax=255,var_off=(0x0; 0xff)) R2=3 R6=ctx(off=0,imm=0) R7=pkt(off=48,r=70,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1577: (71) r1 = *(u8 *)(r7 +1)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=48,r=70,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1578: (67) r1 <<= 24                  ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1579: (71) r8 = *(u8 *)(r7 +2)        ; R7=pkt(off=48,r=70,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1580: (67) r8 <<= 16                  ; R8_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1581: (4f) r8 |= r1                   ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432) R8_w=scalar()
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1582: (71) r1 = *(u8 *)(r7 +3)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=48,r=70,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1583: (67) r1 <<= 8                   ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1584: (4f) r8 |= r1                   ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00)) R8_w=scalar()
1585: (18) r1 = 0x300000000           ; R1_w=12884901888
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1587: (71) r2 = *(u8 *)(r7 +4)        ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=48,r=70,imm=0)
1588: (05) goto pc+8
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1597: (57) r2 &= 255                  ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
1598: (4f) r8 |= r2                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1599: (bf) r2 = r8                    ; R2_w=scalar(id=295) R8_w=scalar(id=295)
1600: (67) r2 <<= 32                  ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
1601: (c7) r2 s>>= 32                 ; R2_w=scalar(smin=-2147483648,smax=2147483647)
1602: (b7) r3 = 1                     ; R3_w=1
; if (qpr.server_id > 0) {
1603: (6d) if r3 s> r2 goto pc+32     ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1604: (77) r1 >>= 32
frame 1: propagating r0
last_idx 1605 first_idx 1577
regs=2 stack=0 before 1604: (77) r1 >>= 32
regs=2 stack=0 before 1603: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 1602: (b7) r3 = 1
regs=2 stack=0 before 1601: (c7) r2 s>>= 32
regs=2 stack=0 before 1600: (67) r2 <<= 32
regs=2 stack=0 before 1599: (bf) r2 = r8
regs=2 stack=0 before 1598: (4f) r8 |= r2
regs=2 stack=0 before 1597: (57) r2 &= 255
regs=2 stack=0 before 1588: (05) goto pc+8
regs=2 stack=0 before 1587: (71) r2 = *(u8 *)(r7 +4)
regs=2 stack=0 before 1585: (18) r1 = 0x300000000
1605: safe

from 1603 to 1636: safe

from 774 to 1636: safe

from 744 to 1562: safe

from 742 to 1636: safe

from 739 to 770: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=pkt(off=43,r=70,imm=0) R2=scalar(umax=127,var_off=(0x0; 0x7f)) R6=ctx(off=0,imm=0) R7=pkt(off=34,r=70,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (quic_data + sizeof(struct quic_short_header) > data_end) {
770: (bf) r2 = r7                     ; R2_w=pkt(off=34,r=70,imm=0) R7=pkt(off=34,r=70,imm=0)
771: (07) r2 += 17                    ; R2_w=pkt(off=51,r=70,imm=0)
772: (bf) r7 = r1                     ; R1=pkt(off=43,r=70,imm=0) R7_w=pkt(off=43,r=70,imm=0)
; if (quic_data + sizeof(struct quic_short_header) > data_end) {
773: (2d) if r2 > r8 goto pc+862      ; R2_w=pkt(off=51,r=70,imm=0) R8=pkt_end(off=0,imm=0)
; if (!connId) {
774: (15) if r7 == 0x0 goto pc+861    ; R7_w=pkt(off=43,r=70,imm=0)
; __u8 connIdVersion = (connId[0] >> 6);
775: (71) r1 = *(u8 *)(r7 +0)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=43,r=70,imm=0)
776: (bf) r2 = r1                     ; R1_w=scalar(id=296,umax=255,var_off=(0x0; 0xff)) R2_w=scalar(id=296,umax=255,var_off=(0x0; 0xff))
777: (77) r2 >>= 6                    ; R2=scalar(umax=3,var_off=(0x0; 0x3))
; if (connIdVersion == QUIC_CONNID_VERSION_V1) {
778: (15) if r2 == 0x3 goto pc+798    ; R2=scalar(umax=3,var_off=(0x0; 0x3))
779: (15) if r2 == 0x2 goto pc+809    ; R2=scalar(umax=3,var_off=(0x0; 0x3))
780: (55) if r2 != 0x1 goto pc+855    ; R2=1
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
781: (57) r1 &= 63                    ; R1_w=scalar(umax=63,var_off=(0x0; 0x3f))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
782: (67) r1 <<= 10                   ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
783: (71) r8 = *(u8 *)(r7 +1)         ; R7=pkt(off=43,r=70,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
784: (67) r8 <<= 2                    ; R8_w=scalar(umax=1020,var_off=(0x0; 0x3fc))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
785: (4f) r8 |= r1                    ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00)) R8_w=scalar()
786: (18) r1 = 0x100000000            ; R1_w=4294967296
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
788: (71) r2 = *(u8 *)(r7 +2)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=43,r=70,imm=0)
789: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
790: (05) goto pc+806
frame 1: propagating r0
last_idx 1597 first_idx 778
regs=2 stack=0 before 790: (05) goto pc+806
regs=2 stack=0 before 789: (77) r2 >>= 6
regs=2 stack=0 before 788: (71) r2 = *(u8 *)(r7 +2)
regs=2 stack=0 before 786: (18) r1 = 0x100000000
1597: safe

from 780 to 1636: safe

from 779 to 1589: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=296,umax=255,var_off=(0x0; 0xff)) R2=2 R6=ctx(off=0,imm=0) R7=pkt(off=43,r=70,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1589: (71) r1 = *(u8 *)(r7 +1)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=43,r=70,imm=0)
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1590: (67) r1 <<= 16                  ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1591: (71) r8 = *(u8 *)(r7 +2)        ; R7=pkt(off=43,r=70,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1592: (67) r8 <<= 8                   ; R8_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1593: (4f) r8 |= r1                   ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000)) R8_w=scalar()
1594: (18) r1 = 0x200000000           ; R1_w=8589934592
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1596: (71) r2 = *(u8 *)(r7 +3)        ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=43,r=70,imm=0)
1597: (57) r2 &= 255                  ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
1598: (4f) r8 |= r2                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1599: (bf) r2 = r8                    ; R2_w=scalar(id=297) R8_w=scalar(id=297)
1600: (67) r2 <<= 32                  ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
1601: (c7) r2 s>>= 32                 ; R2_w=scalar(smin=-2147483648,smax=2147483647)
1602: (b7) r3 = 1                     ; R3_w=1
; if (qpr.server_id > 0) {
1603: (6d) if r3 s> r2 goto pc+32     ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1604: (77) r1 >>= 32                  ; R1_w=2
; if (cid_version == QUIC_CONNID_VERSION_V1) {
1605: (15) if r1 == 0x3 goto pc+5
last_idx 1605 first_idx 1589
regs=2 stack=0 before 1604: (77) r1 >>= 32
regs=2 stack=0 before 1603: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 1602: (b7) r3 = 1
regs=2 stack=0 before 1601: (c7) r2 s>>= 32
regs=2 stack=0 before 1600: (67) r2 <<= 32
regs=2 stack=0 before 1599: (bf) r2 = r8
regs=2 stack=0 before 1598: (4f) r8 |= r2
regs=2 stack=0 before 1597: (57) r2 &= 255
regs=2 stack=0 before 1596: (71) r2 = *(u8 *)(r7 +3)
regs=2 stack=0 before 1594: (18) r1 = 0x200000000
frame 1: propagating r0
1606: safe

from 1603 to 1636: safe

from 778 to 1577: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=296,umax=255,var_off=(0x0; 0xff)) R2=3 R6=ctx(off=0,imm=0) R7=pkt(off=43,r=70,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1577: (71) r1 = *(u8 *)(r7 +1)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=43,r=70,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1578: (67) r1 <<= 24                  ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1579: (71) r8 = *(u8 *)(r7 +2)        ; R7=pkt(off=43,r=70,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1580: (67) r8 <<= 16                  ; R8_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1581: (4f) r8 |= r1                   ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432) R8_w=scalar()
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1582: (71) r1 = *(u8 *)(r7 +3)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=43,r=70,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1583: (67) r1 <<= 8                   ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1584: (4f) r8 |= r1                   ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00)) R8_w=scalar()
1585: (18) r1 = 0x300000000           ; R1_w=12884901888
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1587: (71) r2 = *(u8 *)(r7 +4)        ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=43,r=70,imm=0)
1588: (05) goto pc+8
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1597: (57) r2 &= 255                  ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
1598: (4f) r8 |= r2                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1599: (bf) r2 = r8                    ; R2_w=scalar(id=298) R8_w=scalar(id=298)
1600: (67) r2 <<= 32                  ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
1601: (c7) r2 s>>= 32                 ; R2_w=scalar(smin=-2147483648,smax=2147483647)
1602: (b7) r3 = 1                     ; R3_w=1
; if (qpr.server_id > 0) {
1603: (6d) if r3 s> r2 goto pc+32     ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1604: (77) r1 >>= 32
frame 1: propagating r0
last_idx 1605 first_idx 1577
regs=2 stack=0 before 1604: (77) r1 >>= 32
regs=2 stack=0 before 1603: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 1602: (b7) r3 = 1
regs=2 stack=0 before 1601: (c7) r2 s>>= 32
regs=2 stack=0 before 1600: (67) r2 <<= 32
regs=2 stack=0 before 1599: (bf) r2 = r8
regs=2 stack=0 before 1598: (4f) r8 |= r2
regs=2 stack=0 before 1597: (57) r2 &= 255
regs=2 stack=0 before 1588: (05) goto pc+8
regs=2 stack=0 before 1587: (71) r2 = *(u8 *)(r7 +4)
regs=2 stack=0 before 1585: (18) r1 = 0x300000000
1605: safe

from 1603 to 1636: safe

from 774 to 1636: safe

from 773 to 1636: safe

from 735 to 1636: safe

from 726 to 1857: safe

from 623 to 1640: safe

from 591 to 594: R0=map_value(off=0,ks=4,vs=16,imm=0) R1=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=70,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm fp-120=mmmm???? fp-136= fp-144=map_value fp-160=map_value
; vip_num = vip_info->vip_num;
594: (61) r1 = *(u32 *)(r9 +4)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9=map_value(off=0,ks=20,vs=8,imm=0)
595: (7b) *(u64 *)(r10 -168) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-168_w=
; vip_num = vip_info->vip_num;
596: (63) *(u32 *)(r10 -108) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-112=mmmmmmmm
; __u32 cpu_num = bpf_get_smp_processor_id();
597: (85) call bpf_get_smp_processor_id#8     ; R0_w=scalar()
; __u32 cpu_num = bpf_get_smp_processor_id();
598: (63) *(u32 *)(r10 -120) = r0     ; R0_w=scalar() R10=fp0 fp-120=mmmmmmmm
599: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; 
600: (07) r2 += -120                  ; R2_w=fp-120
; void* lru_map = bpf_map_lookup_elem(&lru_mapping, &cpu_num);
601: (18) r1 = 0xffffa0376748a000     ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
603: (85) call bpf_map_lookup_elem#1
604: safe

from 583 to 1858: safe

from 574 to 1858: safe

from 568 to 571: R0=map_value(off=0,ks=20,vs=8,imm=0) R1=scalar(umax=136,var_off=(0x0; 0x88)) R6=ctx(off=0,imm=0) R7=pkt(off=0,r=70,imm=0) R8=pkt_end(off=0,imm=0) R9=2 R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm fp-136= fp-144=pkt
; if (data_end - data > MAX_PCKT_SIZE) {
571: (bf) r1 = r8                     ; R1_w=pkt_end(off=0,imm=0) R8=pkt_end(off=0,imm=0)
572: (1f) r1 -= r7                    ; R1_w=scalar() R7=pkt(off=0,r=70,imm=0)
573: (b7) r9 = 1                      ; R9_w=1
; if (data_end - data > MAX_PCKT_SIZE) {
574: (65) if r1 s> 0x5ea goto pc+1283         ; R1_w=scalar(smax=1514)
575: (7b) *(u64 *)(r10 -144) = r0     ; R0=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-144_w=map_value
576: (05) goto pc+0
577: safe

from 574 to 1858: safe

from 565 to 1858: safe

from 556 to 571: safe

from 535 to 1858: safe

from 668 to 1858: safe

from 662 to 666: safe

from 655 to 1858: safe

from 646 to 670: R1=scalar(umax=255,var_off=(0x0; 0xff)) R2=scalar(id=1,umax=65535,var_off=(0x0; 0xffff)) R3=pkt(off=34,r=42,imm=0) R4=pkt(off=42,r=42,imm=0) R6=ctx(off=0,imm=0) R7=pkt(off=0,r=42,imm=0) R8=pkt_end(off=0,imm=0) R9=1 R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm fp-136=
; if (iph + 1 > data_end) {
670: (bf) r1 = r7                     ; R1_w=pkt(off=0,r=42,imm=0) R7=pkt(off=0,r=42,imm=0)
671: (07) r1 += 62                    ; R1_w=pkt(off=62,r=42,imm=0)
; if (iph + 1 > data_end) {
672: (2d) if r1 > r8 goto pc+1185     ; R1_w=pkt(off=62,r=62,imm=0) R8=pkt_end(off=0,imm=0)
; if (iph->ihl != 5) {
673: (71) r1 = *(u8 *)(r4 +0)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R4=pkt(off=42,r=62,imm=0)
674: (57) r1 &= 15                    ; R1_w=scalar(umax=15,var_off=(0x0; 0xf))
; if (iph->ihl != 5) {
675: (15) if r1 == 0x5 goto pc+1      ; R1_w=scalar(umax=15,var_off=(0x0; 0xf))
676: (05) goto pc+1181
1858: safe

from 675 to 677: R1=5 R2=scalar(id=1,umax=65535,var_off=(0x0; 0xffff)) R3=pkt(off=34,r=62,imm=0) R4=pkt(off=42,r=62,imm=0) R6=ctx(off=0,imm=0) R7=pkt(off=0,r=62,imm=0) R8=pkt_end(off=0,imm=0) R9=1 R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm fp-136=
; pckt->flow.proto = iph->protocol;
677: (71) r1 = *(u8 *)(r7 +51)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=62,imm=0)
; pckt->flow.proto = iph->protocol;
678: (73) *(u8 *)(r10 -44) = r1       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0 fp-48=mmmmmmmm
; pckt->flags |= F_ICMP;
679: (71) r3 = *(u8 *)(r10 -36)       ; R3_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
680: (47) r3 |= 1                     ; R3_w=scalar(umin=1,umax=255,var_off=(0x1; 0xfe))
681: (73) *(u8 *)(r10 -36) = r3       ; R3_w=scalar(umin=1,umax=255,var_off=(0x1; 0xfe)) R10=fp0 fp-40=mmmmmmmm
; pckt->flow.src = iph->daddr;
682: (61) r2 = *(u32 *)(r7 +58)       ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R7=pkt(off=0,r=62,imm=0)
; pckt->flow.src = iph->daddr;
683: (63) *(u32 *)(r10 -80) = r2      ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-80=
; pckt->flow.src = iph->daddr;
684: (bf) r2 = r7                     ; R2_w=pkt(off=0,r=62,imm=0) R7=pkt(off=0,r=62,imm=0)
685: (07) r2 += 54                    ; R2_w=pkt(off=54,r=62,imm=0)
686: (05) goto pc-247
; 
440: (61) r2 = *(u32 *)(r2 +0)        ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
441: (63) *(u32 *)(r10 -64) = r2      ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-64=
; if (protocol == IPPROTO_TCP) {
442: (bf) r4 = r1                     ; R1_w=scalar(id=300,umax=255,var_off=(0x0; 0xff)) R4_w=scalar(id=300,umax=255,var_off=(0x0; 0xff))
443: (15) if r4 == 0x11 goto pc+83    ; R4_w=scalar(id=300,umax=255,var_off=(0x0; 0xff))
444: (b7) r9 = 2                      ; R9=2
445: (55) if r4 != 0x6 goto pc+1412   ; R4=6
; bool is_icmp = !((pckt->flags & F_ICMP) == 0);
446: (bf) r4 = r3                     ; R3=scalar(id=301,umin=1,umax=255,var_off=(0x1; 0xfe)) R4_w=scalar(id=301,umin=1,umax=255,var_off=(0x1; 0xfe))
447: (57) r4 &= 1                     ; R4_w=1
448: (b7) r0 = 34                     ; R0_w=34
; if (is_ipv6) {
449: (15) if r4 == 0x0 goto pc+1
last_idx 449 first_idx 445
regs=10 stack=0 before 448: (b7) r0 = 34
regs=10 stack=0 before 447: (57) r4 &= 1
regs=10 stack=0 before 446: (bf) r4 = r3
regs=8 stack=0 before 445: (55) if r4 != 0x6 goto pc+1412
parent didn't have regs=8 stack=0 marks: R1_w=scalar(id=300,umax=255,var_off=(0x0; 0xff)) R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3_rw=Pscalar(umin=1,umax=255,var_off=(0x1; 0xfe)) R4_rw=scalar(id=300,umax=255,var_off=(0x0; 0xff)) R6=ctx(off=0,imm=0) R7=pkt(off=0,r=62,imm=0) R8=pkt_end(off=0,imm=0) R9_w=2 R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm fp-136=
last_idx 444 first_idx 677
regs=8 stack=0 before 444: (b7) r9 = 2
regs=8 stack=0 before 443: (15) if r4 == 0x11 goto pc+83
regs=8 stack=0 before 442: (bf) r4 = r1
regs=8 stack=0 before 441: (63) *(u32 *)(r10 -64) = r2
regs=8 stack=0 before 440: (61) r2 = *(u32 *)(r2 +0)
regs=8 stack=0 before 686: (05) goto pc-247
regs=8 stack=0 before 685: (07) r2 += 54
regs=8 stack=0 before 684: (bf) r2 = r7
regs=8 stack=0 before 683: (63) *(u32 *)(r10 -80) = r2
regs=8 stack=0 before 682: (61) r2 = *(u32 *)(r7 +58)
regs=8 stack=0 before 681: (73) *(u8 *)(r10 -36) = r3
regs=8 stack=0 before 680: (47) r3 |= 1
regs=8 stack=0 before 679: (71) r3 = *(u8 *)(r10 -36)
regs=0 stack=10 before 678: (73) *(u8 *)(r10 -44) = r1
regs=0 stack=10 before 677: (71) r1 = *(u8 *)(r7 +51)
parent already had regs=0 stack=0 marks: R1_w=5 R2=scalar(id=1,umax=65535,var_off=(0x0; 0xffff)) R3=pkt(off=34,r=62,imm=0) R4=pkt(off=42,r=62,imm=0) R6=ctx(off=0,imm=0) R7_r=pkt(off=0,r=62,imm=0) R8=pkt_end(off=0,imm=0) R9=1 R10=fp0 fp-40_r=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm fp-136=
450: (b7) r0 = 62                     ; R0_w=62
; tcp = data + off;
451: (bf) r5 = r7                     ; R5_w=pkt(off=0,r=62,imm=0) R7=pkt(off=0,r=62,imm=0)
452: (0f) r5 += r0
last_idx 452 first_idx 445
regs=1 stack=0 before 451: (bf) r5 = r7
regs=1 stack=0 before 450: (b7) r0 = 62
453: R0_w=P62 R5_w=pkt(off=62,r=62,imm=0)
; if (tcp + 1 > data_end) {
453: (bf) r0 = r5                     ; R0_w=pkt(off=62,r=62,imm=0) R5_w=pkt(off=62,r=62,imm=0)
454: (07) r0 += 20                    ; R0_w=pkt(off=82,r=62,imm=0)
455: (b7) r9 = 1                      ; R9=1
; if (tcp + 1 > data_end) {
456: (2d) if r0 > r8 goto pc+1401     ; R0=pkt(off=82,r=82,imm=0) R8=pkt_end(off=0,imm=0)
; if (tcp->syn) {
457: (69) r0 = *(u16 *)(r5 +12)       ; R0_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R5=pkt(off=62,r=82,imm=0)
; if (tcp->syn) {
458: (57) r0 &= 512                   ; R0_w=scalar(umax=512,var_off=(0x0; 0x200))
; if (tcp->syn) {
459: (15) if r0 == 0x0 goto pc+2      ; R0_w=scalar(umax=512,var_off=(0x0; 0x200))
; pckt->flags |= F_SYN_SET;
460: (47) r3 |= 2                     ; R3_w=scalar(umin=3,umax=255,var_off=(0x3; 0xfc))
461: (73) *(u8 *)(r10 -36) = r3       ; R3_w=scalar(umin=3,umax=255,var_off=(0x3; 0xfc)) R10=fp0 fp-40=mmmmmmmm
462: (b7) r3 = 1                      ; R3_w=1
; bool is_icmp = !((pckt->flags & F_ICMP) == 0);
463: (15) if r4 == 0x0 goto pc+1      ; R4=P1
464: (b7) r3 = 0                      ; R3=0
465: (67) r4 <<= 1                    ; R4_w=P2
; 
466: (bf) r0 = r5                     ; R0_w=pkt(off=62,r=82,imm=0) R5=pkt(off=62,r=82,imm=0)
467: (0f) r0 += r4                    ; R0_w=pkt(off=64,r=82,imm=0) R4_w=P2
468: (69) r4 = *(u16 *)(r0 +0)        ; R0_w=pkt(off=64,r=82,imm=0) R4_w=scalar(umax=65535,var_off=(0x0; 0xffff))
469: (6b) *(u16 *)(r10 -48) = r4      ; R4_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-48=
470: (67) r3 <<= 1                    ; R3_w=0
471: (0f) r5 += r3
last_idx 471 first_idx 465
regs=8 stack=0 before 470: (67) r3 <<= 1
regs=8 stack=0 before 469: (6b) *(u16 *)(r10 -48) = r4
regs=8 stack=0 before 468: (69) r4 = *(u16 *)(r0 +0)
regs=8 stack=0 before 467: (0f) r0 += r4
regs=8 stack=0 before 466: (bf) r0 = r5
regs=8 stack=0 before 465: (67) r4 <<= 1
parent didn't have regs=8 stack=0 marks: R0_w=scalar(umax=512,var_off=(0x0; 0x200)) R1=6 R2=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3_rw=P0 R4_r=P1 R5_r=pkt(off=62,r=82,imm=0) R6=ctx(off=0,imm=0) R7=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=1 R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm fp-136=
last_idx 464 first_idx 456
regs=8 stack=0 before 464: (b7) r3 = 0
472: (69) r3 = *(u16 *)(r5 +0)        ; R3_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R5_w=pkt(off=62,r=82,imm=0)
473: (05) goto pc+73
; 
547: (6b) *(u16 *)(r10 -46) = r3      ; R3_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-48=mmmmmmmm
; vip.proto = pckt.flow.proto;
548: (73) *(u8 *)(r10 -86) = r1       ; R1=6 R10=fp0 fp-88=????mmmm
; vip.port = pckt.flow.port16[1];
549: (6b) *(u16 *)(r10 -88) = r3      ; R3_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-88=
; vip.vip = pckt.flow.dst;
550: (63) *(u32 *)(r10 -104) = r2     ; R2=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-104=
551: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; 
552: (07) r2 += -104                  ; R2_w=fp-104
; vip_info = bpf_map_lookup_elem(&vip_map, &vip);
553: (18) r1 = 0xffffa03557866800     ; R1_w=map_ptr(off=0,ks=20,vs=8,imm=0)
555: (85) call bpf_map_lookup_elem#1          ; R0=map_value_or_null(id=302,off=0,ks=20,vs=8,imm=0)
; if (!vip_info) {
556: (55) if r0 != 0x0 goto pc+14     ; R0=0
557: (05) goto pc+0
; vip.port = 0;
558: (6a) *(u16 *)(r10 -88) = 0       ; R10=fp0 fp-88=????mmmm
559: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
560: (07) r2 += -104                  ; R2_w=fp-104
; vip_info = bpf_map_lookup_elem(&vip_map, &vip);
561: (18) r1 = 0xffffa03557866800     ; R1_w=map_ptr(off=0,ks=20,vs=8,imm=0)
563: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=303,off=0,ks=20,vs=8,imm=0)
564: (b7) r9 = 2                      ; R9=2
; if (!vip_info) {
565: (15) if r0 == 0x0 goto pc+1292   ; R0=map_value(off=0,ks=20,vs=8,imm=0)
; if (!(vip_info->flags & F_HASH_DPORT_ONLY) &&
566: (61) r1 = *(u32 *)(r0 +0)        ; R0=map_value(off=0,ks=20,vs=8,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (!(vip_info->flags & F_HASH_DPORT_ONLY) &&
567: (57) r1 &= 136                   ; R1_w=scalar(umax=136,var_off=(0x0; 0x88))
568: (55) if r1 != 0x0 goto pc+2      ; R1_w=0
569: (05) goto pc+0
; pckt.flow.port16[1] = 0;
570: (6a) *(u16 *)(r10 -46) = 0       ; R10=fp0 fp-48=mmmmmmmm
; if (data_end - data > MAX_PCKT_SIZE) {
571: (bf) r1 = r8                     ; R1_w=pkt_end(off=0,imm=0) R8=pkt_end(off=0,imm=0)
572: (1f) r1 -= r7                    ; R1_w=scalar() R7=pkt(off=0,r=82,imm=0)
573: (b7) r9 = 1                      ; R9=1
; if (data_end - data > MAX_PCKT_SIZE) {
574: (65) if r1 s> 0x5ea goto pc+1283         ; R1=scalar(smax=1514)
575: (7b) *(u64 *)(r10 -144) = r0     ; R0=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-144_w=map_value
576: (05) goto pc+0
; __u32 stats_key = MAX_VIPS + LRU_CNTRS;
577: (62) *(u32 *)(r10 -116) = 512    ; R10=fp0 fp-120=mmmm????
578: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; 
579: (07) r2 += -116                  ; R2_w=fp-116
; data_stats = bpf_map_lookup_elem(&stats, &stats_key);
580: (18) r1 = 0xffffa03499be8000     ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
582: (85) call bpf_map_lookup_elem#1          ; R0=map_value_or_null(id=304,off=0,ks=4,vs=16,imm=0)
; if (!data_stats) {
583: (15) if r0 == 0x0 goto pc+1274   ; R0=map_value(off=0,ks=4,vs=16,imm=0)
; data_stats->v1 += 1;
584: (79) r1 = *(u64 *)(r0 +0)        ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
585: (07) r1 += 1                     ; R1_w=scalar()
586: (7b) *(u64 *)(r10 -160) = r0     ; R0=map_value(off=0,ks=4,vs=16,imm=0) R10=fp0 fp-160_w=map_value
587: (7b) *(u64 *)(r0 +0) = r1        ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
588: (79) r9 = *(u64 *)(r10 -144)     ; R9_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
; if ((vip_info->flags & F_HASH_NO_SRC_PORT)) {
589: (61) r1 = *(u32 *)(r9 +0)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9_w=map_value(off=0,ks=20,vs=8,imm=0)
; if ((vip_info->flags & F_HASH_NO_SRC_PORT)) {
590: (57) r1 &= 1                     ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
; if ((vip_info->flags & F_HASH_NO_SRC_PORT)) {
591: (15) if r1 == 0x0 goto pc+2      ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
592: (05) goto pc+0
; pckt.flow.port16[0] = 0;
593: (6a) *(u16 *)(r10 -48) = 0       ; R10=fp0 fp-48=mmmmmmmm
; vip_num = vip_info->vip_num;
594: (61) r1 = *(u32 *)(r9 +4)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9=map_value(off=0,ks=20,vs=8,imm=0)
595: (7b) *(u64 *)(r10 -168) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-168_w=
; vip_num = vip_info->vip_num;
596: (63) *(u32 *)(r10 -108) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-112=mmmmmmmm
; __u32 cpu_num = bpf_get_smp_processor_id();
597: (85) call bpf_get_smp_processor_id#8     ; R0_w=scalar()
; __u32 cpu_num = bpf_get_smp_processor_id();
598: (63) *(u32 *)(r10 -120) = r0     ; R0_w=scalar() R10=fp0 fp-120=mmmmmmmm
599: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; 
600: (07) r2 += -120                  ; R2_w=fp-120
; void* lru_map = bpf_map_lookup_elem(&lru_mapping, &cpu_num);
601: (18) r1 = 0xffffa0376748a000     ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
603: (85) call bpf_map_lookup_elem#1          ; R0=map_value_or_null(id=305,off=0,ks=4,vs=4,imm=0)
604: (7b) *(u64 *)(r10 -152) = r0     ; R0=map_value_or_null(id=305,off=0,ks=4,vs=4,imm=0) R10=fp0 fp-152_w=map_value_or_null
; if (!lru_map) {
605: (55) if r0 != 0x0 goto pc+15     ; R0=0
606: (05) goto pc+0
; __u32 lru_stats_key = MAX_VIPS + FALLBACK_LRU_CNTR;
607: (62) *(u32 *)(r10 -16) = 515     ; R10=fp0 fp-16=????mmmm
608: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
609: (07) r2 += -16                   ; R2_w=fp-16
; struct lb_stats* lru_stats = bpf_map_lookup_elem(&stats, &lru_stats_key);
610: (18) r1 = 0xffffa03499be8000     ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
612: (85) call bpf_map_lookup_elem#1
613: safe

from 605 to 621: R0=map_ptr(off=0,ks=40,vs=16,imm=0) R6=ctx(off=0,imm=0) R7=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if ((vip_info->flags & F_QUIC_VIP)) {
621: (61) r1 = *(u32 *)(r9 +0)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9=map_value(off=0,ks=20,vs=8,imm=0)
; if ((vip_info->flags & F_QUIC_VIP)) {
622: (57) r1 &= 4                     ; R1_w=scalar(umax=4,var_off=(0x0; 0x4))
; if ((vip_info->flags & F_QUIC_VIP)) {
623: (15) if r1 == 0x0 goto pc+1016   ; R1_w=scalar(umax=4,var_off=(0x0; 0x4))
; bool is_icmp = (pckt.flags & F_ICMP);
624: (71) r1 = *(u8 *)(r10 -36)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; bool is_icmp = (pckt.flags & F_ICMP);
625: (57) r1 &= 1                     ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
; if (is_icmp) {
626: (15) if r1 == 0x0 goto pc+91     ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
627: (05) goto pc+0
; __u32 stats_key = MAX_VIPS + QUIC_ICMP_STATS;
628: (62) *(u32 *)(r10 -16) = 523     ; R10=fp0 fp-16=????mmmm
629: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
630: (07) r2 += -16                   ; R2_w=fp-16
; struct lb_stats* data_stats = bpf_map_lookup_elem(&stats, &stats_key);
631: (18) r1 = 0xffffa03499be8000     ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
633: (85) call bpf_map_lookup_elem#1
634: safe

from 626 to 718: R0=map_ptr(off=0,ks=40,vs=16,imm=0) R1=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
718: (05) goto pc+0
; __u32 quic_packets_stats_key = 0;
719: (62) *(u32 *)(r10 -28) = 0       ; R10=fp0 fp-32=mmmm????
720: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
721: (07) r2 += -28                   ; R2_w=fp-28
; bpf_map_lookup_elem(&quic_stats_map, &quic_packets_stats_key);
722: (18) r1 = 0xffffa03587064800     ; R1_w=map_ptr(off=0,ks=4,vs=104,imm=0)
724: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=308,off=0,ks=4,vs=104,imm=0)
725: (bf) r9 = r0                     ; R0_w=map_value_or_null(id=308,off=0,ks=4,vs=104,imm=0) R9_w=map_value_or_null(id=308,off=0,ks=4,vs=104,imm=0)
; if (!quic_packets_stats) {
726: (15) if r9 == 0x0 goto pc+1130   ; R9_w=map_value(off=0,ks=4,vs=104,imm=0)
; bool is_icmp = (pckt->flags & F_ICMP);
727: (71) r2 = *(u8 *)(r10 -36)       ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; bool is_icmp = (pckt->flags & F_ICMP);
728: (57) r2 &= 1                     ; R2_w=scalar(umax=1,var_off=(0x0; 0x1))
729: (b7) r1 = 34                     ; R1=34
; if (is_ipv6) {
730: (15) if r2 == 0x0 goto pc+1      ; R2=scalar(umax=1,var_off=(0x0; 0x1))
731: (b7) r1 = 62                     ; R1_w=62
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
732: (0f) r7 += r1
last_idx 732 first_idx 730
regs=2 stack=0 before 731: (b7) r1 = 62
733: R1_w=P62 R7_w=pkt(off=62,r=82,imm=0)
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
733: (bf) r1 = r7                     ; R1_w=pkt(off=62,r=82,imm=0) R7_w=pkt(off=62,r=82,imm=0)
734: (07) r1 += 9                     ; R1_w=pkt(off=71,r=82,imm=0)
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
735: (2d) if r1 > r8 goto pc+900      ; R1_w=pkt(off=71,r=82,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
736: (71) r2 = *(u8 *)(r7 +8)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=62,r=82,imm=0)
737: (67) r2 <<= 56                   ; R2_w=scalar(smax=9151314442816847872,umax=18374686479671623680,var_off=(0x0; 0xff00000000000000),s32_min=0,s32_max=0,u32_max=0)
738: (c7) r2 s>>= 56                  ; R2=scalar(smin=-128,smax=127)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
739: (65) if r2 s> 0xffffffff goto pc+30      ; R2=scalar(umin=18446744073709551488,var_off=(0xffffffffffffff80; 0x7f),u32_min=-128)
; if (quic_data + sizeof(struct quic_long_header) > data_end) {
740: (bf) r1 = r7                     ; R1_w=pkt(off=62,r=82,imm=0) R7=pkt(off=62,r=82,imm=0)
741: (07) r1 += 22                    ; R1_w=pkt(off=84,r=82,imm=0)
; if (quic_data + sizeof(struct quic_long_header) > data_end) {
742: (2d) if r1 > r8 goto pc+893      ; R1_w=pkt(off=84,r=84,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_PACKET_TYPE_MASK) < QUIC_HANDSHAKE) {
743: (57) r2 &= 32                    ; R2_w=scalar(umax=32,var_off=(0x0; 0x20))
; if ((*pkt_type & QUIC_PACKET_TYPE_MASK) < QUIC_HANDSHAKE) {
744: (15) if r2 == 0x0 goto pc+817    ; R2_w=scalar(umax=32,var_off=(0x0; 0x20))
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
745: (71) r1 = *(u8 *)(r7 +13)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=62,r=84,imm=0)
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
746: (07) r7 += 14                    ; R7=pkt(off=76,r=84,imm=0)
747: (25) if r1 > 0x7 goto pc+26      ; R1=scalar(umax=7,var_off=(0x0; 0x7))
748: (05) goto pc+887
; 
1636: (79) r1 = *(u64 *)(r9 +0)       ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
1637: (07) r1 += 1                    ; R1_w=scalar()
1638: (7b) *(u64 *)(r9 +0) = r1       ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
1639: (79) r9 = *(u64 *)(r10 -144)    ; R9_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
; original_sport = pckt.flow.port16[0];
1640: (69) r1 = *(u16 *)(r10 -48)     ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
1641: (7b) *(u64 *)(r10 -168) = r1    ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-168_w=
1642: (71) r1 = *(u8 *)(r10 -36)      ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
1643: (57) r1 &= 2                    ; R1=scalar(umax=2,var_off=(0x0; 0x2))
; if (!dst && !(pckt.flags & F_SYN_SET) &&
1644: (55) if r1 != 0x0 goto pc+29    ; R1=0
; !(vip_info->flags & F_LRU_BYPASS)) {
1645: (61) r1 = *(u32 *)(r9 +0)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9=map_value(off=0,ks=20,vs=8,imm=0)
; !(vip_info->flags & F_LRU_BYPASS)) {
1646: (57) r1 &= 2                    ; R1_w=scalar(umax=2,var_off=(0x0; 0x2))
; if (!dst && !(pckt.flags & F_SYN_SET) &&
1647: (55) if r1 != 0x0 goto pc+26    ; R1_w=0
1648: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1649: (07) r2 += -80                  ; R2_w=fp-80
; dst_lru = bpf_map_lookup_elem(lru_map, &pckt->flow);
1650: (79) r1 = *(u64 *)(r10 -152)    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0
1651: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=309,off=0,ks=40,vs=16,imm=0)
1652: (bf) r7 = r0                    ; R0=map_value_or_null(id=309,off=0,ks=40,vs=16,imm=0) R7_w=map_value_or_null(id=309,off=0,ks=40,vs=16,imm=0)
; if (!dst_lru) {
1653: (15) if r7 == 0x0 goto pc+20    ; R7_w=map_value(off=0,ks=40,vs=16,imm=0)
; if (!isGlobalLru && pckt->flow.proto == IPPROTO_UDP) {
1654: (71) r1 = *(u8 *)(r10 -44)      ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (!isGlobalLru && pckt->flow.proto == IPPROTO_UDP) {
1655: (55) if r1 != 0x11 goto pc+8    ; R1_w=17
; cur_time = bpf_ktime_get_ns();
1656: (85) call bpf_ktime_get_ns#5    ; R0_w=scalar()
; if (cur_time - dst_lru->atime > LRU_UDP_TIMEOUT) {
1657: (79) r1 = *(u64 *)(r7 +8)       ; R1_w=scalar() R7_w=map_value(off=0,ks=40,vs=16,imm=0)
; if (cur_time - dst_lru->atime > LRU_UDP_TIMEOUT) {
1658: (bf) r2 = r0                    ; R0_w=scalar(id=310) R2_w=scalar(id=310)
1659: (1f) r2 -= r1                   ; R1_w=scalar() R2_w=scalar()
1660: (18) r1 = 0x6fc23ac00           ; R1=30000000000
; if (cur_time - dst_lru->atime > LRU_UDP_TIMEOUT) {
1662: (2d) if r2 > r1 goto pc+11      ; R1=30000000000 R2=scalar(umax=30000000000,var_off=(0x0; 0x7ffffffff))
; dst_lru->atime = cur_time;
1663: (7b) *(u64 *)(r7 +8) = r0       ; R0=scalar(id=310) R7=map_value(off=0,ks=40,vs=16,imm=0)
; key = dst_lru->pos;
1664: (61) r1 = *(u32 *)(r7 +0)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R7=map_value(off=0,ks=40,vs=16,imm=0)
; pckt->real_index = key;
1665: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
; key = dst_lru->pos;
1666: (63) *(u32 *)(r10 -16) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-16=
1667: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; key = dst_lru->pos;
1668: (07) r2 += -16                  ; R2_w=fp-16
; *real = bpf_map_lookup_elem(&reals, &key);
1669: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1671: (85) call bpf_map_lookup_elem#1
frame -168: propagating fp0
last_idx 1672 first_idx 1662
regs=0 stack=100000 before 1671: (85) call bpf_map_lookup_elem#1
regs=0 stack=100000 before 1669: (18) r1 = 0xffffaeba8c207000
regs=0 stack=100000 before 1668: (07) r2 += -16
regs=0 stack=100000 before 1667: (bf) r2 = r10
regs=0 stack=100000 before 1666: (63) *(u32 *)(r10 -16) = r1
regs=0 stack=100000 before 1665: (63) *(u32 *)(r10 -40) = r1
regs=0 stack=100000 before 1664: (61) r1 = *(u32 *)(r7 +0)
regs=0 stack=100000 before 1663: (7b) *(u64 *)(r7 +8) = r0
regs=0 stack=100000 before 1662: (2d) if r2 > r1 goto pc+11
parent didn't have regs=0 stack=100000 marks: R0_rw=scalar(id=310) R1_rw=30000000000 R2_rw=scalar() R6_r=ctx(off=0,imm=0) R7_rw=map_value(off=0,ks=40,vs=16,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1660 first_idx 1652
regs=0 stack=100000 before 1660: (18) r1 = 0x6fc23ac00
regs=0 stack=100000 before 1659: (1f) r2 -= r1
regs=0 stack=100000 before 1658: (bf) r2 = r0
regs=0 stack=100000 before 1657: (79) r1 = *(u64 *)(r7 +8)
regs=0 stack=100000 before 1656: (85) call bpf_ktime_get_ns#5
regs=0 stack=100000 before 1655: (55) if r1 != 0x11 goto pc+8
regs=0 stack=100000 before 1654: (71) r1 = *(u8 *)(r10 -44)
regs=0 stack=100000 before 1653: (15) if r7 == 0x0 goto pc+20
regs=0 stack=100000 before 1652: (bf) r7 = r0
parent didn't have regs=0 stack=100000 marks: R0_rw=map_value_or_null(id=309,off=0,ks=40,vs=16,imm=0) R6_r=ctx(off=0,imm=0) R7=pkt(off=76,r=84,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1651 first_idx 1644
regs=0 stack=100000 before 1651: (85) call bpf_map_lookup_elem#1
regs=0 stack=100000 before 1650: (79) r1 = *(u64 *)(r10 -152)
regs=0 stack=100000 before 1649: (07) r2 += -80
regs=0 stack=100000 before 1648: (bf) r2 = r10
regs=0 stack=100000 before 1647: (55) if r1 != 0x0 goto pc+26
regs=0 stack=100000 before 1646: (57) r1 &= 2
regs=0 stack=100000 before 1645: (61) r1 = *(u32 *)(r9 +0)
regs=0 stack=100000 before 1644: (55) if r1 != 0x0 goto pc+29
parent didn't have regs=0 stack=100000 marks: R0=map_value(off=0,ks=4,vs=104,imm=0) R1_rw=scalar(umax=2,var_off=(0x0; 0x2)) R2=scalar(umax=32,var_off=(0x0; 0x20)) R6_r=ctx(off=0,imm=0) R7=pkt(off=76,r=84,imm=0) R8=pkt_end(off=0,imm=0) R9_rw=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_rw=P
last_idx 1643 first_idx 747
regs=0 stack=100000 before 1643: (57) r1 &= 2
regs=0 stack=100000 before 1642: (71) r1 = *(u8 *)(r10 -36)
regs=0 stack=100000 before 1641: (7b) *(u64 *)(r10 -168) = r1
regs=2 stack=0 before 1640: (69) r1 = *(u16 *)(r10 -48)
regs=0 stack=20 before 1639: (79) r9 = *(u64 *)(r10 -144)
regs=0 stack=20 before 1638: (7b) *(u64 *)(r9 +0) = r1
regs=0 stack=20 before 1637: (07) r1 += 1
regs=0 stack=20 before 1636: (79) r1 = *(u64 *)(r9 +0)
regs=0 stack=20 before 748: (05) goto pc+887
regs=0 stack=20 before 747: (25) if r1 > 0x7 goto pc+26
parent already had regs=0 stack=0 marks: R0=map_value(off=0,ks=4,vs=104,imm=0) R1_rw=scalar(umax=255,var_off=(0x0; 0xff)) R2_w=scalar(umax=32,var_off=(0x0; 0x20)) R6_r=ctx(off=0,imm=0) R7_w=pkt(off=76,r=84,imm=0) R8=pkt_end(off=0,imm=0) R9_r=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168=
1672: safe

from 1662 to 1674: R0=scalar(id=310) R1=30000000000 R2=scalar(umin=30000000001) R6=ctx(off=0,imm=0) R7=map_value(off=0,ks=40,vs=16,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (pckt.flow.proto == IPPROTO_TCP) {
1674: (71) r1 = *(u8 *)(r10 -44)      ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (pckt.flow.proto == IPPROTO_TCP) {
1675: (55) if r1 != 0x6 goto pc+18    ; R1_w=6
1676: (05) goto pc+0
; __u32 lru_stats_key = MAX_VIPS + LRU_MISS_CNTR;
1677: (62) *(u32 *)(r10 -16) = 513    ; R10=fp0 fp-16=????mmmm
1678: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1679: (07) r2 += -16                  ; R2_w=fp-16
; bpf_map_lookup_elem(&stats, &lru_stats_key);
1680: (18) r1 = 0xffffa03499be8000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
1682: (85) call bpf_map_lookup_elem#1
frame -168: propagating fp0
last_idx 1683 first_idx 1674
regs=0 stack=100000 before 1682: (85) call bpf_map_lookup_elem#1
regs=0 stack=100000 before 1680: (18) r1 = 0xffffa03499be8000
regs=0 stack=100000 before 1679: (07) r2 += -16
regs=0 stack=100000 before 1678: (bf) r2 = r10
regs=0 stack=100000 before 1677: (62) *(u32 *)(r10 -16) = 513
regs=0 stack=100000 before 1676: (05) goto pc+0
regs=0 stack=100000 before 1675: (55) if r1 != 0x6 goto pc+18
regs=0 stack=100000 before 1674: (71) r1 = *(u8 *)(r10 -44)
parent didn't have regs=0 stack=100000 marks: R0=scalar(id=310) R1=30000000000 R2=scalar(umin=30000000001) R6_r=ctx(off=0,imm=0) R7=map_value(off=0,ks=40,vs=16,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1662 first_idx 1662
regs=0 stack=100000 before 1662: (2d) if r2 > r1 goto pc+11
parent already had regs=0 stack=100000 marks: R0_rw=scalar(id=310) R1_rw=30000000000 R2_rw=scalar() R6_r=ctx(off=0,imm=0) R7_rw=map_value(off=0,ks=40,vs=16,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
1683: safe
frame -168: propagating fp0
last_idx 1694 first_idx 1674
regs=0 stack=100000 before 1675: (55) if r1 != 0x6 goto pc+18
regs=0 stack=100000 before 1674: (71) r1 = *(u8 *)(r10 -44)
parent already had regs=0 stack=100000 marks: R0=scalar(id=310) R1=30000000000 R2=scalar(umin=30000000001) R6_r=ctx(off=0,imm=0) R7=map_value(off=0,ks=40,vs=16,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P

from 1675 to 1694: safe

from 1655 to 1664: R0=map_value(off=0,ks=40,vs=16,imm=0) R1=scalar(umax=255,var_off=(0x0; 0xff)) R6=ctx(off=0,imm=0) R7=map_value(off=0,ks=40,vs=16,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; key = dst_lru->pos;
1664: (61) r1 = *(u32 *)(r7 +0)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R7=map_value(off=0,ks=40,vs=16,imm=0)
; pckt->real_index = key;
1665: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
; key = dst_lru->pos;
1666: (63) *(u32 *)(r10 -16) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-16=
1667: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; key = dst_lru->pos;
1668: (07) r2 += -16                  ; R2_w=fp-16
; *real = bpf_map_lookup_elem(&reals, &key);
1669: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1671: (85) call bpf_map_lookup_elem#1
frame -168: propagating fp0
last_idx 1672 first_idx 1664
regs=0 stack=100000 before 1671: (85) call bpf_map_lookup_elem#1
regs=0 stack=100000 before 1669: (18) r1 = 0xffffaeba8c207000
regs=0 stack=100000 before 1668: (07) r2 += -16
regs=0 stack=100000 before 1667: (bf) r2 = r10
regs=0 stack=100000 before 1666: (63) *(u32 *)(r10 -16) = r1
regs=0 stack=100000 before 1665: (63) *(u32 *)(r10 -40) = r1
regs=0 stack=100000 before 1664: (61) r1 = *(u32 *)(r7 +0)
parent didn't have regs=0 stack=100000 marks: R0=map_value(off=0,ks=40,vs=16,imm=0) R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R6_r=ctx(off=0,imm=0) R7_rw=map_value(off=0,ks=40,vs=16,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1655 first_idx 1652
regs=0 stack=100000 before 1655: (55) if r1 != 0x11 goto pc+8
regs=0 stack=100000 before 1654: (71) r1 = *(u8 *)(r10 -44)
regs=0 stack=100000 before 1653: (15) if r7 == 0x0 goto pc+20
regs=0 stack=100000 before 1652: (bf) r7 = r0
parent already had regs=0 stack=100000 marks: R0_rw=map_value_or_null(id=309,off=0,ks=40,vs=16,imm=0) R6_r=ctx(off=0,imm=0) R7=pkt(off=76,r=84,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
1672: safe
frame -168: propagating fp0
last_idx 1674 first_idx 1652
regs=0 stack=100000 before 1653: (15) if r7 == 0x0 goto pc+20
regs=0 stack=100000 before 1652: (bf) r7 = r0
parent already had regs=0 stack=100000 marks: R0_rw=map_value_or_null(id=309,off=0,ks=40,vs=16,imm=0) R6_r=ctx(off=0,imm=0) R7=pkt(off=76,r=84,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P

from 1653 to 1674: safe

from 1647 to 1674: R0=map_value(off=0,ks=4,vs=104,imm=0) R1_w=scalar(umax=2,var_off=(0x0; 0x2)) R2=scalar(umax=32,var_off=(0x0; 0x20)) R6=ctx(off=0,imm=0) R7=pkt(off=76,r=84,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (pckt.flow.proto == IPPROTO_TCP) {
1674: (71) r1 = *(u8 *)(r10 -44)      ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (pckt.flow.proto == IPPROTO_TCP) {
1675: (55) if r1 != 0x6 goto pc+18    ; R1_w=6
1676: (05) goto pc+0
; __u32 lru_stats_key = MAX_VIPS + LRU_MISS_CNTR;
1677: (62) *(u32 *)(r10 -16) = 513    ; R10=fp0 fp-16=????mmmm
1678: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1679: (07) r2 += -16                  ; R2_w=fp-16
; bpf_map_lookup_elem(&stats, &lru_stats_key);
1680: (18) r1 = 0xffffa03499be8000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
1682: (85) call bpf_map_lookup_elem#1
frame -168: propagating fp0
last_idx 1683 first_idx 1677
regs=0 stack=100000 before 1682: (85) call bpf_map_lookup_elem#1
regs=0 stack=100000 before 1680: (18) r1 = 0xffffa03499be8000
regs=0 stack=100000 before 1679: (07) r2 += -16
regs=0 stack=100000 before 1678: (bf) r2 = r10
regs=0 stack=100000 before 1677: (62) *(u32 *)(r10 -16) = 513
parent didn't have regs=0 stack=100000 marks: R0=map_value(off=0,ks=4,vs=104,imm=0) R1_w=6 R2=scalar(umax=32,var_off=(0x0; 0x20)) R6_r=ctx(off=0,imm=0) R7=pkt(off=76,r=84,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1676 first_idx 1644
regs=0 stack=100000 before 1676: (05) goto pc+0
regs=0 stack=100000 before 1675: (55) if r1 != 0x6 goto pc+18
regs=0 stack=100000 before 1674: (71) r1 = *(u8 *)(r10 -44)
regs=0 stack=100000 before 1647: (55) if r1 != 0x0 goto pc+26
regs=0 stack=100000 before 1646: (57) r1 &= 2
regs=0 stack=100000 before 1645: (61) r1 = *(u32 *)(r9 +0)
regs=0 stack=100000 before 1644: (55) if r1 != 0x0 goto pc+29
parent already had regs=0 stack=100000 marks: R0=map_value(off=0,ks=4,vs=104,imm=0) R1_rw=scalar(umax=2,var_off=(0x0; 0x2)) R2=scalar(umax=32,var_off=(0x0; 0x20)) R6_r=ctx(off=0,imm=0) R7=pkt(off=76,r=84,imm=0) R8=pkt_end(off=0,imm=0) R9_rw=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_rw=P
1683: safe
frame -168: propagating fp0
last_idx 1694 first_idx 1644
regs=0 stack=100000 before 1675: (55) if r1 != 0x6 goto pc+18
regs=0 stack=100000 before 1674: (71) r1 = *(u8 *)(r10 -44)
regs=0 stack=100000 before 1647: (55) if r1 != 0x0 goto pc+26
regs=0 stack=100000 before 1646: (57) r1 &= 2
regs=0 stack=100000 before 1645: (61) r1 = *(u32 *)(r9 +0)
regs=0 stack=100000 before 1644: (55) if r1 != 0x0 goto pc+29
parent already had regs=0 stack=100000 marks: R0=map_value(off=0,ks=4,vs=104,imm=0) R1_rw=scalar(umax=2,var_off=(0x0; 0x2)) R2=scalar(umax=32,var_off=(0x0; 0x20)) R6_r=ctx(off=0,imm=0) R7=pkt(off=76,r=84,imm=0) R8=pkt_end(off=0,imm=0) R9_rw=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_rw=P

from 1675 to 1694: safe

from 1644 to 1674: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(umax=2,var_off=(0x0; 0x2)) R2=scalar(umax=32,var_off=(0x0; 0x20)) R6=ctx(off=0,imm=0) R7=pkt(off=76,r=84,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (pckt.flow.proto == IPPROTO_TCP) {
1674: (71) r1 = *(u8 *)(r10 -44)      ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (pckt.flow.proto == IPPROTO_TCP) {
1675: (55) if r1 != 0x6 goto pc+18    ; R1_w=6
1676: (05) goto pc+0
frame -168: propagating fp0
last_idx 1677 first_idx 1644
regs=0 stack=100000 before 1676: (05) goto pc+0
regs=0 stack=100000 before 1675: (55) if r1 != 0x6 goto pc+18
regs=0 stack=100000 before 1674: (71) r1 = *(u8 *)(r10 -44)
regs=0 stack=100000 before 1644: (55) if r1 != 0x0 goto pc+29
parent already had regs=0 stack=100000 marks: R0=map_value(off=0,ks=4,vs=104,imm=0) R1_rw=scalar(umax=2,var_off=(0x0; 0x2)) R2=scalar(umax=32,var_off=(0x0; 0x20)) R6_r=ctx(off=0,imm=0) R7=pkt(off=76,r=84,imm=0) R8=pkt_end(off=0,imm=0) R9_rw=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_rw=P
1677: safe
frame -168: propagating fp0
last_idx 1694 first_idx 1644
regs=0 stack=100000 before 1675: (55) if r1 != 0x6 goto pc+18
regs=0 stack=100000 before 1674: (71) r1 = *(u8 *)(r10 -44)
regs=0 stack=100000 before 1644: (55) if r1 != 0x0 goto pc+29
parent already had regs=0 stack=100000 marks: R0=map_value(off=0,ks=4,vs=104,imm=0) R1_rw=scalar(umax=2,var_off=(0x0; 0x2)) R2=scalar(umax=32,var_off=(0x0; 0x20)) R6_r=ctx(off=0,imm=0) R7=pkt(off=76,r=84,imm=0) R8=pkt_end(off=0,imm=0) R9_rw=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_rw=P

from 1675 to 1694: safe

from 747 to 774: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(umin=8,umax=255,var_off=(0x0; 0xff)) R2=scalar(umax=32,var_off=(0x0; 0x20)) R6=ctx(off=0,imm=0) R7=pkt(off=76,r=84,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (!connId) {
774: (15) if r7 == 0x0 goto pc+861    ; R7=pkt(off=76,r=84,imm=0)
; __u8 connIdVersion = (connId[0] >> 6);
775: (71) r1 = *(u8 *)(r7 +0)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=76,r=84,imm=0)
776: (bf) r2 = r1                     ; R1_w=scalar(id=315,umax=255,var_off=(0x0; 0xff)) R2_w=scalar(id=315,umax=255,var_off=(0x0; 0xff))
777: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
; if (connIdVersion == QUIC_CONNID_VERSION_V1) {
778: (15) if r2 == 0x3 goto pc+798    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
779: (15) if r2 == 0x2 goto pc+809    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
780: (55) if r2 != 0x1 goto pc+855    ; R2_w=1
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
781: (57) r1 &= 63                    ; R1_w=scalar(umax=63,var_off=(0x0; 0x3f))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
782: (67) r1 <<= 10                   ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
783: (71) r8 = *(u8 *)(r7 +1)         ; R7=pkt(off=76,r=84,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
784: (67) r8 <<= 2                    ; R8_w=scalar(umax=1020,var_off=(0x0; 0x3fc))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
785: (4f) r8 |= r1                    ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00)) R8_w=scalar()
786: (18) r1 = 0x100000000            ; R1_w=4294967296
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
788: (71) r2 = *(u8 *)(r7 +2)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=76,r=84,imm=0)
789: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
790: (05) goto pc+806
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1597: (57) r2 &= 255                  ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
; 
1598: (4f) r8 |= r2                   ; R2_w=scalar(umax=3,var_off=(0x0; 0x3)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1599: (bf) r2 = r8                    ; R2_w=scalar(id=316) R8_w=scalar(id=316)
1600: (67) r2 <<= 32                  ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
1601: (c7) r2 s>>= 32                 ; R2_w=scalar(smin=-2147483648,smax=2147483647)
1602: (b7) r3 = 1                     ; R3_w=1
; if (qpr.server_id > 0) {
1603: (6d) if r3 s> r2 goto pc+32     ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1604: (77) r1 >>= 32                  ; R1_w=1
; if (cid_version == QUIC_CONNID_VERSION_V1) {
1605: (15) if r1 == 0x3 goto pc+5
last_idx 1605 first_idx 1597
regs=2 stack=0 before 1604: (77) r1 >>= 32
regs=2 stack=0 before 1603: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 1602: (b7) r3 = 1
regs=2 stack=0 before 1601: (c7) r2 s>>= 32
regs=2 stack=0 before 1600: (67) r2 <<= 32
regs=2 stack=0 before 1599: (bf) r2 = r8
regs=2 stack=0 before 1598: (4f) r8 |= r2
regs=2 stack=0 before 1597: (57) r2 &= 255
parent didn't have regs=2 stack=0 marks: R0=map_value(off=0,ks=4,vs=104,imm=0) R1_rw=P4294967296 R2_rw=scalar(umax=3,var_off=(0x0; 0x3)) R6=ctx(off=0,imm=0) R7=pkt(off=76,r=84,imm=0) R8_rw=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
last_idx 790 first_idx 774
regs=2 stack=0 before 790: (05) goto pc+806
regs=2 stack=0 before 789: (77) r2 >>= 6
regs=2 stack=0 before 788: (71) r2 = *(u8 *)(r7 +2)
regs=2 stack=0 before 786: (18) r1 = 0x100000000
1606: (15) if r1 == 0x2 goto pc+7     ; R1=P1
1607: (55) if r1 != 0x1 goto pc+9     ; R1=P1
; quic_packets_stats->cid_v1 += 1;
1608: (bf) r1 = r9                    ; R1_w=map_value(off=0,ks=4,vs=104,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0)
1609: (07) r1 += 56                   ; R1_w=map_value(off=56,ks=4,vs=104,imm=0)
1610: (05) goto pc+8
; 
1619: (79) r2 = *(u64 *)(r1 +0)       ; R1_w=map_value(off=56,ks=4,vs=104,imm=0) R2_w=scalar()
1620: (07) r2 += 1                    ; R2_w=scalar()
1621: (7b) *(u64 *)(r1 +0) = r2       ; R1_w=map_value(off=56,ks=4,vs=104,imm=0) R2_w=scalar()
; __u32 key = qpr.server_id;
1622: (63) *(u32 *)(r10 -20) = r8     ; R8=scalar(id=316) R10=fp0 fp-24=mmmm????
1623: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1624: (07) r2 += -20                  ; R2_w=fp-20
; __u32* real_pos = bpf_map_lookup_elem(&server_id_map, &key);
1625: (18) r1 = 0xffffaebab0634000    ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
1627: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=317,off=0,ks=4,vs=4,imm=0)
; if (real_pos) {
1628: (15) if r0 == 0x0 goto pc+7     ; R0=map_value(off=0,ks=4,vs=4,imm=0)
; key = *real_pos;
1629: (61) r1 = *(u32 *)(r0 +0)       ; R0=map_value(off=0,ks=4,vs=4,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; key = *real_pos;
1630: (63) *(u32 *)(r10 -20) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-24=mmmm????
; if (key == 0) {
1631: (55) if r1 != 0x0 goto pc+496   ; R1_w=0
; quic_packets_stats->cid_invalid_server_id_sample = qpr.server_id;
1632: (7b) *(u64 *)(r9 +24) = r8      ; R8=scalar(id=316) R9=map_value(off=0,ks=4,vs=104,imm=0)
; quic_packets_stats->cid_invalid_server_id += 1;
1633: (79) r1 = *(u64 *)(r9 +16)      ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
1634: (07) r1 += 1                    ; R1_w=scalar()
1635: (7b) *(u64 *)(r9 +16) = r1      ; R1=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
; 
1636: (79) r1 = *(u64 *)(r9 +0)       ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
1637: (07) r1 += 1                    ; R1_w=scalar()
1638: (7b) *(u64 *)(r9 +0) = r1       ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
1639: (79) r9 = *(u64 *)(r10 -144)    ; R9_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
; original_sport = pckt.flow.port16[0];
1640: (69) r1 = *(u16 *)(r10 -48)     ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
1641: (7b) *(u64 *)(r10 -168) = r1    ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-168_w=
1642: (71) r1 = *(u8 *)(r10 -36)      ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
1643: (57) r1 &= 2
frame -168: propagating fp0
last_idx 1644 first_idx 1636
regs=0 stack=100000 before 1643: (57) r1 &= 2
regs=0 stack=100000 before 1642: (71) r1 = *(u8 *)(r10 -36)
regs=0 stack=100000 before 1641: (7b) *(u64 *)(r10 -168) = r1
regs=2 stack=0 before 1640: (69) r1 = *(u16 *)(r10 -48)
regs=0 stack=20 before 1639: (79) r9 = *(u64 *)(r10 -144)
regs=0 stack=20 before 1638: (7b) *(u64 *)(r9 +0) = r1
regs=0 stack=20 before 1637: (07) r1 += 1
regs=0 stack=20 before 1636: (79) r1 = *(u64 *)(r9 +0)
parent already had regs=0 stack=0 marks: R0=map_value(off=0,ks=4,vs=4,imm=0) R1_w=scalar() R6_r=ctx(off=0,imm=0) R7=pkt(off=76,r=84,imm=0) R8=scalar(id=316) R9_r=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-24_r=mmmm???? fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168=
1644: safe

from 1631 to 2128: R0=map_value(off=0,ks=4,vs=4,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6=ctx(off=0,imm=0) R7=pkt(off=76,r=84,imm=0) R8=scalar(id=316) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-24=mmmm???? fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; pckt.real_index = key;
2128: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
2129: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
2130: (07) r2 += -20                  ; R2_w=fp-20
; dst = bpf_map_lookup_elem(&reals, &key);
2131: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
2133: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=318,off=0,ks=4,vs=20,imm=0)
2134: (7b) *(u64 *)(r10 -176) = r0    ; R0_w=map_value_or_null(id=318,off=0,ks=4,vs=20,imm=0) R10=fp0 fp-176_w=map_value_or_null
; if (!dst) {
2135: (55) if r0 != 0x0 goto pc+4     ; R0_w=0
2136: safe

from 2135 to 2140: R0=map_value(off=0,ks=4,vs=20,imm=0) R6=ctx(off=0,imm=0) R7=pkt(off=76,r=84,imm=0) R8=scalar(id=316) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=map_value
; quic_packets_stats->cid_unknown_real_dropped += 1;
2140: (05) goto pc+0
; __u32 flags_key = 0;
2141: (62) *(u32 *)(r10 -124) = 0     ; R10=fp0 fp-128=mmmm????
2142: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
2143: (07) r2 += -124                 ; R2_w=fp-124
; bpf_map_lookup_elem(&server_id_flags, &flags_key);
2144: (18) r1 = 0xffffa03587066800    ; R1_w=map_ptr(off=0,ks=4,vs=1,imm=0)
2146: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=319,off=0,ks=4,vs=1,imm=0)
; flags_value && flags_value->update_quic_sid_based_dst_in_lru;
2147: (15) if r0 == 0x0 goto pc+86    ; R0_w=map_value(off=0,ks=4,vs=1,imm=0)
; flags_value && flags_value->update_quic_sid_based_dst_in_lru;
2148: (71) r7 = *(u8 *)(r0 +0)        ; R0_w=map_value(off=0,ks=4,vs=1,imm=0) R7_w=scalar(umax=255,var_off=(0x0; 0xff))
2149: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
2150: (07) r2 += -80                  ; R2_w=fp-80
; struct real_pos_lru* dst_lru = bpf_map_lookup_elem(lru_map, &pckt->flow);
2151: (79) r1 = *(u64 *)(r10 -152)    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0
2152: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=320,off=0,ks=40,vs=16,imm=0)
; if (dst_lru) {
2153: (15) if r0 == 0x0 goto pc+29    ; R0=map_value(off=0,ks=40,vs=16,imm=0)
; if (dst_lru->pos == pckt->real_index) {
2154: (61) r1 = *(u32 *)(r10 -40)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; if (dst_lru->pos == pckt->real_index) {
2155: (61) r2 = *(u32 *)(r0 +0)       ; R0=map_value(off=0,ks=40,vs=16,imm=0) R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; flags_value && flags_value->update_quic_sid_based_dst_in_lru;
2156: (bf) r3 = r7                    ; R3_w=scalar(id=321,umax=255,var_off=(0x0; 0xff)) R7=scalar(id=321,umax=255,var_off=(0x0; 0xff))
; if (dst_lru->pos == pckt->real_index) {
2157: (15) if r3 == 0x0 goto pc+99    ; R3_w=scalar(id=321,umax=255,var_off=(0x0; 0xff))
2158: (bf) r3 = r1                    ; R1_w=scalar(id=322,umax=4294967295,var_off=(0x0; 0xffffffff)) R3_w=scalar(id=322,umax=4294967295,var_off=(0x0; 0xffffffff))
2159: (bf) r4 = r2                    ; R2_w=scalar(id=323,umax=4294967295,var_off=(0x0; 0xffffffff)) R4_w=scalar(id=323,umax=4294967295,var_off=(0x0; 0xffffffff))
2160: (1d) if r4 == r3 goto pc+96     ; R3_w=scalar(id=322,umax=4294967295,var_off=(0x0; 0xffffffff)) R4_w=scalar(id=323,umax=4294967295,var_off=(0x0; 0xffffffff))
; dst_lru->pos = pckt->real_index;
2161: (63) *(u32 *)(r0 +0) = r1       ; R0=map_value(off=0,ks=40,vs=16,imm=0) R1_w=scalar(id=322,umax=4294967295,var_off=(0x0; 0xffffffff))
; vip_num, /* new conn */ false, /* mismatch in lru */ true);
2162: (61) r1 = *(u32 *)(r10 -108)    ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; if (res == DST_MATCH_IN_LRU) {
2163: (7b) *(u64 *)(r10 -168) = r1    ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-168_w=
2164: (05) goto pc+77
; quic_packets_stats->dst_mismatch_in_lru += 1;
2242: (79) r1 = *(u64 *)(r9 +88)      ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
2243: (07) r1 += 1                    ; R1_w=scalar()
2244: (7b) *(u64 *)(r9 +88) = r1      ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
2245: (79) r1 = *(u64 *)(r10 -168)    ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
2246: (63) *(u32 *)(r10 -16) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-16=
2247: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
2248: (07) r2 += -16                  ; R2_w=fp-16
; bpf_map_lookup_elem(&server_id_stats, &vip_num);
2249: (18) r1 = 0xffffa0364c1b2000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
2251: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=324,off=0,ks=4,vs=16,imm=0)
; if (!per_vip_stats) {
2252: (15) if r0 == 0x0 goto pc+8     ; R0_w=map_value(off=0,ks=4,vs=16,imm=0)
; per_vip_stats->v2 += 1;
2253: (79) r1 = *(u64 *)(r0 +8)       ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
2254: (07) r1 += 1                    ; R1_w=scalar()
2255: (7b) *(u64 *)(r0 +8) = r1       ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
2256: (05) goto pc+4
2261: safe

from 2252 to 2261: safe

from 2160 to 2257: R0=map_value(off=0,ks=40,vs=16,imm=0) R1=scalar(id=322,umax=4294967295,var_off=(0x0; 0xffffffff)) R2=scalar(id=323,umax=4294967295,var_off=(0x0; 0xffffffff)) R3=scalar(id=322,umax=4294967295,var_off=(0x0; 0xffffffff)) R4=scalar(id=323,umax=4294967295,var_off=(0x0; 0xffffffff)) R6=ctx(off=0,imm=0) R7=scalar(id=321,umax=255,var_off=(0x0; 0xff)) R8=scalar(id=316) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-128=mmmm???? fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=map_value
; if (res == DST_MATCH_IN_LRU) {
2257: (5d) if r2 != r1 goto pc-16     ; R1=scalar(id=322,umax=4294967295,var_off=(0x0; 0xffffffff)) R2=scalar(id=323,umax=4294967295,var_off=(0x0; 0xffffffff))
2258: safe

from 2257 to 2242: safe

from 2157 to 2257: safe

from 2153 to 2183: safe

from 2147 to 2234: R0_w=0 R6=ctx(off=0,imm=0) R7=pkt(off=76,r=84,imm=0) R8=scalar(id=316) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-128=mmmm???? fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=map_value
; if (!dst) {
2234: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
2235: (07) r2 += -80                  ; R2_w=fp-80
; struct real_pos_lru* dst_lru = bpf_map_lookup_elem(lru_map, &pckt->flow);
2236: (79) r1 = *(u64 *)(r10 -152)    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0
2237: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=325,off=0,ks=40,vs=16,imm=0)
; if (dst_lru) {
2238: (15) if r0 == 0x0 goto pc-42    ; R0=map_value(off=0,ks=40,vs=16,imm=0)
; if (dst_lru->pos == pckt->real_index) {
2239: (61) r1 = *(u32 *)(r0 +0)       ; R0=map_value(off=0,ks=40,vs=16,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (dst_lru->pos == pckt->real_index) {
2240: (61) r2 = *(u32 *)(r10 -40)     ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; if (res == DST_MATCH_IN_LRU) {
2241: (1d) if r1 == r2 goto pc+16     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
2242: safe

from 2241 to 2258: safe

from 2238 to 2197: safe

from 1628 to 1636: safe

from 1603 to 1636: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=4294967296 R2=scalar(smin=-2147483648,smax=0) R3=1 R6=ctx(off=0,imm=0) R7=pkt(off=76,r=84,imm=0) R8=scalar(id=316) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; 
1636: (79) r1 = *(u64 *)(r9 +0)       ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
1637: (07) r1 += 1                    ; R1_w=scalar()
1638: (7b) *(u64 *)(r9 +0) = r1       ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
1639: (79) r9 = *(u64 *)(r10 -144)    ; R9_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
; original_sport = pckt.flow.port16[0];
1640: (69) r1 = *(u16 *)(r10 -48)     ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
1641: (7b) *(u64 *)(r10 -168) = r1    ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-168_w=
1642: (71) r1 = *(u8 *)(r10 -36)      ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
1643: (57) r1 &= 2
frame -168: propagating fp0
last_idx 1644 first_idx 1636
regs=0 stack=100000 before 1643: (57) r1 &= 2
regs=0 stack=100000 before 1642: (71) r1 = *(u8 *)(r10 -36)
regs=0 stack=100000 before 1641: (7b) *(u64 *)(r10 -168) = r1
regs=2 stack=0 before 1640: (69) r1 = *(u16 *)(r10 -48)
regs=0 stack=20 before 1639: (79) r9 = *(u64 *)(r10 -144)
regs=0 stack=20 before 1638: (7b) *(u64 *)(r9 +0) = r1
regs=0 stack=20 before 1637: (07) r1 += 1
regs=0 stack=20 before 1636: (79) r1 = *(u64 *)(r9 +0)
parent already had regs=0 stack=0 marks: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=4294967296 R2_w=scalar(smin=-2147483648,smax=0) R3_w=1 R6_r=ctx(off=0,imm=0) R7=pkt(off=76,r=84,imm=0) R8_w=scalar(id=316) R9_r=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168=
1644: safe

from 780 to 1636: safe

from 779 to 1589: R0=map_value(off=0,ks=4,vs=104,imm=0) R1_w=scalar(id=315,umax=255,var_off=(0x0; 0xff)) R2_w=2 R6=ctx(off=0,imm=0) R7=pkt(off=76,r=84,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1589: (71) r1 = *(u8 *)(r7 +1)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=76,r=84,imm=0)
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1590: (67) r1 <<= 16                  ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1591: (71) r8 = *(u8 *)(r7 +2)        ; R7=pkt(off=76,r=84,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1592: (67) r8 <<= 8                   ; R8_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1593: (4f) r8 |= r1                   ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000)) R8_w=scalar()
1594: (18) r1 = 0x200000000           ; R1_w=8589934592
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1596: (71) r2 = *(u8 *)(r7 +3)        ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=76,r=84,imm=0)
1597: (57) r2 &= 255                  ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
1598: (4f) r8 |= r2                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1599: (bf) r2 = r8                    ; R2_w=scalar(id=326) R8_w=scalar(id=326)
1600: (67) r2 <<= 32                  ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
1601: (c7) r2 s>>= 32                 ; R2_w=scalar(smin=-2147483648,smax=2147483647)
1602: (b7) r3 = 1                     ; R3_w=1
; if (qpr.server_id > 0) {
1603: (6d) if r3 s> r2 goto pc+32     ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1604: (77) r1 >>= 32                  ; R1_w=2
; if (cid_version == QUIC_CONNID_VERSION_V1) {
1605: (15) if r1 == 0x3 goto pc+5
last_idx 1605 first_idx 774
regs=2 stack=0 before 1604: (77) r1 >>= 32
regs=2 stack=0 before 1603: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 1602: (b7) r3 = 1
regs=2 stack=0 before 1601: (c7) r2 s>>= 32
regs=2 stack=0 before 1600: (67) r2 <<= 32
regs=2 stack=0 before 1599: (bf) r2 = r8
regs=2 stack=0 before 1598: (4f) r8 |= r2
regs=2 stack=0 before 1597: (57) r2 &= 255
regs=2 stack=0 before 1596: (71) r2 = *(u8 *)(r7 +3)
regs=2 stack=0 before 1594: (18) r1 = 0x200000000
1606: R1=P2
1606: (15) if r1 == 0x2 goto pc+7     ; R1=P2
; quic_packets_stats->cid_v2 += 1;
1614: (bf) r1 = r9                    ; R1_w=map_value(off=0,ks=4,vs=104,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0)
1615: (07) r1 += 64                   ; R1_w=map_value(off=64,ks=4,vs=104,imm=0)
1616: (05) goto pc+2
; 
1619: (79) r2 = *(u64 *)(r1 +0)       ; R1_w=map_value(off=64,ks=4,vs=104,imm=0) R2_w=scalar()
1620: (07) r2 += 1                    ; R2_w=scalar()
1621: (7b) *(u64 *)(r1 +0) = r2       ; R1_w=map_value(off=64,ks=4,vs=104,imm=0) R2_w=scalar()
; __u32 key = qpr.server_id;
1622: (63) *(u32 *)(r10 -20) = r8     ; R8=scalar(id=326) R10=fp0 fp-24=mmmm????
1623: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1624: (07) r2 += -20                  ; R2_w=fp-20
; __u32* real_pos = bpf_map_lookup_elem(&server_id_map, &key);
1625: (18) r1 = 0xffffaebab0634000    ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
1627: (85) call bpf_map_lookup_elem#1
1628: safe

from 1603 to 1636: safe

from 778 to 1577: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=315,umax=255,var_off=(0x0; 0xff)) R2=3 R6=ctx(off=0,imm=0) R7=pkt(off=76,r=84,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1577: (71) r1 = *(u8 *)(r7 +1)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=76,r=84,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1578: (67) r1 <<= 24                  ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1579: (71) r8 = *(u8 *)(r7 +2)        ; R7=pkt(off=76,r=84,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1580: (67) r8 <<= 16                  ; R8_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1581: (4f) r8 |= r1                   ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432) R8_w=scalar()
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1582: (71) r1 = *(u8 *)(r7 +3)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=76,r=84,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1583: (67) r1 <<= 8                   ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1584: (4f) r8 |= r1                   ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00)) R8_w=scalar()
1585: (18) r1 = 0x300000000           ; R1_w=12884901888
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1587: (71) r2 = *(u8 *)(r7 +4)        ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=76,r=84,imm=0)
1588: (05) goto pc+8
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1597: (57) r2 &= 255                  ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
1598: (4f) r8 |= r2                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1599: (bf) r2 = r8                    ; R2_w=scalar(id=328) R8_w=scalar(id=328)
1600: (67) r2 <<= 32                  ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
1601: (c7) r2 s>>= 32                 ; R2_w=scalar(smin=-2147483648,smax=2147483647)
1602: (b7) r3 = 1                     ; R3_w=1
; if (qpr.server_id > 0) {
1603: (6d) if r3 s> r2 goto pc+32     ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1604: (77) r1 >>= 32                  ; R1=3
; if (cid_version == QUIC_CONNID_VERSION_V1) {
1605: (15) if r1 == 0x3 goto pc+5
last_idx 1605 first_idx 1605
parent didn't have regs=2 stack=0 marks: R0=map_value(off=0,ks=4,vs=104,imm=0) R1_rw=P3 R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1 R6=ctx(off=0,imm=0) R7=pkt(off=76,r=84,imm=0) R8_w=scalar(id=328) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
last_idx 1604 first_idx 1577
regs=2 stack=0 before 1604: (77) r1 >>= 32
regs=2 stack=0 before 1603: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 1602: (b7) r3 = 1
regs=2 stack=0 before 1601: (c7) r2 s>>= 32
regs=2 stack=0 before 1600: (67) r2 <<= 32
regs=2 stack=0 before 1599: (bf) r2 = r8
regs=2 stack=0 before 1598: (4f) r8 |= r2
regs=2 stack=0 before 1597: (57) r2 &= 255
regs=2 stack=0 before 1588: (05) goto pc+8
regs=2 stack=0 before 1587: (71) r2 = *(u8 *)(r7 +4)
regs=2 stack=0 before 1585: (18) r1 = 0x300000000
; quic_packets_stats->cid_v3 += 1;
1611: (bf) r1 = r9                    ; R1_w=map_value(off=0,ks=4,vs=104,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0)
1612: (07) r1 += 72                   ; R1_w=map_value(off=72,ks=4,vs=104,imm=0)
1613: (05) goto pc+5
; 
1619: (79) r2 = *(u64 *)(r1 +0)       ; R1_w=map_value(off=72,ks=4,vs=104,imm=0) R2_w=scalar()
1620: (07) r2 += 1                    ; R2_w=scalar()
1621: (7b) *(u64 *)(r1 +0) = r2       ; R1_w=map_value(off=72,ks=4,vs=104,imm=0) R2_w=scalar()
; __u32 key = qpr.server_id;
1622: (63) *(u32 *)(r10 -20) = r8     ; R8=scalar(id=328) R10=fp0 fp-24=mmmm????
1623: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1624: (07) r2 += -20                  ; R2_w=fp-20
; __u32* real_pos = bpf_map_lookup_elem(&server_id_map, &key);
1625: (18) r1 = 0xffffaebab0634000    ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
1627: (85) call bpf_map_lookup_elem#1
1628: safe

from 1603 to 1636: safe

from 774 to 1636: safe

from 744 to 1562: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=pkt(off=84,r=84,imm=0) R2=0 R6=ctx(off=0,imm=0) R7=pkt(off=62,r=84,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; quic_packets_stats->cid_initial += 1;
1562: (79) r1 = *(u64 *)(r9 +8)       ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
1563: (07) r1 += 1                    ; R1_w=scalar()
1564: (7b) *(u64 *)(r9 +8) = r1       ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
1565: (79) r1 = *(u64 *)(r10 -168)    ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
1566: (63) *(u32 *)(r10 -16) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-16=
1567: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1568: (07) r2 += -16                  ; R2_w=fp-16
; bpf_map_lookup_elem(&server_id_stats, &vip_num);
1569: (18) r1 = 0xffffa0364c1b2000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
1571: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=330,off=0,ks=4,vs=16,imm=0)
; if (!per_vip_stats) {
1572: (15) if r0 == 0x0 goto pc+66    ; R0_w=map_value(off=0,ks=4,vs=16,imm=0)
; per_vip_stats->v1 += 1;
1573: (79) r1 = *(u64 *)(r0 +0)       ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1574: (07) r1 += 1                    ; R1_w=scalar()
1575: (7b) *(u64 *)(r0 +0) = r1       ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1576: (05) goto pc+62
1639: safe

from 1572 to 1639: safe

from 742 to 1636: safe

from 739 to 770: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=pkt(off=71,r=82,imm=0) R2=scalar(umax=127,var_off=(0x0; 0x7f)) R6=ctx(off=0,imm=0) R7=pkt(off=62,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (quic_data + sizeof(struct quic_short_header) > data_end) {
770: (bf) r2 = r7                     ; R2_w=pkt(off=62,r=82,imm=0) R7=pkt(off=62,r=82,imm=0)
771: (07) r2 += 17                    ; R2_w=pkt(off=79,r=82,imm=0)
772: (bf) r7 = r1                     ; R1=pkt(off=71,r=82,imm=0) R7_w=pkt(off=71,r=82,imm=0)
; if (quic_data + sizeof(struct quic_short_header) > data_end) {
773: (2d) if r2 > r8 goto pc+862      ; R2_w=pkt(off=79,r=82,imm=0) R8=pkt_end(off=0,imm=0)
; if (!connId) {
774: (15) if r7 == 0x0 goto pc+861    ; R7_w=pkt(off=71,r=82,imm=0)
; __u8 connIdVersion = (connId[0] >> 6);
775: (71) r1 = *(u8 *)(r7 +0)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=71,r=82,imm=0)
776: (bf) r2 = r1                     ; R1_w=scalar(id=331,umax=255,var_off=(0x0; 0xff)) R2_w=scalar(id=331,umax=255,var_off=(0x0; 0xff))
777: (77) r2 >>= 6                    ; R2=scalar(umax=3,var_off=(0x0; 0x3))
; if (connIdVersion == QUIC_CONNID_VERSION_V1) {
778: (15) if r2 == 0x3 goto pc+798    ; R2=scalar(umax=3,var_off=(0x0; 0x3))
779: (15) if r2 == 0x2 goto pc+809    ; R2=scalar(umax=3,var_off=(0x0; 0x3))
780: (55) if r2 != 0x1 goto pc+855    ; R2=1
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
781: (57) r1 &= 63                    ; R1_w=scalar(umax=63,var_off=(0x0; 0x3f))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
782: (67) r1 <<= 10                   ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
783: (71) r8 = *(u8 *)(r7 +1)         ; R7=pkt(off=71,r=82,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
784: (67) r8 <<= 2                    ; R8_w=scalar(umax=1020,var_off=(0x0; 0x3fc))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
785: (4f) r8 |= r1                    ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00)) R8_w=scalar()
786: (18) r1 = 0x100000000            ; R1_w=4294967296
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
788: (71) r2 = *(u8 *)(r7 +2)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=71,r=82,imm=0)
789: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
790: (05) goto pc+806
frame 1: propagating r0
last_idx 1597 first_idx 778
regs=2 stack=0 before 790: (05) goto pc+806
regs=2 stack=0 before 789: (77) r2 >>= 6
regs=2 stack=0 before 788: (71) r2 = *(u8 *)(r7 +2)
regs=2 stack=0 before 786: (18) r1 = 0x100000000
1597: safe

from 780 to 1636: safe

from 779 to 1589: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=331,umax=255,var_off=(0x0; 0xff)) R2=2 R6=ctx(off=0,imm=0) R7=pkt(off=71,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1589: (71) r1 = *(u8 *)(r7 +1)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=71,r=82,imm=0)
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1590: (67) r1 <<= 16                  ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1591: (71) r8 = *(u8 *)(r7 +2)        ; R7=pkt(off=71,r=82,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1592: (67) r8 <<= 8                   ; R8_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1593: (4f) r8 |= r1                   ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000)) R8_w=scalar()
1594: (18) r1 = 0x200000000           ; R1_w=8589934592
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1596: (71) r2 = *(u8 *)(r7 +3)        ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=71,r=82,imm=0)
1597: (57) r2 &= 255                  ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
1598: (4f) r8 |= r2                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1599: (bf) r2 = r8                    ; R2_w=scalar(id=332) R8_w=scalar(id=332)
1600: (67) r2 <<= 32                  ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
1601: (c7) r2 s>>= 32                 ; R2_w=scalar(smin=-2147483648,smax=2147483647)
1602: (b7) r3 = 1                     ; R3_w=1
; if (qpr.server_id > 0) {
1603: (6d) if r3 s> r2 goto pc+32     ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1604: (77) r1 >>= 32                  ; R1_w=2
; if (cid_version == QUIC_CONNID_VERSION_V1) {
1605: (15) if r1 == 0x3 goto pc+5
last_idx 1605 first_idx 1589
regs=2 stack=0 before 1604: (77) r1 >>= 32
regs=2 stack=0 before 1603: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 1602: (b7) r3 = 1
regs=2 stack=0 before 1601: (c7) r2 s>>= 32
regs=2 stack=0 before 1600: (67) r2 <<= 32
regs=2 stack=0 before 1599: (bf) r2 = r8
regs=2 stack=0 before 1598: (4f) r8 |= r2
regs=2 stack=0 before 1597: (57) r2 &= 255
regs=2 stack=0 before 1596: (71) r2 = *(u8 *)(r7 +3)
regs=2 stack=0 before 1594: (18) r1 = 0x200000000
frame 1: propagating r0
1606: safe

from 1603 to 1636: safe

from 778 to 1577: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=331,umax=255,var_off=(0x0; 0xff)) R2=3 R6=ctx(off=0,imm=0) R7=pkt(off=71,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1577: (71) r1 = *(u8 *)(r7 +1)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=71,r=82,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1578: (67) r1 <<= 24                  ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1579: (71) r8 = *(u8 *)(r7 +2)        ; R7=pkt(off=71,r=82,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1580: (67) r8 <<= 16                  ; R8_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1581: (4f) r8 |= r1                   ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432) R8_w=scalar()
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1582: (71) r1 = *(u8 *)(r7 +3)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=71,r=82,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1583: (67) r1 <<= 8                   ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1584: (4f) r8 |= r1                   ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00)) R8_w=scalar()
1585: (18) r1 = 0x300000000           ; R1_w=12884901888
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1587: (71) r2 = *(u8 *)(r7 +4)        ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=71,r=82,imm=0)
1588: (05) goto pc+8
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1597: (57) r2 &= 255                  ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
1598: (4f) r8 |= r2                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1599: (bf) r2 = r8                    ; R2_w=scalar(id=333) R8_w=scalar(id=333)
1600: (67) r2 <<= 32                  ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
1601: (c7) r2 s>>= 32                 ; R2_w=scalar(smin=-2147483648,smax=2147483647)
1602: (b7) r3 = 1                     ; R3_w=1
; if (qpr.server_id > 0) {
1603: (6d) if r3 s> r2 goto pc+32     ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1604: (77) r1 >>= 32
frame 1: propagating r0
last_idx 1605 first_idx 1577
regs=2 stack=0 before 1604: (77) r1 >>= 32
regs=2 stack=0 before 1603: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 1602: (b7) r3 = 1
regs=2 stack=0 before 1601: (c7) r2 s>>= 32
regs=2 stack=0 before 1600: (67) r2 <<= 32
regs=2 stack=0 before 1599: (bf) r2 = r8
regs=2 stack=0 before 1598: (4f) r8 |= r2
regs=2 stack=0 before 1597: (57) r2 &= 255
regs=2 stack=0 before 1588: (05) goto pc+8
regs=2 stack=0 before 1587: (71) r2 = *(u8 *)(r7 +4)
regs=2 stack=0 before 1585: (18) r1 = 0x300000000
1605: safe

from 1603 to 1636: safe

from 774 to 1636: safe

from 773 to 1636: safe

from 735 to 1636: safe

from 730 to 732: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=34 R2=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
732: (0f) r7 += r1
last_idx 732 first_idx 732
parent didn't have regs=2 stack=0 marks: R0=map_value(off=0,ks=4,vs=104,imm=0) R1_r=P34 R2=0 R6=ctx(off=0,imm=0) R7_r=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
last_idx 730 first_idx 730
regs=2 stack=0 before 730: (15) if r2 == 0x0 goto pc+1
parent didn't have regs=2 stack=0 marks: R0_w=map_value(off=0,ks=4,vs=104,imm=0) R1_rw=P34 R2_rw=scalar(umax=1,var_off=(0x0; 0x1)) R6_r=ctx(off=0,imm=0) R7_r=pkt(off=0,r=82,imm=0) R8_r=pkt_end(off=0,imm=0) R9_rw=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=
last_idx 729 first_idx 718
regs=2 stack=0 before 729: (b7) r1 = 34
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
733: (bf) r1 = r7                     ; R1_w=pkt(off=34,r=82,imm=0) R7_w=pkt(off=34,r=82,imm=0)
734: (07) r1 += 9                     ; R1_w=pkt(off=43,r=82,imm=0)
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
735: (2d) if r1 > r8 goto pc+900      ; R1_w=pkt(off=43,r=82,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
736: (71) r2 = *(u8 *)(r7 +8)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=34,r=82,imm=0)
737: (67) r2 <<= 56                   ; R2_w=scalar(smax=9151314442816847872,umax=18374686479671623680,var_off=(0x0; 0xff00000000000000),s32_min=0,s32_max=0,u32_max=0)
738: (c7) r2 s>>= 56                  ; R2_w=scalar(smin=-128,smax=127)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
739: (65) if r2 s> 0xffffffff goto pc+30      ; R2_w=scalar(umin=18446744073709551488,var_off=(0xffffffffffffff80; 0x7f),u32_min=-128)
; if (quic_data + sizeof(struct quic_long_header) > data_end) {
740: (bf) r1 = r7                     ; R1_w=pkt(off=34,r=82,imm=0) R7_w=pkt(off=34,r=82,imm=0)
741: (07) r1 += 22                    ; R1=pkt(off=56,r=82,imm=0)
; if (quic_data + sizeof(struct quic_long_header) > data_end) {
742: (2d) if r1 > r8 goto pc+893      ; R1=pkt(off=56,r=82,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_PACKET_TYPE_MASK) < QUIC_HANDSHAKE) {
743: (57) r2 &= 32                    ; R2_w=scalar(umax=32,var_off=(0x0; 0x20))
; if ((*pkt_type & QUIC_PACKET_TYPE_MASK) < QUIC_HANDSHAKE) {
744: (15) if r2 == 0x0 goto pc+817    ; R2_w=scalar(umax=32,var_off=(0x0; 0x20))
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
745: (71) r1 = *(u8 *)(r7 +13)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=34,r=82,imm=0)
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
746: (07) r7 += 14                    ; R7_w=pkt(off=48,r=82,imm=0)
747: (25) if r1 > 0x7 goto pc+26      ; R1_w=scalar(umax=7,var_off=(0x0; 0x7))
748: (05) goto pc+887
1636: safe

from 747 to 774: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(umin=8,umax=255,var_off=(0x0; 0xff)) R2=scalar(umax=32,var_off=(0x0; 0x20)) R6=ctx(off=0,imm=0) R7=pkt(off=48,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (!connId) {
774: (15) if r7 == 0x0 goto pc+861    ; R7=pkt(off=48,r=82,imm=0)
; __u8 connIdVersion = (connId[0] >> 6);
775: (71) r1 = *(u8 *)(r7 +0)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=48,r=82,imm=0)
776: (bf) r2 = r1                     ; R1_w=scalar(id=334,umax=255,var_off=(0x0; 0xff)) R2_w=scalar(id=334,umax=255,var_off=(0x0; 0xff))
777: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
; if (connIdVersion == QUIC_CONNID_VERSION_V1) {
778: (15) if r2 == 0x3 goto pc+798    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
779: (15) if r2 == 0x2 goto pc+809    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
780: (55) if r2 != 0x1 goto pc+855    ; R2_w=1
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
781: (57) r1 &= 63                    ; R1_w=scalar(umax=63,var_off=(0x0; 0x3f))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
782: (67) r1 <<= 10                   ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
783: (71) r8 = *(u8 *)(r7 +1)         ; R7=pkt(off=48,r=82,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
784: (67) r8 <<= 2                    ; R8_w=scalar(umax=1020,var_off=(0x0; 0x3fc))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
785: (4f) r8 |= r1                    ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00)) R8_w=scalar()
786: (18) r1 = 0x100000000            ; R1_w=4294967296
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
788: (71) r2 = *(u8 *)(r7 +2)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=48,r=82,imm=0)
789: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
790: (05) goto pc+806
frame 1: propagating r0
last_idx 1597 first_idx 774
regs=2 stack=0 before 790: (05) goto pc+806
regs=2 stack=0 before 789: (77) r2 >>= 6
regs=2 stack=0 before 788: (71) r2 = *(u8 *)(r7 +2)
regs=2 stack=0 before 786: (18) r1 = 0x100000000
1597: safe

from 780 to 1636: safe

from 779 to 1589: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=334,umax=255,var_off=(0x0; 0xff)) R2=2 R6=ctx(off=0,imm=0) R7=pkt(off=48,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1589: (71) r1 = *(u8 *)(r7 +1)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=48,r=82,imm=0)
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1590: (67) r1 <<= 16                  ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1591: (71) r8 = *(u8 *)(r7 +2)        ; R7=pkt(off=48,r=82,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1592: (67) r8 <<= 8                   ; R8_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1593: (4f) r8 |= r1                   ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000)) R8_w=scalar()
1594: (18) r1 = 0x200000000           ; R1_w=8589934592
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1596: (71) r2 = *(u8 *)(r7 +3)        ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=48,r=82,imm=0)
1597: (57) r2 &= 255                  ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
1598: (4f) r8 |= r2                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1599: (bf) r2 = r8                    ; R2_w=scalar(id=335) R8_w=scalar(id=335)
1600: (67) r2 <<= 32                  ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
1601: (c7) r2 s>>= 32                 ; R2_w=scalar(smin=-2147483648,smax=2147483647)
1602: (b7) r3 = 1                     ; R3_w=1
; if (qpr.server_id > 0) {
1603: (6d) if r3 s> r2 goto pc+32     ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1604: (77) r1 >>= 32                  ; R1_w=2
; if (cid_version == QUIC_CONNID_VERSION_V1) {
1605: (15) if r1 == 0x3 goto pc+5
last_idx 1605 first_idx 1589
regs=2 stack=0 before 1604: (77) r1 >>= 32
regs=2 stack=0 before 1603: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 1602: (b7) r3 = 1
regs=2 stack=0 before 1601: (c7) r2 s>>= 32
regs=2 stack=0 before 1600: (67) r2 <<= 32
regs=2 stack=0 before 1599: (bf) r2 = r8
regs=2 stack=0 before 1598: (4f) r8 |= r2
regs=2 stack=0 before 1597: (57) r2 &= 255
regs=2 stack=0 before 1596: (71) r2 = *(u8 *)(r7 +3)
regs=2 stack=0 before 1594: (18) r1 = 0x200000000
frame 1: propagating r0
1606: safe

from 1603 to 1636: safe

from 778 to 1577: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=334,umax=255,var_off=(0x0; 0xff)) R2=3 R6=ctx(off=0,imm=0) R7=pkt(off=48,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1577: (71) r1 = *(u8 *)(r7 +1)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=48,r=82,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1578: (67) r1 <<= 24                  ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1579: (71) r8 = *(u8 *)(r7 +2)        ; R7=pkt(off=48,r=82,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1580: (67) r8 <<= 16                  ; R8_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1581: (4f) r8 |= r1                   ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432) R8_w=scalar()
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1582: (71) r1 = *(u8 *)(r7 +3)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=48,r=82,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1583: (67) r1 <<= 8                   ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1584: (4f) r8 |= r1                   ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00)) R8_w=scalar()
1585: (18) r1 = 0x300000000           ; R1_w=12884901888
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1587: (71) r2 = *(u8 *)(r7 +4)        ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=48,r=82,imm=0)
1588: (05) goto pc+8
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1597: (57) r2 &= 255                  ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
1598: (4f) r8 |= r2                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1599: (bf) r2 = r8                    ; R2_w=scalar(id=336) R8_w=scalar(id=336)
1600: (67) r2 <<= 32                  ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
1601: (c7) r2 s>>= 32                 ; R2_w=scalar(smin=-2147483648,smax=2147483647)
1602: (b7) r3 = 1                     ; R3_w=1
; if (qpr.server_id > 0) {
1603: (6d) if r3 s> r2 goto pc+32     ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1604: (77) r1 >>= 32
frame 1: propagating r0
last_idx 1605 first_idx 1577
regs=2 stack=0 before 1604: (77) r1 >>= 32
regs=2 stack=0 before 1603: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 1602: (b7) r3 = 1
regs=2 stack=0 before 1601: (c7) r2 s>>= 32
regs=2 stack=0 before 1600: (67) r2 <<= 32
regs=2 stack=0 before 1599: (bf) r2 = r8
regs=2 stack=0 before 1598: (4f) r8 |= r2
regs=2 stack=0 before 1597: (57) r2 &= 255
regs=2 stack=0 before 1588: (05) goto pc+8
regs=2 stack=0 before 1587: (71) r2 = *(u8 *)(r7 +4)
regs=2 stack=0 before 1585: (18) r1 = 0x300000000
1605: safe

from 1603 to 1636: safe

from 774 to 1636: safe

from 744 to 1562: safe

from 742 to 1636: safe

from 739 to 770: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=pkt(off=43,r=82,imm=0) R2=scalar(umax=127,var_off=(0x0; 0x7f)) R6=ctx(off=0,imm=0) R7=pkt(off=34,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (quic_data + sizeof(struct quic_short_header) > data_end) {
770: (bf) r2 = r7                     ; R2_w=pkt(off=34,r=82,imm=0) R7=pkt(off=34,r=82,imm=0)
771: (07) r2 += 17                    ; R2_w=pkt(off=51,r=82,imm=0)
772: (bf) r7 = r1                     ; R1=pkt(off=43,r=82,imm=0) R7_w=pkt(off=43,r=82,imm=0)
; if (quic_data + sizeof(struct quic_short_header) > data_end) {
773: (2d) if r2 > r8 goto pc+862      ; R2_w=pkt(off=51,r=82,imm=0) R8=pkt_end(off=0,imm=0)
; if (!connId) {
774: (15) if r7 == 0x0 goto pc+861    ; R7_w=pkt(off=43,r=82,imm=0)
; __u8 connIdVersion = (connId[0] >> 6);
775: (71) r1 = *(u8 *)(r7 +0)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=43,r=82,imm=0)
776: (bf) r2 = r1                     ; R1_w=scalar(id=337,umax=255,var_off=(0x0; 0xff)) R2_w=scalar(id=337,umax=255,var_off=(0x0; 0xff))
777: (77) r2 >>= 6                    ; R2=scalar(umax=3,var_off=(0x0; 0x3))
; if (connIdVersion == QUIC_CONNID_VERSION_V1) {
778: (15) if r2 == 0x3 goto pc+798    ; R2=scalar(umax=3,var_off=(0x0; 0x3))
779: (15) if r2 == 0x2 goto pc+809    ; R2=scalar(umax=3,var_off=(0x0; 0x3))
780: (55) if r2 != 0x1 goto pc+855    ; R2=1
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
781: (57) r1 &= 63                    ; R1_w=scalar(umax=63,var_off=(0x0; 0x3f))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
782: (67) r1 <<= 10                   ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
783: (71) r8 = *(u8 *)(r7 +1)         ; R7=pkt(off=43,r=82,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
784: (67) r8 <<= 2                    ; R8_w=scalar(umax=1020,var_off=(0x0; 0x3fc))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
785: (4f) r8 |= r1                    ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00)) R8_w=scalar()
786: (18) r1 = 0x100000000            ; R1_w=4294967296
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
788: (71) r2 = *(u8 *)(r7 +2)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=43,r=82,imm=0)
789: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
790: (05) goto pc+806
frame 1: propagating r0
last_idx 1597 first_idx 778
regs=2 stack=0 before 790: (05) goto pc+806
regs=2 stack=0 before 789: (77) r2 >>= 6
regs=2 stack=0 before 788: (71) r2 = *(u8 *)(r7 +2)
regs=2 stack=0 before 786: (18) r1 = 0x100000000
1597: safe

from 780 to 1636: safe

from 779 to 1589: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=337,umax=255,var_off=(0x0; 0xff)) R2=2 R6=ctx(off=0,imm=0) R7=pkt(off=43,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1589: (71) r1 = *(u8 *)(r7 +1)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=43,r=82,imm=0)
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1590: (67) r1 <<= 16                  ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1591: (71) r8 = *(u8 *)(r7 +2)        ; R7=pkt(off=43,r=82,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1592: (67) r8 <<= 8                   ; R8_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1593: (4f) r8 |= r1                   ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000)) R8_w=scalar()
1594: (18) r1 = 0x200000000           ; R1_w=8589934592
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1596: (71) r2 = *(u8 *)(r7 +3)        ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=43,r=82,imm=0)
1597: (57) r2 &= 255                  ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
1598: (4f) r8 |= r2                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1599: (bf) r2 = r8                    ; R2_w=scalar(id=338) R8_w=scalar(id=338)
1600: (67) r2 <<= 32                  ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
1601: (c7) r2 s>>= 32                 ; R2_w=scalar(smin=-2147483648,smax=2147483647)
1602: (b7) r3 = 1                     ; R3_w=1
; if (qpr.server_id > 0) {
1603: (6d) if r3 s> r2 goto pc+32     ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1604: (77) r1 >>= 32                  ; R1_w=2
; if (cid_version == QUIC_CONNID_VERSION_V1) {
1605: (15) if r1 == 0x3 goto pc+5
last_idx 1605 first_idx 1589
regs=2 stack=0 before 1604: (77) r1 >>= 32
regs=2 stack=0 before 1603: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 1602: (b7) r3 = 1
regs=2 stack=0 before 1601: (c7) r2 s>>= 32
regs=2 stack=0 before 1600: (67) r2 <<= 32
regs=2 stack=0 before 1599: (bf) r2 = r8
regs=2 stack=0 before 1598: (4f) r8 |= r2
regs=2 stack=0 before 1597: (57) r2 &= 255
regs=2 stack=0 before 1596: (71) r2 = *(u8 *)(r7 +3)
regs=2 stack=0 before 1594: (18) r1 = 0x200000000
frame 1: propagating r0
1606: safe

from 1603 to 1636: safe

from 778 to 1577: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=337,umax=255,var_off=(0x0; 0xff)) R2=3 R6=ctx(off=0,imm=0) R7=pkt(off=43,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1577: (71) r1 = *(u8 *)(r7 +1)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=43,r=82,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1578: (67) r1 <<= 24                  ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1579: (71) r8 = *(u8 *)(r7 +2)        ; R7=pkt(off=43,r=82,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1580: (67) r8 <<= 16                  ; R8_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1581: (4f) r8 |= r1                   ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432) R8_w=scalar()
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1582: (71) r1 = *(u8 *)(r7 +3)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=43,r=82,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1583: (67) r1 <<= 8                   ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1584: (4f) r8 |= r1                   ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00)) R8_w=scalar()
1585: (18) r1 = 0x300000000           ; R1_w=12884901888
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1587: (71) r2 = *(u8 *)(r7 +4)        ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=43,r=82,imm=0)
1588: (05) goto pc+8
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1597: (57) r2 &= 255                  ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
1598: (4f) r8 |= r2                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1599: (bf) r2 = r8                    ; R2_w=scalar(id=339) R8_w=scalar(id=339)
1600: (67) r2 <<= 32                  ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
1601: (c7) r2 s>>= 32                 ; R2_w=scalar(smin=-2147483648,smax=2147483647)
1602: (b7) r3 = 1                     ; R3_w=1
; if (qpr.server_id > 0) {
1603: (6d) if r3 s> r2 goto pc+32     ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1604: (77) r1 >>= 32
frame 1: propagating r0
last_idx 1605 first_idx 1577
regs=2 stack=0 before 1604: (77) r1 >>= 32
regs=2 stack=0 before 1603: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 1602: (b7) r3 = 1
regs=2 stack=0 before 1601: (c7) r2 s>>= 32
regs=2 stack=0 before 1600: (67) r2 <<= 32
regs=2 stack=0 before 1599: (bf) r2 = r8
regs=2 stack=0 before 1598: (4f) r8 |= r2
regs=2 stack=0 before 1597: (57) r2 &= 255
regs=2 stack=0 before 1588: (05) goto pc+8
regs=2 stack=0 before 1587: (71) r2 = *(u8 *)(r7 +4)
regs=2 stack=0 before 1585: (18) r1 = 0x300000000
1605: safe

from 1603 to 1636: safe

from 774 to 1636: safe

from 773 to 1636: safe

from 735 to 1636: safe

from 726 to 1857: safe

from 623 to 1640: R0=map_ptr(off=0,ks=40,vs=16,imm=0) R1=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; original_sport = pckt.flow.port16[0];
1640: (69) r1 = *(u16 *)(r10 -48)     ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
1641: (7b) *(u64 *)(r10 -168) = r1    ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-168_w=
1642: (71) r1 = *(u8 *)(r10 -36)      ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
1643: (57) r1 &= 2                    ; R1_w=scalar(umax=2,var_off=(0x0; 0x2))
; if (!dst && !(pckt.flags & F_SYN_SET) &&
1644: (55) if r1 != 0x0 goto pc+29    ; R1_w=0
; !(vip_info->flags & F_LRU_BYPASS)) {
1645: (61) r1 = *(u32 *)(r9 +0)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9=map_value(off=0,ks=20,vs=8,imm=0)
; !(vip_info->flags & F_LRU_BYPASS)) {
1646: (57) r1 &= 2                    ; R1_w=scalar(umax=2,var_off=(0x0; 0x2))
; if (!dst && !(pckt.flags & F_SYN_SET) &&
1647: (55) if r1 != 0x0 goto pc+26    ; R1_w=0
1648: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1649: (07) r2 += -80                  ; R2_w=fp-80
; dst_lru = bpf_map_lookup_elem(lru_map, &pckt->flow);
1650: (79) r1 = *(u64 *)(r10 -152)    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0
1651: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=340,off=0,ks=40,vs=16,imm=0)
1652: (bf) r7 = r0                    ; R0=map_value_or_null(id=340,off=0,ks=40,vs=16,imm=0) R7_w=map_value_or_null(id=340,off=0,ks=40,vs=16,imm=0)
; if (!dst_lru) {
1653: (15) if r7 == 0x0 goto pc+20    ; R7_w=map_value(off=0,ks=40,vs=16,imm=0)
; if (!isGlobalLru && pckt->flow.proto == IPPROTO_UDP) {
1654: (71) r1 = *(u8 *)(r10 -44)      ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (!isGlobalLru && pckt->flow.proto == IPPROTO_UDP) {
1655: (55) if r1 != 0x11 goto pc+8    ; R1_w=17
; cur_time = bpf_ktime_get_ns();
1656: (85) call bpf_ktime_get_ns#5    ; R0_w=scalar()
; if (cur_time - dst_lru->atime > LRU_UDP_TIMEOUT) {
1657: (79) r1 = *(u64 *)(r7 +8)       ; R1_w=scalar() R7_w=map_value(off=0,ks=40,vs=16,imm=0)
; if (cur_time - dst_lru->atime > LRU_UDP_TIMEOUT) {
1658: (bf) r2 = r0                    ; R0_w=scalar(id=341) R2_w=scalar(id=341)
1659: (1f) r2 -= r1                   ; R1_w=scalar() R2_w=scalar()
1660: (18) r1 = 0x6fc23ac00           ; R1=30000000000
; if (cur_time - dst_lru->atime > LRU_UDP_TIMEOUT) {
1662: (2d) if r2 > r1 goto pc+11      ; R1=30000000000 R2=scalar(umax=30000000000,var_off=(0x0; 0x7ffffffff))
; dst_lru->atime = cur_time;
1663: (7b) *(u64 *)(r7 +8) = r0       ; R0=scalar(id=341) R7=map_value(off=0,ks=40,vs=16,imm=0)
; key = dst_lru->pos;
1664: (61) r1 = *(u32 *)(r7 +0)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R7=map_value(off=0,ks=40,vs=16,imm=0)
; pckt->real_index = key;
1665: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
; key = dst_lru->pos;
1666: (63) *(u32 *)(r10 -16) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-16=
1667: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; key = dst_lru->pos;
1668: (07) r2 += -16                  ; R2_w=fp-16
; *real = bpf_map_lookup_elem(&reals, &key);
1669: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1671: (85) call bpf_map_lookup_elem#1
frame -168: propagating fp0
last_idx 1672 first_idx 1662
regs=0 stack=100000 before 1671: (85) call bpf_map_lookup_elem#1
regs=0 stack=100000 before 1669: (18) r1 = 0xffffaeba8c207000
regs=0 stack=100000 before 1668: (07) r2 += -16
regs=0 stack=100000 before 1667: (bf) r2 = r10
regs=0 stack=100000 before 1666: (63) *(u32 *)(r10 -16) = r1
regs=0 stack=100000 before 1665: (63) *(u32 *)(r10 -40) = r1
regs=0 stack=100000 before 1664: (61) r1 = *(u32 *)(r7 +0)
regs=0 stack=100000 before 1663: (7b) *(u64 *)(r7 +8) = r0
regs=0 stack=100000 before 1662: (2d) if r2 > r1 goto pc+11
parent didn't have regs=0 stack=100000 marks: R0_rw=scalar(id=341) R1_rw=30000000000 R2_rw=scalar() R6_r=ctx(off=0,imm=0) R7_rw=map_value(off=0,ks=40,vs=16,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1660 first_idx 1652
regs=0 stack=100000 before 1660: (18) r1 = 0x6fc23ac00
regs=0 stack=100000 before 1659: (1f) r2 -= r1
regs=0 stack=100000 before 1658: (bf) r2 = r0
regs=0 stack=100000 before 1657: (79) r1 = *(u64 *)(r7 +8)
regs=0 stack=100000 before 1656: (85) call bpf_ktime_get_ns#5
regs=0 stack=100000 before 1655: (55) if r1 != 0x11 goto pc+8
regs=0 stack=100000 before 1654: (71) r1 = *(u8 *)(r10 -44)
regs=0 stack=100000 before 1653: (15) if r7 == 0x0 goto pc+20
regs=0 stack=100000 before 1652: (bf) r7 = r0
parent didn't have regs=0 stack=100000 marks: R0_rw=map_value_or_null(id=340,off=0,ks=40,vs=16,imm=0) R6_r=ctx(off=0,imm=0) R7=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_rw=P
last_idx 1651 first_idx 1640
regs=0 stack=100000 before 1651: (85) call bpf_map_lookup_elem#1
regs=0 stack=100000 before 1650: (79) r1 = *(u64 *)(r10 -152)
regs=0 stack=100000 before 1649: (07) r2 += -80
regs=0 stack=100000 before 1648: (bf) r2 = r10
regs=0 stack=100000 before 1647: (55) if r1 != 0x0 goto pc+26
regs=0 stack=100000 before 1646: (57) r1 &= 2
regs=0 stack=100000 before 1645: (61) r1 = *(u32 *)(r9 +0)
regs=0 stack=100000 before 1644: (55) if r1 != 0x0 goto pc+29
regs=0 stack=100000 before 1643: (57) r1 &= 2
regs=0 stack=100000 before 1642: (71) r1 = *(u8 *)(r10 -36)
regs=0 stack=100000 before 1641: (7b) *(u64 *)(r10 -168) = r1
regs=2 stack=0 before 1640: (69) r1 = *(u16 *)(r10 -48)
parent already had regs=0 stack=0 marks: R0=map_ptr(off=0,ks=40,vs=16,imm=0) R1_w=0 R6_r=ctx(off=0,imm=0) R7=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9_r=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168=
1672: safe

from 1662 to 1674: R0=scalar(id=341) R1=30000000000 R2=scalar(umin=30000000001) R6=ctx(off=0,imm=0) R7=map_value(off=0,ks=40,vs=16,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (pckt.flow.proto == IPPROTO_TCP) {
1674: (71) r1 = *(u8 *)(r10 -44)      ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (pckt.flow.proto == IPPROTO_TCP) {
1675: (55) if r1 != 0x6 goto pc+18    ; R1_w=6
1676: (05) goto pc+0
; __u32 lru_stats_key = MAX_VIPS + LRU_MISS_CNTR;
1677: (62) *(u32 *)(r10 -16) = 513    ; R10=fp0 fp-16=????mmmm
1678: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1679: (07) r2 += -16                  ; R2_w=fp-16
; bpf_map_lookup_elem(&stats, &lru_stats_key);
1680: (18) r1 = 0xffffa03499be8000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
1682: (85) call bpf_map_lookup_elem#1
frame -168: propagating fp0
last_idx 1683 first_idx 1674
regs=0 stack=100000 before 1682: (85) call bpf_map_lookup_elem#1
regs=0 stack=100000 before 1680: (18) r1 = 0xffffa03499be8000
regs=0 stack=100000 before 1679: (07) r2 += -16
regs=0 stack=100000 before 1678: (bf) r2 = r10
regs=0 stack=100000 before 1677: (62) *(u32 *)(r10 -16) = 513
regs=0 stack=100000 before 1676: (05) goto pc+0
regs=0 stack=100000 before 1675: (55) if r1 != 0x6 goto pc+18
regs=0 stack=100000 before 1674: (71) r1 = *(u8 *)(r10 -44)
parent didn't have regs=0 stack=100000 marks: R0=scalar(id=341) R1=30000000000 R2=scalar(umin=30000000001) R6_r=ctx(off=0,imm=0) R7=map_value(off=0,ks=40,vs=16,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1662 first_idx 1662
regs=0 stack=100000 before 1662: (2d) if r2 > r1 goto pc+11
parent already had regs=0 stack=100000 marks: R0_rw=scalar(id=341) R1_rw=30000000000 R2_rw=scalar() R6_r=ctx(off=0,imm=0) R7_rw=map_value(off=0,ks=40,vs=16,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
1683: safe
frame -168: propagating fp0
last_idx 1694 first_idx 1674
regs=0 stack=100000 before 1675: (55) if r1 != 0x6 goto pc+18
regs=0 stack=100000 before 1674: (71) r1 = *(u8 *)(r10 -44)
parent already had regs=0 stack=100000 marks: R0=scalar(id=341) R1=30000000000 R2=scalar(umin=30000000001) R6_r=ctx(off=0,imm=0) R7=map_value(off=0,ks=40,vs=16,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P

from 1675 to 1694: safe

from 1655 to 1664: R0=map_value(off=0,ks=40,vs=16,imm=0) R1=scalar(umax=255,var_off=(0x0; 0xff)) R6=ctx(off=0,imm=0) R7=map_value(off=0,ks=40,vs=16,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; key = dst_lru->pos;
1664: (61) r1 = *(u32 *)(r7 +0)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R7=map_value(off=0,ks=40,vs=16,imm=0)
; pckt->real_index = key;
1665: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
; key = dst_lru->pos;
1666: (63) *(u32 *)(r10 -16) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-16=
1667: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; key = dst_lru->pos;
1668: (07) r2 += -16                  ; R2_w=fp-16
; *real = bpf_map_lookup_elem(&reals, &key);
1669: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1671: (85) call bpf_map_lookup_elem#1
frame -168: propagating fp0
last_idx 1672 first_idx 1664
regs=0 stack=100000 before 1671: (85) call bpf_map_lookup_elem#1
regs=0 stack=100000 before 1669: (18) r1 = 0xffffaeba8c207000
regs=0 stack=100000 before 1668: (07) r2 += -16
regs=0 stack=100000 before 1667: (bf) r2 = r10
regs=0 stack=100000 before 1666: (63) *(u32 *)(r10 -16) = r1
regs=0 stack=100000 before 1665: (63) *(u32 *)(r10 -40) = r1
regs=0 stack=100000 before 1664: (61) r1 = *(u32 *)(r7 +0)
parent didn't have regs=0 stack=100000 marks: R0=map_value(off=0,ks=40,vs=16,imm=0) R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R6_r=ctx(off=0,imm=0) R7_rw=map_value(off=0,ks=40,vs=16,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=P
last_idx 1655 first_idx 1652
regs=0 stack=100000 before 1655: (55) if r1 != 0x11 goto pc+8
regs=0 stack=100000 before 1654: (71) r1 = *(u8 *)(r10 -44)
regs=0 stack=100000 before 1653: (15) if r7 == 0x0 goto pc+20
regs=0 stack=100000 before 1652: (bf) r7 = r0
parent already had regs=0 stack=100000 marks: R0_rw=map_value_or_null(id=340,off=0,ks=40,vs=16,imm=0) R6_r=ctx(off=0,imm=0) R7=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_rw=P
1672: safe
frame -168: propagating fp0
last_idx 1674 first_idx 1652
regs=0 stack=100000 before 1653: (15) if r7 == 0x0 goto pc+20
regs=0 stack=100000 before 1652: (bf) r7 = r0
parent already had regs=0 stack=100000 marks: R0_rw=map_value_or_null(id=340,off=0,ks=40,vs=16,imm=0) R6_r=ctx(off=0,imm=0) R7=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_rw=P

from 1653 to 1674: safe

from 1647 to 1674: R0=map_ptr(off=0,ks=40,vs=16,imm=0) R1_w=scalar(umax=2,var_off=(0x0; 0x2)) R6=ctx(off=0,imm=0) R7=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168_w=
; if (pckt.flow.proto == IPPROTO_TCP) {
1674: (71) r1 = *(u8 *)(r10 -44)      ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (pckt.flow.proto == IPPROTO_TCP) {
1675: (55) if r1 != 0x6 goto pc+18    ; R1_w=6
1676: (05) goto pc+0
; __u32 lru_stats_key = MAX_VIPS + LRU_MISS_CNTR;
1677: (62) *(u32 *)(r10 -16) = 513    ; R10=fp0 fp-16=????mmmm
1678: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1679: (07) r2 += -16                  ; R2_w=fp-16
; bpf_map_lookup_elem(&stats, &lru_stats_key);
1680: (18) r1 = 0xffffa03499be8000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
1682: (85) call bpf_map_lookup_elem#1
frame -168: propagating fp0
last_idx 1683 first_idx 1677
regs=0 stack=100000 before 1682: (85) call bpf_map_lookup_elem#1
regs=0 stack=100000 before 1680: (18) r1 = 0xffffa03499be8000
regs=0 stack=100000 before 1679: (07) r2 += -16
regs=0 stack=100000 before 1678: (bf) r2 = r10
regs=0 stack=100000 before 1677: (62) *(u32 *)(r10 -16) = 513
parent didn't have regs=0 stack=100000 marks: R0=map_ptr(off=0,ks=40,vs=16,imm=0) R1_w=6 R6_r=ctx(off=0,imm=0) R7=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_rw=P
last_idx 1676 first_idx 1640
regs=0 stack=100000 before 1676: (05) goto pc+0
regs=0 stack=100000 before 1675: (55) if r1 != 0x6 goto pc+18
regs=0 stack=100000 before 1674: (71) r1 = *(u8 *)(r10 -44)
regs=0 stack=100000 before 1647: (55) if r1 != 0x0 goto pc+26
regs=0 stack=100000 before 1646: (57) r1 &= 2
regs=0 stack=100000 before 1645: (61) r1 = *(u32 *)(r9 +0)
regs=0 stack=100000 before 1644: (55) if r1 != 0x0 goto pc+29
regs=0 stack=100000 before 1643: (57) r1 &= 2
regs=0 stack=100000 before 1642: (71) r1 = *(u8 *)(r10 -36)
regs=0 stack=100000 before 1641: (7b) *(u64 *)(r10 -168) = r1
regs=2 stack=0 before 1640: (69) r1 = *(u16 *)(r10 -48)
parent already had regs=0 stack=0 marks: R0=map_ptr(off=0,ks=40,vs=16,imm=0) R1_w=0 R6_r=ctx(off=0,imm=0) R7=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9_r=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168=
1683: safe
frame -168: propagating fp0
last_idx 1694 first_idx 1640
regs=0 stack=100000 before 1675: (55) if r1 != 0x6 goto pc+18
regs=0 stack=100000 before 1674: (71) r1 = *(u8 *)(r10 -44)
regs=0 stack=100000 before 1647: (55) if r1 != 0x0 goto pc+26
regs=0 stack=100000 before 1646: (57) r1 &= 2
regs=0 stack=100000 before 1645: (61) r1 = *(u32 *)(r9 +0)
regs=0 stack=100000 before 1644: (55) if r1 != 0x0 goto pc+29
regs=0 stack=100000 before 1643: (57) r1 &= 2
regs=0 stack=100000 before 1642: (71) r1 = *(u8 *)(r10 -36)
regs=0 stack=100000 before 1641: (7b) *(u64 *)(r10 -168) = r1
regs=2 stack=0 before 1640: (69) r1 = *(u16 *)(r10 -48)
parent already had regs=0 stack=0 marks: R0=map_ptr(off=0,ks=40,vs=16,imm=0) R1_w=0 R6_r=ctx(off=0,imm=0) R7=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9_r=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168=

from 1675 to 1694: safe

from 1644 to 1674: R0=map_ptr(off=0,ks=40,vs=16,imm=0) R1_w=scalar(umax=2,var_off=(0x0; 0x2)) R6=ctx(off=0,imm=0) R7=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168_w=
; if (pckt.flow.proto == IPPROTO_TCP) {
1674: (71) r1 = *(u8 *)(r10 -44)      ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (pckt.flow.proto == IPPROTO_TCP) {
1675: (55) if r1 != 0x6 goto pc+18    ; R1_w=6
1676: (05) goto pc+0
frame -168: propagating fp0
last_idx 1677 first_idx 1640
regs=0 stack=100000 before 1676: (05) goto pc+0
regs=0 stack=100000 before 1675: (55) if r1 != 0x6 goto pc+18
regs=0 stack=100000 before 1674: (71) r1 = *(u8 *)(r10 -44)
regs=0 stack=100000 before 1644: (55) if r1 != 0x0 goto pc+29
regs=0 stack=100000 before 1643: (57) r1 &= 2
regs=0 stack=100000 before 1642: (71) r1 = *(u8 *)(r10 -36)
regs=0 stack=100000 before 1641: (7b) *(u64 *)(r10 -168) = r1
regs=2 stack=0 before 1640: (69) r1 = *(u16 *)(r10 -48)
parent already had regs=0 stack=0 marks: R0=map_ptr(off=0,ks=40,vs=16,imm=0) R1_w=0 R6_r=ctx(off=0,imm=0) R7=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9_r=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168=
1677: safe
frame -168: propagating fp0
last_idx 1694 first_idx 1640
regs=0 stack=100000 before 1675: (55) if r1 != 0x6 goto pc+18
regs=0 stack=100000 before 1674: (71) r1 = *(u8 *)(r10 -44)
regs=0 stack=100000 before 1644: (55) if r1 != 0x0 goto pc+29
regs=0 stack=100000 before 1643: (57) r1 &= 2
regs=0 stack=100000 before 1642: (71) r1 = *(u8 *)(r10 -36)
regs=0 stack=100000 before 1641: (7b) *(u64 *)(r10 -168) = r1
regs=2 stack=0 before 1640: (69) r1 = *(u16 *)(r10 -48)
parent already had regs=0 stack=0 marks: R0=map_ptr(off=0,ks=40,vs=16,imm=0) R1_w=0 R6_r=ctx(off=0,imm=0) R7=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9_r=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168=

from 1675 to 1694: safe

from 591 to 594: R0=map_value(off=0,ks=4,vs=16,imm=0) R1=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm fp-120=mmmm???? fp-136= fp-144=map_value fp-160=map_value
; vip_num = vip_info->vip_num;
594: (61) r1 = *(u32 *)(r9 +4)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9=map_value(off=0,ks=20,vs=8,imm=0)
595: (7b) *(u64 *)(r10 -168) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-168_w=
; vip_num = vip_info->vip_num;
596: (63) *(u32 *)(r10 -108) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-112=mmmmmmmm
; __u32 cpu_num = bpf_get_smp_processor_id();
597: (85) call bpf_get_smp_processor_id#8     ; R0_w=scalar()
; __u32 cpu_num = bpf_get_smp_processor_id();
598: (63) *(u32 *)(r10 -120) = r0     ; R0_w=scalar() R10=fp0 fp-120=mmmmmmmm
599: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; 
600: (07) r2 += -120                  ; R2_w=fp-120
; void* lru_map = bpf_map_lookup_elem(&lru_mapping, &cpu_num);
601: (18) r1 = 0xffffa0376748a000     ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
603: (85) call bpf_map_lookup_elem#1
604: safe

from 583 to 1858: safe

from 574 to 1858: safe

from 568 to 571: R0=map_value(off=0,ks=20,vs=8,imm=0) R1=scalar(umax=136,var_off=(0x0; 0x88)) R6=ctx(off=0,imm=0) R7=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=2 R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm fp-136=
; if (data_end - data > MAX_PCKT_SIZE) {
571: (bf) r1 = r8                     ; R1_w=pkt_end(off=0,imm=0) R8=pkt_end(off=0,imm=0)
572: (1f) r1 -= r7                    ; R1_w=scalar() R7=pkt(off=0,r=82,imm=0)
573: (b7) r9 = 1
574: safe

from 565 to 1858: safe

from 556 to 571: safe

from 459 to 462: R0_w=0 R1=6 R2=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3=scalar(id=301,umin=1,umax=255,var_off=(0x1; 0xfe)) R4=P1 R5=pkt(off=62,r=82,imm=0) R6=ctx(off=0,imm=0) R7=pkt(off=0,r=82,imm=0) R8=pkt_end(off=0,imm=0) R9=1 R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm fp-136=
; pckt->flags |= F_SYN_SET;
462: (b7) r3 = 1                      ; R3_w=1
; bool is_icmp = !((pckt->flags & F_ICMP) == 0);
463: (15) if r4 == 0x0 goto pc+1      ; R4=P1
464: (b7) r3 = 0
frame 3: propagating r0
last_idx 465 first_idx 456
regs=8 stack=0 before 464: (b7) r3 = 0
frame 4: propagating r0
465: safe

from 456 to 1858: safe

from 445 to 1858: safe

from 443 to 527: R1_w=17 R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3_w=scalar(umin=1,umax=255,var_off=(0x1; 0xfe)) R4_w=17 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=62,imm=0) R8=pkt_end(off=0,imm=0) R9=1 R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm fp-136=
; bool is_icmp = !((pckt->flags & F_ICMP) == 0);
527: (57) r3 &= 1                     ; R3_w=1
528: (b7) r5 = 34                     ; R5_w=34
; if (is_ipv6) {
529: (15) if r3 == 0x0 goto pc+1
last_idx 529 first_idx 677
regs=8 stack=0 before 528: (b7) r5 = 34
regs=8 stack=0 before 527: (57) r3 &= 1
regs=8 stack=0 before 443: (15) if r4 == 0x11 goto pc+83
regs=8 stack=0 before 442: (bf) r4 = r1
regs=8 stack=0 before 441: (63) *(u32 *)(r10 -64) = r2
regs=8 stack=0 before 440: (61) r2 = *(u32 *)(r2 +0)
regs=8 stack=0 before 686: (05) goto pc-247
regs=8 stack=0 before 685: (07) r2 += 54
regs=8 stack=0 before 684: (bf) r2 = r7
regs=8 stack=0 before 683: (63) *(u32 *)(r10 -80) = r2
regs=8 stack=0 before 682: (61) r2 = *(u32 *)(r7 +58)
regs=8 stack=0 before 681: (73) *(u8 *)(r10 -36) = r3
regs=8 stack=0 before 680: (47) r3 |= 1
regs=8 stack=0 before 679: (71) r3 = *(u8 *)(r10 -36)
regs=0 stack=10 before 678: (73) *(u8 *)(r10 -44) = r1
regs=0 stack=10 before 677: (71) r1 = *(u8 *)(r7 +51)
parent already had regs=0 stack=0 marks: R1_w=5 R2=scalar(id=1,umax=65535,var_off=(0x0; 0xffff)) R3=pkt(off=34,r=62,imm=0) R4=pkt(off=42,r=62,imm=0) R6_r=ctx(off=0,imm=0) R7_r=pkt(off=0,r=62,imm=0) R8_r=pkt_end(off=0,imm=0) R9=1 R10=fp0 fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96_r=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=????mmmm fp-136_r=
530: (b7) r5 = 62                     ; R5=62
; udp = data + off;
531: (bf) r4 = r7                     ; R4_w=pkt(off=0,r=62,imm=0) R7=pkt(off=0,r=62,imm=0)
532: (0f) r4 += r5
last_idx 532 first_idx 531
regs=20 stack=0 before 531: (bf) r4 = r7
parent didn't have regs=20 stack=0 marks: R1_w=17 R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3_w=P1 R4_w=17 R5_rw=P62 R6=ctx(off=0,imm=0) R7_r=pkt(off=0,r=62,imm=0) R8=pkt_end(off=0,imm=0) R9=1 R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm fp-136=
last_idx 530 first_idx 677
regs=20 stack=0 before 530: (b7) r5 = 62
; if (udp + 1 > data_end) {
533: (bf) r5 = r4                     ; R4_w=pkt(off=62,r=62,imm=0) R5_w=pkt(off=62,r=62,imm=0)
534: (07) r5 += 8                     ; R5_w=pkt(off=70,r=62,imm=0)
; if (udp + 1 > data_end) {
535: (2d) if r5 > r8 goto pc+1322     ; R5_w=pkt(off=70,r=70,imm=0) R8=pkt_end(off=0,imm=0)
536: (b7) r5 = 1                      ; R5_w=1
; bool is_icmp = !((pckt->flags & F_ICMP) == 0);
537: (15) if r3 == 0x0 goto pc+1      ; R3=P1
538: (b7) r5 = 0                      ; R5=0
539: (67) r3 <<= 1                    ; R3_w=P2
; 
540: (bf) r0 = r4                     ; R0_w=pkt(off=62,r=70,imm=0) R4=pkt(off=62,r=70,imm=0)
541: (0f) r0 += r3                    ; R0_w=pkt(off=64,r=70,imm=0) R3_w=P2
542: (69) r3 = *(u16 *)(r0 +0)        ; R0_w=pkt(off=64,r=70,imm=0) R3_w=scalar(umax=65535,var_off=(0x0; 0xffff))
543: (6b) *(u16 *)(r10 -48) = r3      ; R3_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-48=
544: (67) r5 <<= 1                    ; R5_w=0
545: (0f) r4 += r5
last_idx 545 first_idx 539
regs=20 stack=0 before 544: (67) r5 <<= 1
regs=20 stack=0 before 543: (6b) *(u16 *)(r10 -48) = r3
regs=20 stack=0 before 542: (69) r3 = *(u16 *)(r0 +0)
regs=20 stack=0 before 541: (0f) r0 += r3
regs=20 stack=0 before 540: (bf) r0 = r4
regs=20 stack=0 before 539: (67) r3 <<= 1
parent didn't have regs=20 stack=0 marks: R1=17 R2=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3_r=P1 R4_rw=pkt(off=62,r=70,imm=0) R5_rw=P0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=70,imm=0) R8=pkt_end(off=0,imm=0) R9=1 R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm fp-136=
last_idx 538 first_idx 531
regs=20 stack=0 before 538: (b7) r5 = 0
546: (69) r3 = *(u16 *)(r4 +0)        ; R3_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R4_w=pkt(off=62,r=70,imm=0)
; 
547: (6b) *(u16 *)(r10 -46) = r3      ; R3_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-48=mmmmmmmm
; vip.proto = pckt.flow.proto;
548: (73) *(u8 *)(r10 -86) = r1       ; R1=17 R10=fp0 fp-88=????mmmm
; vip.port = pckt.flow.port16[1];
549: (6b) *(u16 *)(r10 -88) = r3      ; R3_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-88=
; vip.vip = pckt.flow.dst;
550: (63) *(u32 *)(r10 -104) = r2     ; R2=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-104=
551: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; 
552: (07) r2 += -104                  ; R2_w=fp-104
; vip_info = bpf_map_lookup_elem(&vip_map, &vip);
553: (18) r1 = 0xffffa03557866800     ; R1_w=map_ptr(off=0,ks=20,vs=8,imm=0)
555: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=347,off=0,ks=20,vs=8,imm=0)
; if (!vip_info) {
556: (55) if r0 != 0x0 goto pc+14     ; R0_w=0
557: (05) goto pc+0
; vip.port = 0;
558: (6a) *(u16 *)(r10 -88) = 0       ; R10=fp0 fp-88=????mmmm
559: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
560: (07) r2 += -104                  ; R2_w=fp-104
; vip_info = bpf_map_lookup_elem(&vip_map, &vip);
561: (18) r1 = 0xffffa03557866800     ; R1_w=map_ptr(off=0,ks=20,vs=8,imm=0)
563: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=348,off=0,ks=20,vs=8,imm=0)
564: (b7) r9 = 2                      ; R9_w=2
; if (!vip_info) {
565: (15) if r0 == 0x0 goto pc+1292   ; R0_w=map_value(off=0,ks=20,vs=8,imm=0)
; if (!(vip_info->flags & F_HASH_DPORT_ONLY) &&
566: (61) r1 = *(u32 *)(r0 +0)        ; R0_w=map_value(off=0,ks=20,vs=8,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (!(vip_info->flags & F_HASH_DPORT_ONLY) &&
567: (57) r1 &= 136                   ; R1=scalar(umax=136,var_off=(0x0; 0x88))
568: (55) if r1 != 0x0 goto pc+2      ; R1=0
569: (05) goto pc+0
; pckt.flow.port16[1] = 0;
570: (6a) *(u16 *)(r10 -46) = 0       ; R10=fp0 fp-48=mmmmmmmm
; if (data_end - data > MAX_PCKT_SIZE) {
571: (bf) r1 = r8                     ; R1_w=pkt_end(off=0,imm=0) R8=pkt_end(off=0,imm=0)
572: (1f) r1 -= r7                    ; R1_w=scalar() R7=pkt(off=0,r=70,imm=0)
573: (b7) r9 = 1                      ; R9_w=1
; if (data_end - data > MAX_PCKT_SIZE) {
574: (65) if r1 s> 0x5ea goto pc+1283         ; R1_w=scalar(smax=1514)
575: (7b) *(u64 *)(r10 -144) = r0     ; R0=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-144_w=map_value
576: (05) goto pc+0
; __u32 stats_key = MAX_VIPS + LRU_CNTRS;
577: (62) *(u32 *)(r10 -116) = 512    ; R10=fp0 fp-120=mmmm????
578: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; 
579: (07) r2 += -116                  ; R2_w=fp-116
; data_stats = bpf_map_lookup_elem(&stats, &stats_key);
580: (18) r1 = 0xffffa03499be8000     ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
582: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=349,off=0,ks=4,vs=16,imm=0)
; if (!data_stats) {
583: (15) if r0 == 0x0 goto pc+1274   ; R0_w=map_value(off=0,ks=4,vs=16,imm=0)
; data_stats->v1 += 1;
584: (79) r1 = *(u64 *)(r0 +0)        ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
585: (07) r1 += 1                     ; R1_w=scalar()
586: (7b) *(u64 *)(r10 -160) = r0     ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R10=fp0 fp-160_w=map_value
587: (7b) *(u64 *)(r0 +0) = r1        ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
588: (79) r9 = *(u64 *)(r10 -144)     ; R9_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
; if ((vip_info->flags & F_HASH_NO_SRC_PORT)) {
589: (61) r1 = *(u32 *)(r9 +0)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9_w=map_value(off=0,ks=20,vs=8,imm=0)
; if ((vip_info->flags & F_HASH_NO_SRC_PORT)) {
590: (57) r1 &= 1                     ; R1=scalar(umax=1,var_off=(0x0; 0x1))
; if ((vip_info->flags & F_HASH_NO_SRC_PORT)) {
591: (15) if r1 == 0x0 goto pc+2      ; R1=scalar(umax=1,var_off=(0x0; 0x1))
592: (05) goto pc+0
; pckt.flow.port16[0] = 0;
593: (6a) *(u16 *)(r10 -48) = 0       ; R10=fp0 fp-48=mmmmmmmm
; vip_num = vip_info->vip_num;
594: (61) r1 = *(u32 *)(r9 +4)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9=map_value(off=0,ks=20,vs=8,imm=0)
595: (7b) *(u64 *)(r10 -168) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-168_w=
; vip_num = vip_info->vip_num;
596: (63) *(u32 *)(r10 -108) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-112=mmmmmmmm
; __u32 cpu_num = bpf_get_smp_processor_id();
597: (85) call bpf_get_smp_processor_id#8     ; R0_w=scalar()
; __u32 cpu_num = bpf_get_smp_processor_id();
598: (63) *(u32 *)(r10 -120) = r0     ; R0_w=scalar() R10=fp0 fp-120=mmmmmmmm
599: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; 
600: (07) r2 += -120                  ; R2_w=fp-120
; void* lru_map = bpf_map_lookup_elem(&lru_mapping, &cpu_num);
601: (18) r1 = 0xffffa0376748a000     ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
603: (85) call bpf_map_lookup_elem#1          ; R0=map_value_or_null(id=350,off=0,ks=4,vs=4,imm=0)
604: (7b) *(u64 *)(r10 -152) = r0     ; R0=map_value_or_null(id=350,off=0,ks=4,vs=4,imm=0) R10=fp0 fp-152_w=map_value_or_null
; if (!lru_map) {
605: (55) if r0 != 0x0 goto pc+15     ; R0=0
606: (05) goto pc+0
; __u32 lru_stats_key = MAX_VIPS + FALLBACK_LRU_CNTR;
607: (62) *(u32 *)(r10 -16) = 515     ; R10=fp0 fp-16=????mmmm
608: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
609: (07) r2 += -16                   ; R2_w=fp-16
; struct lb_stats* lru_stats = bpf_map_lookup_elem(&stats, &lru_stats_key);
610: (18) r1 = 0xffffa03499be8000     ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
612: (85) call bpf_map_lookup_elem#1
613: safe

from 605 to 621: R0=map_ptr(off=0,ks=40,vs=16,imm=0) R6=ctx(off=0,imm=0) R7=pkt(off=0,r=70,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if ((vip_info->flags & F_QUIC_VIP)) {
621: (61) r1 = *(u32 *)(r9 +0)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9=map_value(off=0,ks=20,vs=8,imm=0)
; if ((vip_info->flags & F_QUIC_VIP)) {
622: (57) r1 &= 4                     ; R1_w=scalar(umax=4,var_off=(0x0; 0x4))
; if ((vip_info->flags & F_QUIC_VIP)) {
623: (15) if r1 == 0x0 goto pc+1016   ; R1_w=scalar(umax=4,var_off=(0x0; 0x4))
; bool is_icmp = (pckt.flags & F_ICMP);
624: (71) r1 = *(u8 *)(r10 -36)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; bool is_icmp = (pckt.flags & F_ICMP);
625: (57) r1 &= 1                     ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
; if (is_icmp) {
626: (15) if r1 == 0x0 goto pc+91     ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
627: (05) goto pc+0
; __u32 stats_key = MAX_VIPS + QUIC_ICMP_STATS;
628: (62) *(u32 *)(r10 -16) = 523     ; R10=fp0 fp-16=????mmmm
629: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
630: (07) r2 += -16                   ; R2_w=fp-16
; struct lb_stats* data_stats = bpf_map_lookup_elem(&stats, &stats_key);
631: (18) r1 = 0xffffa03499be8000     ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
633: (85) call bpf_map_lookup_elem#1
634: safe

from 626 to 718: R0=map_ptr(off=0,ks=40,vs=16,imm=0) R1=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=70,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
718: (05) goto pc+0
; __u32 quic_packets_stats_key = 0;
719: (62) *(u32 *)(r10 -28) = 0       ; R10=fp0 fp-32=mmmm????
720: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
721: (07) r2 += -28                   ; R2_w=fp-28
; bpf_map_lookup_elem(&quic_stats_map, &quic_packets_stats_key);
722: (18) r1 = 0xffffa03587064800     ; R1_w=map_ptr(off=0,ks=4,vs=104,imm=0)
724: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=353,off=0,ks=4,vs=104,imm=0)
725: (bf) r9 = r0                     ; R0_w=map_value_or_null(id=353,off=0,ks=4,vs=104,imm=0) R9_w=map_value_or_null(id=353,off=0,ks=4,vs=104,imm=0)
; if (!quic_packets_stats) {
726: (15) if r9 == 0x0 goto pc+1130   ; R9_w=map_value(off=0,ks=4,vs=104,imm=0)
; bool is_icmp = (pckt->flags & F_ICMP);
727: (71) r2 = *(u8 *)(r10 -36)       ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; bool is_icmp = (pckt->flags & F_ICMP);
728: (57) r2 &= 1                     ; R2_w=scalar(umax=1,var_off=(0x0; 0x1))
729: (b7) r1 = 34                     ; R1=34
; if (is_ipv6) {
730: (15) if r2 == 0x0 goto pc+1      ; R2=scalar(umax=1,var_off=(0x0; 0x1))
731: (b7) r1 = 62                     ; R1_w=62
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
732: (0f) r7 += r1
last_idx 732 first_idx 730
regs=2 stack=0 before 731: (b7) r1 = 62
733: R1_w=P62 R7_w=pkt(off=62,r=70,imm=0)
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
733: (bf) r1 = r7                     ; R1_w=pkt(off=62,r=70,imm=0) R7_w=pkt(off=62,r=70,imm=0)
734: (07) r1 += 9                     ; R1_w=pkt(off=71,r=70,imm=0)
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
735: (2d) if r1 > r8 goto pc+900      ; R1_w=pkt(off=71,r=71,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
736: (71) r2 = *(u8 *)(r7 +8)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=62,r=71,imm=0)
737: (67) r2 <<= 56                   ; R2_w=scalar(smax=9151314442816847872,umax=18374686479671623680,var_off=(0x0; 0xff00000000000000),s32_min=0,s32_max=0,u32_max=0)
738: (c7) r2 s>>= 56                  ; R2=scalar(smin=-128,smax=127)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
739: (65) if r2 s> 0xffffffff goto pc+30      ; R2=scalar(umin=18446744073709551488,var_off=(0xffffffffffffff80; 0x7f),u32_min=-128)
; if (quic_data + sizeof(struct quic_long_header) > data_end) {
740: (bf) r1 = r7                     ; R1_w=pkt(off=62,r=71,imm=0) R7=pkt(off=62,r=71,imm=0)
741: (07) r1 += 22                    ; R1_w=pkt(off=84,r=71,imm=0)
; if (quic_data + sizeof(struct quic_long_header) > data_end) {
742: (2d) if r1 > r8 goto pc+893      ; R1_w=pkt(off=84,r=84,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_PACKET_TYPE_MASK) < QUIC_HANDSHAKE) {
743: (57) r2 &= 32                    ; R2_w=scalar(umax=32,var_off=(0x0; 0x20))
; if ((*pkt_type & QUIC_PACKET_TYPE_MASK) < QUIC_HANDSHAKE) {
744: (15) if r2 == 0x0 goto pc+817    ; R2_w=scalar(umax=32,var_off=(0x0; 0x20))
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
745: (71) r1 = *(u8 *)(r7 +13)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=62,r=84,imm=0)
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
746: (07) r7 += 14
747: safe

from 744 to 1562: safe

from 742 to 1636: safe

from 739 to 770: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=pkt(off=71,r=71,imm=0) R2=scalar(umax=127,var_off=(0x0; 0x7f)) R6=ctx(off=0,imm=0) R7=pkt(off=62,r=71,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (quic_data + sizeof(struct quic_short_header) > data_end) {
770: (bf) r2 = r7                     ; R2_w=pkt(off=62,r=71,imm=0) R7=pkt(off=62,r=71,imm=0)
771: (07) r2 += 17                    ; R2_w=pkt(off=79,r=71,imm=0)
772: (bf) r7 = r1                     ; R1=pkt(off=71,r=71,imm=0) R7_w=pkt(off=71,r=71,imm=0)
; if (quic_data + sizeof(struct quic_short_header) > data_end) {
773: (2d) if r2 > r8 goto pc+862      ; R2_w=pkt(off=79,r=79,imm=0) R8=pkt_end(off=0,imm=0)
; if (!connId) {
774: (15) if r7 == 0x0 goto pc+861    ; R7_w=pkt(off=71,r=79,imm=0)
; __u8 connIdVersion = (connId[0] >> 6);
775: (71) r1 = *(u8 *)(r7 +0)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=71,r=79,imm=0)
776: (bf) r2 = r1                     ; R1_w=scalar(id=354,umax=255,var_off=(0x0; 0xff)) R2_w=scalar(id=354,umax=255,var_off=(0x0; 0xff))
777: (77) r2 >>= 6                    ; R2=scalar(umax=3,var_off=(0x0; 0x3))
; if (connIdVersion == QUIC_CONNID_VERSION_V1) {
778: (15) if r2 == 0x3 goto pc+798    ; R2=scalar(umax=3,var_off=(0x0; 0x3))
779: (15) if r2 == 0x2 goto pc+809    ; R2=scalar(umax=3,var_off=(0x0; 0x3))
780: (55) if r2 != 0x1 goto pc+855    ; R2=1
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
781: (57) r1 &= 63                    ; R1_w=scalar(umax=63,var_off=(0x0; 0x3f))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
782: (67) r1 <<= 10                   ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
783: (71) r8 = *(u8 *)(r7 +1)         ; R7=pkt(off=71,r=79,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
784: (67) r8 <<= 2                    ; R8_w=scalar(umax=1020,var_off=(0x0; 0x3fc))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
785: (4f) r8 |= r1                    ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00)) R8_w=scalar()
786: (18) r1 = 0x100000000            ; R1_w=4294967296
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
788: (71) r2 = *(u8 *)(r7 +2)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=71,r=79,imm=0)
789: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
790: (05) goto pc+806
frame 1: propagating r0
last_idx 1597 first_idx 778
regs=2 stack=0 before 790: (05) goto pc+806
regs=2 stack=0 before 789: (77) r2 >>= 6
regs=2 stack=0 before 788: (71) r2 = *(u8 *)(r7 +2)
regs=2 stack=0 before 786: (18) r1 = 0x100000000
1597: safe

from 780 to 1636: safe

from 779 to 1589: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=354,umax=255,var_off=(0x0; 0xff)) R2=2 R6=ctx(off=0,imm=0) R7=pkt(off=71,r=79,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1589: (71) r1 = *(u8 *)(r7 +1)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=71,r=79,imm=0)
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1590: (67) r1 <<= 16                  ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1591: (71) r8 = *(u8 *)(r7 +2)        ; R7=pkt(off=71,r=79,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1592: (67) r8 <<= 8                   ; R8_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1593: (4f) r8 |= r1                   ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000)) R8_w=scalar()
1594: (18) r1 = 0x200000000           ; R1_w=8589934592
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1596: (71) r2 = *(u8 *)(r7 +3)        ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=71,r=79,imm=0)
1597: (57) r2 &= 255                  ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
1598: (4f) r8 |= r2                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1599: (bf) r2 = r8                    ; R2_w=scalar(id=355) R8_w=scalar(id=355)
1600: (67) r2 <<= 32                  ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
1601: (c7) r2 s>>= 32                 ; R2_w=scalar(smin=-2147483648,smax=2147483647)
1602: (b7) r3 = 1                     ; R3_w=1
; if (qpr.server_id > 0) {
1603: (6d) if r3 s> r2 goto pc+32     ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1604: (77) r1 >>= 32                  ; R1_w=2
; if (cid_version == QUIC_CONNID_VERSION_V1) {
1605: (15) if r1 == 0x3 goto pc+5
last_idx 1605 first_idx 1589
regs=2 stack=0 before 1604: (77) r1 >>= 32
regs=2 stack=0 before 1603: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 1602: (b7) r3 = 1
regs=2 stack=0 before 1601: (c7) r2 s>>= 32
regs=2 stack=0 before 1600: (67) r2 <<= 32
regs=2 stack=0 before 1599: (bf) r2 = r8
regs=2 stack=0 before 1598: (4f) r8 |= r2
regs=2 stack=0 before 1597: (57) r2 &= 255
regs=2 stack=0 before 1596: (71) r2 = *(u8 *)(r7 +3)
regs=2 stack=0 before 1594: (18) r1 = 0x200000000
frame 1: propagating r0
1606: safe

from 1603 to 1636: safe

from 778 to 1577: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=354,umax=255,var_off=(0x0; 0xff)) R2=3 R6=ctx(off=0,imm=0) R7=pkt(off=71,r=79,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1577: (71) r1 = *(u8 *)(r7 +1)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=71,r=79,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1578: (67) r1 <<= 24                  ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1579: (71) r8 = *(u8 *)(r7 +2)        ; R7=pkt(off=71,r=79,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1580: (67) r8 <<= 16                  ; R8_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1581: (4f) r8 |= r1                   ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432) R8_w=scalar()
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1582: (71) r1 = *(u8 *)(r7 +3)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=71,r=79,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1583: (67) r1 <<= 8                   ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1584: (4f) r8 |= r1                   ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00)) R8_w=scalar()
1585: (18) r1 = 0x300000000           ; R1_w=12884901888
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1587: (71) r2 = *(u8 *)(r7 +4)        ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=71,r=79,imm=0)
1588: (05) goto pc+8
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1597: (57) r2 &= 255                  ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
1598: (4f) r8 |= r2                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1599: (bf) r2 = r8                    ; R2_w=scalar(id=356) R8_w=scalar(id=356)
1600: (67) r2 <<= 32                  ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
1601: (c7) r2 s>>= 32                 ; R2_w=scalar(smin=-2147483648,smax=2147483647)
1602: (b7) r3 = 1                     ; R3_w=1
; if (qpr.server_id > 0) {
1603: (6d) if r3 s> r2 goto pc+32     ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1604: (77) r1 >>= 32
frame 1: propagating r0
last_idx 1605 first_idx 1577
regs=2 stack=0 before 1604: (77) r1 >>= 32
regs=2 stack=0 before 1603: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 1602: (b7) r3 = 1
regs=2 stack=0 before 1601: (c7) r2 s>>= 32
regs=2 stack=0 before 1600: (67) r2 <<= 32
regs=2 stack=0 before 1599: (bf) r2 = r8
regs=2 stack=0 before 1598: (4f) r8 |= r2
regs=2 stack=0 before 1597: (57) r2 &= 255
regs=2 stack=0 before 1588: (05) goto pc+8
regs=2 stack=0 before 1587: (71) r2 = *(u8 *)(r7 +4)
regs=2 stack=0 before 1585: (18) r1 = 0x300000000
1605: safe

from 1603 to 1636: safe

from 774 to 1636: safe

from 773 to 1636: safe

from 735 to 1636: safe

from 730 to 732: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=34 R2=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=70,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
732: (0f) r7 += r1
last_idx 732 first_idx 732
parent didn't have regs=2 stack=0 marks: R0=map_value(off=0,ks=4,vs=104,imm=0) R1_r=P34 R2=0 R6=ctx(off=0,imm=0) R7_r=pkt(off=0,r=70,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
last_idx 730 first_idx 730
regs=2 stack=0 before 730: (15) if r2 == 0x0 goto pc+1
parent didn't have regs=2 stack=0 marks: R0_w=map_value(off=0,ks=4,vs=104,imm=0) R1_rw=P34 R2_rw=scalar(umax=1,var_off=(0x0; 0x1)) R6_r=ctx(off=0,imm=0) R7_r=pkt(off=0,r=70,imm=0) R8_r=pkt_end(off=0,imm=0) R9_rw=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=
last_idx 729 first_idx 718
regs=2 stack=0 before 729: (b7) r1 = 34
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
733: (bf) r1 = r7                     ; R1_w=pkt(off=34,r=70,imm=0) R7_w=pkt(off=34,r=70,imm=0)
734: (07) r1 += 9                     ; R1_w=pkt(off=43,r=70,imm=0)
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
735: (2d) if r1 > r8 goto pc+900      ; R1_w=pkt(off=43,r=70,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
736: (71) r2 = *(u8 *)(r7 +8)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=34,r=70,imm=0)
737: (67) r2 <<= 56                   ; R2_w=scalar(smax=9151314442816847872,umax=18374686479671623680,var_off=(0x0; 0xff00000000000000),s32_min=0,s32_max=0,u32_max=0)
738: (c7) r2 s>>= 56                  ; R2_w=scalar(smin=-128,smax=127)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
739: (65) if r2 s> 0xffffffff goto pc+30      ; R2_w=scalar(umin=18446744073709551488,var_off=(0xffffffffffffff80; 0x7f),u32_min=-128)
; if (quic_data + sizeof(struct quic_long_header) > data_end) {
740: (bf) r1 = r7                     ; R1_w=pkt(off=34,r=70,imm=0) R7_w=pkt(off=34,r=70,imm=0)
741: (07) r1 += 22                    ; R1=pkt(off=56,r=70,imm=0)
; if (quic_data + sizeof(struct quic_long_header) > data_end) {
742: (2d) if r1 > r8 goto pc+893      ; R1=pkt(off=56,r=70,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_PACKET_TYPE_MASK) < QUIC_HANDSHAKE) {
743: (57) r2 &= 32                    ; R2_w=scalar(umax=32,var_off=(0x0; 0x20))
; if ((*pkt_type & QUIC_PACKET_TYPE_MASK) < QUIC_HANDSHAKE) {
744: (15) if r2 == 0x0 goto pc+817    ; R2_w=scalar(umax=32,var_off=(0x0; 0x20))
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
745: (71) r1 = *(u8 *)(r7 +13)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=34,r=70,imm=0)
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
746: (07) r7 += 14                    ; R7_w=pkt(off=48,r=70,imm=0)
747: (25) if r1 > 0x7 goto pc+26      ; R1_w=scalar(umax=7,var_off=(0x0; 0x7))
748: (05) goto pc+887
1636: safe

from 747 to 774: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(umin=8,umax=255,var_off=(0x0; 0xff)) R2=scalar(umax=32,var_off=(0x0; 0x20)) R6=ctx(off=0,imm=0) R7=pkt(off=48,r=70,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (!connId) {
774: (15) if r7 == 0x0 goto pc+861    ; R7=pkt(off=48,r=70,imm=0)
; __u8 connIdVersion = (connId[0] >> 6);
775: (71) r1 = *(u8 *)(r7 +0)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=48,r=70,imm=0)
776: (bf) r2 = r1                     ; R1_w=scalar(id=357,umax=255,var_off=(0x0; 0xff)) R2_w=scalar(id=357,umax=255,var_off=(0x0; 0xff))
777: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
; if (connIdVersion == QUIC_CONNID_VERSION_V1) {
778: (15) if r2 == 0x3 goto pc+798    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
779: (15) if r2 == 0x2 goto pc+809    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
780: (55) if r2 != 0x1 goto pc+855    ; R2_w=1
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
781: (57) r1 &= 63                    ; R1_w=scalar(umax=63,var_off=(0x0; 0x3f))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
782: (67) r1 <<= 10                   ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
783: (71) r8 = *(u8 *)(r7 +1)         ; R7=pkt(off=48,r=70,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
784: (67) r8 <<= 2                    ; R8_w=scalar(umax=1020,var_off=(0x0; 0x3fc))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
785: (4f) r8 |= r1                    ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00)) R8_w=scalar()
786: (18) r1 = 0x100000000            ; R1_w=4294967296
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
788: (71) r2 = *(u8 *)(r7 +2)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=48,r=70,imm=0)
789: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
790: (05) goto pc+806
frame 1: propagating r0
last_idx 1597 first_idx 774
regs=2 stack=0 before 790: (05) goto pc+806
regs=2 stack=0 before 789: (77) r2 >>= 6
regs=2 stack=0 before 788: (71) r2 = *(u8 *)(r7 +2)
regs=2 stack=0 before 786: (18) r1 = 0x100000000
1597: safe

from 780 to 1636: safe

from 779 to 1589: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=357,umax=255,var_off=(0x0; 0xff)) R2=2 R6=ctx(off=0,imm=0) R7=pkt(off=48,r=70,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1589: (71) r1 = *(u8 *)(r7 +1)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=48,r=70,imm=0)
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1590: (67) r1 <<= 16                  ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1591: (71) r8 = *(u8 *)(r7 +2)        ; R7=pkt(off=48,r=70,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1592: (67) r8 <<= 8                   ; R8_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1593: (4f) r8 |= r1                   ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000)) R8_w=scalar()
1594: (18) r1 = 0x200000000           ; R1_w=8589934592
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1596: (71) r2 = *(u8 *)(r7 +3)        ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=48,r=70,imm=0)
1597: (57) r2 &= 255                  ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
1598: (4f) r8 |= r2                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1599: (bf) r2 = r8                    ; R2_w=scalar(id=358) R8_w=scalar(id=358)
1600: (67) r2 <<= 32                  ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
1601: (c7) r2 s>>= 32                 ; R2_w=scalar(smin=-2147483648,smax=2147483647)
1602: (b7) r3 = 1                     ; R3_w=1
; if (qpr.server_id > 0) {
1603: (6d) if r3 s> r2 goto pc+32     ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1604: (77) r1 >>= 32                  ; R1_w=2
; if (cid_version == QUIC_CONNID_VERSION_V1) {
1605: (15) if r1 == 0x3 goto pc+5
last_idx 1605 first_idx 1589
regs=2 stack=0 before 1604: (77) r1 >>= 32
regs=2 stack=0 before 1603: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 1602: (b7) r3 = 1
regs=2 stack=0 before 1601: (c7) r2 s>>= 32
regs=2 stack=0 before 1600: (67) r2 <<= 32
regs=2 stack=0 before 1599: (bf) r2 = r8
regs=2 stack=0 before 1598: (4f) r8 |= r2
regs=2 stack=0 before 1597: (57) r2 &= 255
regs=2 stack=0 before 1596: (71) r2 = *(u8 *)(r7 +3)
regs=2 stack=0 before 1594: (18) r1 = 0x200000000
frame 1: propagating r0
1606: safe

from 1603 to 1636: safe

from 778 to 1577: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=357,umax=255,var_off=(0x0; 0xff)) R2=3 R6=ctx(off=0,imm=0) R7=pkt(off=48,r=70,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1577: (71) r1 = *(u8 *)(r7 +1)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=48,r=70,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1578: (67) r1 <<= 24                  ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1579: (71) r8 = *(u8 *)(r7 +2)        ; R7=pkt(off=48,r=70,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1580: (67) r8 <<= 16                  ; R8_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1581: (4f) r8 |= r1                   ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432) R8_w=scalar()
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1582: (71) r1 = *(u8 *)(r7 +3)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=48,r=70,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1583: (67) r1 <<= 8                   ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1584: (4f) r8 |= r1                   ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00)) R8_w=scalar()
1585: (18) r1 = 0x300000000           ; R1_w=12884901888
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1587: (71) r2 = *(u8 *)(r7 +4)        ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=48,r=70,imm=0)
1588: (05) goto pc+8
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1597: (57) r2 &= 255                  ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
1598: (4f) r8 |= r2                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1599: (bf) r2 = r8                    ; R2_w=scalar(id=359) R8_w=scalar(id=359)
1600: (67) r2 <<= 32                  ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
1601: (c7) r2 s>>= 32                 ; R2_w=scalar(smin=-2147483648,smax=2147483647)
1602: (b7) r3 = 1                     ; R3_w=1
; if (qpr.server_id > 0) {
1603: (6d) if r3 s> r2 goto pc+32     ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1604: (77) r1 >>= 32
frame 1: propagating r0
last_idx 1605 first_idx 1577
regs=2 stack=0 before 1604: (77) r1 >>= 32
regs=2 stack=0 before 1603: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 1602: (b7) r3 = 1
regs=2 stack=0 before 1601: (c7) r2 s>>= 32
regs=2 stack=0 before 1600: (67) r2 <<= 32
regs=2 stack=0 before 1599: (bf) r2 = r8
regs=2 stack=0 before 1598: (4f) r8 |= r2
regs=2 stack=0 before 1597: (57) r2 &= 255
regs=2 stack=0 before 1588: (05) goto pc+8
regs=2 stack=0 before 1587: (71) r2 = *(u8 *)(r7 +4)
regs=2 stack=0 before 1585: (18) r1 = 0x300000000
1605: safe

from 1603 to 1636: safe

from 774 to 1636: safe

from 744 to 1562: safe

from 742 to 1636: safe

from 739 to 770: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=pkt(off=43,r=70,imm=0) R2=scalar(umax=127,var_off=(0x0; 0x7f)) R6=ctx(off=0,imm=0) R7=pkt(off=34,r=70,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (quic_data + sizeof(struct quic_short_header) > data_end) {
770: (bf) r2 = r7                     ; R2_w=pkt(off=34,r=70,imm=0) R7=pkt(off=34,r=70,imm=0)
771: (07) r2 += 17                    ; R2_w=pkt(off=51,r=70,imm=0)
772: (bf) r7 = r1                     ; R1=pkt(off=43,r=70,imm=0) R7_w=pkt(off=43,r=70,imm=0)
; if (quic_data + sizeof(struct quic_short_header) > data_end) {
773: (2d) if r2 > r8 goto pc+862      ; R2_w=pkt(off=51,r=70,imm=0) R8=pkt_end(off=0,imm=0)
; if (!connId) {
774: (15) if r7 == 0x0 goto pc+861    ; R7_w=pkt(off=43,r=70,imm=0)
; __u8 connIdVersion = (connId[0] >> 6);
775: (71) r1 = *(u8 *)(r7 +0)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=43,r=70,imm=0)
776: (bf) r2 = r1                     ; R1_w=scalar(id=360,umax=255,var_off=(0x0; 0xff)) R2_w=scalar(id=360,umax=255,var_off=(0x0; 0xff))
777: (77) r2 >>= 6                    ; R2=scalar(umax=3,var_off=(0x0; 0x3))
; if (connIdVersion == QUIC_CONNID_VERSION_V1) {
778: (15) if r2 == 0x3 goto pc+798    ; R2=scalar(umax=3,var_off=(0x0; 0x3))
779: (15) if r2 == 0x2 goto pc+809    ; R2=scalar(umax=3,var_off=(0x0; 0x3))
780: (55) if r2 != 0x1 goto pc+855    ; R2=1
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
781: (57) r1 &= 63                    ; R1_w=scalar(umax=63,var_off=(0x0; 0x3f))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
782: (67) r1 <<= 10                   ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
783: (71) r8 = *(u8 *)(r7 +1)         ; R7=pkt(off=43,r=70,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
784: (67) r8 <<= 2                    ; R8_w=scalar(umax=1020,var_off=(0x0; 0x3fc))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
785: (4f) r8 |= r1                    ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00)) R8_w=scalar()
786: (18) r1 = 0x100000000            ; R1_w=4294967296
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
788: (71) r2 = *(u8 *)(r7 +2)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=43,r=70,imm=0)
789: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
790: (05) goto pc+806
frame 1: propagating r0
last_idx 1597 first_idx 778
regs=2 stack=0 before 790: (05) goto pc+806
regs=2 stack=0 before 789: (77) r2 >>= 6
regs=2 stack=0 before 788: (71) r2 = *(u8 *)(r7 +2)
regs=2 stack=0 before 786: (18) r1 = 0x100000000
1597: safe

from 780 to 1636: safe

from 779 to 1589: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=360,umax=255,var_off=(0x0; 0xff)) R2=2 R6=ctx(off=0,imm=0) R7=pkt(off=43,r=70,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1589: (71) r1 = *(u8 *)(r7 +1)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=43,r=70,imm=0)
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1590: (67) r1 <<= 16                  ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1591: (71) r8 = *(u8 *)(r7 +2)        ; R7=pkt(off=43,r=70,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1592: (67) r8 <<= 8                   ; R8_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1593: (4f) r8 |= r1                   ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000)) R8_w=scalar()
1594: (18) r1 = 0x200000000           ; R1_w=8589934592
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1596: (71) r2 = *(u8 *)(r7 +3)        ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=43,r=70,imm=0)
1597: (57) r2 &= 255                  ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
1598: (4f) r8 |= r2                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1599: (bf) r2 = r8                    ; R2_w=scalar(id=361) R8_w=scalar(id=361)
1600: (67) r2 <<= 32                  ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
1601: (c7) r2 s>>= 32                 ; R2_w=scalar(smin=-2147483648,smax=2147483647)
1602: (b7) r3 = 1                     ; R3_w=1
; if (qpr.server_id > 0) {
1603: (6d) if r3 s> r2 goto pc+32     ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1604: (77) r1 >>= 32                  ; R1_w=2
; if (cid_version == QUIC_CONNID_VERSION_V1) {
1605: (15) if r1 == 0x3 goto pc+5
last_idx 1605 first_idx 1589
regs=2 stack=0 before 1604: (77) r1 >>= 32
regs=2 stack=0 before 1603: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 1602: (b7) r3 = 1
regs=2 stack=0 before 1601: (c7) r2 s>>= 32
regs=2 stack=0 before 1600: (67) r2 <<= 32
regs=2 stack=0 before 1599: (bf) r2 = r8
regs=2 stack=0 before 1598: (4f) r8 |= r2
regs=2 stack=0 before 1597: (57) r2 &= 255
regs=2 stack=0 before 1596: (71) r2 = *(u8 *)(r7 +3)
regs=2 stack=0 before 1594: (18) r1 = 0x200000000
frame 1: propagating r0
1606: safe

from 1603 to 1636: safe

from 778 to 1577: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=360,umax=255,var_off=(0x0; 0xff)) R2=3 R6=ctx(off=0,imm=0) R7=pkt(off=43,r=70,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1577: (71) r1 = *(u8 *)(r7 +1)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=43,r=70,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1578: (67) r1 <<= 24                  ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1579: (71) r8 = *(u8 *)(r7 +2)        ; R7=pkt(off=43,r=70,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1580: (67) r8 <<= 16                  ; R8_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1581: (4f) r8 |= r1                   ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432) R8_w=scalar()
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1582: (71) r1 = *(u8 *)(r7 +3)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=43,r=70,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1583: (67) r1 <<= 8                   ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1584: (4f) r8 |= r1                   ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00)) R8_w=scalar()
1585: (18) r1 = 0x300000000           ; R1_w=12884901888
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1587: (71) r2 = *(u8 *)(r7 +4)        ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=43,r=70,imm=0)
1588: (05) goto pc+8
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1597: (57) r2 &= 255                  ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
1598: (4f) r8 |= r2                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1599: (bf) r2 = r8                    ; R2_w=scalar(id=362) R8_w=scalar(id=362)
1600: (67) r2 <<= 32                  ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
1601: (c7) r2 s>>= 32                 ; R2_w=scalar(smin=-2147483648,smax=2147483647)
1602: (b7) r3 = 1                     ; R3_w=1
; if (qpr.server_id > 0) {
1603: (6d) if r3 s> r2 goto pc+32     ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1604: (77) r1 >>= 32
frame 1: propagating r0
last_idx 1605 first_idx 1577
regs=2 stack=0 before 1604: (77) r1 >>= 32
regs=2 stack=0 before 1603: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 1602: (b7) r3 = 1
regs=2 stack=0 before 1601: (c7) r2 s>>= 32
regs=2 stack=0 before 1600: (67) r2 <<= 32
regs=2 stack=0 before 1599: (bf) r2 = r8
regs=2 stack=0 before 1598: (4f) r8 |= r2
regs=2 stack=0 before 1597: (57) r2 &= 255
regs=2 stack=0 before 1588: (05) goto pc+8
regs=2 stack=0 before 1587: (71) r2 = *(u8 *)(r7 +4)
regs=2 stack=0 before 1585: (18) r1 = 0x300000000
1605: safe

from 1603 to 1636: safe

from 774 to 1636: safe

from 773 to 1636: safe

from 735 to 1636: safe

from 726 to 1857: safe

from 623 to 1640: safe

from 591 to 594: R0=map_value(off=0,ks=4,vs=16,imm=0) R1=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=70,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm fp-120=mmmm???? fp-136= fp-144=map_value fp-160=map_value
; vip_num = vip_info->vip_num;
594: (61) r1 = *(u32 *)(r9 +4)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9=map_value(off=0,ks=20,vs=8,imm=0)
595: (7b) *(u64 *)(r10 -168) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-168_w=
; vip_num = vip_info->vip_num;
596: (63) *(u32 *)(r10 -108) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-112=mmmmmmmm
; __u32 cpu_num = bpf_get_smp_processor_id();
597: (85) call bpf_get_smp_processor_id#8     ; R0_w=scalar()
; __u32 cpu_num = bpf_get_smp_processor_id();
598: (63) *(u32 *)(r10 -120) = r0     ; R0_w=scalar() R10=fp0 fp-120=mmmmmmmm
599: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; 
600: (07) r2 += -120                  ; R2_w=fp-120
; void* lru_map = bpf_map_lookup_elem(&lru_mapping, &cpu_num);
601: (18) r1 = 0xffffa0376748a000     ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
603: (85) call bpf_map_lookup_elem#1
604: safe

from 583 to 1858: safe

from 574 to 1858: safe

from 568 to 571: R0=map_value(off=0,ks=20,vs=8,imm=0) R1=scalar(umax=136,var_off=(0x0; 0x88)) R6=ctx(off=0,imm=0) R7=pkt(off=0,r=70,imm=0) R8=pkt_end(off=0,imm=0) R9=2 R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm fp-136=
; if (data_end - data > MAX_PCKT_SIZE) {
571: (bf) r1 = r8                     ; R1_w=pkt_end(off=0,imm=0) R8=pkt_end(off=0,imm=0)
572: (1f) r1 -= r7                    ; R1_w=scalar() R7=pkt(off=0,r=70,imm=0)
573: (b7) r9 = 1                      ; R9_w=1
; if (data_end - data > MAX_PCKT_SIZE) {
574: (65) if r1 s> 0x5ea goto pc+1283         ; R1_w=scalar(smax=1514)
575: (7b) *(u64 *)(r10 -144) = r0     ; R0=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-144_w=map_value
576: (05) goto pc+0
577: safe

from 574 to 1858: safe

from 565 to 1858: safe

from 556 to 571: safe

from 535 to 1858: safe

from 672 to 1858: safe

from 46 to 1858: safe

from 43 to 435: R1=scalar(id=2,umax=255,var_off=(0x0; 0xff)) R2=scalar(id=1,umax=65535,var_off=(0x0; 0xffff)) R3=pkt(off=34,r=34,imm=0) R4=scalar(id=2,umax=255,var_off=(0x0; 0xff)) R6=ctx(off=0,imm=0) R7=pkt(off=0,r=34,imm=0) R8=pkt_end(off=0,imm=0) R9=1 R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm fp-136=
; pckt->flow.src = iph->saddr;
435: (61) r2 = *(u32 *)(r7 +26)       ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R7=pkt(off=0,r=34,imm=0)
; pckt->flow.src = iph->saddr;
436: (63) *(u32 *)(r10 -80) = r2      ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-80=
437: (b7) r3 = 0                      ; R3_w=0
; pckt->flow.dst = iph->daddr;
438: (bf) r2 = r7                     ; R2_w=pkt(off=0,r=34,imm=0) R7=pkt(off=0,r=34,imm=0)
439: (07) r2 += 30                    ; R2_w=pkt(off=30,r=34,imm=0)
; 
440: (61) r2 = *(u32 *)(r2 +0)        ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
441: (63) *(u32 *)(r10 -64) = r2      ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-64=
; if (protocol == IPPROTO_TCP) {
442: (bf) r4 = r1                     ; R1=scalar(id=2,umax=255,var_off=(0x0; 0xff)) R4_w=scalar(id=2,umax=255,var_off=(0x0; 0xff))
443: (15) if r4 == 0x11 goto pc+83    ; R4_w=scalar(id=2,umax=255,var_off=(0x0; 0xff))
444: (b7) r9 = 2                      ; R9_w=2
445: (55) if r4 != 0x6 goto pc+1412   ; R4_w=6
; bool is_icmp = !((pckt->flags & F_ICMP) == 0);
446: (bf) r4 = r3                     ; R3_w=0 R4_w=0
447: (57) r4 &= 1                     ; R4_w=0
448: (b7) r0 = 34                     ; R0=34
; if (is_ipv6) {
449: (15) if r4 == 0x0 goto pc+1
last_idx 449 first_idx 449
parent didn't have regs=10 stack=0 marks: R0_w=34 R1=6 R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3_w=0 R4_rw=P0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=34,imm=0) R8=pkt_end(off=0,imm=0) R9_w=2 R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm fp-136=
last_idx 448 first_idx 435
regs=10 stack=0 before 448: (b7) r0 = 34
regs=10 stack=0 before 447: (57) r4 &= 1
regs=10 stack=0 before 446: (bf) r4 = r3
regs=8 stack=0 before 445: (55) if r4 != 0x6 goto pc+1412
regs=8 stack=0 before 444: (b7) r9 = 2
regs=8 stack=0 before 443: (15) if r4 == 0x11 goto pc+83
regs=8 stack=0 before 442: (bf) r4 = r1
regs=8 stack=0 before 441: (63) *(u32 *)(r10 -64) = r2
regs=8 stack=0 before 440: (61) r2 = *(u32 *)(r2 +0)
regs=8 stack=0 before 439: (07) r2 += 30
regs=8 stack=0 before 438: (bf) r2 = r7
regs=8 stack=0 before 437: (b7) r3 = 0
; tcp = data + off;
451: (bf) r5 = r7                     ; R5_w=pkt(off=0,r=34,imm=0) R7=pkt(off=0,r=34,imm=0)
452: (0f) r5 += r0
last_idx 452 first_idx 449
regs=1 stack=0 before 451: (bf) r5 = r7
regs=1 stack=0 before 449: (15) if r4 == 0x0 goto pc+1
parent didn't have regs=1 stack=0 marks: R0_rw=P34 R1=6 R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3_w=0 R4_rw=P0 R6=ctx(off=0,imm=0) R7_r=pkt(off=0,r=34,imm=0) R8=pkt_end(off=0,imm=0) R9_w=2 R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm fp-136=
last_idx 448 first_idx 435
regs=1 stack=0 before 448: (b7) r0 = 34
; if (tcp + 1 > data_end) {
453: (bf) r0 = r5                     ; R0_w=pkt(off=34,r=34,imm=0) R5_w=pkt(off=34,r=34,imm=0)
454: (07) r0 += 20                    ; R0_w=pkt(off=54,r=34,imm=0)
455: (b7) r9 = 1                      ; R9_w=1
; if (tcp + 1 > data_end) {
456: (2d) if r0 > r8 goto pc+1401     ; R0_w=pkt(off=54,r=54,imm=0) R8=pkt_end(off=0,imm=0)
; if (tcp->syn) {
457: (69) r0 = *(u16 *)(r5 +12)       ; R0_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R5_w=pkt(off=34,r=54,imm=0)
; if (tcp->syn) {
458: (57) r0 &= 512                   ; R0=scalar(umax=512,var_off=(0x0; 0x200))
; if (tcp->syn) {
459: (15) if r0 == 0x0 goto pc+2      ; R0=scalar(umax=512,var_off=(0x0; 0x200))
; pckt->flags |= F_SYN_SET;
460: (47) r3 |= 2                     ; R3_w=2
461: (73) *(u8 *)(r10 -36) = r3       ; R3_w=2 R10=fp0 fp-40=mmmmmmmm
462: (b7) r3 = 1                      ; R3_w=1
; bool is_icmp = !((pckt->flags & F_ICMP) == 0);
463: (15) if r4 == 0x0 goto pc+1      ; R4=P0
465: (67) r4 <<= 1                    ; R4_w=P0
; 
466: (bf) r0 = r5                     ; R0_w=pkt(off=34,r=54,imm=0) R5=pkt(off=34,r=54,imm=0)
467: (0f) r0 += r4                    ; R0_w=pkt(off=34,r=54,imm=0) R4_w=P0
468: (69) r4 = *(u16 *)(r0 +0)        ; R0_w=pkt(off=34,r=54,imm=0) R4_w=scalar(umax=65535,var_off=(0x0; 0xffff))
469: (6b) *(u16 *)(r10 -48) = r4      ; R4_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-48=
470: (67) r3 <<= 1                    ; R3_w=2
471: (0f) r5 += r3
last_idx 471 first_idx 459
regs=8 stack=0 before 470: (67) r3 <<= 1
regs=8 stack=0 before 469: (6b) *(u16 *)(r10 -48) = r4
regs=8 stack=0 before 468: (69) r4 = *(u16 *)(r0 +0)
regs=8 stack=0 before 467: (0f) r0 += r4
regs=8 stack=0 before 466: (bf) r0 = r5
regs=8 stack=0 before 465: (67) r4 <<= 1
regs=8 stack=0 before 463: (15) if r4 == 0x0 goto pc+1
regs=8 stack=0 before 462: (b7) r3 = 1
472: R3_w=P2 R5_w=pkt(off=36,r=54,imm=0)
472: (69) r3 = *(u16 *)(r5 +0)        ; R3_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R5_w=pkt(off=36,r=54,imm=0)
473: (05) goto pc+73
; 
547: (6b) *(u16 *)(r10 -46) = r3      ; R3=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-48=mmmmmmmm
; vip.proto = pckt.flow.proto;
548: (73) *(u8 *)(r10 -86) = r1       ; R1=6 R10=fp0 fp-88=????mmmm
; vip.port = pckt.flow.port16[1];
549: (6b) *(u16 *)(r10 -88) = r3      ; R3=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-88=
; vip.vip = pckt.flow.dst;
550: (63) *(u32 *)(r10 -104) = r2     ; R2=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-104=
551: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; 
552: (07) r2 += -104                  ; R2_w=fp-104
; vip_info = bpf_map_lookup_elem(&vip_map, &vip);
553: (18) r1 = 0xffffa03557866800     ; R1_w=map_ptr(off=0,ks=20,vs=8,imm=0)
555: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=365,off=0,ks=20,vs=8,imm=0)
; if (!vip_info) {
556: (55) if r0 != 0x0 goto pc+14     ; R0_w=0
557: (05) goto pc+0
; vip.port = 0;
558: (6a) *(u16 *)(r10 -88) = 0       ; R10=fp0 fp-88=????mmmm
559: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
560: (07) r2 += -104                  ; R2_w=fp-104
; vip_info = bpf_map_lookup_elem(&vip_map, &vip);
561: (18) r1 = 0xffffa03557866800     ; R1_w=map_ptr(off=0,ks=20,vs=8,imm=0)
563: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=366,off=0,ks=20,vs=8,imm=0)
564: (b7) r9 = 2                      ; R9_w=2
; if (!vip_info) {
565: (15) if r0 == 0x0 goto pc+1292   ; R0_w=map_value(off=0,ks=20,vs=8,imm=0)
; if (!(vip_info->flags & F_HASH_DPORT_ONLY) &&
566: (61) r1 = *(u32 *)(r0 +0)        ; R0_w=map_value(off=0,ks=20,vs=8,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (!(vip_info->flags & F_HASH_DPORT_ONLY) &&
567: (57) r1 &= 136                   ; R1=scalar(umax=136,var_off=(0x0; 0x88))
568: (55) if r1 != 0x0 goto pc+2      ; R1=0
569: (05) goto pc+0
; pckt.flow.port16[1] = 0;
570: (6a) *(u16 *)(r10 -46) = 0       ; R10=fp0 fp-48=mmmmmmmm
; if (data_end - data > MAX_PCKT_SIZE) {
571: (bf) r1 = r8                     ; R1_w=pkt_end(off=0,imm=0) R8=pkt_end(off=0,imm=0)
572: (1f) r1 -= r7                    ; R1_w=scalar() R7=pkt(off=0,r=54,imm=0)
573: (b7) r9 = 1                      ; R9_w=1
; if (data_end - data > MAX_PCKT_SIZE) {
574: (65) if r1 s> 0x5ea goto pc+1283         ; R1_w=scalar(smax=1514)
575: (7b) *(u64 *)(r10 -144) = r0     ; R0=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-144_w=map_value
576: (05) goto pc+0
; __u32 stats_key = MAX_VIPS + LRU_CNTRS;
577: (62) *(u32 *)(r10 -116) = 512    ; R10=fp0 fp-120=mmmm????
578: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; 
579: (07) r2 += -116                  ; R2_w=fp-116
; data_stats = bpf_map_lookup_elem(&stats, &stats_key);
580: (18) r1 = 0xffffa03499be8000     ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
582: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=367,off=0,ks=4,vs=16,imm=0)
; if (!data_stats) {
583: (15) if r0 == 0x0 goto pc+1274   ; R0_w=map_value(off=0,ks=4,vs=16,imm=0)
; data_stats->v1 += 1;
584: (79) r1 = *(u64 *)(r0 +0)        ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
585: (07) r1 += 1                     ; R1_w=scalar()
586: (7b) *(u64 *)(r10 -160) = r0     ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R10=fp0 fp-160_w=map_value
587: (7b) *(u64 *)(r0 +0) = r1        ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
588: (79) r9 = *(u64 *)(r10 -144)     ; R9_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
; if ((vip_info->flags & F_HASH_NO_SRC_PORT)) {
589: (61) r1 = *(u32 *)(r9 +0)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9_w=map_value(off=0,ks=20,vs=8,imm=0)
; if ((vip_info->flags & F_HASH_NO_SRC_PORT)) {
590: (57) r1 &= 1                     ; R1=scalar(umax=1,var_off=(0x0; 0x1))
; if ((vip_info->flags & F_HASH_NO_SRC_PORT)) {
591: (15) if r1 == 0x0 goto pc+2      ; R1=scalar(umax=1,var_off=(0x0; 0x1))
592: (05) goto pc+0
; pckt.flow.port16[0] = 0;
593: (6a) *(u16 *)(r10 -48) = 0       ; R10=fp0 fp-48=mmmmmmmm
; vip_num = vip_info->vip_num;
594: (61) r1 = *(u32 *)(r9 +4)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9=map_value(off=0,ks=20,vs=8,imm=0)
595: (7b) *(u64 *)(r10 -168) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-168_w=
; vip_num = vip_info->vip_num;
596: (63) *(u32 *)(r10 -108) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-112=mmmmmmmm
; __u32 cpu_num = bpf_get_smp_processor_id();
597: (85) call bpf_get_smp_processor_id#8     ; R0_w=scalar()
; __u32 cpu_num = bpf_get_smp_processor_id();
598: (63) *(u32 *)(r10 -120) = r0     ; R0_w=scalar() R10=fp0 fp-120=mmmmmmmm
599: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; 
600: (07) r2 += -120                  ; R2_w=fp-120
; void* lru_map = bpf_map_lookup_elem(&lru_mapping, &cpu_num);
601: (18) r1 = 0xffffa0376748a000     ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
603: (85) call bpf_map_lookup_elem#1          ; R0=map_value_or_null(id=368,off=0,ks=4,vs=4,imm=0)
604: (7b) *(u64 *)(r10 -152) = r0     ; R0=map_value_or_null(id=368,off=0,ks=4,vs=4,imm=0) R10=fp0 fp-152_w=map_value_or_null
; if (!lru_map) {
605: (55) if r0 != 0x0 goto pc+15     ; R0=0
606: (05) goto pc+0
; __u32 lru_stats_key = MAX_VIPS + FALLBACK_LRU_CNTR;
607: (62) *(u32 *)(r10 -16) = 515     ; R10=fp0 fp-16=????mmmm
608: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
609: (07) r2 += -16                   ; R2_w=fp-16
; struct lb_stats* lru_stats = bpf_map_lookup_elem(&stats, &lru_stats_key);
610: (18) r1 = 0xffffa03499be8000     ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
612: (85) call bpf_map_lookup_elem#1          ; R0=map_value_or_null(id=369,off=0,ks=4,vs=16,imm=0)
; if (!lru_stats) {
613: (15) if r0 == 0x0 goto pc+1243   ; R0=map_value(off=0,ks=4,vs=16,imm=0)
; lru_stats->v1 += 1;
614: (79) r1 = *(u64 *)(r0 +0)        ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
615: (07) r1 += 1                     ; R1_w=scalar()
616: (7b) *(u64 *)(r0 +0) = r1        ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
617: (18) r1 = 0xffffa03557862800     ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0)
619: (7b) *(u64 *)(r10 -152) = r1     ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0 fp-152_w=map_ptr
620: (79) r9 = *(u64 *)(r10 -144)     ; R9_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
; if ((vip_info->flags & F_QUIC_VIP)) {
621: (61) r1 = *(u32 *)(r9 +0)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9_w=map_value(off=0,ks=20,vs=8,imm=0)
; if ((vip_info->flags & F_QUIC_VIP)) {
622: (57) r1 &= 4                     ; R1_w=scalar(umax=4,var_off=(0x0; 0x4))
; if ((vip_info->flags & F_QUIC_VIP)) {
623: (15) if r1 == 0x0 goto pc+1016   ; R1_w=scalar(umax=4,var_off=(0x0; 0x4))
; bool is_icmp = (pckt.flags & F_ICMP);
624: (71) r1 = *(u8 *)(r10 -36)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; bool is_icmp = (pckt.flags & F_ICMP);
625: (57) r1 &= 1                     ; R1=scalar(umax=1,var_off=(0x0; 0x1))
; if (is_icmp) {
626: (15) if r1 == 0x0 goto pc+91     ; R1=scalar(umax=1,var_off=(0x0; 0x1))
627: (05) goto pc+0
; __u32 stats_key = MAX_VIPS + QUIC_ICMP_STATS;
628: (62) *(u32 *)(r10 -16) = 523     ; R10=fp0 fp-16=????mmmm
629: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
630: (07) r2 += -16                   ; R2_w=fp-16
; struct lb_stats* data_stats = bpf_map_lookup_elem(&stats, &stats_key);
631: (18) r1 = 0xffffa03499be8000     ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
633: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=370,off=0,ks=4,vs=16,imm=0)
; if (!data_stats) {
634: (15) if r0 == 0x0 goto pc+1222   ; R0_w=map_value(off=0,ks=4,vs=16,imm=0)
; data_stats->v1 += 1;
635: (79) r1 = *(u64 *)(r0 +0)        ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
636: (07) r1 += 1                     ; R1_w=scalar()
637: (7b) *(u64 *)(r0 +0) = r1        ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
; (icmp_hdr->code == ICMP_PORT_UNREACH) ||
638: (71) r1 = *(u8 *)(r7 +35)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=54,imm=0)
; (icmp_hdr->code == ICMP_PORT_UNREACH) ||
639: (57) r1 &= 253
640: safe

from 634 to 1857: safe

from 626 to 718: R0=map_value(off=0,ks=4,vs=16,imm=0) R1=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=54,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
718: (05) goto pc+0
; __u32 quic_packets_stats_key = 0;
719: (62) *(u32 *)(r10 -28) = 0       ; R10=fp0 fp-32=mmmm????
720: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
721: (07) r2 += -28                   ; R2_w=fp-28
; bpf_map_lookup_elem(&quic_stats_map, &quic_packets_stats_key);
722: (18) r1 = 0xffffa03587064800     ; R1_w=map_ptr(off=0,ks=4,vs=104,imm=0)
724: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=371,off=0,ks=4,vs=104,imm=0)
725: (bf) r9 = r0                     ; R0_w=map_value_or_null(id=371,off=0,ks=4,vs=104,imm=0) R9_w=map_value_or_null(id=371,off=0,ks=4,vs=104,imm=0)
; if (!quic_packets_stats) {
726: (15) if r9 == 0x0 goto pc+1130   ; R9_w=map_value(off=0,ks=4,vs=104,imm=0)
; bool is_icmp = (pckt->flags & F_ICMP);
727: (71) r2 = *(u8 *)(r10 -36)       ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; bool is_icmp = (pckt->flags & F_ICMP);
728: (57) r2 &= 1                     ; R2_w=scalar(umax=1,var_off=(0x0; 0x1))
729: (b7) r1 = 34                     ; R1=34
; if (is_ipv6) {
730: (15) if r2 == 0x0 goto pc+1      ; R2=scalar(umax=1,var_off=(0x0; 0x1))
731: (b7) r1 = 62                     ; R1_w=62
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
732: (0f) r7 += r1
last_idx 732 first_idx 730
regs=2 stack=0 before 731: (b7) r1 = 62
733: R1_w=P62 R7_w=pkt(off=62,r=54,imm=0)
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
733: (bf) r1 = r7                     ; R1_w=pkt(off=62,r=54,imm=0) R7_w=pkt(off=62,r=54,imm=0)
734: (07) r1 += 9                     ; R1_w=pkt(off=71,r=54,imm=0)
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
735: (2d) if r1 > r8 goto pc+900      ; R1_w=pkt(off=71,r=71,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
736: (71) r2 = *(u8 *)(r7 +8)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=62,r=71,imm=0)
737: (67) r2 <<= 56                   ; R2_w=scalar(smax=9151314442816847872,umax=18374686479671623680,var_off=(0x0; 0xff00000000000000),s32_min=0,s32_max=0,u32_max=0)
738: (c7) r2 s>>= 56
739: safe

from 735 to 1636: safe

from 730 to 732: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=34 R2=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=54,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
732: (0f) r7 += r1
last_idx 732 first_idx 732
parent didn't have regs=2 stack=0 marks: R0=map_value(off=0,ks=4,vs=104,imm=0) R1_r=P34 R2=0 R6=ctx(off=0,imm=0) R7_r=pkt(off=0,r=54,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
last_idx 730 first_idx 730
regs=2 stack=0 before 730: (15) if r2 == 0x0 goto pc+1
parent didn't have regs=2 stack=0 marks: R0_w=map_value(off=0,ks=4,vs=104,imm=0) R1_rw=P34 R2_rw=scalar(umax=1,var_off=(0x0; 0x1)) R6_r=ctx(off=0,imm=0) R7_r=pkt(off=0,r=54,imm=0) R8_r=pkt_end(off=0,imm=0) R9_rw=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16_r=????mmmm fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=
last_idx 729 first_idx 718
regs=2 stack=0 before 729: (b7) r1 = 34
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
733: (bf) r1 = r7                     ; R1_w=pkt(off=34,r=54,imm=0) R7_w=pkt(off=34,r=54,imm=0)
734: (07) r1 += 9                     ; R1_w=pkt(off=43,r=54,imm=0)
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
735: (2d) if r1 > r8 goto pc+900      ; R1_w=pkt(off=43,r=54,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
736: (71) r2 = *(u8 *)(r7 +8)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=34,r=54,imm=0)
737: (67) r2 <<= 56                   ; R2_w=scalar(smax=9151314442816847872,umax=18374686479671623680,var_off=(0x0; 0xff00000000000000),s32_min=0,s32_max=0,u32_max=0)
738: (c7) r2 s>>= 56                  ; R2_w=scalar(smin=-128,smax=127)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
739: (65) if r2 s> 0xffffffff goto pc+30      ; R2_w=scalar(umin=18446744073709551488,var_off=(0xffffffffffffff80; 0x7f),u32_min=-128)
; if (quic_data + sizeof(struct quic_long_header) > data_end) {
740: (bf) r1 = r7                     ; R1_w=pkt(off=34,r=54,imm=0) R7_w=pkt(off=34,r=54,imm=0)
741: (07) r1 += 22                    ; R1=pkt(off=56,r=54,imm=0)
; if (quic_data + sizeof(struct quic_long_header) > data_end) {
742: (2d) if r1 > r8 goto pc+893      ; R1=pkt(off=56,r=56,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_PACKET_TYPE_MASK) < QUIC_HANDSHAKE) {
743: (57) r2 &= 32                    ; R2_w=scalar(umax=32,var_off=(0x0; 0x20))
; if ((*pkt_type & QUIC_PACKET_TYPE_MASK) < QUIC_HANDSHAKE) {
744: (15) if r2 == 0x0 goto pc+817    ; R2_w=scalar(umax=32,var_off=(0x0; 0x20))
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
745: (71) r1 = *(u8 *)(r7 +13)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=34,r=56,imm=0)
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
746: (07) r7 += 14                    ; R7_w=pkt(off=48,r=56,imm=0)
747: (25) if r1 > 0x7 goto pc+26      ; R1_w=scalar(umax=7,var_off=(0x0; 0x7))
748: (05) goto pc+887
1636: safe

from 747 to 774: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(umin=8,umax=255,var_off=(0x0; 0xff)) R2=scalar(umax=32,var_off=(0x0; 0x20)) R6=ctx(off=0,imm=0) R7=pkt(off=48,r=56,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (!connId) {
774: (15) if r7 == 0x0 goto pc+861    ; R7=pkt(off=48,r=56,imm=0)
; __u8 connIdVersion = (connId[0] >> 6);
775: (71) r1 = *(u8 *)(r7 +0)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=48,r=56,imm=0)
776: (bf) r2 = r1                     ; R1_w=scalar(id=372,umax=255,var_off=(0x0; 0xff)) R2_w=scalar(id=372,umax=255,var_off=(0x0; 0xff))
777: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
; if (connIdVersion == QUIC_CONNID_VERSION_V1) {
778: (15) if r2 == 0x3 goto pc+798    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
779: (15) if r2 == 0x2 goto pc+809    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
780: (55) if r2 != 0x1 goto pc+855    ; R2_w=1
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
781: (57) r1 &= 63                    ; R1_w=scalar(umax=63,var_off=(0x0; 0x3f))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
782: (67) r1 <<= 10                   ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
783: (71) r8 = *(u8 *)(r7 +1)         ; R7=pkt(off=48,r=56,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
784: (67) r8 <<= 2                    ; R8_w=scalar(umax=1020,var_off=(0x0; 0x3fc))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
785: (4f) r8 |= r1                    ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00)) R8_w=scalar()
786: (18) r1 = 0x100000000            ; R1_w=4294967296
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
788: (71) r2 = *(u8 *)(r7 +2)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=48,r=56,imm=0)
789: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
790: (05) goto pc+806
frame 1: propagating r0
last_idx 1597 first_idx 774
regs=2 stack=0 before 790: (05) goto pc+806
regs=2 stack=0 before 789: (77) r2 >>= 6
regs=2 stack=0 before 788: (71) r2 = *(u8 *)(r7 +2)
regs=2 stack=0 before 786: (18) r1 = 0x100000000
1597: safe

from 780 to 1636: safe

from 779 to 1589: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=372,umax=255,var_off=(0x0; 0xff)) R2=2 R6=ctx(off=0,imm=0) R7=pkt(off=48,r=56,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1589: (71) r1 = *(u8 *)(r7 +1)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=48,r=56,imm=0)
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1590: (67) r1 <<= 16                  ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1591: (71) r8 = *(u8 *)(r7 +2)        ; R7=pkt(off=48,r=56,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1592: (67) r8 <<= 8                   ; R8_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1593: (4f) r8 |= r1                   ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000)) R8_w=scalar()
1594: (18) r1 = 0x200000000           ; R1_w=8589934592
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1596: (71) r2 = *(u8 *)(r7 +3)        ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=48,r=56,imm=0)
1597: (57) r2 &= 255                  ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
1598: (4f) r8 |= r2                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1599: (bf) r2 = r8                    ; R2_w=scalar(id=373) R8_w=scalar(id=373)
1600: (67) r2 <<= 32                  ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
1601: (c7) r2 s>>= 32                 ; R2_w=scalar(smin=-2147483648,smax=2147483647)
1602: (b7) r3 = 1                     ; R3_w=1
; if (qpr.server_id > 0) {
1603: (6d) if r3 s> r2 goto pc+32     ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1604: (77) r1 >>= 32                  ; R1_w=2
; if (cid_version == QUIC_CONNID_VERSION_V1) {
1605: (15) if r1 == 0x3 goto pc+5
last_idx 1605 first_idx 1589
regs=2 stack=0 before 1604: (77) r1 >>= 32
regs=2 stack=0 before 1603: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 1602: (b7) r3 = 1
regs=2 stack=0 before 1601: (c7) r2 s>>= 32
regs=2 stack=0 before 1600: (67) r2 <<= 32
regs=2 stack=0 before 1599: (bf) r2 = r8
regs=2 stack=0 before 1598: (4f) r8 |= r2
regs=2 stack=0 before 1597: (57) r2 &= 255
regs=2 stack=0 before 1596: (71) r2 = *(u8 *)(r7 +3)
regs=2 stack=0 before 1594: (18) r1 = 0x200000000
frame 1: propagating r0
1606: safe

from 1603 to 1636: safe

from 778 to 1577: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=372,umax=255,var_off=(0x0; 0xff)) R2=3 R6=ctx(off=0,imm=0) R7=pkt(off=48,r=56,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1577: (71) r1 = *(u8 *)(r7 +1)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=48,r=56,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1578: (67) r1 <<= 24                  ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1579: (71) r8 = *(u8 *)(r7 +2)        ; R7=pkt(off=48,r=56,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1580: (67) r8 <<= 16                  ; R8_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1581: (4f) r8 |= r1                   ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432) R8_w=scalar()
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1582: (71) r1 = *(u8 *)(r7 +3)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=48,r=56,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1583: (67) r1 <<= 8                   ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1584: (4f) r8 |= r1                   ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00)) R8_w=scalar()
1585: (18) r1 = 0x300000000           ; R1_w=12884901888
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1587: (71) r2 = *(u8 *)(r7 +4)        ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=48,r=56,imm=0)
1588: (05) goto pc+8
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1597: (57) r2 &= 255                  ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
1598: (4f) r8 |= r2                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1599: (bf) r2 = r8                    ; R2_w=scalar(id=374) R8_w=scalar(id=374)
1600: (67) r2 <<= 32                  ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
1601: (c7) r2 s>>= 32                 ; R2_w=scalar(smin=-2147483648,smax=2147483647)
1602: (b7) r3 = 1                     ; R3_w=1
; if (qpr.server_id > 0) {
1603: (6d) if r3 s> r2 goto pc+32     ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1604: (77) r1 >>= 32
frame 1: propagating r0
last_idx 1605 first_idx 1577
regs=2 stack=0 before 1604: (77) r1 >>= 32
regs=2 stack=0 before 1603: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 1602: (b7) r3 = 1
regs=2 stack=0 before 1601: (c7) r2 s>>= 32
regs=2 stack=0 before 1600: (67) r2 <<= 32
regs=2 stack=0 before 1599: (bf) r2 = r8
regs=2 stack=0 before 1598: (4f) r8 |= r2
regs=2 stack=0 before 1597: (57) r2 &= 255
regs=2 stack=0 before 1588: (05) goto pc+8
regs=2 stack=0 before 1587: (71) r2 = *(u8 *)(r7 +4)
regs=2 stack=0 before 1585: (18) r1 = 0x300000000
1605: safe

from 1603 to 1636: safe

from 774 to 1636: safe

from 744 to 1562: safe

from 742 to 1636: safe

from 739 to 770: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=pkt(off=43,r=54,imm=0) R2=scalar(umax=127,var_off=(0x0; 0x7f)) R6=ctx(off=0,imm=0) R7=pkt(off=34,r=54,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (quic_data + sizeof(struct quic_short_header) > data_end) {
770: (bf) r2 = r7                     ; R2_w=pkt(off=34,r=54,imm=0) R7=pkt(off=34,r=54,imm=0)
771: (07) r2 += 17                    ; R2_w=pkt(off=51,r=54,imm=0)
772: (bf) r7 = r1                     ; R1=pkt(off=43,r=54,imm=0) R7_w=pkt(off=43,r=54,imm=0)
; if (quic_data + sizeof(struct quic_short_header) > data_end) {
773: (2d) if r2 > r8 goto pc+862      ; R2_w=pkt(off=51,r=54,imm=0) R8=pkt_end(off=0,imm=0)
; if (!connId) {
774: (15) if r7 == 0x0 goto pc+861    ; R7_w=pkt(off=43,r=54,imm=0)
; __u8 connIdVersion = (connId[0] >> 6);
775: (71) r1 = *(u8 *)(r7 +0)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=43,r=54,imm=0)
776: (bf) r2 = r1                     ; R1_w=scalar(id=375,umax=255,var_off=(0x0; 0xff)) R2_w=scalar(id=375,umax=255,var_off=(0x0; 0xff))
777: (77) r2 >>= 6                    ; R2=scalar(umax=3,var_off=(0x0; 0x3))
; if (connIdVersion == QUIC_CONNID_VERSION_V1) {
778: (15) if r2 == 0x3 goto pc+798    ; R2=scalar(umax=3,var_off=(0x0; 0x3))
779: (15) if r2 == 0x2 goto pc+809    ; R2=scalar(umax=3,var_off=(0x0; 0x3))
780: (55) if r2 != 0x1 goto pc+855    ; R2=1
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
781: (57) r1 &= 63                    ; R1_w=scalar(umax=63,var_off=(0x0; 0x3f))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
782: (67) r1 <<= 10                   ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
783: (71) r8 = *(u8 *)(r7 +1)         ; R7=pkt(off=43,r=54,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
784: (67) r8 <<= 2                    ; R8_w=scalar(umax=1020,var_off=(0x0; 0x3fc))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
785: (4f) r8 |= r1                    ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00)) R8_w=scalar()
786: (18) r1 = 0x100000000            ; R1_w=4294967296
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
788: (71) r2 = *(u8 *)(r7 +2)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=43,r=54,imm=0)
789: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
790: (05) goto pc+806
frame 1: propagating r0
last_idx 1597 first_idx 778
regs=2 stack=0 before 790: (05) goto pc+806
regs=2 stack=0 before 789: (77) r2 >>= 6
regs=2 stack=0 before 788: (71) r2 = *(u8 *)(r7 +2)
regs=2 stack=0 before 786: (18) r1 = 0x100000000
1597: safe

from 780 to 1636: safe

from 779 to 1589: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=375,umax=255,var_off=(0x0; 0xff)) R2=2 R6=ctx(off=0,imm=0) R7=pkt(off=43,r=54,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1589: (71) r1 = *(u8 *)(r7 +1)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=43,r=54,imm=0)
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1590: (67) r1 <<= 16                  ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1591: (71) r8 = *(u8 *)(r7 +2)        ; R7=pkt(off=43,r=54,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1592: (67) r8 <<= 8                   ; R8_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1593: (4f) r8 |= r1                   ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000)) R8_w=scalar()
1594: (18) r1 = 0x200000000           ; R1_w=8589934592
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1596: (71) r2 = *(u8 *)(r7 +3)        ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=43,r=54,imm=0)
1597: (57) r2 &= 255                  ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
1598: (4f) r8 |= r2                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1599: (bf) r2 = r8                    ; R2_w=scalar(id=376) R8_w=scalar(id=376)
1600: (67) r2 <<= 32                  ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
1601: (c7) r2 s>>= 32                 ; R2_w=scalar(smin=-2147483648,smax=2147483647)
1602: (b7) r3 = 1                     ; R3_w=1
; if (qpr.server_id > 0) {
1603: (6d) if r3 s> r2 goto pc+32     ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1604: (77) r1 >>= 32                  ; R1_w=2
; if (cid_version == QUIC_CONNID_VERSION_V1) {
1605: (15) if r1 == 0x3 goto pc+5
last_idx 1605 first_idx 1589
regs=2 stack=0 before 1604: (77) r1 >>= 32
regs=2 stack=0 before 1603: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 1602: (b7) r3 = 1
regs=2 stack=0 before 1601: (c7) r2 s>>= 32
regs=2 stack=0 before 1600: (67) r2 <<= 32
regs=2 stack=0 before 1599: (bf) r2 = r8
regs=2 stack=0 before 1598: (4f) r8 |= r2
regs=2 stack=0 before 1597: (57) r2 &= 255
regs=2 stack=0 before 1596: (71) r2 = *(u8 *)(r7 +3)
regs=2 stack=0 before 1594: (18) r1 = 0x200000000
frame 1: propagating r0
1606: safe

from 1603 to 1636: safe

from 778 to 1577: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=375,umax=255,var_off=(0x0; 0xff)) R2=3 R6=ctx(off=0,imm=0) R7=pkt(off=43,r=54,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1577: (71) r1 = *(u8 *)(r7 +1)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=43,r=54,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1578: (67) r1 <<= 24                  ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1579: (71) r8 = *(u8 *)(r7 +2)        ; R7=pkt(off=43,r=54,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1580: (67) r8 <<= 16                  ; R8_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1581: (4f) r8 |= r1                   ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432) R8_w=scalar()
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1582: (71) r1 = *(u8 *)(r7 +3)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=43,r=54,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1583: (67) r1 <<= 8                   ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1584: (4f) r8 |= r1                   ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00)) R8_w=scalar()
1585: (18) r1 = 0x300000000           ; R1_w=12884901888
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1587: (71) r2 = *(u8 *)(r7 +4)        ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=43,r=54,imm=0)
1588: (05) goto pc+8
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1597: (57) r2 &= 255                  ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
1598: (4f) r8 |= r2                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1599: (bf) r2 = r8                    ; R2_w=scalar(id=377) R8_w=scalar(id=377)
1600: (67) r2 <<= 32                  ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
1601: (c7) r2 s>>= 32                 ; R2_w=scalar(smin=-2147483648,smax=2147483647)
1602: (b7) r3 = 1                     ; R3_w=1
; if (qpr.server_id > 0) {
1603: (6d) if r3 s> r2 goto pc+32     ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1604: (77) r1 >>= 32
frame 1: propagating r0
last_idx 1605 first_idx 1577
regs=2 stack=0 before 1604: (77) r1 >>= 32
regs=2 stack=0 before 1603: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 1602: (b7) r3 = 1
regs=2 stack=0 before 1601: (c7) r2 s>>= 32
regs=2 stack=0 before 1600: (67) r2 <<= 32
regs=2 stack=0 before 1599: (bf) r2 = r8
regs=2 stack=0 before 1598: (4f) r8 |= r2
regs=2 stack=0 before 1597: (57) r2 &= 255
regs=2 stack=0 before 1588: (05) goto pc+8
regs=2 stack=0 before 1587: (71) r2 = *(u8 *)(r7 +4)
regs=2 stack=0 before 1585: (18) r1 = 0x300000000
1605: safe

from 1603 to 1636: safe

from 774 to 1636: safe

from 773 to 1636: safe

from 735 to 1636: safe

from 726 to 1857: safe

from 623 to 1640: safe

from 613 to 1857: safe

from 605 to 621: R0=map_ptr(off=0,ks=40,vs=16,imm=0) R6=ctx(off=0,imm=0) R7=pkt(off=0,r=54,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if ((vip_info->flags & F_QUIC_VIP)) {
621: (61) r1 = *(u32 *)(r9 +0)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9=map_value(off=0,ks=20,vs=8,imm=0)
; if ((vip_info->flags & F_QUIC_VIP)) {
622: (57) r1 &= 4                     ; R1_w=scalar(umax=4,var_off=(0x0; 0x4))
; if ((vip_info->flags & F_QUIC_VIP)) {
623: (15) if r1 == 0x0 goto pc+1016   ; R1_w=scalar(umax=4,var_off=(0x0; 0x4))
; bool is_icmp = (pckt.flags & F_ICMP);
624: (71) r1 = *(u8 *)(r10 -36)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; bool is_icmp = (pckt.flags & F_ICMP);
625: (57) r1 &= 1                     ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
; if (is_icmp) {
626: (15) if r1 == 0x0 goto pc+91     ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
627: (05) goto pc+0
; __u32 stats_key = MAX_VIPS + QUIC_ICMP_STATS;
628: (62) *(u32 *)(r10 -16) = 523     ; R10=fp0 fp-16=????mmmm
629: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
630: (07) r2 += -16                   ; R2_w=fp-16
; struct lb_stats* data_stats = bpf_map_lookup_elem(&stats, &stats_key);
631: (18) r1 = 0xffffa03499be8000     ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
633: (85) call bpf_map_lookup_elem#1          ; R0=map_value_or_null(id=378,off=0,ks=4,vs=16,imm=0)
; if (!data_stats) {
634: (15) if r0 == 0x0 goto pc+1222   ; R0=map_value(off=0,ks=4,vs=16,imm=0)
; data_stats->v1 += 1;
635: (79) r1 = *(u64 *)(r0 +0)        ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
636: (07) r1 += 1                     ; R1_w=scalar()
637: (7b) *(u64 *)(r0 +0) = r1        ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
; (icmp_hdr->code == ICMP_PORT_UNREACH) ||
638: (71) r1 = *(u8 *)(r7 +35)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=54,imm=0)
; (icmp_hdr->code == ICMP_PORT_UNREACH) ||
639: (57) r1 &= 253
640: safe

from 634 to 1857: safe

from 626 to 718: R0=map_ptr(off=0,ks=40,vs=16,imm=0) R1_w=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=54,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
718: (05) goto pc+0
; __u32 quic_packets_stats_key = 0;
719: (62) *(u32 *)(r10 -28) = 0       ; R10=fp0 fp-32=mmmm????
720: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
721: (07) r2 += -28                   ; R2_w=fp-28
; bpf_map_lookup_elem(&quic_stats_map, &quic_packets_stats_key);
722: (18) r1 = 0xffffa03587064800     ; R1_w=map_ptr(off=0,ks=4,vs=104,imm=0)
724: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=379,off=0,ks=4,vs=104,imm=0)
725: (bf) r9 = r0                     ; R0_w=map_value_or_null(id=379,off=0,ks=4,vs=104,imm=0) R9_w=map_value_or_null(id=379,off=0,ks=4,vs=104,imm=0)
; if (!quic_packets_stats) {
726: (15) if r9 == 0x0 goto pc+1130   ; R9_w=map_value(off=0,ks=4,vs=104,imm=0)
; bool is_icmp = (pckt->flags & F_ICMP);
727: (71) r2 = *(u8 *)(r10 -36)       ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; bool is_icmp = (pckt->flags & F_ICMP);
728: (57) r2 &= 1                     ; R2_w=scalar(umax=1,var_off=(0x0; 0x1))
729: (b7) r1 = 34                     ; R1=34
; if (is_ipv6) {
730: (15) if r2 == 0x0 goto pc+1      ; R2=scalar(umax=1,var_off=(0x0; 0x1))
731: (b7) r1 = 62                     ; R1_w=62
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
732: (0f) r7 += r1
last_idx 732 first_idx 730
regs=2 stack=0 before 731: (b7) r1 = 62
733: R1_w=P62 R7_w=pkt(off=62,r=54,imm=0)
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
733: (bf) r1 = r7                     ; R1_w=pkt(off=62,r=54,imm=0) R7_w=pkt(off=62,r=54,imm=0)
734: (07) r1 += 9                     ; R1_w=pkt(off=71,r=54,imm=0)
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
735: (2d) if r1 > r8 goto pc+900      ; R1_w=pkt(off=71,r=71,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
736: (71) r2 = *(u8 *)(r7 +8)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=62,r=71,imm=0)
737: (67) r2 <<= 56                   ; R2_w=scalar(smax=9151314442816847872,umax=18374686479671623680,var_off=(0x0; 0xff00000000000000),s32_min=0,s32_max=0,u32_max=0)
738: (c7) r2 s>>= 56
739: safe

from 735 to 1636: safe

from 730 to 732: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=34 R2=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=54,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
732: (0f) r7 += r1
last_idx 732 first_idx 732
parent didn't have regs=2 stack=0 marks: R0=map_value(off=0,ks=4,vs=104,imm=0) R1_r=P34 R2=0 R6=ctx(off=0,imm=0) R7_r=pkt(off=0,r=54,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
last_idx 730 first_idx 730
regs=2 stack=0 before 730: (15) if r2 == 0x0 goto pc+1
parent didn't have regs=2 stack=0 marks: R0_w=map_value(off=0,ks=4,vs=104,imm=0) R1_rw=P34 R2_rw=scalar(umax=1,var_off=(0x0; 0x1)) R6_r=ctx(off=0,imm=0) R7_r=pkt(off=0,r=54,imm=0) R8_r=pkt_end(off=0,imm=0) R9_rw=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=
last_idx 729 first_idx 719
regs=2 stack=0 before 729: (b7) r1 = 34
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
733: (bf) r1 = r7                     ; R1_w=pkt(off=34,r=54,imm=0) R7_w=pkt(off=34,r=54,imm=0)
734: (07) r1 += 9                     ; R1_w=pkt(off=43,r=54,imm=0)
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
735: (2d) if r1 > r8 goto pc+900      ; R1_w=pkt(off=43,r=54,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
736: (71) r2 = *(u8 *)(r7 +8)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=34,r=54,imm=0)
737: (67) r2 <<= 56                   ; R2_w=scalar(smax=9151314442816847872,umax=18374686479671623680,var_off=(0x0; 0xff00000000000000),s32_min=0,s32_max=0,u32_max=0)
738: (c7) r2 s>>= 56                  ; R2_w=scalar(smin=-128,smax=127)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
739: (65) if r2 s> 0xffffffff goto pc+30      ; R2_w=scalar(umin=18446744073709551488,var_off=(0xffffffffffffff80; 0x7f),u32_min=-128)
; if (quic_data + sizeof(struct quic_long_header) > data_end) {
740: (bf) r1 = r7                     ; R1_w=pkt(off=34,r=54,imm=0) R7_w=pkt(off=34,r=54,imm=0)
741: (07) r1 += 22                    ; R1=pkt(off=56,r=54,imm=0)
; if (quic_data + sizeof(struct quic_long_header) > data_end) {
742: (2d) if r1 > r8 goto pc+893      ; R1=pkt(off=56,r=56,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_PACKET_TYPE_MASK) < QUIC_HANDSHAKE) {
743: (57) r2 &= 32                    ; R2_w=scalar(umax=32,var_off=(0x0; 0x20))
; if ((*pkt_type & QUIC_PACKET_TYPE_MASK) < QUIC_HANDSHAKE) {
744: (15) if r2 == 0x0 goto pc+817    ; R2_w=scalar(umax=32,var_off=(0x0; 0x20))
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
745: (71) r1 = *(u8 *)(r7 +13)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=34,r=56,imm=0)
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
746: (07) r7 += 14                    ; R7_w=pkt(off=48,r=56,imm=0)
747: (25) if r1 > 0x7 goto pc+26      ; R1_w=scalar(umax=7,var_off=(0x0; 0x7))
748: (05) goto pc+887
1636: safe

from 747 to 774: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(umin=8,umax=255,var_off=(0x0; 0xff)) R2=scalar(umax=32,var_off=(0x0; 0x20)) R6=ctx(off=0,imm=0) R7=pkt(off=48,r=56,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (!connId) {
774: (15) if r7 == 0x0 goto pc+861    ; R7=pkt(off=48,r=56,imm=0)
; __u8 connIdVersion = (connId[0] >> 6);
775: (71) r1 = *(u8 *)(r7 +0)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=48,r=56,imm=0)
776: (bf) r2 = r1                     ; R1_w=scalar(id=380,umax=255,var_off=(0x0; 0xff)) R2_w=scalar(id=380,umax=255,var_off=(0x0; 0xff))
777: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
; if (connIdVersion == QUIC_CONNID_VERSION_V1) {
778: (15) if r2 == 0x3 goto pc+798    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
779: (15) if r2 == 0x2 goto pc+809    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
780: (55) if r2 != 0x1 goto pc+855    ; R2_w=1
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
781: (57) r1 &= 63                    ; R1_w=scalar(umax=63,var_off=(0x0; 0x3f))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
782: (67) r1 <<= 10                   ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
783: (71) r8 = *(u8 *)(r7 +1)         ; R7=pkt(off=48,r=56,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
784: (67) r8 <<= 2                    ; R8_w=scalar(umax=1020,var_off=(0x0; 0x3fc))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
785: (4f) r8 |= r1                    ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00)) R8_w=scalar()
786: (18) r1 = 0x100000000            ; R1_w=4294967296
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
788: (71) r2 = *(u8 *)(r7 +2)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=48,r=56,imm=0)
789: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
790: (05) goto pc+806
frame 1: propagating r0
last_idx 1597 first_idx 774
regs=2 stack=0 before 790: (05) goto pc+806
regs=2 stack=0 before 789: (77) r2 >>= 6
regs=2 stack=0 before 788: (71) r2 = *(u8 *)(r7 +2)
regs=2 stack=0 before 786: (18) r1 = 0x100000000
1597: safe

from 780 to 1636: safe

from 779 to 1589: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=380,umax=255,var_off=(0x0; 0xff)) R2=2 R6=ctx(off=0,imm=0) R7=pkt(off=48,r=56,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1589: (71) r1 = *(u8 *)(r7 +1)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=48,r=56,imm=0)
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1590: (67) r1 <<= 16                  ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1591: (71) r8 = *(u8 *)(r7 +2)        ; R7=pkt(off=48,r=56,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1592: (67) r8 <<= 8                   ; R8_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1593: (4f) r8 |= r1                   ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000)) R8_w=scalar()
1594: (18) r1 = 0x200000000           ; R1_w=8589934592
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1596: (71) r2 = *(u8 *)(r7 +3)        ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=48,r=56,imm=0)
1597: (57) r2 &= 255                  ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
1598: (4f) r8 |= r2                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1599: (bf) r2 = r8                    ; R2_w=scalar(id=381) R8_w=scalar(id=381)
1600: (67) r2 <<= 32                  ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
1601: (c7) r2 s>>= 32                 ; R2_w=scalar(smin=-2147483648,smax=2147483647)
1602: (b7) r3 = 1                     ; R3_w=1
; if (qpr.server_id > 0) {
1603: (6d) if r3 s> r2 goto pc+32     ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1604: (77) r1 >>= 32                  ; R1_w=2
; if (cid_version == QUIC_CONNID_VERSION_V1) {
1605: (15) if r1 == 0x3 goto pc+5
last_idx 1605 first_idx 1589
regs=2 stack=0 before 1604: (77) r1 >>= 32
regs=2 stack=0 before 1603: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 1602: (b7) r3 = 1
regs=2 stack=0 before 1601: (c7) r2 s>>= 32
regs=2 stack=0 before 1600: (67) r2 <<= 32
regs=2 stack=0 before 1599: (bf) r2 = r8
regs=2 stack=0 before 1598: (4f) r8 |= r2
regs=2 stack=0 before 1597: (57) r2 &= 255
regs=2 stack=0 before 1596: (71) r2 = *(u8 *)(r7 +3)
regs=2 stack=0 before 1594: (18) r1 = 0x200000000
frame 1: propagating r0
1606: safe

from 1603 to 1636: safe

from 778 to 1577: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=380,umax=255,var_off=(0x0; 0xff)) R2=3 R6=ctx(off=0,imm=0) R7=pkt(off=48,r=56,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1577: (71) r1 = *(u8 *)(r7 +1)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=48,r=56,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1578: (67) r1 <<= 24                  ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1579: (71) r8 = *(u8 *)(r7 +2)        ; R7=pkt(off=48,r=56,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1580: (67) r8 <<= 16                  ; R8_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1581: (4f) r8 |= r1                   ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432) R8_w=scalar()
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1582: (71) r1 = *(u8 *)(r7 +3)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=48,r=56,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1583: (67) r1 <<= 8                   ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1584: (4f) r8 |= r1                   ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00)) R8_w=scalar()
1585: (18) r1 = 0x300000000           ; R1_w=12884901888
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1587: (71) r2 = *(u8 *)(r7 +4)        ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=48,r=56,imm=0)
1588: (05) goto pc+8
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1597: (57) r2 &= 255                  ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
1598: (4f) r8 |= r2                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1599: (bf) r2 = r8                    ; R2_w=scalar(id=382) R8_w=scalar(id=382)
1600: (67) r2 <<= 32                  ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
1601: (c7) r2 s>>= 32                 ; R2_w=scalar(smin=-2147483648,smax=2147483647)
1602: (b7) r3 = 1                     ; R3_w=1
; if (qpr.server_id > 0) {
1603: (6d) if r3 s> r2 goto pc+32     ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1604: (77) r1 >>= 32
frame 1: propagating r0
last_idx 1605 first_idx 1577
regs=2 stack=0 before 1604: (77) r1 >>= 32
regs=2 stack=0 before 1603: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 1602: (b7) r3 = 1
regs=2 stack=0 before 1601: (c7) r2 s>>= 32
regs=2 stack=0 before 1600: (67) r2 <<= 32
regs=2 stack=0 before 1599: (bf) r2 = r8
regs=2 stack=0 before 1598: (4f) r8 |= r2
regs=2 stack=0 before 1597: (57) r2 &= 255
regs=2 stack=0 before 1588: (05) goto pc+8
regs=2 stack=0 before 1587: (71) r2 = *(u8 *)(r7 +4)
regs=2 stack=0 before 1585: (18) r1 = 0x300000000
1605: safe

from 1603 to 1636: safe

from 774 to 1636: safe

from 744 to 1562: safe

from 742 to 1636: safe

from 739 to 770: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=pkt(off=43,r=54,imm=0) R2=scalar(umax=127,var_off=(0x0; 0x7f)) R6=ctx(off=0,imm=0) R7=pkt(off=34,r=54,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (quic_data + sizeof(struct quic_short_header) > data_end) {
770: (bf) r2 = r7                     ; R2_w=pkt(off=34,r=54,imm=0) R7=pkt(off=34,r=54,imm=0)
771: (07) r2 += 17                    ; R2_w=pkt(off=51,r=54,imm=0)
772: (bf) r7 = r1                     ; R1=pkt(off=43,r=54,imm=0) R7_w=pkt(off=43,r=54,imm=0)
; if (quic_data + sizeof(struct quic_short_header) > data_end) {
773: (2d) if r2 > r8 goto pc+862      ; R2_w=pkt(off=51,r=54,imm=0) R8=pkt_end(off=0,imm=0)
; if (!connId) {
774: (15) if r7 == 0x0 goto pc+861    ; R7_w=pkt(off=43,r=54,imm=0)
; __u8 connIdVersion = (connId[0] >> 6);
775: (71) r1 = *(u8 *)(r7 +0)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=43,r=54,imm=0)
776: (bf) r2 = r1                     ; R1_w=scalar(id=383,umax=255,var_off=(0x0; 0xff)) R2_w=scalar(id=383,umax=255,var_off=(0x0; 0xff))
777: (77) r2 >>= 6                    ; R2=scalar(umax=3,var_off=(0x0; 0x3))
; if (connIdVersion == QUIC_CONNID_VERSION_V1) {
778: (15) if r2 == 0x3 goto pc+798    ; R2=scalar(umax=3,var_off=(0x0; 0x3))
779: (15) if r2 == 0x2 goto pc+809    ; R2=scalar(umax=3,var_off=(0x0; 0x3))
780: (55) if r2 != 0x1 goto pc+855    ; R2=1
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
781: (57) r1 &= 63                    ; R1_w=scalar(umax=63,var_off=(0x0; 0x3f))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
782: (67) r1 <<= 10                   ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
783: (71) r8 = *(u8 *)(r7 +1)         ; R7=pkt(off=43,r=54,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
784: (67) r8 <<= 2                    ; R8_w=scalar(umax=1020,var_off=(0x0; 0x3fc))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
785: (4f) r8 |= r1                    ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00)) R8_w=scalar()
786: (18) r1 = 0x100000000            ; R1_w=4294967296
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
788: (71) r2 = *(u8 *)(r7 +2)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=43,r=54,imm=0)
789: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
790: (05) goto pc+806
frame 1: propagating r0
last_idx 1597 first_idx 778
regs=2 stack=0 before 790: (05) goto pc+806
regs=2 stack=0 before 789: (77) r2 >>= 6
regs=2 stack=0 before 788: (71) r2 = *(u8 *)(r7 +2)
regs=2 stack=0 before 786: (18) r1 = 0x100000000
1597: safe

from 780 to 1636: safe

from 779 to 1589: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=383,umax=255,var_off=(0x0; 0xff)) R2=2 R6=ctx(off=0,imm=0) R7=pkt(off=43,r=54,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1589: (71) r1 = *(u8 *)(r7 +1)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=43,r=54,imm=0)
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1590: (67) r1 <<= 16                  ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1591: (71) r8 = *(u8 *)(r7 +2)        ; R7=pkt(off=43,r=54,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1592: (67) r8 <<= 8                   ; R8_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1593: (4f) r8 |= r1                   ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000)) R8_w=scalar()
1594: (18) r1 = 0x200000000           ; R1_w=8589934592
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1596: (71) r2 = *(u8 *)(r7 +3)        ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=43,r=54,imm=0)
1597: (57) r2 &= 255                  ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
1598: (4f) r8 |= r2                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1599: (bf) r2 = r8                    ; R2_w=scalar(id=384) R8_w=scalar(id=384)
1600: (67) r2 <<= 32                  ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
1601: (c7) r2 s>>= 32                 ; R2_w=scalar(smin=-2147483648,smax=2147483647)
1602: (b7) r3 = 1                     ; R3_w=1
; if (qpr.server_id > 0) {
1603: (6d) if r3 s> r2 goto pc+32     ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1604: (77) r1 >>= 32                  ; R1_w=2
; if (cid_version == QUIC_CONNID_VERSION_V1) {
1605: (15) if r1 == 0x3 goto pc+5
last_idx 1605 first_idx 1589
regs=2 stack=0 before 1604: (77) r1 >>= 32
regs=2 stack=0 before 1603: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 1602: (b7) r3 = 1
regs=2 stack=0 before 1601: (c7) r2 s>>= 32
regs=2 stack=0 before 1600: (67) r2 <<= 32
regs=2 stack=0 before 1599: (bf) r2 = r8
regs=2 stack=0 before 1598: (4f) r8 |= r2
regs=2 stack=0 before 1597: (57) r2 &= 255
regs=2 stack=0 before 1596: (71) r2 = *(u8 *)(r7 +3)
regs=2 stack=0 before 1594: (18) r1 = 0x200000000
frame 1: propagating r0
1606: safe

from 1603 to 1636: safe

from 778 to 1577: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=383,umax=255,var_off=(0x0; 0xff)) R2=3 R6=ctx(off=0,imm=0) R7=pkt(off=43,r=54,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1577: (71) r1 = *(u8 *)(r7 +1)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=43,r=54,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1578: (67) r1 <<= 24                  ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1579: (71) r8 = *(u8 *)(r7 +2)        ; R7=pkt(off=43,r=54,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1580: (67) r8 <<= 16                  ; R8_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1581: (4f) r8 |= r1                   ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432) R8_w=scalar()
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1582: (71) r1 = *(u8 *)(r7 +3)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=43,r=54,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1583: (67) r1 <<= 8                   ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1584: (4f) r8 |= r1                   ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00)) R8_w=scalar()
1585: (18) r1 = 0x300000000           ; R1_w=12884901888
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1587: (71) r2 = *(u8 *)(r7 +4)        ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=43,r=54,imm=0)
1588: (05) goto pc+8
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1597: (57) r2 &= 255                  ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
1598: (4f) r8 |= r2                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1599: (bf) r2 = r8                    ; R2_w=scalar(id=385) R8_w=scalar(id=385)
1600: (67) r2 <<= 32                  ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
1601: (c7) r2 s>>= 32                 ; R2_w=scalar(smin=-2147483648,smax=2147483647)
1602: (b7) r3 = 1                     ; R3_w=1
; if (qpr.server_id > 0) {
1603: (6d) if r3 s> r2 goto pc+32     ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1604: (77) r1 >>= 32
frame 1: propagating r0
last_idx 1605 first_idx 1577
regs=2 stack=0 before 1604: (77) r1 >>= 32
regs=2 stack=0 before 1603: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 1602: (b7) r3 = 1
regs=2 stack=0 before 1601: (c7) r2 s>>= 32
regs=2 stack=0 before 1600: (67) r2 <<= 32
regs=2 stack=0 before 1599: (bf) r2 = r8
regs=2 stack=0 before 1598: (4f) r8 |= r2
regs=2 stack=0 before 1597: (57) r2 &= 255
regs=2 stack=0 before 1588: (05) goto pc+8
regs=2 stack=0 before 1587: (71) r2 = *(u8 *)(r7 +4)
regs=2 stack=0 before 1585: (18) r1 = 0x300000000
1605: safe

from 1603 to 1636: safe

from 774 to 1636: safe

from 773 to 1636: safe

from 735 to 1636: safe

from 726 to 1857: safe

from 623 to 1640: safe

from 591 to 594: R0=map_value(off=0,ks=4,vs=16,imm=0) R1=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=54,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm fp-120=mmmm???? fp-136= fp-144=map_value fp-160=map_value
; vip_num = vip_info->vip_num;
594: (61) r1 = *(u32 *)(r9 +4)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9=map_value(off=0,ks=20,vs=8,imm=0)
595: (7b) *(u64 *)(r10 -168) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-168_w=
; vip_num = vip_info->vip_num;
596: (63) *(u32 *)(r10 -108) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-112=mmmmmmmm
; __u32 cpu_num = bpf_get_smp_processor_id();
597: (85) call bpf_get_smp_processor_id#8     ; R0_w=scalar()
; __u32 cpu_num = bpf_get_smp_processor_id();
598: (63) *(u32 *)(r10 -120) = r0     ; R0_w=scalar() R10=fp0 fp-120=mmmmmmmm
599: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; 
600: (07) r2 += -120                  ; R2_w=fp-120
; void* lru_map = bpf_map_lookup_elem(&lru_mapping, &cpu_num);
601: (18) r1 = 0xffffa0376748a000     ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
603: (85) call bpf_map_lookup_elem#1
604: safe

from 583 to 1858: safe

from 574 to 1858: safe

from 568 to 571: R0=map_value(off=0,ks=20,vs=8,imm=0) R1=scalar(umax=136,var_off=(0x0; 0x88)) R6=ctx(off=0,imm=0) R7=pkt(off=0,r=54,imm=0) R8=pkt_end(off=0,imm=0) R9=2 R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm fp-136=
; if (data_end - data > MAX_PCKT_SIZE) {
571: (bf) r1 = r8                     ; R1_w=pkt_end(off=0,imm=0) R8=pkt_end(off=0,imm=0)
572: (1f) r1 -= r7                    ; R1_w=scalar() R7=pkt(off=0,r=54,imm=0)
573: (b7) r9 = 1                      ; R9_w=1
; if (data_end - data > MAX_PCKT_SIZE) {
574: (65) if r1 s> 0x5ea goto pc+1283         ; R1_w=scalar(smax=1514)
575: (7b) *(u64 *)(r10 -144) = r0     ; R0=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-144_w=map_value
576: (05) goto pc+0
577: safe

from 574 to 1858: safe

from 565 to 1858: safe

from 556 to 571: safe

from 459 to 462: R0=0 R1=6 R2=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3=0 R4=P0 R5=pkt(off=34,r=54,imm=0) R6=ctx(off=0,imm=0) R7=pkt(off=0,r=54,imm=0) R8=pkt_end(off=0,imm=0) R9=1 R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm fp-136=
; pckt->flags |= F_SYN_SET;
462: (b7) r3 = 1                      ; R3_w=1
; bool is_icmp = !((pckt->flags & F_ICMP) == 0);
463: (15) if r4 == 0x0 goto pc+1      ; R4=P0
465: (67) r4 <<= 1                    ; R4_w=P0
; 
466: (bf) r0 = r5                     ; R0_w=pkt(off=34,r=54,imm=0) R5=pkt(off=34,r=54,imm=0)
467: (0f) r0 += r4                    ; R0_w=pkt(off=34,r=54,imm=0) R4_w=P0
468: (69) r4 = *(u16 *)(r0 +0)        ; R0_w=pkt(off=34,r=54,imm=0) R4_w=scalar(umax=65535,var_off=(0x0; 0xffff))
469: (6b) *(u16 *)(r10 -48) = r4      ; R4_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-48=
470: (67) r3 <<= 1                    ; R3_w=2
471: (0f) r5 += r3
last_idx 471 first_idx 462
regs=8 stack=0 before 470: (67) r3 <<= 1
regs=8 stack=0 before 469: (6b) *(u16 *)(r10 -48) = r4
regs=8 stack=0 before 468: (69) r4 = *(u16 *)(r0 +0)
regs=8 stack=0 before 467: (0f) r0 += r4
regs=8 stack=0 before 466: (bf) r0 = r5
regs=8 stack=0 before 465: (67) r4 <<= 1
regs=8 stack=0 before 463: (15) if r4 == 0x0 goto pc+1
regs=8 stack=0 before 462: (b7) r3 = 1
472: R3_w=P2 R5_w=pkt(off=36,r=54,imm=0)
472: (69) r3 = *(u16 *)(r5 +0)        ; R3_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R5_w=pkt(off=36,r=54,imm=0)
473: (05) goto pc+73
547: safe

from 456 to 1858: safe

from 445 to 1858: safe

from 443 to 527: R1=17 R2=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3=0 R4=17 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=34,imm=0) R8=pkt_end(off=0,imm=0) R9=1 R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm fp-136=
; bool is_icmp = !((pckt->flags & F_ICMP) == 0);
527: (57) r3 &= 1                     ; R3_w=0
528: (b7) r5 = 34                     ; R5_w=34
; if (is_ipv6) {
529: (15) if r3 == 0x0 goto pc+1
last_idx 529 first_idx 527
regs=8 stack=0 before 528: (b7) r5 = 34
regs=8 stack=0 before 527: (57) r3 &= 1
parent didn't have regs=8 stack=0 marks: R1=17 R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3_rw=P0 R4_w=17 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=34,imm=0) R8=pkt_end(off=0,imm=0) R9=1 R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm fp-136=
last_idx 443 first_idx 435
regs=8 stack=0 before 443: (15) if r4 == 0x11 goto pc+83
regs=8 stack=0 before 442: (bf) r4 = r1
regs=8 stack=0 before 441: (63) *(u32 *)(r10 -64) = r2
regs=8 stack=0 before 440: (61) r2 = *(u32 *)(r2 +0)
regs=8 stack=0 before 439: (07) r2 += 30
regs=8 stack=0 before 438: (bf) r2 = r7
regs=8 stack=0 before 437: (b7) r3 = 0
; udp = data + off;
531: (bf) r4 = r7                     ; R4_w=pkt(off=0,r=34,imm=0) R7=pkt(off=0,r=34,imm=0)
532: (0f) r4 += r5
last_idx 532 first_idx 527
regs=20 stack=0 before 531: (bf) r4 = r7
regs=20 stack=0 before 529: (15) if r3 == 0x0 goto pc+1
regs=20 stack=0 before 528: (b7) r5 = 34
533: R4_w=pkt(off=34,r=34,imm=0) R5_w=P34
; if (udp + 1 > data_end) {
533: (bf) r5 = r4                     ; R4_w=pkt(off=34,r=34,imm=0) R5_w=pkt(off=34,r=34,imm=0)
534: (07) r5 += 8                     ; R5_w=pkt(off=42,r=34,imm=0)
; if (udp + 1 > data_end) {
535: (2d) if r5 > r8 goto pc+1322     ; R5_w=pkt(off=42,r=42,imm=0) R8=pkt_end(off=0,imm=0)
536: (b7) r5 = 1                      ; R5=1
; bool is_icmp = !((pckt->flags & F_ICMP) == 0);
537: (15) if r3 == 0x0 goto pc+1      ; R3=P0
539: (67) r3 <<= 1                    ; R3_w=P0
; 
540: (bf) r0 = r4                     ; R0_w=pkt(off=34,r=42,imm=0) R4=pkt(off=34,r=42,imm=0)
541: (0f) r0 += r3                    ; R0_w=pkt(off=34,r=42,imm=0) R3_w=P0
542: (69) r3 = *(u16 *)(r0 +0)        ; R0_w=pkt(off=34,r=42,imm=0) R3_w=scalar(umax=65535,var_off=(0x0; 0xffff))
543: (6b) *(u16 *)(r10 -48) = r3      ; R3_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-48=
544: (67) r5 <<= 1                    ; R5_w=2
545: (0f) r4 += r5
last_idx 545 first_idx 537
regs=20 stack=0 before 544: (67) r5 <<= 1
regs=20 stack=0 before 543: (6b) *(u16 *)(r10 -48) = r3
regs=20 stack=0 before 542: (69) r3 = *(u16 *)(r0 +0)
regs=20 stack=0 before 541: (0f) r0 += r3
regs=20 stack=0 before 540: (bf) r0 = r4
regs=20 stack=0 before 539: (67) r3 <<= 1
regs=20 stack=0 before 537: (15) if r3 == 0x0 goto pc+1
parent didn't have regs=20 stack=0 marks: R1=17 R2=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3_rw=P0 R4_rw=pkt(off=34,r=42,imm=0) R5_rw=P1 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=42,imm=0) R8=pkt_end(off=0,imm=0) R9=1 R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm fp-136=
last_idx 536 first_idx 527
regs=20 stack=0 before 536: (b7) r5 = 1
546: (69) r3 = *(u16 *)(r4 +0)        ; R3_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R4_w=pkt(off=36,r=42,imm=0)
; 
547: (6b) *(u16 *)(r10 -46) = r3      ; R3_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-48=mmmmmmmm
; vip.proto = pckt.flow.proto;
548: (73) *(u8 *)(r10 -86) = r1       ; R1=17 R10=fp0 fp-88=????mmmm
; vip.port = pckt.flow.port16[1];
549: (6b) *(u16 *)(r10 -88) = r3      ; R3_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-88=
; vip.vip = pckt.flow.dst;
550: (63) *(u32 *)(r10 -104) = r2     ; R2=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-104=
551: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; 
552: (07) r2 += -104                  ; R2_w=fp-104
; vip_info = bpf_map_lookup_elem(&vip_map, &vip);
553: (18) r1 = 0xffffa03557866800     ; R1_w=map_ptr(off=0,ks=20,vs=8,imm=0)
555: (85) call bpf_map_lookup_elem#1          ; R0=map_value_or_null(id=387,off=0,ks=20,vs=8,imm=0)
; if (!vip_info) {
556: (55) if r0 != 0x0 goto pc+14     ; R0=0
557: (05) goto pc+0
; vip.port = 0;
558: (6a) *(u16 *)(r10 -88) = 0       ; R10=fp0 fp-88=????mmmm
559: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
560: (07) r2 += -104                  ; R2_w=fp-104
; vip_info = bpf_map_lookup_elem(&vip_map, &vip);
561: (18) r1 = 0xffffa03557866800     ; R1_w=map_ptr(off=0,ks=20,vs=8,imm=0)
563: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=388,off=0,ks=20,vs=8,imm=0)
564: (b7) r9 = 2                      ; R9=2
; if (!vip_info) {
565: (15) if r0 == 0x0 goto pc+1292   ; R0=map_value(off=0,ks=20,vs=8,imm=0)
; if (!(vip_info->flags & F_HASH_DPORT_ONLY) &&
566: (61) r1 = *(u32 *)(r0 +0)        ; R0=map_value(off=0,ks=20,vs=8,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (!(vip_info->flags & F_HASH_DPORT_ONLY) &&
567: (57) r1 &= 136                   ; R1_w=scalar(umax=136,var_off=(0x0; 0x88))
568: (55) if r1 != 0x0 goto pc+2      ; R1_w=0
569: (05) goto pc+0
; pckt.flow.port16[1] = 0;
570: (6a) *(u16 *)(r10 -46) = 0       ; R10=fp0 fp-48=mmmmmmmm
; if (data_end - data > MAX_PCKT_SIZE) {
571: (bf) r1 = r8                     ; R1_w=pkt_end(off=0,imm=0) R8=pkt_end(off=0,imm=0)
572: (1f) r1 -= r7                    ; R1_w=scalar() R7=pkt(off=0,r=42,imm=0)
573: (b7) r9 = 1                      ; R9=1
; if (data_end - data > MAX_PCKT_SIZE) {
574: (65) if r1 s> 0x5ea goto pc+1283         ; R1=scalar(smax=1514)
575: (7b) *(u64 *)(r10 -144) = r0     ; R0=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-144_w=map_value
576: (05) goto pc+0
; __u32 stats_key = MAX_VIPS + LRU_CNTRS;
577: (62) *(u32 *)(r10 -116) = 512    ; R10=fp0 fp-120=mmmm????
578: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; 
579: (07) r2 += -116                  ; R2_w=fp-116
; data_stats = bpf_map_lookup_elem(&stats, &stats_key);
580: (18) r1 = 0xffffa03499be8000     ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
582: (85) call bpf_map_lookup_elem#1          ; R0=map_value_or_null(id=389,off=0,ks=4,vs=16,imm=0)
; if (!data_stats) {
583: (15) if r0 == 0x0 goto pc+1274   ; R0=map_value(off=0,ks=4,vs=16,imm=0)
; data_stats->v1 += 1;
584: (79) r1 = *(u64 *)(r0 +0)        ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
585: (07) r1 += 1                     ; R1_w=scalar()
586: (7b) *(u64 *)(r10 -160) = r0     ; R0=map_value(off=0,ks=4,vs=16,imm=0) R10=fp0 fp-160_w=map_value
587: (7b) *(u64 *)(r0 +0) = r1        ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
588: (79) r9 = *(u64 *)(r10 -144)     ; R9_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
; if ((vip_info->flags & F_HASH_NO_SRC_PORT)) {
589: (61) r1 = *(u32 *)(r9 +0)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9_w=map_value(off=0,ks=20,vs=8,imm=0)
; if ((vip_info->flags & F_HASH_NO_SRC_PORT)) {
590: (57) r1 &= 1                     ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
; if ((vip_info->flags & F_HASH_NO_SRC_PORT)) {
591: (15) if r1 == 0x0 goto pc+2      ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
592: (05) goto pc+0
; pckt.flow.port16[0] = 0;
593: (6a) *(u16 *)(r10 -48) = 0       ; R10=fp0 fp-48=mmmmmmmm
; vip_num = vip_info->vip_num;
594: (61) r1 = *(u32 *)(r9 +4)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9=map_value(off=0,ks=20,vs=8,imm=0)
595: (7b) *(u64 *)(r10 -168) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-168_w=
; vip_num = vip_info->vip_num;
596: (63) *(u32 *)(r10 -108) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-112=mmmmmmmm
; __u32 cpu_num = bpf_get_smp_processor_id();
597: (85) call bpf_get_smp_processor_id#8     ; R0_w=scalar()
; __u32 cpu_num = bpf_get_smp_processor_id();
598: (63) *(u32 *)(r10 -120) = r0     ; R0_w=scalar() R10=fp0 fp-120=mmmmmmmm
599: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; 
600: (07) r2 += -120                  ; R2_w=fp-120
; void* lru_map = bpf_map_lookup_elem(&lru_mapping, &cpu_num);
601: (18) r1 = 0xffffa0376748a000     ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
603: (85) call bpf_map_lookup_elem#1          ; R0=map_value_or_null(id=390,off=0,ks=4,vs=4,imm=0)
604: (7b) *(u64 *)(r10 -152) = r0     ; R0=map_value_or_null(id=390,off=0,ks=4,vs=4,imm=0) R10=fp0 fp-152_w=map_value_or_null
; if (!lru_map) {
605: (55) if r0 != 0x0 goto pc+15     ; R0=0
606: (05) goto pc+0
; __u32 lru_stats_key = MAX_VIPS + FALLBACK_LRU_CNTR;
607: (62) *(u32 *)(r10 -16) = 515     ; R10=fp0 fp-16=????mmmm
608: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
609: (07) r2 += -16                   ; R2_w=fp-16
; struct lb_stats* lru_stats = bpf_map_lookup_elem(&stats, &lru_stats_key);
610: (18) r1 = 0xffffa03499be8000     ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
612: (85) call bpf_map_lookup_elem#1          ; R0=map_value_or_null(id=391,off=0,ks=4,vs=16,imm=0)
; if (!lru_stats) {
613: (15) if r0 == 0x0 goto pc+1243   ; R0=map_value(off=0,ks=4,vs=16,imm=0)
; lru_stats->v1 += 1;
614: (79) r1 = *(u64 *)(r0 +0)        ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
615: (07) r1 += 1                     ; R1_w=scalar()
616: (7b) *(u64 *)(r0 +0) = r1        ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
617: (18) r1 = 0xffffa03557862800     ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0)
619: (7b) *(u64 *)(r10 -152) = r1     ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0 fp-152_w=map_ptr
620: (79) r9 = *(u64 *)(r10 -144)     ; R9_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
; if ((vip_info->flags & F_QUIC_VIP)) {
621: (61) r1 = *(u32 *)(r9 +0)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9_w=map_value(off=0,ks=20,vs=8,imm=0)
; if ((vip_info->flags & F_QUIC_VIP)) {
622: (57) r1 &= 4                     ; R1_w=scalar(umax=4,var_off=(0x0; 0x4))
; if ((vip_info->flags & F_QUIC_VIP)) {
623: (15) if r1 == 0x0 goto pc+1016   ; R1_w=scalar(umax=4,var_off=(0x0; 0x4))
; bool is_icmp = (pckt.flags & F_ICMP);
624: (71) r1 = *(u8 *)(r10 -36)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; bool is_icmp = (pckt.flags & F_ICMP);
625: (57) r1 &= 1                     ; R1=scalar(umax=1,var_off=(0x0; 0x1))
; if (is_icmp) {
626: (15) if r1 == 0x0 goto pc+91     ; R1=scalar(umax=1,var_off=(0x0; 0x1))
627: (05) goto pc+0
; __u32 stats_key = MAX_VIPS + QUIC_ICMP_STATS;
628: (62) *(u32 *)(r10 -16) = 523     ; R10=fp0 fp-16=????mmmm
629: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
630: (07) r2 += -16                   ; R2_w=fp-16
; struct lb_stats* data_stats = bpf_map_lookup_elem(&stats, &stats_key);
631: (18) r1 = 0xffffa03499be8000     ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
633: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=392,off=0,ks=4,vs=16,imm=0)
; if (!data_stats) {
634: (15) if r0 == 0x0 goto pc+1222   ; R0_w=map_value(off=0,ks=4,vs=16,imm=0)
; data_stats->v1 += 1;
635: (79) r1 = *(u64 *)(r0 +0)        ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
636: (07) r1 += 1                     ; R1_w=scalar()
637: (7b) *(u64 *)(r0 +0) = r1        ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
; (icmp_hdr->code == ICMP_PORT_UNREACH) ||
638: (71) r1 = *(u8 *)(r7 +35)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=42,imm=0)
; (icmp_hdr->code == ICMP_PORT_UNREACH) ||
639: (57) r1 &= 253
640: safe

from 634 to 1857: safe

from 626 to 718: R0=map_value(off=0,ks=4,vs=16,imm=0) R1=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=42,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
718: (05) goto pc+0
; __u32 quic_packets_stats_key = 0;
719: (62) *(u32 *)(r10 -28) = 0       ; R10=fp0 fp-32=mmmm????
720: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
721: (07) r2 += -28                   ; R2_w=fp-28
; bpf_map_lookup_elem(&quic_stats_map, &quic_packets_stats_key);
722: (18) r1 = 0xffffa03587064800     ; R1_w=map_ptr(off=0,ks=4,vs=104,imm=0)
724: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=393,off=0,ks=4,vs=104,imm=0)
725: (bf) r9 = r0                     ; R0_w=map_value_or_null(id=393,off=0,ks=4,vs=104,imm=0) R9_w=map_value_or_null(id=393,off=0,ks=4,vs=104,imm=0)
; if (!quic_packets_stats) {
726: (15) if r9 == 0x0 goto pc+1130   ; R9_w=map_value(off=0,ks=4,vs=104,imm=0)
; bool is_icmp = (pckt->flags & F_ICMP);
727: (71) r2 = *(u8 *)(r10 -36)       ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; bool is_icmp = (pckt->flags & F_ICMP);
728: (57) r2 &= 1                     ; R2_w=scalar(umax=1,var_off=(0x0; 0x1))
729: (b7) r1 = 34                     ; R1=34
; if (is_ipv6) {
730: (15) if r2 == 0x0 goto pc+1      ; R2=scalar(umax=1,var_off=(0x0; 0x1))
731: (b7) r1 = 62                     ; R1_w=62
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
732: (0f) r7 += r1
last_idx 732 first_idx 730
regs=2 stack=0 before 731: (b7) r1 = 62
733: R1_w=P62 R7_w=pkt(off=62,r=42,imm=0)
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
733: (bf) r1 = r7                     ; R1_w=pkt(off=62,r=42,imm=0) R7_w=pkt(off=62,r=42,imm=0)
734: (07) r1 += 9                     ; R1_w=pkt(off=71,r=42,imm=0)
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
735: (2d) if r1 > r8 goto pc+900      ; R1_w=pkt(off=71,r=71,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
736: (71) r2 = *(u8 *)(r7 +8)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=62,r=71,imm=0)
737: (67) r2 <<= 56                   ; R2_w=scalar(smax=9151314442816847872,umax=18374686479671623680,var_off=(0x0; 0xff00000000000000),s32_min=0,s32_max=0,u32_max=0)
738: (c7) r2 s>>= 56
739: safe

from 735 to 1636: safe

from 730 to 732: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=34 R2=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=42,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
732: (0f) r7 += r1
last_idx 732 first_idx 732
parent didn't have regs=2 stack=0 marks: R0=map_value(off=0,ks=4,vs=104,imm=0) R1_r=P34 R2=0 R6=ctx(off=0,imm=0) R7_r=pkt(off=0,r=42,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
last_idx 730 first_idx 730
regs=2 stack=0 before 730: (15) if r2 == 0x0 goto pc+1
parent didn't have regs=2 stack=0 marks: R0_w=map_value(off=0,ks=4,vs=104,imm=0) R1_rw=P34 R2_rw=scalar(umax=1,var_off=(0x0; 0x1)) R6_r=ctx(off=0,imm=0) R7_r=pkt(off=0,r=42,imm=0) R8_r=pkt_end(off=0,imm=0) R9_rw=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16_r=????mmmm fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=
last_idx 729 first_idx 718
regs=2 stack=0 before 729: (b7) r1 = 34
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
733: (bf) r1 = r7                     ; R1_w=pkt(off=34,r=42,imm=0) R7_w=pkt(off=34,r=42,imm=0)
734: (07) r1 += 9                     ; R1_w=pkt(off=43,r=42,imm=0)
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
735: (2d) if r1 > r8 goto pc+900      ; R1_w=pkt(off=43,r=43,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
736: (71) r2 = *(u8 *)(r7 +8)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=34,r=43,imm=0)
737: (67) r2 <<= 56                   ; R2_w=scalar(smax=9151314442816847872,umax=18374686479671623680,var_off=(0x0; 0xff00000000000000),s32_min=0,s32_max=0,u32_max=0)
738: (c7) r2 s>>= 56                  ; R2_w=scalar(smin=-128,smax=127)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
739: (65) if r2 s> 0xffffffff goto pc+30      ; R2_w=scalar(umin=18446744073709551488,var_off=(0xffffffffffffff80; 0x7f),u32_min=-128)
; if (quic_data + sizeof(struct quic_long_header) > data_end) {
740: (bf) r1 = r7                     ; R1_w=pkt(off=34,r=43,imm=0) R7_w=pkt(off=34,r=43,imm=0)
741: (07) r1 += 22                    ; R1=pkt(off=56,r=43,imm=0)
; if (quic_data + sizeof(struct quic_long_header) > data_end) {
742: (2d) if r1 > r8 goto pc+893      ; R1=pkt(off=56,r=56,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_PACKET_TYPE_MASK) < QUIC_HANDSHAKE) {
743: (57) r2 &= 32                    ; R2_w=scalar(umax=32,var_off=(0x0; 0x20))
; if ((*pkt_type & QUIC_PACKET_TYPE_MASK) < QUIC_HANDSHAKE) {
744: (15) if r2 == 0x0 goto pc+817    ; R2_w=scalar(umax=32,var_off=(0x0; 0x20))
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
745: (71) r1 = *(u8 *)(r7 +13)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=34,r=56,imm=0)
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
746: (07) r7 += 14                    ; R7_w=pkt(off=48,r=56,imm=0)
747: (25) if r1 > 0x7 goto pc+26      ; R1_w=scalar(umax=7,var_off=(0x0; 0x7))
748: (05) goto pc+887
1636: safe

from 747 to 774: safe

from 744 to 1562: safe

from 742 to 1636: safe

from 739 to 770: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=pkt(off=43,r=43,imm=0) R2=scalar(umax=127,var_off=(0x0; 0x7f)) R6=ctx(off=0,imm=0) R7=pkt(off=34,r=43,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (quic_data + sizeof(struct quic_short_header) > data_end) {
770: (bf) r2 = r7                     ; R2_w=pkt(off=34,r=43,imm=0) R7=pkt(off=34,r=43,imm=0)
771: (07) r2 += 17                    ; R2_w=pkt(off=51,r=43,imm=0)
772: (bf) r7 = r1                     ; R1=pkt(off=43,r=43,imm=0) R7_w=pkt(off=43,r=43,imm=0)
; if (quic_data + sizeof(struct quic_short_header) > data_end) {
773: (2d) if r2 > r8 goto pc+862      ; R2_w=pkt(off=51,r=51,imm=0) R8=pkt_end(off=0,imm=0)
; if (!connId) {
774: (15) if r7 == 0x0 goto pc+861    ; R7_w=pkt(off=43,r=51,imm=0)
; __u8 connIdVersion = (connId[0] >> 6);
775: (71) r1 = *(u8 *)(r7 +0)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=43,r=51,imm=0)
776: (bf) r2 = r1                     ; R1_w=scalar(id=394,umax=255,var_off=(0x0; 0xff)) R2_w=scalar(id=394,umax=255,var_off=(0x0; 0xff))
777: (77) r2 >>= 6                    ; R2=scalar(umax=3,var_off=(0x0; 0x3))
; if (connIdVersion == QUIC_CONNID_VERSION_V1) {
778: (15) if r2 == 0x3 goto pc+798    ; R2=scalar(umax=3,var_off=(0x0; 0x3))
779: (15) if r2 == 0x2 goto pc+809    ; R2=scalar(umax=3,var_off=(0x0; 0x3))
780: (55) if r2 != 0x1 goto pc+855    ; R2=1
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
781: (57) r1 &= 63                    ; R1_w=scalar(umax=63,var_off=(0x0; 0x3f))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
782: (67) r1 <<= 10                   ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
783: (71) r8 = *(u8 *)(r7 +1)         ; R7=pkt(off=43,r=51,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
784: (67) r8 <<= 2                    ; R8_w=scalar(umax=1020,var_off=(0x0; 0x3fc))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
785: (4f) r8 |= r1                    ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00)) R8_w=scalar()
786: (18) r1 = 0x100000000            ; R1_w=4294967296
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
788: (71) r2 = *(u8 *)(r7 +2)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=43,r=51,imm=0)
789: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
790: (05) goto pc+806
frame 1: propagating r0
last_idx 1597 first_idx 778
regs=2 stack=0 before 790: (05) goto pc+806
regs=2 stack=0 before 789: (77) r2 >>= 6
regs=2 stack=0 before 788: (71) r2 = *(u8 *)(r7 +2)
regs=2 stack=0 before 786: (18) r1 = 0x100000000
1597: safe

from 780 to 1636: safe

from 779 to 1589: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=394,umax=255,var_off=(0x0; 0xff)) R2=2 R6=ctx(off=0,imm=0) R7=pkt(off=43,r=51,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1589: (71) r1 = *(u8 *)(r7 +1)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=43,r=51,imm=0)
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1590: (67) r1 <<= 16                  ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1591: (71) r8 = *(u8 *)(r7 +2)        ; R7=pkt(off=43,r=51,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1592: (67) r8 <<= 8                   ; R8_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1593: (4f) r8 |= r1                   ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000)) R8_w=scalar()
1594: (18) r1 = 0x200000000           ; R1_w=8589934592
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1596: (71) r2 = *(u8 *)(r7 +3)        ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=43,r=51,imm=0)
1597: (57) r2 &= 255                  ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
1598: (4f) r8 |= r2                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1599: (bf) r2 = r8                    ; R2_w=scalar(id=395) R8_w=scalar(id=395)
1600: (67) r2 <<= 32                  ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
1601: (c7) r2 s>>= 32                 ; R2_w=scalar(smin=-2147483648,smax=2147483647)
1602: (b7) r3 = 1                     ; R3_w=1
; if (qpr.server_id > 0) {
1603: (6d) if r3 s> r2 goto pc+32     ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1604: (77) r1 >>= 32                  ; R1_w=2
; if (cid_version == QUIC_CONNID_VERSION_V1) {
1605: (15) if r1 == 0x3 goto pc+5
last_idx 1605 first_idx 1589
regs=2 stack=0 before 1604: (77) r1 >>= 32
regs=2 stack=0 before 1603: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 1602: (b7) r3 = 1
regs=2 stack=0 before 1601: (c7) r2 s>>= 32
regs=2 stack=0 before 1600: (67) r2 <<= 32
regs=2 stack=0 before 1599: (bf) r2 = r8
regs=2 stack=0 before 1598: (4f) r8 |= r2
regs=2 stack=0 before 1597: (57) r2 &= 255
regs=2 stack=0 before 1596: (71) r2 = *(u8 *)(r7 +3)
regs=2 stack=0 before 1594: (18) r1 = 0x200000000
frame 1: propagating r0
1606: safe

from 1603 to 1636: safe

from 778 to 1577: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=394,umax=255,var_off=(0x0; 0xff)) R2=3 R6=ctx(off=0,imm=0) R7=pkt(off=43,r=51,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1577: (71) r1 = *(u8 *)(r7 +1)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=43,r=51,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1578: (67) r1 <<= 24                  ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1579: (71) r8 = *(u8 *)(r7 +2)        ; R7=pkt(off=43,r=51,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1580: (67) r8 <<= 16                  ; R8_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1581: (4f) r8 |= r1                   ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432) R8_w=scalar()
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1582: (71) r1 = *(u8 *)(r7 +3)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=43,r=51,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1583: (67) r1 <<= 8                   ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1584: (4f) r8 |= r1                   ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00)) R8_w=scalar()
1585: (18) r1 = 0x300000000           ; R1_w=12884901888
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1587: (71) r2 = *(u8 *)(r7 +4)        ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=43,r=51,imm=0)
1588: (05) goto pc+8
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1597: (57) r2 &= 255                  ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
1598: (4f) r8 |= r2                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1599: (bf) r2 = r8                    ; R2_w=scalar(id=396) R8_w=scalar(id=396)
1600: (67) r2 <<= 32                  ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
1601: (c7) r2 s>>= 32                 ; R2_w=scalar(smin=-2147483648,smax=2147483647)
1602: (b7) r3 = 1                     ; R3_w=1
; if (qpr.server_id > 0) {
1603: (6d) if r3 s> r2 goto pc+32     ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1604: (77) r1 >>= 32
frame 1: propagating r0
last_idx 1605 first_idx 1577
regs=2 stack=0 before 1604: (77) r1 >>= 32
regs=2 stack=0 before 1603: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 1602: (b7) r3 = 1
regs=2 stack=0 before 1601: (c7) r2 s>>= 32
regs=2 stack=0 before 1600: (67) r2 <<= 32
regs=2 stack=0 before 1599: (bf) r2 = r8
regs=2 stack=0 before 1598: (4f) r8 |= r2
regs=2 stack=0 before 1597: (57) r2 &= 255
regs=2 stack=0 before 1588: (05) goto pc+8
regs=2 stack=0 before 1587: (71) r2 = *(u8 *)(r7 +4)
regs=2 stack=0 before 1585: (18) r1 = 0x300000000
1605: safe

from 1603 to 1636: safe

from 774 to 1636: safe

from 773 to 1636: safe

from 735 to 1636: safe

from 726 to 1857: safe

from 623 to 1640: safe

from 613 to 1857: safe

from 605 to 621: R0=map_ptr(off=0,ks=40,vs=16,imm=0) R6=ctx(off=0,imm=0) R7=pkt(off=0,r=42,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if ((vip_info->flags & F_QUIC_VIP)) {
621: (61) r1 = *(u32 *)(r9 +0)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9=map_value(off=0,ks=20,vs=8,imm=0)
; if ((vip_info->flags & F_QUIC_VIP)) {
622: (57) r1 &= 4                     ; R1_w=scalar(umax=4,var_off=(0x0; 0x4))
; if ((vip_info->flags & F_QUIC_VIP)) {
623: (15) if r1 == 0x0 goto pc+1016   ; R1_w=scalar(umax=4,var_off=(0x0; 0x4))
; bool is_icmp = (pckt.flags & F_ICMP);
624: (71) r1 = *(u8 *)(r10 -36)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; bool is_icmp = (pckt.flags & F_ICMP);
625: (57) r1 &= 1                     ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
; if (is_icmp) {
626: (15) if r1 == 0x0 goto pc+91     ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
627: (05) goto pc+0
; __u32 stats_key = MAX_VIPS + QUIC_ICMP_STATS;
628: (62) *(u32 *)(r10 -16) = 523     ; R10=fp0 fp-16=????mmmm
629: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
630: (07) r2 += -16                   ; R2_w=fp-16
; struct lb_stats* data_stats = bpf_map_lookup_elem(&stats, &stats_key);
631: (18) r1 = 0xffffa03499be8000     ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
633: (85) call bpf_map_lookup_elem#1          ; R0=map_value_or_null(id=397,off=0,ks=4,vs=16,imm=0)
; if (!data_stats) {
634: (15) if r0 == 0x0 goto pc+1222   ; R0=map_value(off=0,ks=4,vs=16,imm=0)
; data_stats->v1 += 1;
635: (79) r1 = *(u64 *)(r0 +0)        ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
636: (07) r1 += 1                     ; R1_w=scalar()
637: (7b) *(u64 *)(r0 +0) = r1        ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
; (icmp_hdr->code == ICMP_PORT_UNREACH) ||
638: (71) r1 = *(u8 *)(r7 +35)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=42,imm=0)
; (icmp_hdr->code == ICMP_PORT_UNREACH) ||
639: (57) r1 &= 253
640: safe

from 634 to 1857: safe

from 626 to 718: R0=map_ptr(off=0,ks=40,vs=16,imm=0) R1_w=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=42,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
718: (05) goto pc+0
; __u32 quic_packets_stats_key = 0;
719: (62) *(u32 *)(r10 -28) = 0       ; R10=fp0 fp-32=mmmm????
720: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
721: (07) r2 += -28                   ; R2_w=fp-28
; bpf_map_lookup_elem(&quic_stats_map, &quic_packets_stats_key);
722: (18) r1 = 0xffffa03587064800     ; R1_w=map_ptr(off=0,ks=4,vs=104,imm=0)
724: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=398,off=0,ks=4,vs=104,imm=0)
725: (bf) r9 = r0                     ; R0_w=map_value_or_null(id=398,off=0,ks=4,vs=104,imm=0) R9_w=map_value_or_null(id=398,off=0,ks=4,vs=104,imm=0)
; if (!quic_packets_stats) {
726: (15) if r9 == 0x0 goto pc+1130   ; R9_w=map_value(off=0,ks=4,vs=104,imm=0)
; bool is_icmp = (pckt->flags & F_ICMP);
727: (71) r2 = *(u8 *)(r10 -36)       ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; bool is_icmp = (pckt->flags & F_ICMP);
728: (57) r2 &= 1                     ; R2_w=scalar(umax=1,var_off=(0x0; 0x1))
729: (b7) r1 = 34                     ; R1=34
; if (is_ipv6) {
730: (15) if r2 == 0x0 goto pc+1      ; R2=scalar(umax=1,var_off=(0x0; 0x1))
731: (b7) r1 = 62                     ; R1_w=62
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
732: (0f) r7 += r1
last_idx 732 first_idx 730
regs=2 stack=0 before 731: (b7) r1 = 62
733: R1_w=P62 R7_w=pkt(off=62,r=42,imm=0)
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
733: (bf) r1 = r7                     ; R1_w=pkt(off=62,r=42,imm=0) R7_w=pkt(off=62,r=42,imm=0)
734: (07) r1 += 9                     ; R1_w=pkt(off=71,r=42,imm=0)
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
735: (2d) if r1 > r8 goto pc+900      ; R1_w=pkt(off=71,r=71,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
736: (71) r2 = *(u8 *)(r7 +8)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=62,r=71,imm=0)
737: (67) r2 <<= 56                   ; R2_w=scalar(smax=9151314442816847872,umax=18374686479671623680,var_off=(0x0; 0xff00000000000000),s32_min=0,s32_max=0,u32_max=0)
738: (c7) r2 s>>= 56
739: safe

from 735 to 1636: safe

from 730 to 732: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=34 R2=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=42,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
732: (0f) r7 += r1
last_idx 732 first_idx 732
parent didn't have regs=2 stack=0 marks: R0=map_value(off=0,ks=4,vs=104,imm=0) R1_r=P34 R2=0 R6=ctx(off=0,imm=0) R7_r=pkt(off=0,r=42,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
last_idx 730 first_idx 730
regs=2 stack=0 before 730: (15) if r2 == 0x0 goto pc+1
parent didn't have regs=2 stack=0 marks: R0_w=map_value(off=0,ks=4,vs=104,imm=0) R1_rw=P34 R2_rw=scalar(umax=1,var_off=(0x0; 0x1)) R6_r=ctx(off=0,imm=0) R7_r=pkt(off=0,r=42,imm=0) R8_r=pkt_end(off=0,imm=0) R9_rw=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r= fp-72_r=mmmmmmmm fp-80_r= fp-88_r=????mmmm fp-96=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=
last_idx 729 first_idx 719
regs=2 stack=0 before 729: (b7) r1 = 34
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
733: (bf) r1 = r7                     ; R1_w=pkt(off=34,r=42,imm=0) R7_w=pkt(off=34,r=42,imm=0)
734: (07) r1 += 9                     ; R1_w=pkt(off=43,r=42,imm=0)
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
735: (2d) if r1 > r8 goto pc+900      ; R1_w=pkt(off=43,r=43,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
736: (71) r2 = *(u8 *)(r7 +8)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=34,r=43,imm=0)
737: (67) r2 <<= 56                   ; R2_w=scalar(smax=9151314442816847872,umax=18374686479671623680,var_off=(0x0; 0xff00000000000000),s32_min=0,s32_max=0,u32_max=0)
738: (c7) r2 s>>= 56                  ; R2_w=scalar(smin=-128,smax=127)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
739: (65) if r2 s> 0xffffffff goto pc+30      ; R2_w=scalar(umin=18446744073709551488,var_off=(0xffffffffffffff80; 0x7f),u32_min=-128)
; if (quic_data + sizeof(struct quic_long_header) > data_end) {
740: (bf) r1 = r7                     ; R1_w=pkt(off=34,r=43,imm=0) R7_w=pkt(off=34,r=43,imm=0)
741: (07) r1 += 22                    ; R1=pkt(off=56,r=43,imm=0)
; if (quic_data + sizeof(struct quic_long_header) > data_end) {
742: (2d) if r1 > r8 goto pc+893      ; R1=pkt(off=56,r=56,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_PACKET_TYPE_MASK) < QUIC_HANDSHAKE) {
743: (57) r2 &= 32                    ; R2_w=scalar(umax=32,var_off=(0x0; 0x20))
; if ((*pkt_type & QUIC_PACKET_TYPE_MASK) < QUIC_HANDSHAKE) {
744: (15) if r2 == 0x0 goto pc+817    ; R2_w=scalar(umax=32,var_off=(0x0; 0x20))
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
745: (71) r1 = *(u8 *)(r7 +13)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=34,r=56,imm=0)
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
746: (07) r7 += 14                    ; R7_w=pkt(off=48,r=56,imm=0)
747: (25) if r1 > 0x7 goto pc+26      ; R1_w=scalar(umax=7,var_off=(0x0; 0x7))
748: (05) goto pc+887
1636: safe

from 747 to 774: safe

from 744 to 1562: safe

from 742 to 1636: safe

from 739 to 770: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=pkt(off=43,r=43,imm=0) R2=scalar(umax=127,var_off=(0x0; 0x7f)) R6=ctx(off=0,imm=0) R7=pkt(off=34,r=43,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (quic_data + sizeof(struct quic_short_header) > data_end) {
770: (bf) r2 = r7                     ; R2_w=pkt(off=34,r=43,imm=0) R7=pkt(off=34,r=43,imm=0)
771: (07) r2 += 17                    ; R2_w=pkt(off=51,r=43,imm=0)
772: (bf) r7 = r1                     ; R1=pkt(off=43,r=43,imm=0) R7_w=pkt(off=43,r=43,imm=0)
; if (quic_data + sizeof(struct quic_short_header) > data_end) {
773: (2d) if r2 > r8 goto pc+862      ; R2_w=pkt(off=51,r=51,imm=0) R8=pkt_end(off=0,imm=0)
; if (!connId) {
774: (15) if r7 == 0x0 goto pc+861    ; R7_w=pkt(off=43,r=51,imm=0)
; __u8 connIdVersion = (connId[0] >> 6);
775: (71) r1 = *(u8 *)(r7 +0)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=43,r=51,imm=0)
776: (bf) r2 = r1                     ; R1_w=scalar(id=399,umax=255,var_off=(0x0; 0xff)) R2_w=scalar(id=399,umax=255,var_off=(0x0; 0xff))
777: (77) r2 >>= 6                    ; R2=scalar(umax=3,var_off=(0x0; 0x3))
; if (connIdVersion == QUIC_CONNID_VERSION_V1) {
778: (15) if r2 == 0x3 goto pc+798    ; R2=scalar(umax=3,var_off=(0x0; 0x3))
779: (15) if r2 == 0x2 goto pc+809    ; R2=scalar(umax=3,var_off=(0x0; 0x3))
780: (55) if r2 != 0x1 goto pc+855    ; R2=1
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
781: (57) r1 &= 63                    ; R1_w=scalar(umax=63,var_off=(0x0; 0x3f))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
782: (67) r1 <<= 10                   ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
783: (71) r8 = *(u8 *)(r7 +1)         ; R7=pkt(off=43,r=51,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
784: (67) r8 <<= 2                    ; R8_w=scalar(umax=1020,var_off=(0x0; 0x3fc))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
785: (4f) r8 |= r1                    ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00)) R8_w=scalar()
786: (18) r1 = 0x100000000            ; R1_w=4294967296
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
788: (71) r2 = *(u8 *)(r7 +2)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=43,r=51,imm=0)
789: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
790: (05) goto pc+806
frame 1: propagating r0
last_idx 1597 first_idx 778
regs=2 stack=0 before 790: (05) goto pc+806
regs=2 stack=0 before 789: (77) r2 >>= 6
regs=2 stack=0 before 788: (71) r2 = *(u8 *)(r7 +2)
regs=2 stack=0 before 786: (18) r1 = 0x100000000
1597: safe

from 780 to 1636: safe

from 779 to 1589: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=399,umax=255,var_off=(0x0; 0xff)) R2=2 R6=ctx(off=0,imm=0) R7=pkt(off=43,r=51,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1589: (71) r1 = *(u8 *)(r7 +1)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=43,r=51,imm=0)
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1590: (67) r1 <<= 16                  ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1591: (71) r8 = *(u8 *)(r7 +2)        ; R7=pkt(off=43,r=51,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1592: (67) r8 <<= 8                   ; R8_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1593: (4f) r8 |= r1                   ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000)) R8_w=scalar()
1594: (18) r1 = 0x200000000           ; R1_w=8589934592
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1596: (71) r2 = *(u8 *)(r7 +3)        ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=43,r=51,imm=0)
1597: (57) r2 &= 255                  ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
1598: (4f) r8 |= r2                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1599: (bf) r2 = r8                    ; R2_w=scalar(id=400) R8_w=scalar(id=400)
1600: (67) r2 <<= 32                  ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
1601: (c7) r2 s>>= 32                 ; R2_w=scalar(smin=-2147483648,smax=2147483647)
1602: (b7) r3 = 1                     ; R3_w=1
; if (qpr.server_id > 0) {
1603: (6d) if r3 s> r2 goto pc+32     ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1604: (77) r1 >>= 32                  ; R1_w=2
; if (cid_version == QUIC_CONNID_VERSION_V1) {
1605: (15) if r1 == 0x3 goto pc+5
last_idx 1605 first_idx 1589
regs=2 stack=0 before 1604: (77) r1 >>= 32
regs=2 stack=0 before 1603: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 1602: (b7) r3 = 1
regs=2 stack=0 before 1601: (c7) r2 s>>= 32
regs=2 stack=0 before 1600: (67) r2 <<= 32
regs=2 stack=0 before 1599: (bf) r2 = r8
regs=2 stack=0 before 1598: (4f) r8 |= r2
regs=2 stack=0 before 1597: (57) r2 &= 255
regs=2 stack=0 before 1596: (71) r2 = *(u8 *)(r7 +3)
regs=2 stack=0 before 1594: (18) r1 = 0x200000000
frame 1: propagating r0
1606: safe

from 1603 to 1636: safe

from 778 to 1577: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=399,umax=255,var_off=(0x0; 0xff)) R2=3 R6=ctx(off=0,imm=0) R7=pkt(off=43,r=51,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1577: (71) r1 = *(u8 *)(r7 +1)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=43,r=51,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1578: (67) r1 <<= 24                  ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1579: (71) r8 = *(u8 *)(r7 +2)        ; R7=pkt(off=43,r=51,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1580: (67) r8 <<= 16                  ; R8_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1581: (4f) r8 |= r1                   ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432) R8_w=scalar()
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1582: (71) r1 = *(u8 *)(r7 +3)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=43,r=51,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1583: (67) r1 <<= 8                   ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1584: (4f) r8 |= r1                   ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00)) R8_w=scalar()
1585: (18) r1 = 0x300000000           ; R1_w=12884901888
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
1587: (71) r2 = *(u8 *)(r7 +4)        ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=43,r=51,imm=0)
1588: (05) goto pc+8
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
1597: (57) r2 &= 255                  ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
1598: (4f) r8 |= r2                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1599: (bf) r2 = r8                    ; R2_w=scalar(id=401) R8_w=scalar(id=401)
1600: (67) r2 <<= 32                  ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
1601: (c7) r2 s>>= 32                 ; R2_w=scalar(smin=-2147483648,smax=2147483647)
1602: (b7) r3 = 1                     ; R3_w=1
; if (qpr.server_id > 0) {
1603: (6d) if r3 s> r2 goto pc+32     ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
1604: (77) r1 >>= 32
frame 1: propagating r0
last_idx 1605 first_idx 1577
regs=2 stack=0 before 1604: (77) r1 >>= 32
regs=2 stack=0 before 1603: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 1602: (b7) r3 = 1
regs=2 stack=0 before 1601: (c7) r2 s>>= 32
regs=2 stack=0 before 1600: (67) r2 <<= 32
regs=2 stack=0 before 1599: (bf) r2 = r8
regs=2 stack=0 before 1598: (4f) r8 |= r2
regs=2 stack=0 before 1597: (57) r2 &= 255
regs=2 stack=0 before 1588: (05) goto pc+8
regs=2 stack=0 before 1587: (71) r2 = *(u8 *)(r7 +4)
regs=2 stack=0 before 1585: (18) r1 = 0x300000000
1605: safe

from 1603 to 1636: safe

from 774 to 1636: safe

from 773 to 1636: safe

from 735 to 1636: safe

from 726 to 1857: safe

from 623 to 1640: safe

from 591 to 594: R0=map_value(off=0,ks=4,vs=16,imm=0) R1=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=42,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm fp-120=mmmm???? fp-136= fp-144=map_value fp-160=map_value
; vip_num = vip_info->vip_num;
594: (61) r1 = *(u32 *)(r9 +4)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9=map_value(off=0,ks=20,vs=8,imm=0)
595: (7b) *(u64 *)(r10 -168) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-168_w=
; vip_num = vip_info->vip_num;
596: (63) *(u32 *)(r10 -108) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-112=mmmmmmmm
; __u32 cpu_num = bpf_get_smp_processor_id();
597: (85) call bpf_get_smp_processor_id#8     ; R0_w=scalar()
; __u32 cpu_num = bpf_get_smp_processor_id();
598: (63) *(u32 *)(r10 -120) = r0     ; R0_w=scalar() R10=fp0 fp-120=mmmmmmmm
599: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; 
600: (07) r2 += -120                  ; R2_w=fp-120
; void* lru_map = bpf_map_lookup_elem(&lru_mapping, &cpu_num);
601: (18) r1 = 0xffffa0376748a000     ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
603: (85) call bpf_map_lookup_elem#1
604: safe

from 583 to 1858: safe

from 574 to 1858: safe

from 568 to 571: R0=map_value(off=0,ks=20,vs=8,imm=0) R1=scalar(umax=136,var_off=(0x0; 0x88)) R6=ctx(off=0,imm=0) R7=pkt(off=0,r=42,imm=0) R8=pkt_end(off=0,imm=0) R9=2 R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64= fp-72=mmmmmmmm fp-80= fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm fp-136=
; if (data_end - data > MAX_PCKT_SIZE) {
571: (bf) r1 = r8                     ; R1_w=pkt_end(off=0,imm=0) R8=pkt_end(off=0,imm=0)
572: (1f) r1 -= r7                    ; R1_w=scalar() R7=pkt(off=0,r=42,imm=0)
573: (b7) r9 = 1
574: safe

from 565 to 1858: safe

from 556 to 571: safe

from 535 to 1858: safe

from 39 to 1858: safe

from 31 to 1858: safe

from 28 to 1858: safe

from 13 to 1858: safe

from 11 to 143: R1_w=pkt(off=14,r=14,imm=0) R2_w=56710 R3_w=scalar(umax=255,var_off=(0x0; 0xff)) R6_w=ctx(off=0,imm=0) R7_w=pkt(off=0,r=14,imm=0) R8_w=pkt_end(off=0,imm=0) R9_w=1 R10=fp0
; memcpy(eth->h_dest, tmp_mac, ETH_ALEN);
143: (05) goto pc+0
; struct packet_description pckt = {};
144: (7a) *(u64 *)(r10 -40) = 0       ; R10=fp0 fp-40_w=mmmmmmmm
145: (7a) *(u64 *)(r10 -48) = 0       ; R10=fp0 fp-48_w=mmmmmmmm
146: (7a) *(u64 *)(r10 -56) = 0       ; R10=fp0 fp-56_w=mmmmmmmm
147: (7a) *(u64 *)(r10 -64) = 0       ; R10=fp0 fp-64_w=mmmmmmmm
148: (7a) *(u64 *)(r10 -72) = 0       ; R10=fp0 fp-72_w=mmmmmmmm
149: (7a) *(u64 *)(r10 -80) = 0       ; R10=fp0 fp-80_w=mmmmmmmm
; struct vip_definition vip = {};
150: (62) *(u32 *)(r10 -88) = 0       ; R10=fp0 fp-88=????mmmm
151: (7a) *(u64 *)(r10 -96) = 0       ; R10=fp0 fp-96_w=mmmmmmmm
152: (7a) *(u64 *)(r10 -104) = 0      ; R10=fp0 fp-104_w=mmmmmmmm
; __u32 mac_addr_pos = 0;
153: (62) *(u32 *)(r10 -112) = 0      ; R10=fp0 fp-112=????mmmm
; if (ip6h + 1 > data_end) {
154: (bf) r2 = r7                     ; R2_w=pkt(off=0,r=14,imm=0) R7_w=pkt(off=0,r=14,imm=0)
155: (07) r2 += 54                    ; R2_w=pkt(off=54,r=14,imm=0)
; if (ip6h + 1 > data_end) {
156: (2d) if r2 > r8 goto pc+1701     ; R2_w=pkt(off=54,r=54,imm=0) R8_w=pkt_end(off=0,imm=0)
; *protocol = ip6h->nexthdr;
157: (71) r1 = *(u8 *)(r7 +20)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=0,r=54,imm=0)
; pckt->flow.proto = *protocol;
158: (73) *(u8 *)(r10 -44) = r1       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0 fp-48_w=mmmmmmmm
; pckt->tos = (ip6h->priority << 4) & 0xF0;
159: (71) r3 = *(u8 *)(r7 +14)        ; R3_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=0,r=54,imm=0)
; pckt->tos = pckt->tos | ((ip6h->flow_lbl[0] >> 4) & 0x0F);
160: (67) r3 <<= 4                    ; R3_w=scalar(umax=4080,var_off=(0x0; 0xff0))
; pckt->tos = pckt->tos | ((ip6h->flow_lbl[0] >> 4) & 0x0F);
161: (71) r4 = *(u8 *)(r7 +15)        ; R4_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=0,r=54,imm=0)
; pckt->tos = pckt->tos | ((ip6h->flow_lbl[0] >> 4) & 0x0F);
162: (77) r4 >>= 4                    ; R4_w=scalar(umax=15,var_off=(0x0; 0xf))
163: (57) r4 &= 15                    ; R4_w=scalar(umax=15,var_off=(0x0; 0xf))
164: (4f) r3 |= r4                    ; R3_w=scalar() R4_w=scalar(umax=15,var_off=(0x0; 0xf))
; pckt->tos = pckt->tos | ((ip6h->flow_lbl[0] >> 4) & 0x0F);
165: (73) *(u8 *)(r10 -35) = r3       ; R3=scalar() R10=fp0 fp-40=mmmmmmmm
; if (*protocol == IPPROTO_FRAGMENT) {
166: (15) if r1 == 0x2c goto pc+1691          ; R1=scalar(umax=255,var_off=(0x0; 0xff))
; 
167: (69) r0 = *(u16 *)(r7 +18)       ; R0_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R7=pkt(off=0,r=54,imm=0)
; if (*protocol == IPPROTO_FRAGMENT) {
168: (55) if r1 != 0x3a goto pc+85    ; R1=58
; if (icmp_hdr + 1 > data_end) {
169: (bf) r1 = r7                     ; R1_w=pkt(off=0,r=54,imm=0) R7=pkt(off=0,r=54,imm=0)
170: (07) r1 += 62                    ; R1_w=pkt(off=62,r=54,imm=0)
; if (icmp_hdr + 1 > data_end) {
171: (2d) if r1 > r8 goto pc+1686     ; R1_w=pkt(off=62,r=62,imm=0) R8=pkt_end(off=0,imm=0)
; if (icmp_hdr->icmp6_type == ICMPV6_ECHO_REQUEST) {
172: (71) r1 = *(u8 *)(r2 +0)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R2=pkt(off=54,r=62,imm=0)
; if (icmp_hdr->icmp6_type == ICMPV6_ECHO_REQUEST) {
173: (15) if r1 == 0x1 goto pc+324    ; R1_w=scalar(umax=255,var_off=(0x0; 0xff))
174: (15) if r1 == 0x2 goto pc+299    ; R1=scalar(umax=255,var_off=(0x0; 0xff))
175: (b7) r9 = 2                      ; R9_w=2
176: (55) if r1 != 0x80 goto pc+1681          ; R1=128
177: (05) goto pc+0
; icmp_hdr->icmp6_type = ICMPV6_ECHO_REPLY;
178: (72) *(u8 *)(r7 +54) = 129       ; R7=pkt(off=0,r=62,imm=0)
179: (05) goto pc+0
; ip6h->hop_limit = DEFAULT_TTL;
180: (72) *(u8 *)(r7 +21) = 64        ; R7=pkt(off=0,r=62,imm=0)
; icmp_hdr->icmp6_cksum -= 0x0001;
181: (69) r1 = *(u16 *)(r7 +56)       ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R7=pkt(off=0,r=62,imm=0)
182: (07) r1 += -1                    ; R1_w=scalar(smin=-1,smax=65534)
183: (6b) *(u16 *)(r7 +56) = r1       ; R1_w=scalar(smin=-1,smax=65534) R7=pkt(off=0,r=62,imm=0)
; memcpy(tmp_addr, ip6h->saddr.s6_addr32, 16);
184: (61) r1 = *(u32 *)(r7 +34)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R7=pkt(off=0,r=62,imm=0)
185: (67) r1 <<= 32                   ; R1_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
186: (61) r2 = *(u32 *)(r7 +30)       ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R7=pkt(off=0,r=62,imm=0)
187: (4f) r1 |= r2                    ; R1_w=scalar() R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
188: (7b) *(u64 *)(r10 -8) = r1       ; R1_w=scalar() R10=fp0 fp-8_w=mmmmmmmm
189: (61) r1 = *(u32 *)(r7 +26)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R7=pkt(off=0,r=62,imm=0)
190: (67) r1 <<= 32                   ; R1_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
191: (61) r2 = *(u32 *)(r7 +22)       ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R7=pkt(off=0,r=62,imm=0)
192: (4f) r1 |= r2                    ; R1_w=scalar() R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
193: (7b) *(u64 *)(r10 -16) = r1      ; R1_w=scalar() R10=fp0 fp-16_w=mmmmmmmm
; memcpy(ip6h->saddr.s6_addr32, ip6h->daddr.s6_addr32, 16);
194: (61) r1 = *(u32 *)(r7 +38)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R7=pkt(off=0,r=62,imm=0)
195: (63) *(u32 *)(r7 +22) = r1       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R7=pkt(off=0,r=62,imm=0)
196: (61) r1 = *(u32 *)(r7 +42)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R7=pkt(off=0,r=62,imm=0)
197: (63) *(u32 *)(r7 +26) = r1       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R7=pkt(off=0,r=62,imm=0)
198: (61) r1 = *(u32 *)(r7 +46)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R7=pkt(off=0,r=62,imm=0)
199: (63) *(u32 *)(r7 +30) = r1       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R7=pkt(off=0,r=62,imm=0)
200: (61) r1 = *(u32 *)(r7 +50)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R7=pkt(off=0,r=62,imm=0)
201: (63) *(u32 *)(r7 +34) = r1       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R7=pkt(off=0,r=62,imm=0)
; memcpy(ip6h->daddr.s6_addr32, tmp_addr, 16);
202: (79) r1 = *(u64 *)(r10 -16)      ; R1_w=scalar() R10=fp0
203: (63) *(u32 *)(r7 +38) = r1       ; R1_w=scalar() R7=pkt(off=0,r=62,imm=0)
204: (77) r1 >>= 32                   ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
205: (63) *(u32 *)(r7 +42) = r1       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R7=pkt(off=0,r=62,imm=0)
206: (79) r1 = *(u64 *)(r10 -8)       ; R1_w=scalar() R10=fp0
207: (63) *(u32 *)(r7 +46) = r1       ; R1_w=scalar() R7=pkt(off=0,r=62,imm=0)
208: (77) r1 >>= 32                   ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
209: (63) *(u32 *)(r7 +50) = r1       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R7=pkt(off=0,r=62,imm=0)
; memcpy(tmp_mac, eth->h_source, ETH_ALEN);
210: (71) r1 = *(u8 *)(r7 +11)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=62,imm=0)
211: (67) r1 <<= 8                    ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00))
212: (71) r2 = *(u8 *)(r7 +10)        ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=62,imm=0)
213: (4f) r1 |= r2                    ; R1_w=scalar() R2_w=scalar(umax=255,var_off=(0x0; 0xff))
214: (6b) *(u16 *)(r10 -24) = r1      ; R1_w=scalar() R10=fp0 fp-24=??????mm
215: (71) r1 = *(u8 *)(r7 +7)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=62,imm=0)
216: (67) r1 <<= 8                    ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00))
217: (71) r2 = *(u8 *)(r7 +6)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=62,imm=0)
218: (4f) r1 |= r2                    ; R1_w=scalar() R2_w=scalar(umax=255,var_off=(0x0; 0xff))
219: (71) r2 = *(u8 *)(r7 +8)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=62,imm=0)
220: (67) r2 <<= 16                   ; R2_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
221: (71) r3 = *(u8 *)(r7 +9)         ; R3_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=62,imm=0)
222: (67) r3 <<= 24                   ; R3_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
223: (4f) r3 |= r2                    ; R2_w=scalar(umax=16711680,var_off=(0x0; 0xff0000)) R3_w=scalar()
224: (4f) r3 |= r1                    ; R1_w=scalar() R3_w=scalar()
225: (63) *(u32 *)(r10 -28) = r3      ; R3_w=scalar() R10=fp0 fp-32=mmmm????
; memcpy(eth->h_source, eth->h_dest, ETH_ALEN);
226: (71) r1 = *(u8 *)(r7 +2)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=62,imm=0)
227: (73) *(u8 *)(r7 +8) = r1         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=62,imm=0)
228: (71) r1 = *(u8 *)(r7 +3)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=62,imm=0)
229: (73) *(u8 *)(r7 +9) = r1         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=62,imm=0)
230: (71) r1 = *(u8 *)(r7 +0)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=62,imm=0)
231: (73) *(u8 *)(r7 +6) = r1         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=62,imm=0)
232: (71) r1 = *(u8 *)(r7 +1)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=62,imm=0)
233: (73) *(u8 *)(r7 +7) = r1         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=62,imm=0)
234: (71) r1 = *(u8 *)(r7 +4)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=62,imm=0)
235: (73) *(u8 *)(r7 +10) = r1        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=62,imm=0)
236: (71) r1 = *(u8 *)(r7 +5)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=62,imm=0)
237: (73) *(u8 *)(r7 +11) = r1        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=62,imm=0)
; memcpy(eth->h_dest, tmp_mac, ETH_ALEN);
238: (61) r1 = *(u32 *)(r10 -28)      ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
239: (bf) r2 = r1                     ; R1_w=scalar(id=403,umax=4294967295,var_off=(0x0; 0xffffffff)) R2_w=scalar(id=403,umax=4294967295,var_off=(0x0; 0xffffffff))
240: (77) r2 >>= 16                   ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff))
241: (73) *(u8 *)(r7 +2) = r2         ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R7=pkt(off=0,r=62,imm=0)
242: (bf) r2 = r1                     ; R1_w=scalar(id=403,umax=4294967295,var_off=(0x0; 0xffffffff)) R2_w=scalar(id=403,umax=4294967295,var_off=(0x0; 0xffffffff))
243: (77) r2 >>= 24                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
244: (73) *(u8 *)(r7 +3) = r2         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=62,imm=0)
245: (73) *(u8 *)(r7 +0) = r1         ; R1_w=scalar(id=403,umax=4294967295,var_off=(0x0; 0xffffffff)) R7=pkt(off=0,r=62,imm=0)
246: (77) r1 >>= 8                    ; R1_w=scalar(umax=16777215,var_off=(0x0; 0xffffff))
247: (73) *(u8 *)(r7 +1) = r1         ; R1_w=scalar(umax=16777215,var_off=(0x0; 0xffffff)) R7=pkt(off=0,r=62,imm=0)
248: (69) r1 = *(u16 *)(r10 -24)
249: safe

from 176 to 1858: safe

from 174 to 474: R0=scalar(umax=65535,var_off=(0x0; 0xffff)) R1=2 R2=pkt(off=54,r=62,imm=0) R3=scalar() R4=scalar(umax=15,var_off=(0x0; 0xf)) R6=ctx(off=0,imm=0) R7=pkt(off=0,r=62,imm=0) R8=pkt_end(off=0,imm=0) R9=1 R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm
; 
474: (7b) *(u64 *)(r10 -136) = r0     ; R0=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-136_w=
475: (05) goto pc+0
; __u32 stats_key = MAX_VIPS + ICMP_PTB_V6_STATS;
476: (62) *(u32 *)(r10 -16) = 524     ; R10=fp0 fp-16=????mmmm
477: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
478: (07) r2 += -16                   ; R2_w=fp-16
; bpf_map_lookup_elem(&stats, &stats_key);
479: (18) r1 = 0xffffa03499be8000     ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
481: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=404,off=0,ks=4,vs=16,imm=0)
; if (!icmp_ptb_v6_stats) {
482: (15) if r0 == 0x0 goto pc+1375   ; R0_w=map_value(off=0,ks=4,vs=16,imm=0)
; icmp_ptb_v6_stats->v1 += 1;
483: (79) r1 = *(u64 *)(r0 +0)        ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
484: (07) r1 += 1                     ; R1_w=scalar()
485: (7b) *(u64 *)(r0 +0) = r1        ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
; __u32 mtu = bpf_ntohl(icmp_hdr->icmp6_mtu);
486: (61) r1 = *(u32 *)(r7 +58)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R7=pkt(off=0,r=62,imm=0)
487: (dc) r1 = be32 r1                ; R1=scalar()
; if (mtu < MAX_MTU_IN_PTB_TO_DROP) {
488: (25) if r1 > 0x4ff goto pc+3     ; R1=scalar(umax=1279,var_off=(0x0; 0x7ff))
; icmp_ptb_v6_stats->v2 += 1;
489: (79) r1 = *(u64 *)(r0 +8)        ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
490: (07) r1 += 1                     ; R1_w=scalar()
491: (7b) *(u64 *)(r0 +8) = r1        ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
492: (bf) r1 = r7                     ; R1_w=pkt(off=0,r=62,imm=0) R7=pkt(off=0,r=62,imm=0)
493: (07) r1 += 102                   ; R1_w=pkt(off=102,r=62,imm=0)
494: (79) r0 = *(u64 *)(r10 -136)     ; R0_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
495: (2d) if r1 > r8 goto pc+1362     ; R1_w=pkt(off=102,r=102,imm=0) R8=pkt_end(off=0,imm=0)
; pckt->flags |= F_ICMP;
496: (71) r2 = *(u8 *)(r10 -36)       ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
497: (05) goto pc+4
; pckt->flags |= F_ICMP;
502: (47) r2 |= 1                     ; R2_w=scalar(umin=1,umax=255,var_off=(0x1; 0xfe))
; pckt->flow.proto = ip6h->nexthdr;
503: (71) r1 = *(u8 *)(r7 +68)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=102,imm=0)
; pckt->flags |= F_ICMP;
504: (73) *(u8 *)(r10 -36) = r2       ; R2_w=scalar(umin=1,umax=255,var_off=(0x1; 0xfe)) R10=fp0 fp-40=mmmmmmmm
; pckt->flow.proto = ip6h->nexthdr;
505: (73) *(u8 *)(r10 -44) = r1       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0 fp-48=mmmmmmmm
; memcpy(pckt->flow.srcv6, ip6h->daddr.s6_addr32, 16);
506: (61) r3 = *(u32 *)(r7 +90)       ; R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R7=pkt(off=0,r=102,imm=0)
507: (67) r3 <<= 32                   ; R3_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
508: (61) r4 = *(u32 *)(r7 +86)       ; R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R7=pkt(off=0,r=102,imm=0)
509: (4f) r3 |= r4                    ; R3_w=scalar() R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
510: (7b) *(u64 *)(r10 -80) = r3      ; R3_w=scalar() R10=fp0 fp-80_w=mmmmmmmm
511: (61) r3 = *(u32 *)(r7 +98)       ; R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R7=pkt(off=0,r=102,imm=0)
512: (67) r3 <<= 32                   ; R3_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
513: (61) r4 = *(u32 *)(r7 +94)       ; R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R7=pkt(off=0,r=102,imm=0)
514: (4f) r3 |= r4                    ; R3_w=scalar() R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
515: (7b) *(u64 *)(r10 -72) = r3      ; R3_w=scalar() R10=fp0 fp-72_w=mmmmmmmm
; memcpy(pckt->flow.dstv6, ip6h->saddr.s6_addr32, 16);
516: (61) r3 = *(u32 *)(r7 +74)       ; R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R7=pkt(off=0,r=102,imm=0)
517: (67) r3 <<= 32                   ; R3_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
518: (61) r4 = *(u32 *)(r7 +70)       ; R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R7=pkt(off=0,r=102,imm=0)
519: (4f) r3 |= r4                    ; R3_w=scalar() R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
520: (7b) *(u64 *)(r10 -64) = r3      ; R3_w=scalar() R10=fp0 fp-64_w=mmmmmmmm
521: (61) r3 = *(u32 *)(r7 +78)       ; R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R7=pkt(off=0,r=102,imm=0)
522: (61) r4 = *(u32 *)(r7 +82)       ; R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R7=pkt(off=0,r=102,imm=0)
523: (67) r4 <<= 32                   ; R4_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
524: (4f) r4 |= r3                    ; R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R4_w=scalar()
525: (7b) *(u64 *)(r10 -56) = r4      ; R4_w=scalar() R10=fp0 fp-56_w=mmmmmmmm
526: (05) goto pc-252
; if (protocol == IPPROTO_TCP) {
275: (bf) r3 = r1                     ; R1_w=scalar(id=405,umax=255,var_off=(0x0; 0xff)) R3_w=scalar(id=405,umax=255,var_off=(0x0; 0xff))
276: (15) if r3 == 0x11 goto pc+31    ; R3_w=scalar(id=405,umax=255,var_off=(0x0; 0xff))
277: (b7) r9 = 2                      ; R9=2
278: (55) if r3 != 0x6 goto pc+1579   ; R3=6
; bool is_icmp = !((pckt->flags & F_ICMP) == 0);
279: (bf) r3 = r2                     ; R2=scalar(id=406,umin=1,umax=255,var_off=(0x1; 0xfe)) R3_w=scalar(id=406,umin=1,umax=255,var_off=(0x1; 0xfe))
280: (57) r3 &= 1                     ; R3_w=1
281: (b7) r5 = 54                     ; R5_w=54
; if (is_ipv6) {
282: (15) if r3 == 0x0 goto pc+1
last_idx 282 first_idx 278
regs=8 stack=0 before 281: (b7) r5 = 54
regs=8 stack=0 before 280: (57) r3 &= 1
regs=8 stack=0 before 279: (bf) r3 = r2
regs=4 stack=0 before 278: (55) if r3 != 0x6 goto pc+1579
parent didn't have regs=4 stack=0 marks: R0=scalar(umax=65535,var_off=(0x0; 0xffff)) R1_w=scalar(id=405,umax=255,var_off=(0x0; 0xff)) R2_rw=Pscalar(umin=1,umax=255,var_off=(0x1; 0xfe)) R3_rw=scalar(id=405,umax=255,var_off=(0x0; 0xff)) R4_w=scalar() R6=ctx(off=0,imm=0) R7=pkt(off=0,r=102,imm=0) R8=pkt_end(off=0,imm=0) R9_w=2 R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56_w=mmmmmmmm fp-64_w=mmmmmmmm fp-72_w=mmmmmmmm fp-80_w=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm fp-136=
last_idx 277 first_idx 502
regs=4 stack=0 before 277: (b7) r9 = 2
regs=4 stack=0 before 276: (15) if r3 == 0x11 goto pc+31
regs=4 stack=0 before 275: (bf) r3 = r1
regs=4 stack=0 before 526: (05) goto pc-252
regs=4 stack=0 before 525: (7b) *(u64 *)(r10 -56) = r4
regs=4 stack=0 before 524: (4f) r4 |= r3
regs=4 stack=0 before 523: (67) r4 <<= 32
regs=4 stack=0 before 522: (61) r4 = *(u32 *)(r7 +82)
regs=4 stack=0 before 521: (61) r3 = *(u32 *)(r7 +78)
regs=4 stack=0 before 520: (7b) *(u64 *)(r10 -64) = r3
regs=4 stack=0 before 519: (4f) r3 |= r4
regs=4 stack=0 before 518: (61) r4 = *(u32 *)(r7 +70)
regs=4 stack=0 before 517: (67) r3 <<= 32
regs=4 stack=0 before 516: (61) r3 = *(u32 *)(r7 +74)
regs=4 stack=0 before 515: (7b) *(u64 *)(r10 -72) = r3
regs=4 stack=0 before 514: (4f) r3 |= r4
regs=4 stack=0 before 513: (61) r4 = *(u32 *)(r7 +94)
regs=4 stack=0 before 512: (67) r3 <<= 32
regs=4 stack=0 before 511: (61) r3 = *(u32 *)(r7 +98)
regs=4 stack=0 before 510: (7b) *(u64 *)(r10 -80) = r3
regs=4 stack=0 before 509: (4f) r3 |= r4
regs=4 stack=0 before 508: (61) r4 = *(u32 *)(r7 +86)
regs=4 stack=0 before 507: (67) r3 <<= 32
regs=4 stack=0 before 506: (61) r3 = *(u32 *)(r7 +90)
regs=4 stack=0 before 505: (73) *(u8 *)(r10 -44) = r1
regs=4 stack=0 before 504: (73) *(u8 *)(r10 -36) = r2
regs=4 stack=0 before 503: (71) r1 = *(u8 *)(r7 +68)
regs=4 stack=0 before 502: (47) r2 |= 1
parent didn't have regs=4 stack=0 marks: R0_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R1_w=pkt(off=102,r=102,imm=0) R2_rw=Pscalar(umax=255,var_off=(0x0; 0xff)) R6=ctx(off=0,imm=0) R7_r=pkt(off=0,r=102,imm=0) R8=pkt_end(off=0,imm=0) R9=1 R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm fp-136=
last_idx 497 first_idx 488
regs=4 stack=0 before 497: (05) goto pc+4
regs=4 stack=0 before 496: (71) r2 = *(u8 *)(r10 -36)
regs=0 stack=10 before 495: (2d) if r1 > r8 goto pc+1362
regs=0 stack=10 before 494: (79) r0 = *(u64 *)(r10 -136)
regs=0 stack=10 before 493: (07) r1 += 102
regs=0 stack=10 before 492: (bf) r1 = r7
regs=0 stack=10 before 491: (7b) *(u64 *)(r0 +8) = r1
regs=0 stack=10 before 490: (07) r1 += 1
regs=0 stack=10 before 489: (79) r1 = *(u64 *)(r0 +8)
regs=0 stack=10 before 488: (25) if r1 > 0x4ff goto pc+3
parent already had regs=0 stack=0 marks: R0_rw=map_value(off=0,ks=4,vs=16,imm=0) R1_rw=scalar() R6=ctx(off=0,imm=0) R7_r=pkt(off=0,r=62,imm=0) R8_r=pkt_end(off=0,imm=0) R9=1 R10=fp0 fp-16=????mmmm fp-40_r=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm fp-136_rw=
283: (b7) r5 = 102                    ; R5_w=102
; tcp = data + off;
284: (bf) r4 = r7                     ; R4_w=pkt(off=0,r=102,imm=0) R7=pkt(off=0,r=102,imm=0)
285: (0f) r4 += r5
last_idx 285 first_idx 278
regs=20 stack=0 before 284: (bf) r4 = r7
regs=20 stack=0 before 283: (b7) r5 = 102
286: R4_w=pkt(off=102,r=102,imm=0) R5_w=P102
; if (tcp + 1 > data_end) {
286: (bf) r5 = r4                     ; R4_w=pkt(off=102,r=102,imm=0) R5_w=pkt(off=102,r=102,imm=0)
287: (07) r5 += 20                    ; R5_w=pkt(off=122,r=102,imm=0)
288: (b7) r9 = 1                      ; R9=1
; if (tcp + 1 > data_end) {
289: (2d) if r5 > r8 goto pc+1568     ; R5=pkt(off=122,r=122,imm=0) R8=pkt_end(off=0,imm=0)
; if (tcp->syn) {
290: (69) r5 = *(u16 *)(r4 +12)       ; R4=pkt(off=102,r=122,imm=0) R5_w=scalar(umax=65535,var_off=(0x0; 0xffff))
; if (tcp->syn) {
291: (57) r5 &= 512                   ; R5_w=scalar(umax=512,var_off=(0x0; 0x200))
; if (tcp->syn) {
292: (15) if r5 == 0x0 goto pc+2      ; R5_w=scalar(umax=512,var_off=(0x0; 0x200))
; pckt->flags |= F_SYN_SET;
293: (47) r2 |= 2                     ; R2_w=scalar(umin=3,umax=255,var_off=(0x3; 0xfc))
294: (73) *(u8 *)(r10 -36) = r2       ; R2_w=scalar(umin=3,umax=255,var_off=(0x3; 0xfc)) R10=fp0 fp-40=mmmmmmmm
295: (7b) *(u64 *)(r10 -136) = r0     ; R0=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-136_w=
296: (b7) r2 = 1                      ; R2=1
; bool is_icmp = !((pckt->flags & F_ICMP) == 0);
297: (15) if r3 == 0x0 goto pc+1      ; R3=P1
298: (b7) r2 = 0                      ; R2_w=0
299: (67) r3 <<= 1                    ; R3_w=P2
; 
300: (bf) r5 = r4                     ; R4=pkt(off=102,r=122,imm=0) R5_w=pkt(off=102,r=122,imm=0)
301: (0f) r5 += r3                    ; R3_w=P2 R5_w=pkt(off=104,r=122,imm=0)
302: (69) r3 = *(u16 *)(r5 +0)        ; R3_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R5_w=pkt(off=104,r=122,imm=0)
303: (6b) *(u16 *)(r10 -48) = r3      ; R3_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-48=
304: (67) r2 <<= 1                    ; R2_w=0
305: (0f) r4 += r2
last_idx 305 first_idx 297
regs=4 stack=0 before 304: (67) r2 <<= 1
regs=4 stack=0 before 303: (6b) *(u16 *)(r10 -48) = r3
regs=4 stack=0 before 302: (69) r3 = *(u16 *)(r5 +0)
regs=4 stack=0 before 301: (0f) r5 += r3
regs=4 stack=0 before 300: (bf) r5 = r4
regs=4 stack=0 before 299: (67) r3 <<= 1
regs=4 stack=0 before 298: (b7) r2 = 0
306: R2_w=P0 R4_w=pkt(off=102,r=122,imm=0)
306: (69) r2 = *(u16 *)(r4 +0)        ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R4_w=pkt(off=102,r=122,imm=0)
307: (05) goto pc+21
; 
329: (6b) *(u16 *)(r10 -46) = r2      ; R2=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-48=mmmmmmmm
; memcpy(vip.vipv6, pckt.flow.dstv6, 16);
330: (79) r3 = *(u64 *)(r10 -56)      ; R3_w=scalar() R10=fp0
331: (7b) *(u64 *)(r10 -96) = r3      ; R3_w=scalar() R10=fp0 fp-96_w=mmmmmmmm
332: (79) r3 = *(u64 *)(r10 -64)      ; R3_w=scalar() R10=fp0
333: (7b) *(u64 *)(r10 -104) = r3     ; R3_w=scalar() R10=fp0 fp-104_w=mmmmmmmm
; vip.proto = pckt.flow.proto;
334: (73) *(u8 *)(r10 -86) = r1       ; R1=6 R10=fp0 fp-88=????mmmm
; vip.port = pckt.flow.port16[1];
335: (6b) *(u16 *)(r10 -88) = r2      ; R2=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-88=
336: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; 
337: (07) r2 += -104                  ; R2_w=fp-104
; vip_info = bpf_map_lookup_elem(&vip_map, &vip);
338: (18) r1 = 0xffffa03557866800     ; R1_w=map_ptr(off=0,ks=20,vs=8,imm=0)
340: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=407,off=0,ks=20,vs=8,imm=0)
; if (!vip_info) {
341: (55) if r0 != 0x0 goto pc+16     ; R0_w=0
342: (05) goto pc+0
; vip.port = 0;
343: (6a) *(u16 *)(r10 -88) = 0       ; R10=fp0 fp-88=????mmmm
344: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
345: (07) r2 += -104                  ; R2_w=fp-104
; vip_info = bpf_map_lookup_elem(&vip_map, &vip);
346: (18) r1 = 0xffffa03557866800     ; R1_w=map_ptr(off=0,ks=20,vs=8,imm=0)
348: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=408,off=0,ks=20,vs=8,imm=0)
349: (b7) r9 = 2                      ; R9_w=2
350: (79) r1 = *(u64 *)(r10 -136)     ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; if (!vip_info) {
351: (15) if r0 == 0x0 goto pc+1506   ; R0_w=map_value(off=0,ks=20,vs=8,imm=0)
352: (7b) *(u64 *)(r10 -136) = r1     ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-136_w=
; if (!(vip_info->flags & F_HASH_DPORT_ONLY) &&
353: (61) r1 = *(u32 *)(r0 +0)        ; R0_w=map_value(off=0,ks=20,vs=8,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (!(vip_info->flags & F_HASH_DPORT_ONLY) &&
354: (57) r1 &= 136                   ; R1=scalar(umax=136,var_off=(0x0; 0x88))
355: (55) if r1 != 0x0 goto pc+2      ; R1=0
356: (05) goto pc+0
; pckt.flow.port16[1] = 0;
357: (6a) *(u16 *)(r10 -46) = 0       ; R10=fp0 fp-48=mmmmmmmm
; if (data_end - data > MAX_PCKT_SIZE) {
358: (bf) r1 = r8                     ; R1_w=pkt_end(off=0,imm=0) R8=pkt_end(off=0,imm=0)
359: (1f) r1 -= r7                    ; R1_w=scalar() R7=pkt(off=0,r=122,imm=0)
360: (b7) r9 = 1                      ; R9_w=1
361: (79) r2 = *(u64 *)(r10 -136)     ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; if (data_end - data > MAX_PCKT_SIZE) {
362: (65) if r1 s> 0x5ea goto pc+1495         ; R1_w=scalar(smax=1514)
363: (7b) *(u64 *)(r10 -144) = r0     ; R0=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-144_w=map_value
364: (7b) *(u64 *)(r10 -136) = r2     ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-136_w=
365: (05) goto pc+0
; __u32 stats_key = MAX_VIPS + LRU_CNTRS;
366: (62) *(u32 *)(r10 -116) = 512    ; R10=fp0 fp-120=mmmm????
367: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; 
368: (07) r2 += -116                  ; R2_w=fp-116
; data_stats = bpf_map_lookup_elem(&stats, &stats_key);
369: (18) r1 = 0xffffa03499be8000     ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
371: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=409,off=0,ks=4,vs=16,imm=0)
; if (!data_stats) {
372: (15) if r0 == 0x0 goto pc+1485   ; R0_w=map_value(off=0,ks=4,vs=16,imm=0)
; data_stats->v1 += 1;
373: (79) r1 = *(u64 *)(r0 +0)        ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
374: (07) r1 += 1                     ; R1_w=scalar()
375: (7b) *(u64 *)(r10 -160) = r0     ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R10=fp0 fp-160_w=map_value
376: (7b) *(u64 *)(r0 +0) = r1        ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
377: (79) r9 = *(u64 *)(r10 -144)     ; R9_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
; if ((vip_info->flags & F_HASH_NO_SRC_PORT)) {
378: (61) r1 = *(u32 *)(r9 +0)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9_w=map_value(off=0,ks=20,vs=8,imm=0)
; if ((vip_info->flags & F_HASH_NO_SRC_PORT)) {
379: (57) r1 &= 1                     ; R1=scalar(umax=1,var_off=(0x0; 0x1))
; if ((vip_info->flags & F_HASH_NO_SRC_PORT)) {
380: (15) if r1 == 0x0 goto pc+2      ; R1=scalar(umax=1,var_off=(0x0; 0x1))
381: (05) goto pc+0
; pckt.flow.port16[0] = 0;
382: (6a) *(u16 *)(r10 -48) = 0       ; R10=fp0 fp-48=mmmmmmmm
; vip_num = vip_info->vip_num;
383: (61) r1 = *(u32 *)(r9 +4)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9=map_value(off=0,ks=20,vs=8,imm=0)
384: (7b) *(u64 *)(r10 -168) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-168_w=
; vip_num = vip_info->vip_num;
385: (63) *(u32 *)(r10 -108) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-112=mmmmmmmm
; __u32 cpu_num = bpf_get_smp_processor_id();
386: (85) call bpf_get_smp_processor_id#8     ; R0_w=scalar()
; __u32 cpu_num = bpf_get_smp_processor_id();
387: (63) *(u32 *)(r10 -120) = r0     ; R0_w=scalar() R10=fp0 fp-120=mmmmmmmm
388: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; 
389: (07) r2 += -120                  ; R2_w=fp-120
; void* lru_map = bpf_map_lookup_elem(&lru_mapping, &cpu_num);
390: (18) r1 = 0xffffa0376748a000     ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
392: (85) call bpf_map_lookup_elem#1          ; R0=map_value_or_null(id=410,off=0,ks=4,vs=4,imm=0)
; if (!lru_map) {
393: (55) if r0 != 0x0 goto pc+14     ; R0=0
394: (05) goto pc+0
; __u32 lru_stats_key = MAX_VIPS + FALLBACK_LRU_CNTR;
395: (62) *(u32 *)(r10 -16) = 515     ; R10=fp0 fp-16=????mmmm
396: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
397: (07) r2 += -16                   ; R2_w=fp-16
; struct lb_stats* lru_stats = bpf_map_lookup_elem(&stats, &lru_stats_key);
398: (18) r1 = 0xffffa03499be8000     ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
400: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=411,off=0,ks=4,vs=16,imm=0)
; if (!lru_stats) {
401: (15) if r0 == 0x0 goto pc+1455   ; R0_w=map_value(off=0,ks=4,vs=16,imm=0)
; lru_stats->v1 += 1;
402: (79) r1 = *(u64 *)(r0 +0)        ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
403: (07) r1 += 1                     ; R1_w=scalar()
404: (7b) *(u64 *)(r0 +0) = r1        ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
405: (18) r0 = 0xffffa03557862800     ; R0_w=map_ptr(off=0,ks=40,vs=16,imm=0)
407: (79) r9 = *(u64 *)(r10 -144)     ; R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
408: (7b) *(u64 *)(r10 -152) = r0     ; R0=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0 fp-152_w=map_ptr
; if ((vip_info->flags & F_QUIC_VIP)) {
409: (61) r1 = *(u32 *)(r9 +0)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9=map_value(off=0,ks=20,vs=8,imm=0)
; if ((vip_info->flags & F_QUIC_VIP)) {
410: (57) r1 &= 4                     ; R1_w=scalar(umax=4,var_off=(0x0; 0x4))
; if ((vip_info->flags & F_QUIC_VIP)) {
411: (15) if r1 == 0x0 goto pc+457    ; R1_w=scalar(umax=4,var_off=(0x0; 0x4))
; bool is_icmp = (pckt.flags & F_ICMP);
412: (71) r1 = *(u8 *)(r10 -36)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; bool is_icmp = (pckt.flags & F_ICMP);
413: (57) r1 &= 1                     ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
; if (is_icmp) {
414: (15) if r1 == 0x0 goto pc+272    ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
415: (05) goto pc+0
; __u32 stats_key = MAX_VIPS + QUIC_ICMP_STATS;
416: (62) *(u32 *)(r10 -16) = 523     ; R10=fp0 fp-16=????mmmm
417: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
418: (07) r2 += -16                   ; R2_w=fp-16
; struct lb_stats* data_stats = bpf_map_lookup_elem(&stats, &stats_key);
419: (18) r1 = 0xffffa03499be8000     ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
421: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=412,off=0,ks=4,vs=16,imm=0)
; if (!data_stats) {
422: (15) if r0 == 0x0 goto pc+1434   ; R0_w=map_value(off=0,ks=4,vs=16,imm=0)
; data_stats->v1 += 1;
423: (79) r1 = *(u64 *)(r0 +0)        ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
424: (07) r1 += 1                     ; R1_w=scalar()
425: (7b) *(u64 *)(r0 +0) = r1        ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
; (icmp_hdr->icmp6_code == ICMPV6_ADDR_UNREACH) ||
426: (71) r1 = *(u8 *)(r7 +55)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=122,imm=0)
; (icmp_hdr->icmp6_code == ICMPV6_ADDR_UNREACH) ||
427: (07) r1 += -3                    ; R1_w=scalar(smin=-3,smax=252)
428: (57) r1 &= 255                   ; R1_w=scalar(umax=255,var_off=(0x0; 0xff))
429: (79) r9 = *(u64 *)(r10 -144)     ; R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
; if (ignorable_quic_icmp_code(data, data_end, is_ipv6)) {
430: (25) if r1 > 0x1 goto pc+438     ; R1=scalar(umax=1,var_off=(0x0; 0x1))
; data_stats->v2 += 1;
431: (79) r1 = *(u64 *)(r0 +8)        ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
432: (07) r1 += 1                     ; R1_w=scalar()
433: (7b) *(u64 *)(r0 +8) = r1        ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
434: (05) goto pc+434
; original_sport = pckt.flow.port16[0];
869: (69) r1 = *(u16 *)(r10 -48)      ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
870: (7b) *(u64 *)(r10 -200) = r1     ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-200_w=
871: (71) r1 = *(u8 *)(r10 -36)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
872: (57) r1 &= 2                     ; R1=scalar(umax=2,var_off=(0x0; 0x2))
; if (!dst && !(pckt.flags & F_SYN_SET) &&
873: (55) if r1 != 0x0 goto pc+29     ; R1=0
; !(vip_info->flags & F_LRU_BYPASS)) {
874: (61) r1 = *(u32 *)(r9 +0)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9=map_value(off=0,ks=20,vs=8,imm=0)
; !(vip_info->flags & F_LRU_BYPASS)) {
875: (57) r1 &= 2                     ; R1_w=scalar(umax=2,var_off=(0x0; 0x2))
; if (!dst && !(pckt.flags & F_SYN_SET) &&
876: (55) if r1 != 0x0 goto pc+26     ; R1_w=0
877: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; 
878: (07) r2 += -80                   ; R2_w=fp-80
; dst_lru = bpf_map_lookup_elem(lru_map, &pckt->flow);
879: (79) r1 = *(u64 *)(r10 -152)     ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0
880: (85) call bpf_map_lookup_elem#1          ; R0=map_value_or_null(id=413,off=0,ks=40,vs=16,imm=0)
881: (bf) r9 = r0                     ; R0=map_value_or_null(id=413,off=0,ks=40,vs=16,imm=0) R9_w=map_value_or_null(id=413,off=0,ks=40,vs=16,imm=0)
; if (!dst_lru) {
882: (15) if r9 == 0x0 goto pc+20     ; R9_w=map_value(off=0,ks=40,vs=16,imm=0)
; if (!isGlobalLru && pckt->flow.proto == IPPROTO_UDP) {
883: (71) r1 = *(u8 *)(r10 -44)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (!isGlobalLru && pckt->flow.proto == IPPROTO_UDP) {
884: (55) if r1 != 0x11 goto pc+8     ; R1_w=17
; cur_time = bpf_ktime_get_ns();
885: (85) call bpf_ktime_get_ns#5     ; R0_w=scalar()
; if (cur_time - dst_lru->atime > LRU_UDP_TIMEOUT) {
886: (79) r1 = *(u64 *)(r9 +8)        ; R1_w=scalar() R9_w=map_value(off=0,ks=40,vs=16,imm=0)
; if (cur_time - dst_lru->atime > LRU_UDP_TIMEOUT) {
887: (bf) r2 = r0                     ; R0_w=scalar(id=414) R2_w=scalar(id=414)
888: (1f) r2 -= r1                    ; R1_w=scalar() R2_w=scalar()
889: (18) r1 = 0x6fc23ac00            ; R1=30000000000
; if (cur_time - dst_lru->atime > LRU_UDP_TIMEOUT) {
891: (2d) if r2 > r1 goto pc+11       ; R1=30000000000 R2=scalar(umax=30000000000,var_off=(0x0; 0x7ffffffff))
; dst_lru->atime = cur_time;
892: (7b) *(u64 *)(r9 +8) = r0        ; R0=scalar(id=414) R9=map_value(off=0,ks=40,vs=16,imm=0)
; key = dst_lru->pos;
893: (61) r1 = *(u32 *)(r9 +0)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9=map_value(off=0,ks=40,vs=16,imm=0)
; pckt->real_index = key;
894: (63) *(u32 *)(r10 -40) = r1      ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
; key = dst_lru->pos;
895: (63) *(u32 *)(r10 -16) = r1      ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-16=
896: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; key = dst_lru->pos;
897: (07) r2 += -16                   ; R2_w=fp-16
; *real = bpf_map_lookup_elem(&reals, &key);
898: (18) r1 = 0xffffaeba8c207000     ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
900: (85) call bpf_map_lookup_elem#1          ; R0=map_value_or_null(id=415,off=0,ks=4,vs=20,imm=0)
901: (7b) *(u64 *)(r10 -176) = r0     ; R0=map_value_or_null(id=415,off=0,ks=4,vs=20,imm=0) R10=fp0 fp-176_w=map_value_or_null
; if (!dst) {
902: (55) if r0 != 0x0 goto pc+417    ; R0=0
; if (pckt.flow.proto == IPPROTO_TCP) {
903: (71) r1 = *(u8 *)(r10 -44)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (pckt.flow.proto == IPPROTO_TCP) {
904: (55) if r1 != 0x6 goto pc+18     ; R1_w=6
905: (05) goto pc+0
; __u32 lru_stats_key = MAX_VIPS + LRU_MISS_CNTR;
906: (62) *(u32 *)(r10 -16) = 513     ; R10=fp0 fp-16=????mmmm
907: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
908: (07) r2 += -16                   ; R2_w=fp-16
; bpf_map_lookup_elem(&stats, &lru_stats_key);
909: (18) r1 = 0xffffa03499be8000     ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
911: (85) call bpf_map_lookup_elem#1          ; R0=map_value_or_null(id=416,off=0,ks=4,vs=16,imm=0)
; if (!lru_stats) {
912: (15) if r0 == 0x0 goto pc+944    ; R0=map_value(off=0,ks=4,vs=16,imm=0)
; if (pckt.flags & F_SYN_SET) {
913: (71) r2 = *(u8 *)(r10 -36)       ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (pckt.flags & F_SYN_SET) {
914: (57) r2 &= 2                     ; R2_w=scalar(umax=2,var_off=(0x0; 0x2))
915: (b7) r1 = 1                      ; R1_w=1
916: (15) if r2 == 0x0 goto pc+1      ; R2_w=scalar(umax=2,var_off=(0x0; 0x2))
917: (b7) r1 = 0                      ; R1_w=0
; if (pckt.flags & F_SYN_SET) {
918: (67) r1 <<= 3                    ; R1_w=0
; 
919: (0f) r0 += r1
last_idx 919 first_idx 912
regs=2 stack=0 before 918: (67) r1 <<= 3
regs=2 stack=0 before 917: (b7) r1 = 0
920: R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=P0
920: (79) r1 = *(u64 *)(r0 +0)        ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
921: (07) r1 += 1                     ; R1_w=scalar()
922: (7b) *(u64 *)(r0 +0) = r1        ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1=scalar()
923: (b7) r7 = 0                      ; R7_w=0
; struct real_pos_lru new_dst_lru = {};
924: (7b) *(u64 *)(r10 -8) = r7
last_idx 924 first_idx 923
regs=80 stack=0 before 923: (b7) r7 = 0
925: R7_w=P0 R10=fp0 fp-8_w=00000000
925: (7b) *(u64 *)(r10 -16) = r7      ; R7_w=P0 R10=fp0 fp-16_w=00000000
926: (05) goto pc+0
; __u32 conn_rate_key = MAX_VIPS + NEW_CONN_RATE_CNTR;
927: (62) *(u32 *)(r10 -28) = 514     ; R10=fp0 fp-32=mmmm????
928: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; 
929: (07) r2 += -28                   ; R2_w=fp-28
; bpf_map_lookup_elem(&stats, &conn_rate_key);
930: (18) r1 = 0xffffa03499be8000     ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
932: (85) call bpf_map_lookup_elem#1          ; R0=map_value_or_null(id=417,off=0,ks=4,vs=16,imm=0)
933: (bf) r9 = r0                     ; R0=map_value_or_null(id=417,off=0,ks=4,vs=16,imm=0) R9_w=map_value_or_null(id=417,off=0,ks=4,vs=16,imm=0)
934: (b7) r8 = 1                      ; R8_w=1
; if (!conn_rate_stats) {
935: (15) if r9 == 0x0 goto pc+16     ; R9_w=map_value(off=0,ks=4,vs=16,imm=0)
; *cur_time = bpf_ktime_get_ns();
936: (85) call bpf_ktime_get_ns#5     ; R0_w=scalar()
937: (bf) r7 = r0                     ; R0_w=scalar(id=418) R7_w=scalar(id=418)
; if ((*cur_time - conn_rate_stats->v2) > ONE_SEC) {
938: (79) r1 = *(u64 *)(r9 +8)        ; R1_w=scalar() R9_w=map_value(off=0,ks=4,vs=16,imm=0)
; if ((*cur_time - conn_rate_stats->v2) > ONE_SEC) {
939: (bf) r2 = r7                     ; R2_w=scalar(id=418) R7_w=scalar(id=418)
940: (1f) r2 -= r1                    ; R1_w=scalar() R2_w=scalar()
941: (b7) r1 = 1000000001             ; R1=1000000001
; if ((*cur_time - conn_rate_stats->v2) > ONE_SEC) {
942: (2d) if r1 > r2 goto pc+4        ; R1=1000000001 R2=scalar(umin=1000000001)
; conn_rate_stats->v2 = *cur_time;
943: (7b) *(u64 *)(r9 +8) = r7        ; R7=scalar(id=418) R9=map_value(off=0,ks=4,vs=16,imm=0)
944: (05) goto pc+0
; conn_rate_stats->v1 = 1;
945: (7a) *(u64 *)(r9 +0) = 1         ; R9=map_value(off=0,ks=4,vs=16,imm=0)
946: (05) goto pc+4
; if (conn_rate_stats->v1 > MAX_CONN_RATE) {
951: (b7) r8 = 0                      ; R8_w=0
952: (7b) *(u64 *)(r10 -192) = r8
last_idx 952 first_idx 942
regs=100 stack=0 before 951: (b7) r8 = 0
953: R8_w=P0 R10=fp0 fp-192_w=00000000
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
953: (79) r1 = *(u64 *)(r10 -144)     ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
954: (61) r1 = *(u32 *)(r1 +0)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
955: (57) r1 &= 8                     ; R1_w=scalar(umax=8,var_off=(0x0; 0x8))
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
956: (7b) *(u64 *)(r10 -208) = r7     ; R7=scalar(id=418) R10=fp0 fp-208=mmmmmmmm
957: (55) if r1 != 0x0 goto pc+9      ; R1=0
; a += k[0];
958: (71) r1 = *(u8 *)(r10 -68)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; a += (u32)k[1] << 8;
959: (7b) *(u64 *)(r10 -184) = r1     ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0 fp-184_w=
960: (71) r9 = *(u8 *)(r10 -67)       ; R9_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; a += (u32)k[2] << 16;
961: (71) r0 = *(u8 *)(r10 -66)       ; R0_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; b += *(u32*)(k + 4);
962: (61) r1 = *(u32 *)(r10 -76)      ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; c += *(u32*)(k + 8);
963: (61) r8 = *(u32 *)(r10 -72)      ; R8_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; a += *(u32*)(k);
964: (61) r3 = *(u32 *)(r10 -80)      ; R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; a += (u32)k[3] << 24;
965: (71) r4 = *(u8 *)(r10 -65)       ; R4_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
966: (05) goto pc+12
; __jhash_mix(a, b, c);
979: (1f) r3 -= r8                    ; R3_w=scalar(smin=-4294967295,smax=4294967295) R8=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; c += *(u32*)(k + 8);
980: (07) r8 += -559038209            ; R8_w=scalar(smin=-559038209,smax=3735929086)
981: (05) goto pc+0
982: (05) goto pc+0
983: (05) goto pc+0
984: (bc) w5 = w8                     ; R5_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R8_w=scalar(smin=-559038209,smax=3735929086)
; return (word << shift) | (word >> ((-shift) & 31));
985: (77) r5 >>= 28                   ; R5_w=scalar(umax=15,var_off=(0x0; 0xf))
986: (bf) r2 = r8                     ; R2_w=scalar(id=419,smin=-559038209,smax=3735929086) R8_w=scalar(id=419,smin=-559038209,smax=3735929086)
987: (67) r2 <<= 4                    ; R2_w=scalar(smax=9223372036854775792,umax=18446744073709551600,var_off=(0x0; 0xfffffffffffffff0),s32_max=2147483632,u32_max=-16)
988: (4f) r2 |= r5                    ; R2_w=scalar() R5_w=scalar(umax=15,var_off=(0x0; 0xf))
; __jhash_mix(a, b, c);
989: (af) r2 ^= r3                    ; R2_w=scalar() R3_w=scalar(smin=-4294967295,smax=4294967295)
990: (05) goto pc+0
991: (05) goto pc+0
992: (05) goto pc+0
993: (bc) w5 = w2                     ; R2=scalar() R5_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
994: (77) r5 >>= 26                   ; R5_w=scalar(umax=63,var_off=(0x0; 0x3f))
995: (bf) r7 = r2                     ; R2=scalar(id=420) R7_w=scalar(id=420)
996: (67) r7 <<= 6                    ; R7_w=scalar(smax=9223372036854775744,umax=18446744073709551552,var_off=(0x0; 0xffffffffffffffc0),s32_max=2147483584,u32_max=-64)
997: (4f) r7 |= r5                    ; R5_w=scalar(umax=63,var_off=(0x0; 0x3f)) R7_w=scalar()
; b += *(u32*)(k + 4);
998: (07) r1 += -559038209            ; R1_w=scalar(smin=-559038209,smax=3735929086)
; __jhash_mix(a, b, c);
999: (bf) r3 = r1                     ; R1_w=scalar(id=421,smin=-559038209,smax=3735929086) R3_w=scalar(id=421,smin=-559038209,smax=3735929086)
1000: (1f) r3 -= r2                   ; R2=scalar(id=420) R3_w=scalar()
1001: (af) r3 ^= r7                   ; R3_w=scalar() R7_w=scalar()
; a += (u32)k[3] << 24;
1002: (67) r4 <<= 24                  ; R4_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; a += (u32)k[2] << 16;
1003: (57) r0 &= 255                  ; R0_w=scalar(umax=255,var_off=(0x0; 0xff))
; a += (u32)k[2] << 16;
1004: (67) r0 <<= 16                  ; R0_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; a += (u32)k[3] << 24;
1005: (4f) r0 |= r4                   ; R0_w=scalar() R4_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; pckt->flow.ports,
1006: (61) r5 = *(u32 *)(r10 -48)     ; R5_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; b += initval;
1007: (07) r5 += -525483785           ; R5_w=scalar(smin=-525483785,smax=3769483510)
1008: (05) goto pc+0
1009: (7b) *(u64 *)(r10 -168) = r5    ; R5=scalar(smin=-525483785,smax=3769483510) R10=fp0 fp-168_w=
1010: (05) goto pc+0
1011: (05) goto pc+0
1012: (bc) w4 = w5                    ; R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R5=scalar(smin=-525483785,smax=3769483510)
; return (word << shift) | (word >> ((-shift) & 31));
1013: (77) r4 >>= 18                  ; R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1014: (bf) r7 = r5                    ; R5=scalar(id=422,smin=-525483785,smax=3769483510) R7_w=scalar(id=422,smin=-525483785,smax=3769483510)
1015: (67) r7 <<= 14                  ; R7_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1016: (4f) r7 |= r4                   ; R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff)) R7_w=scalar()
; __jhash_final(a, b, c);
1017: (a7) r5 ^= -525483785           ; R5_w=scalar()
1018: (1f) r5 -= r7                   ; R5_w=scalar() R7_w=scalar()
; __jhash_mix(a, b, c);
1019: (0f) r1 += r8                   ; R1_w=scalar(smin=-1118076418,smax=7471858172) R8=scalar(id=419,smin=-559038209,smax=3735929086)
; a += (u32)k[1] << 8;
1020: (57) r9 &= 255                  ; R9_w=scalar(umax=255,var_off=(0x0; 0xff))
; a += (u32)k[1] << 8;
1021: (67) r9 <<= 8                   ; R9_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; a += (u32)k[2] << 16;
1022: (4f) r0 |= r9                   ; R0_w=scalar() R9_w=scalar(umax=65280,var_off=(0x0; 0xff00))
1023: (79) r4 = *(u64 *)(r10 -184)    ; R4_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; a += k[0];
1024: (57) r4 &= 255                  ; R4_w=scalar(umax=255,var_off=(0x0; 0xff))
; a += (u32)k[1] << 8;
1025: (4f) r0 |= r4                   ; R0_w=scalar() R4_w=scalar(umax=255,var_off=(0x0; 0xff))
1026: (05) goto pc+0
1027: (05) goto pc+0
; __jhash_mix(a, b, c);
1028: (05) goto pc+0
1029: (bc) w7 = w3                    ; R3=scalar() R7_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1030: (77) r7 >>= 24                  ; R7_w=scalar(umax=255,var_off=(0x0; 0xff))
1031: (bf) r4 = r3                    ; R3=scalar(id=423) R4_w=scalar(id=423)
1032: (67) r4 <<= 8                   ; R4_w=scalar(smax=9223372036854775552,umax=18446744073709551360,var_off=(0x0; 0xffffffffffffff00),s32_max=2147483392,u32_max=-256)
1033: (4f) r4 |= r7                   ; R4_w=scalar() R7_w=scalar(umax=255,var_off=(0x0; 0xff))
; __jhash_mix(a, b, c);
1034: (0f) r2 += r1                   ; R1=scalar(smin=-1118076418,smax=7471858172) R2_w=scalar()
1035: (1f) r1 -= r3                   ; R1_w=scalar() R3=scalar(id=423)
1036: (af) r1 ^= r4                   ; R1_w=scalar() R4_w=scalar()
1037: (05) goto pc+0
1038: (05) goto pc+0
; __jhash_final(a, b, c);
1039: (7b) *(u64 *)(r10 -176) = r5    ; R5=scalar() R10=fp0 fp-176_w=mmmmmmmm
1040: (05) goto pc+0
1041: (bc) w4 = w5                    ; R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R5=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1042: (77) r4 >>= 21                  ; R4_w=scalar(umax=2047,var_off=(0x0; 0x7ff))
1043: (bf) r8 = r5                    ; R5=scalar(id=424) R8_w=scalar(id=424)
1044: (67) r8 <<= 11                  ; R8_w=scalar(smax=9223372036854773760,umax=18446744073709549568,var_off=(0x0; 0xfffffffffffff800),s32_max=2147481600,u32_max=-2048)
1045: (4f) r8 |= r4                   ; R4_w=scalar(umax=2047,var_off=(0x0; 0x7ff)) R8_w=scalar()
1046: (05) goto pc+0
1047: (05) goto pc+0
; __jhash_mix(a, b, c);
1048: (05) goto pc+0
1049: (bc) w4 = w1                    ; R1=scalar() R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1050: (77) r4 >>= 16                  ; R4_w=scalar(umax=65535,var_off=(0x0; 0xffff))
1051: (bf) r7 = r1                    ; R1=scalar(id=425) R7_w=scalar(id=425)
1052: (67) r7 <<= 16                  ; R7_w=scalar(smax=9223372036854710272,umax=18446744073709486080,var_off=(0x0; 0xffffffffffff0000),s32_max=2147418112,u32_max=-65536)
1053: (4f) r7 |= r4                   ; R4_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R7_w=scalar()
; __jhash_mix(a, b, c);
1054: (0f) r3 += r2                   ; R2=scalar() R3_w=scalar()
1055: (1f) r2 -= r1                   ; R1=scalar(id=425) R2_w=scalar()
1056: (af) r2 ^= r7                   ; R2_w=scalar() R7_w=scalar()
1057: (05) goto pc+0
1058: (05) goto pc+0
1059: (05) goto pc+0
1060: (bc) w7 = w2                    ; R2=scalar() R7_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1061: (77) r7 >>= 13                  ; R7_w=scalar(umax=524287,var_off=(0x0; 0x7ffff))
1062: (bf) r4 = r2                    ; R2=scalar(id=426) R4_w=scalar(id=426)
1063: (67) r4 <<= 19                  ; R4_w=scalar(smax=9223372036854251520,umax=18446744073709027328,var_off=(0x0; 0xfffffffffff80000),s32_max=2146959360,u32_max=-524288)
1064: (4f) r4 |= r7                   ; R4_w=scalar() R7_w=scalar(umax=524287,var_off=(0x0; 0x7ffff))
; __jhash_mix(a, b, c);
1065: (0f) r1 += r3                   ; R1_w=scalar() R3=scalar()
1066: (1f) r3 -= r2                   ; R2=scalar(id=426) R3_w=scalar()
1067: (af) r3 ^= r4                   ; R3_w=scalar() R4_w=scalar()
1068: (0f) r2 += r1                   ; R1_w=scalar() R2_w=scalar()
1069: (bf) r5 = r3                    ; R3_w=scalar(id=427) R5_w=scalar(id=427)
1070: (0f) r5 += r2                   ; R2_w=scalar() R5_w=scalar()
1071: (05) goto pc+0
1072: (05) goto pc+0
1073: (05) goto pc+0
1074: (bc) w4 = w5                    ; R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R5=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1075: (77) r4 >>= 18                  ; R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1076: (bf) r7 = r5                    ; R5=scalar(id=428) R7_w=scalar(id=428)
1077: (67) r7 <<= 14                  ; R7_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1078: (4f) r7 |= r4                   ; R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff)) R7_w=scalar()
; __jhash_mix(a, b, c);
1079: (05) goto pc+0
1080: (05) goto pc+0
1081: (05) goto pc+0
1082: (bc) w4 = w3                    ; R3=scalar(id=427) R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1083: (77) r4 >>= 28                  ; R4_w=scalar(umax=15,var_off=(0x0; 0xf))
; __jhash_mix(a, b, c);
1084: (1f) r1 -= r3                   ; R1_w=scalar() R3=scalar(id=427)
; return (word << shift) | (word >> ((-shift) & 31));
1085: (67) r3 <<= 4                   ; R3_w=scalar(smax=9223372036854775792,umax=18446744073709551600,var_off=(0x0; 0xfffffffffffffff0),s32_max=2147483632,u32_max=-16)
1086: (4f) r3 |= r4                   ; R3_w=scalar() R4_w=scalar(umax=15,var_off=(0x0; 0xf))
; __jhash_mix(a, b, c);
1087: (af) r1 ^= r3                   ; R1_w=scalar() R3_w=scalar()
; a += k[0];
1088: (0f) r2 += r0                   ; R0=scalar() R2_w=scalar()
; __jhash_final(a, b, c);
1089: (af) r1 ^= r5                   ; R1_w=scalar() R5=scalar(id=428)
1090: (1f) r1 -= r7                   ; R1_w=scalar() R7=scalar()
1091: (05) goto pc+0
1092: (05) goto pc+0
1093: (05) goto pc+0
1094: (bc) w3 = w1                    ; R1=scalar() R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1095: (77) r3 >>= 21                  ; R3_w=scalar(umax=2047,var_off=(0x0; 0x7ff))
1096: (bf) r4 = r1                    ; R1=scalar(id=429) R4_w=scalar(id=429)
1097: (67) r4 <<= 11                  ; R4_w=scalar(smax=9223372036854773760,umax=18446744073709549568,var_off=(0x0; 0xfffffffffffff800),s32_max=2147481600,u32_max=-2048)
1098: (4f) r4 |= r3                   ; R3_w=scalar(umax=2047,var_off=(0x0; 0x7ff)) R4_w=scalar()
; __jhash_final(a, b, c);
1099: (bf) r3 = r1                    ; R1=scalar(id=429) R3_w=scalar(id=429)
1100: (af) r3 ^= r2                   ; R2=scalar() R3_w=scalar()
1101: (1f) r3 -= r4                   ; R3_w=scalar() R4_w=scalar()
1102: (05) goto pc+0
1103: (05) goto pc+0
1104: (05) goto pc+0
1105: (bc) w2 = w3                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1106: (77) r2 >>= 7                   ; R2_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff))
1107: (bf) r4 = r3                    ; R3=scalar(id=430) R4_w=scalar(id=430)
1108: (67) r4 <<= 25                  ; R4_w=scalar(smax=9223372036821221376,umax=18446744073675997184,var_off=(0x0; 0xfffffffffe000000),s32_max=2113929216,u32_max=-33554432)
1109: (4f) r4 |= r2                   ; R2_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff)) R4_w=scalar()
; __jhash_final(a, b, c);
1110: (bf) r7 = r3                    ; R3=scalar(id=430) R7_w=scalar(id=430)
1111: (af) r7 ^= r5                   ; R5=scalar(id=428) R7_w=scalar()
1112: (1f) r7 -= r4                   ; R4_w=scalar() R7_w=scalar()
1113: (05) goto pc+0
1114: (05) goto pc+0
1115: (05) goto pc+0
1116: (bc) w2 = w7                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R7=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1117: (77) r2 >>= 16                  ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff))
1118: (bf) r4 = r7                    ; R4_w=scalar(id=431) R7=scalar(id=431)
1119: (67) r4 <<= 16                  ; R4_w=scalar(smax=9223372036854710272,umax=18446744073709486080,var_off=(0x0; 0xffffffffffff0000),s32_max=2147418112,u32_max=-65536)
1120: (4f) r4 |= r2                   ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R4_w=scalar()
; __jhash_final(a, b, c);
1121: (bf) r2 = r7                    ; R2_w=scalar(id=431) R7=scalar(id=431)
1122: (af) r2 ^= r1                   ; R1=scalar(id=429) R2_w=scalar()
1123: (1f) r2 -= r4                   ; R2_w=scalar() R4_w=scalar()
1124: (05) goto pc+0
1125: (bc) w1 = w2                    ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R2=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1126: (77) r1 >>= 28                  ; R1_w=scalar(umax=15,var_off=(0x0; 0xf))
1127: (bf) r4 = r2                    ; R2=scalar(id=432) R4_w=scalar(id=432)
1128: (67) r4 <<= 4                   ; R4_w=scalar(smax=9223372036854775792,umax=18446744073709551600,var_off=(0x0; 0xfffffffffffffff0),s32_max=2147483632,u32_max=-16)
1129: (4f) r4 |= r1                   ; R1_w=scalar(umax=15,var_off=(0x0; 0xf)) R4_w=scalar()
; __jhash_final(a, b, c);
1130: (bf) r1 = r2                    ; R1_w=scalar(id=432) R2=scalar(id=432)
1131: (af) r1 ^= r3                   ; R1_w=scalar() R3=scalar(id=430)
1132: (1f) r1 -= r4                   ; R1_w=scalar() R4_w=scalar()
1133: (05) goto pc+0
1134: (05) goto pc+0
1135: (05) goto pc+0
1136: (bc) w3 = w1                    ; R1=scalar() R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1137: (77) r3 >>= 18                  ; R3_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1138: (bf) r4 = r1                    ; R1=scalar(id=433) R4_w=scalar(id=433)
1139: (67) r4 <<= 14                  ; R4_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1140: (4f) r4 |= r3                   ; R3_w=scalar(umax=16383,var_off=(0x0; 0x3fff)) R4_w=scalar()
; __jhash_final(a, b, c);
1141: (af) r1 ^= r7                   ; R1_w=scalar() R7=scalar(id=431)
1142: (1f) r1 -= r4                   ; R1_w=scalar() R4_w=scalar()
1143: (05) goto pc+0
1144: (05) goto pc+0
1145: (05) goto pc+0
1146: (bc) w4 = w1                    ; R1=scalar() R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1147: (77) r4 >>= 8                   ; R4_w=scalar(umax=16777215,var_off=(0x0; 0xffffff))
1148: (bf) r5 = r1                    ; R1=scalar(id=434) R5_w=scalar(id=434)
1149: (67) r5 <<= 24                  ; R5_w=scalar(smax=9223372036837998592,umax=18446744073692774400,var_off=(0x0; 0xffffffffff000000),s32_max=2130706432,u32_max=-16777216)
1150: (4f) r5 |= r4                   ; R4_w=scalar(umax=16777215,var_off=(0x0; 0xffffff)) R5_w=scalar()
; __jhash_final(a, b, c);
1151: (af) r1 ^= r2                   ; R1_w=scalar() R2=scalar(id=432)
; a += initval;
1152: (1f) r1 -= r5                   ; R1_w=scalar() R5_w=scalar()
1153: (07) r1 += -525483785           ; R1_w=scalar()
1154: (79) r7 = *(u64 *)(r10 -176)    ; R7_w=scalar() R10=fp0
; __jhash_final(a, b, c);
1155: (af) r1 ^= r7                   ; R1_w=scalar() R7_w=scalar()
1156: (1f) r1 -= r8                   ; R1_w=scalar() R8=scalar()
1157: (05) goto pc+0
1158: (bc) w2 = w1                    ; R1=scalar() R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1159: (77) r2 >>= 7                   ; R2_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff))
1160: (bf) r4 = r1                    ; R1=scalar(id=435) R4_w=scalar(id=435)
1161: (67) r4 <<= 25                  ; R4_w=scalar(smax=9223372036821221376,umax=18446744073675997184,var_off=(0x0; 0xfffffffffe000000),s32_max=2113929216,u32_max=-33554432)
1162: (4f) r4 |= r2                   ; R2_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff)) R4_w=scalar()
; __jhash_final(a, b, c);
1163: (bf) r0 = r1                    ; R0_w=scalar(id=435) R1=scalar(id=435)
1164: (79) r2 = *(u64 *)(r10 -168)    ; R2_w=scalar(smin=-525483785,smax=3769483510) R10=fp0
1165: (af) r0 ^= r2                   ; R0_w=scalar() R2_w=scalar(smin=-525483785,smax=3769483510)
1166: (1f) r0 -= r4                   ; R0_w=scalar() R4_w=scalar()
1167: (05) goto pc+0
1168: (05) goto pc+0
1169: (05) goto pc+0
1170: (bc) w2 = w0                    ; R0=scalar() R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1171: (77) r2 >>= 16                  ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff))
1172: (bf) r5 = r0                    ; R0=scalar(id=436) R5_w=scalar(id=436)
1173: (67) r5 <<= 16                  ; R5_w=scalar(smax=9223372036854710272,umax=18446744073709486080,var_off=(0x0; 0xffffffffffff0000),s32_max=2147418112,u32_max=-65536)
1174: (4f) r5 |= r2                   ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R5_w=scalar()
; __jhash_final(a, b, c);
1175: (bf) r4 = r0                    ; R0=scalar(id=436) R4_w=scalar(id=436)
1176: (af) r4 ^= r7                   ; R4_w=scalar() R7=scalar()
1177: (1f) r4 -= r5                   ; R4_w=scalar() R5_w=scalar()
1178: (05) goto pc+0
1179: (bc) w2 = w4                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R4=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1180: (77) r2 >>= 28                  ; R2_w=scalar(umax=15,var_off=(0x0; 0xf))
1181: (bf) r5 = r4                    ; R4=scalar(id=437) R5_w=scalar(id=437)
1182: (67) r5 <<= 4                   ; R5_w=scalar(smax=9223372036854775792,umax=18446744073709551600,var_off=(0x0; 0xfffffffffffffff0),s32_max=2147483632,u32_max=-16)
1183: (4f) r5 |= r2                   ; R2_w=scalar(umax=15,var_off=(0x0; 0xf)) R5_w=scalar()
; __jhash_final(a, b, c);
1184: (bf) r2 = r4                    ; R2_w=scalar(id=437) R4=scalar(id=437)
1185: (af) r2 ^= r1                   ; R1=scalar(id=435) R2_w=scalar()
1186: (1f) r2 -= r5                   ; R2_w=scalar() R5_w=scalar()
1187: (05) goto pc+0
1188: (05) goto pc+0
1189: (05) goto pc+0
1190: (bc) w1 = w2                    ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R2=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1191: (77) r1 >>= 18                  ; R1_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1192: (bf) r5 = r2                    ; R2=scalar(id=438) R5_w=scalar(id=438)
1193: (67) r5 <<= 14                  ; R5_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1194: (4f) r5 |= r1                   ; R1_w=scalar(umax=16383,var_off=(0x0; 0x3fff)) R5_w=scalar()
; __jhash_final(a, b, c);
1195: (af) r2 ^= r0                   ; R0=scalar(id=436) R2_w=scalar()
1196: (1f) r2 -= r5                   ; R2_w=scalar() R5_w=scalar()
1197: (05) goto pc+0
1198: (bc) w1 = w2                    ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R2=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1199: (77) r1 >>= 8                   ; R1_w=scalar(umax=16777215,var_off=(0x0; 0xffffff))
1200: (bf) r3 = r2                    ; R2=scalar(id=439) R3_w=scalar(id=439)
1201: (67) r3 <<= 24                  ; R3_w=scalar(smax=9223372036837998592,umax=18446744073692774400,var_off=(0x0; 0xffffffffff000000),s32_max=2130706432,u32_max=-16777216)
1202: (4f) r3 |= r1                   ; R1_w=scalar(umax=16777215,var_off=(0x0; 0xffffff)) R3_w=scalar()
; __jhash_final(a, b, c);
1203: (af) r2 ^= r4                   ; R2_w=scalar() R4=scalar(id=437)
1204: (1f) r2 -= r3                   ; R2_w=scalar() R3_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1205: (79) r1 = *(u64 *)(r10 -144)    ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
1206: (61) r1 = *(u32 *)(r1 +4)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; key = RING_SIZE * (vip_info->vip_num) + hash;
1207: (27) r1 *= 65537                ; R1_w=scalar(umax=281479271612415,var_off=(0x0; 0x1ffffffffffff))
; __jhash_final(a, b, c);
1208: (bc) w2 = w2                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
1209: (05) goto pc+0
; hash = get_packet_hash(pckt, hash_16bytes) % RING_SIZE;
1210: (97) r2 %= 65537                ; R2_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1211: (0f) r2 += r1                   ; R1_w=scalar(umax=281479271612415,var_off=(0x0; 0x1ffffffffffff)) R2_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1212: (63) *(u32 *)(r10 -20) = r2     ; R2_w=scalar() R10=fp0 fp-24=mmmm????
1213: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1214: (07) r2 += -20                  ; R2_w=fp-20
; real_pos = bpf_map_lookup_elem(&ch_rings, &key);
1215: (18) r1 = 0xffffaebaa0631000    ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
1217: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=440,off=0,ks=4,vs=4,imm=0)
; if (!real_pos) {
1218: (15) if r0 == 0x0 goto pc+638   ; R0=map_value(off=0,ks=4,vs=4,imm=0)
; key = *real_pos;
1219: (61) r1 = *(u32 *)(r0 +0)       ; R0=map_value(off=0,ks=4,vs=4,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; key = *real_pos;
1220: (63) *(u32 *)(r10 -20) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-24=mmmm????
1221: (79) r8 = *(u64 *)(r10 -192)    ; R8_w=P0 R10=fp0
; if (key == 0) {
1222: (55) if r1 != 0x0 goto pc+12    ; R1_w=0
1223: (05) goto pc+0
; __u32 ch_drop_stats_key = MAX_VIPS + CH_DROP_STATS;
1224: (62) *(u32 *)(r10 -28) = 521    ; R10=fp0 fp-32=mmmm????
1225: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1226: (07) r2 += -28                  ; R2_w=fp-28
; bpf_map_lookup_elem(&stats, &ch_drop_stats_key);
1227: (18) r1 = 0xffffa03499be8000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
1229: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=441,off=0,ks=4,vs=16,imm=0)
; if (!ch_drop_stats) {
1230: (15) if r0 == 0x0 goto pc+3     ; R0=map_value(off=0,ks=4,vs=16,imm=0)
; ch_drop_stats->v2 += 1;
1231: (79) r1 = *(u64 *)(r0 +8)       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1232: (07) r1 += 1                    ; R1_w=scalar()
1233: (7b) *(u64 *)(r0 +8) = r1       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
; pckt->real_index = key;
1234: (61) r1 = *(u32 *)(r10 -20)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; pckt->real_index = key;
1235: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1236: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1237: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1238: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1240: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=442,off=0,ks=4,vs=20,imm=0)
1241: (bf) r7 = r0                    ; R0=map_value_or_null(id=442,off=0,ks=4,vs=20,imm=0) R7_w=map_value_or_null(id=442,off=0,ks=4,vs=20,imm=0)
; if (!(*real)) {
1242: (55) if r7 != 0x0 goto pc+9     ; R7_w=0
1243: (05) goto pc+0
; __u32 ch_drop_stats_key = MAX_VIPS + CH_DROP_STATS;
1244: (62) *(u32 *)(r10 -28) = 521    ; R10=fp0 fp-32=mmmm????
1245: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1246: (07) r2 += -28                  ; R2_w=fp-28
; bpf_map_lookup_elem(&stats, &ch_drop_stats_key);
1247: (18) r1 = 0xffffa03499be8000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
1249: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=443,off=0,ks=4,vs=16,imm=0)
; if (!ch_drop_stats) {
1250: (15) if r0 == 0x0 goto pc+606   ; R0=map_value(off=0,ks=4,vs=16,imm=0)
1251: (05) goto pc+602
; ch_drop_stats->v1 += 1;
1854: (79) r1 = *(u64 *)(r0 +0)       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1855: (07) r1 += 1                    ; R1_w=scalar()
1856: (7b) *(u64 *)(r0 +0) = r1
1857: safe

from 1250 to 1857: safe

from 1242 to 1252: R0=map_value(off=0,ks=4,vs=20,imm=0) R6=ctx(off=0,imm=0) R7_w=map_value(off=0,ks=4,vs=20,imm=0) R8=P0 R9=scalar(umax=65280,var_off=(0x0; 0xff00)) R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184= fp-192=00000000 fp-200= fp-208=mmmmmmmm
; if (lru_map && !(vip_info->flags & F_LRU_BYPASS) && !under_flood) {
1252: (79) r1 = *(u64 *)(r10 -152)    ; R1=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0
1253: (15) if r1 == 0x0 goto pc+19    ; R1=map_ptr(off=0,ks=40,vs=16,imm=0)
; if (lru_map && !(vip_info->flags & F_LRU_BYPASS) && !under_flood) {
1254: (79) r1 = *(u64 *)(r10 -144)    ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
1255: (61) r1 = *(u32 *)(r1 +0)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (lru_map && !(vip_info->flags & F_LRU_BYPASS) && !under_flood) {
1256: (57) r1 &= 2                    ; R1_w=scalar(umax=2,var_off=(0x0; 0x2))
1257: (77) r1 >>= 1                   ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
; if (lru_map && !(vip_info->flags & F_LRU_BYPASS) && !under_flood) {
1258: (4f) r8 |= r1
last_idx 1258 first_idx 1253
regs=2 stack=0 before 1257: (77) r1 >>= 1
regs=2 stack=0 before 1256: (57) r1 &= 2
regs=2 stack=0 before 1255: (61) r1 = *(u32 *)(r1 +0)
1259: R1_w=Pscalar(umax=1,var_off=(0x0; 0x1)) R8_w=scalar()
1259: (55) if r8 != 0x0 goto pc+13    ; R8_w=0
; if (pckt->flow.proto == IPPROTO_UDP) {
1260: (71) r1 = *(u8 *)(r10 -44)      ; R1=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (pckt->flow.proto == IPPROTO_UDP) {
1261: (55) if r1 != 0x11 goto pc+2    ; R1=17
; new_dst_lru.atime = cur_time;
1262: (79) r1 = *(u64 *)(r10 -208)    ; R1_w=scalar() R10=fp0
1263: (7b) *(u64 *)(r10 -8) = r1      ; R1_w=scalar() R10=fp0 fp-8_w=mmmmmmmm
; new_dst_lru.pos = key;
1264: (61) r1 = *(u32 *)(r10 -20)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; new_dst_lru.pos = key;
1265: (63) *(u32 *)(r10 -16) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-16=
1266: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; new_dst_lru.pos = key;
1267: (07) r2 += -80                  ; R2_w=fp-80
1268: (bf) r3 = r10                   ; R3_w=fp0 R10=fp0
1269: (07) r3 += -16                  ; R3_w=fp-16
; bpf_map_update_elem(lru_map, &pckt->flow, &new_dst_lru, BPF_ANY);
1270: (79) r1 = *(u64 *)(r10 -152)    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0
1271: (b7) r4 = 0                     ; R4_w=0
1272: (85) call bpf_map_update_elem#2         ; R0=scalar()
1273: (05) goto pc+0
; __u32 vip_miss_stats_key = 0;
1274: (62) *(u32 *)(r10 -16) = 0      ; R10=fp0 fp-16=mmmmmmmm
1275: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1276: (07) r2 += -16                  ; R2_w=fp-16
; bpf_map_lookup_elem(&vip_miss_stats, &vip_miss_stats_key);
1277: (18) r1 = 0xffffa03587067400    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1279: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=444,off=0,ks=4,vs=20,imm=0)
; if (!lru_miss_stat_vip) {
1280: (15) if r0 == 0x0 goto pc+576   ; R0_w=map_value(off=0,ks=4,vs=20,imm=0)
1281: (b7) r1 = 1                     ; R1_w=1
; 
1282: (61) r2 = *(u32 *)(r0 +0)       ; R0_w=map_value(off=0,ks=4,vs=20,imm=0) R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
1283: (61) r3 = *(u32 *)(r10 -104)    ; R3=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; bool address_match = (is_ipv6 &&
1284: (5d) if r2 != r3 goto pc+10     ; R2=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; lru_miss_stat_vip->vipv6[1] == vip->vipv6[1] &&
1285: (61) r2 = *(u32 *)(r0 +4)       ; R0=map_value(off=0,ks=4,vs=20,imm=0) R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; lru_miss_stat_vip->vipv6[1] == vip->vipv6[1] &&
1286: (61) r3 = *(u32 *)(r10 -100)    ; R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; lru_miss_stat_vip->vipv6[1] == vip->vipv6[1] &&
1287: (5d) if r2 != r3 goto pc+7      ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; lru_miss_stat_vip->vipv6[2] == vip->vipv6[2] &&
1288: (61) r2 = *(u32 *)(r0 +8)       ; R0=map_value(off=0,ks=4,vs=20,imm=0) R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; lru_miss_stat_vip->vipv6[2] == vip->vipv6[2] &&
1289: (61) r3 = *(u32 *)(r10 -96)     ; R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; lru_miss_stat_vip->vipv6[2] == vip->vipv6[2] &&
1290: (5d) if r2 != r3 goto pc+4      ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; lru_miss_stat_vip->vipv6[3] == vip->vipv6[3])) ||
1291: (61) r2 = *(u32 *)(r0 +12)      ; R0=map_value(off=0,ks=4,vs=20,imm=0) R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; lru_miss_stat_vip->vipv6[3] == vip->vipv6[3])) ||
1292: (61) r3 = *(u32 *)(r10 -92)     ; R3=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; lru_miss_stat_vip->vipv6[3] == vip->vipv6[3])) ||
1293: (5d) if r2 != r3 goto pc+1      ; R2=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
1294: (b7) r1 = 0                     ; R1_w=0
; bool vip_match = address_match && port_match && proto_match;
1295: (69) r3 = *(u16 *)(r10 -88)     ; R3_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
1296: (71) r2 = *(u8 *)(r10 -86)      ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; bool proto_match = lru_miss_stat_vip->proto = vip->proto;
1297: (73) *(u8 *)(r0 +18) = r2       ; R0=map_value(off=0,ks=4,vs=20,imm=0) R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; bool vip_match = address_match && port_match && proto_match;
1298: (57) r1 &= 1                    ; R1_w=0
1299: (55) if r1 != 0x0 goto pc+15
last_idx 1299 first_idx 1293
regs=2 stack=0 before 1298: (57) r1 &= 1
regs=2 stack=0 before 1297: (73) *(u8 *)(r0 +18) = r2
regs=2 stack=0 before 1296: (71) r2 = *(u8 *)(r10 -86)
regs=2 stack=0 before 1295: (69) r3 = *(u16 *)(r10 -88)
regs=2 stack=0 before 1294: (b7) r1 = 0
1300: R1_w=P0
1300: (69) r1 = *(u16 *)(r0 +16)      ; R0=map_value(off=0,ks=4,vs=20,imm=0) R1=scalar(umax=65535,var_off=(0x0; 0xffff))
1301: (5d) if r1 != r3 goto pc+13     ; R1=scalar(umax=65535,var_off=(0x0; 0xffff)) R3=scalar(umax=65535,var_off=(0x0; 0xffff))
1302: (bf) r1 = r2                    ; R1_w=scalar(id=445,umax=255,var_off=(0x0; 0xff)) R2=scalar(id=445,umax=255,var_off=(0x0; 0xff))
1303: (15) if r1 == 0x0 goto pc+11    ; R1_w=scalar(id=445,umax=255,var_off=(0x0; 0xff))
; __u32 lru_stats_key = pckt->real_index;
1304: (61) r1 = *(u32 *)(r10 -40)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; __u32 lru_stats_key = pckt->real_index;
1305: (63) *(u32 *)(r10 -28) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmm????
1306: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; __u32 lru_stats_key = pckt->real_index;
1307: (07) r2 += -28                  ; R2_w=fp-28
; __u32* lru_miss_stat = bpf_map_lookup_elem(&lru_miss_stats, &lru_stats_key);
1308: (18) r1 = 0xffffaeba8afdd000    ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
1310: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=446,off=0,ks=4,vs=4,imm=0)
; if (!lru_miss_stat) {
1311: (15) if r0 == 0x0 goto pc+545   ; R0=map_value(off=0,ks=4,vs=4,imm=0)
; *lru_miss_stat += 1;
1312: (61) r1 = *(u32 *)(r0 +0)       ; R0=map_value(off=0,ks=4,vs=4,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
1313: (07) r1 += 1                    ; R1_w=scalar(umin=1,umax=4294967296,var_off=(0x0; 0x1ffffffff))
1314: (63) *(u32 *)(r0 +0) = r1       ; R0=map_value(off=0,ks=4,vs=4,imm=0) R1_w=scalar(umin=1,umax=4294967296,var_off=(0x0; 0x1ffffffff))
1315: (7b) *(u64 *)(r10 -176) = r7    ; R7=map_value(off=0,ks=4,vs=20,imm=0) R10=fp0 fp-176_w=map_value
1316: (79) r2 = *(u64 *)(r10 -160)    ; R2_w=map_value(off=0,ks=4,vs=16,imm=0) R10=fp0
; data_stats->v2 += 1;
1317: (79) r1 = *(u64 *)(r2 +8)       ; R1_w=scalar() R2_w=map_value(off=0,ks=4,vs=16,imm=0)
1318: (07) r1 += 1                    ; R1_w=scalar()
1319: (7b) *(u64 *)(r2 +8) = r1       ; R1_w=scalar() R2_w=map_value(off=0,ks=4,vs=16,imm=0)
1320: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1321: (07) r2 += -112                 ; R2_w=fp-112
; cval = bpf_map_lookup_elem(&ctl_array, &mac_addr_pos);
1322: (18) r1 = 0xffffa03553eeca00    ; R1_w=map_ptr(off=0,ks=4,vs=8,imm=0)
1324: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=447,off=0,ks=4,vs=8,imm=0)
1325: (bf) r8 = r0                    ; R0=map_value_or_null(id=447,off=0,ks=4,vs=8,imm=0) R8_w=map_value_or_null(id=447,off=0,ks=4,vs=8,imm=0)
1326: (b7) r9 = 1                     ; R9_w=1
; if (!cval) {
1327: (15) if r8 == 0x0 goto pc+530   ; R8_w=map_value(off=0,ks=4,vs=8,imm=0)
1328: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1329: (07) r2 += -108                 ; R2_w=fp-108
; data_stats = bpf_map_lookup_elem(&stats, &vip_num);
1330: (18) r1 = 0xffffa03499be8000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
1332: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=448,off=0,ks=4,vs=16,imm=0)
; if (!data_stats) {
1333: (15) if r0 == 0x0 goto pc+524   ; R0_w=map_value(off=0,ks=4,vs=16,imm=0)
1334: (79) r2 = *(u64 *)(r10 -136)    ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
1335: (dc) r2 = be16 r2               ; R2_w=scalar()
; data_stats->v1 += 1;
1336: (79) r1 = *(u64 *)(r0 +8)       ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1337: (7b) *(u64 *)(r10 -136) = r2    ; R2_w=scalar() R10=fp0 fp-136_w=mmmmmmmm
1338: (0f) r1 += r2                   ; R1_w=scalar() R2_w=scalar()
1339: (7b) *(u64 *)(r0 +8) = r1       ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1340: (79) r1 = *(u64 *)(r0 +0)       ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1341: (07) r1 += 1                    ; R1_w=scalar()
1342: (7b) *(u64 *)(r0 +0) = r1       ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
; data_stats = bpf_map_lookup_elem(&reals_stats, &pckt.real_index);
1343: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1344: (07) r2 += -40                  ; R2_w=fp-40
; data_stats = bpf_map_lookup_elem(&reals_stats, &pckt.real_index);
1345: (18) r1 = 0xffffaeba8ae7d000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
1347: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=449,off=0,ks=4,vs=16,imm=0)
; if (!data_stats) {
1348: (15) if r0 == 0x0 goto pc+509   ; R0=map_value(off=0,ks=4,vs=16,imm=0)
; data_stats->v1 += 1;
1349: (79) r1 = *(u64 *)(r0 +8)       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1350: (79) r2 = *(u64 *)(r10 -136)    ; R2_w=scalar() R10=fp0
1351: (0f) r1 += r2                   ; R1_w=scalar() R2_w=scalar()
1352: (7b) *(u64 *)(r0 +8) = r1       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1353: (79) r1 = *(u64 *)(r0 +0)       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1354: (0f) r1 += r9                   ; R1_w=scalar() R9=1
1355: (7b) *(u64 *)(r0 +0) = r1       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
; pckt.flow.port16[0] = original_sport;
1356: (79) r1 = *(u64 *)(r10 -200)    ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
1357: (6b) *(u16 *)(r10 -48) = r1     ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-48=
; if (dst->flags & F_IPV6) {
1358: (79) r1 = *(u64 *)(r10 -176)    ; R1_w=map_value(off=0,ks=4,vs=20,imm=0) R10=fp0
1359: (71) r1 = *(u8 *)(r1 +16)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff))
; if (dst->flags & F_IPV6) {
1360: (57) r1 &= 1                    ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
; if (dst->flags & F_IPV6) {
1361: (15) if r1 == 0x0 goto pc+60    ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
; if (XDP_ADJUST_HEAD_FUNC(xdp, 0 - (int)sizeof(struct ipv6hdr))) {
1362: (bf) r1 = r6                    ; R1_w=ctx(off=0,imm=0) R6=ctx(off=0,imm=0)
1363: (18) r2 = 0xffffffd8            ; R2_w=4294967256
1365: (85) call bpf_xdp_adjust_head#44        ; R0=scalar()
1366: (bc) w0 = w0                    ; R0_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
1367: (05) goto pc+0
; if (XDP_ADJUST_HEAD_FUNC(xdp, 0 - (int)sizeof(struct ipv6hdr))) {
1368: (55) if r0 != 0x0 goto pc+489   ; R0_w=0
; data = (void*)(long)xdp->data;
1369: (61) r1 = *(u32 *)(r6 +0)       ; R1_w=pkt(off=0,r=0,imm=0) R6=ctx(off=0,imm=0)
; data_end = (void*)(long)xdp->data_end;
1370: (61) r2 = *(u32 *)(r6 +4)       ; R2_w=pkt_end(off=0,imm=0) R6=ctx(off=0,imm=0)
; ip6h = data + sizeof(struct ethhdr);
1371: (bf) r3 = r1                    ; R1_w=pkt(off=0,r=0,imm=0) R3_w=pkt(off=0,r=0,imm=0)
1372: (07) r3 += 14                   ; R3_w=pkt(off=14,r=0,imm=0)
; if (new_eth + 1 > data_end || old_eth + 1 > data_end || ip6h + 1 > data_end) {
1373: (2d) if r3 > r2 goto pc+484     ; R2_w=pkt_end(off=0,imm=0) R3_w=pkt(off=14,r=14,imm=0)
1374: (bf) r3 = r1                    ; R1_w=pkt(off=0,r=14,imm=0) R3_w=pkt(off=0,r=14,imm=0)
1375: (07) r3 += 54                   ; R3=pkt(off=54,r=14,imm=0)
1376: (2d) if r3 > r2 goto pc+481     ; R2=pkt_end(off=0,imm=0) R3=pkt(off=54,r=54,imm=0)
; memcpy(new_eth->h_dest, cval->mac, 6);
1377: (71) r2 = *(u8 *)(r8 +0)        ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8=map_value(off=0,ks=4,vs=8,imm=0)
1378: (71) r3 = *(u8 *)(r8 +1)        ; R3_w=scalar(umax=255,var_off=(0x0; 0xff)) R8=map_value(off=0,ks=4,vs=8,imm=0)
1379: (71) r4 = *(u8 *)(r8 +2)        ; R4_w=scalar(umax=255,var_off=(0x0; 0xff)) R8=map_value(off=0,ks=4,vs=8,imm=0)
1380: (71) r5 = *(u8 *)(r8 +3)        ; R5_w=scalar(umax=255,var_off=(0x0; 0xff)) R8=map_value(off=0,ks=4,vs=8,imm=0)
1381: (71) r0 = *(u8 *)(r8 +4)        ; R0_w=scalar(umax=255,var_off=(0x0; 0xff)) R8=map_value(off=0,ks=4,vs=8,imm=0)
1382: (71) r6 = *(u8 *)(r8 +5)        ; R6_w=scalar(umax=255,var_off=(0x0; 0xff)) R8=map_value(off=0,ks=4,vs=8,imm=0)
; memcpy(new_eth->h_source, old_eth->h_dest, 6);
1383: (71) r7 = *(u8 *)(r1 +42)       ; R1=pkt(off=0,r=54,imm=0) R7_w=scalar(umax=255,var_off=(0x0; 0xff))
1384: (73) *(u8 *)(r1 +8) = r7        ; R1=pkt(off=0,r=54,imm=0) R7_w=scalar(umax=255,var_off=(0x0; 0xff))
1385: (71) r7 = *(u8 *)(r1 +43)       ; R1=pkt(off=0,r=54,imm=0) R7_w=scalar(umax=255,var_off=(0x0; 0xff))
1386: (73) *(u8 *)(r1 +9) = r7        ; R1=pkt(off=0,r=54,imm=0) R7_w=scalar(umax=255,var_off=(0x0; 0xff))
1387: (71) r7 = *(u8 *)(r1 +40)       ; R1=pkt(off=0,r=54,imm=0) R7_w=scalar(umax=255,var_off=(0x0; 0xff))
1388: (73) *(u8 *)(r1 +6) = r7        ; R1=pkt(off=0,r=54,imm=0) R7_w=scalar(umax=255,var_off=(0x0; 0xff))
1389: (71) r7 = *(u8 *)(r1 +41)       ; R1=pkt(off=0,r=54,imm=0) R7_w=scalar(umax=255,var_off=(0x0; 0xff))
1390: (73) *(u8 *)(r1 +7) = r7        ; R1=pkt(off=0,r=54,imm=0) R7_w=scalar(umax=255,var_off=(0x0; 0xff))
; memcpy(new_eth->h_dest, cval->mac, 6);
1391: (73) *(u8 *)(r1 +5) = r6        ; R1=pkt(off=0,r=54,imm=0) R6_w=scalar(umax=255,var_off=(0x0; 0xff))
1392: (73) *(u8 *)(r1 +4) = r0        ; R0_w=scalar(umax=255,var_off=(0x0; 0xff)) R1=pkt(off=0,r=54,imm=0)
1393: (73) *(u8 *)(r1 +3) = r5        ; R1=pkt(off=0,r=54,imm=0) R5_w=scalar(umax=255,var_off=(0x0; 0xff))
1394: (73) *(u8 *)(r1 +2) = r4        ; R1=pkt(off=0,r=54,imm=0) R4_w=scalar(umax=255,var_off=(0x0; 0xff))
1395: (73) *(u8 *)(r1 +1) = r3        ; R1=pkt(off=0,r=54,imm=0) R3_w=scalar(umax=255,var_off=(0x0; 0xff))
1396: (73) *(u8 *)(r1 +0) = r2        ; R1=pkt(off=0,r=54,imm=0) R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; memcpy(new_eth->h_source, old_eth->h_dest, 6);
1397: (71) r2 = *(u8 *)(r1 +44)       ; R1=pkt(off=0,r=54,imm=0) R2_w=scalar(umax=255,var_off=(0x0; 0xff))
1398: (73) *(u8 *)(r1 +10) = r2       ; R1=pkt(off=0,r=54,imm=0) R2_w=scalar(umax=255,var_off=(0x0; 0xff))
1399: (71) r2 = *(u8 *)(r1 +45)       ; R1=pkt(off=0,r=54,imm=0) R2_w=scalar(umax=255,var_off=(0x0; 0xff))
1400: (73) *(u8 *)(r1 +11) = r2       ; R1=pkt(off=0,r=54,imm=0) R2_w=scalar(umax=255,var_off=(0x0; 0xff))
1401: (05) goto pc+0
; new_eth->h_proto = BE_ETH_P_IPV6;
1402: (72) *(u8 *)(r1 +12) = 134      ; R1=pkt(off=0,r=54,imm=0)
1403: (05) goto pc+0
1404: (72) *(u8 *)(r1 +13) = 221      ; R1=pkt(off=0,r=54,imm=0)
; 
1405: (69) r2 = *(u16 *)(r10 -48)     ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; create_encap_ipv6_src(pckt->flow.port16[0], pckt->flow.srcv6[3], saddr);
1406: (61) r3 = *(u32 *)(r10 -68)     ; R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; saddr[3] = src ^ port;
1407: (af) r3 ^= r2                   ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R3_w=scalar()
1408: (79) r4 = *(u64 *)(r10 -136)    ; R4_w=scalar() R10=fp0
; payload_len = pkt_bytes + sizeof(struct ipv6hdr);
1409: (07) r4 += 40                   ; R4_w=scalar()
; ip6h->payload_len = bpf_htons(payload_len);
1410: (dc) r4 = be16 r4               ; R4_w=scalar()
; create_v6_hdr(ip6h, pckt->tos, saddr, dst->dstv6, payload_len, proto);
1411: (71) r2 = *(u8 *)(r10 -35)      ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; ip6h->payload_len = bpf_htons(payload_len);
1412: (6b) *(u16 *)(r1 +18) = r4      ; R1=pkt(off=0,r=54,imm=0) R4_w=scalar()
1413: (05) goto pc+0
; memcpy(ip6h->saddr.s6_addr32, saddr, 16);
1414: (62) *(u32 *)(r1 +22) = 1       ; R1=pkt(off=0,r=54,imm=0)
1415: (05) goto pc+0
; memset(ip6h->flow_lbl, 0, sizeof(ip6h->flow_lbl));
1416: (72) *(u8 *)(r1 +17) = 0        ; R1=pkt(off=0,r=54,imm=0)
1417: (72) *(u8 *)(r1 +16) = 0        ; R1=pkt(off=0,r=54,imm=0)
; memcpy(ip6h->saddr.s6_addr32, saddr, 16);
1418: (62) *(u32 *)(r1 +26) = 0       ; R1=pkt(off=0,r=54,imm=0)
1419: (62) *(u32 *)(r1 +30) = 0       ; R1=pkt(off=0,r=54,imm=0)
1420: (b7) r4 = 16425                 ; R4_w=16425
1421: (05) goto pc+588
; ip6h->nexthdr = proto;
2010: (6b) *(u16 *)(r1 +20) = r4      ; R1=pkt(off=0,r=54,imm=0) R4=16425
; memcpy(ip6h->saddr.s6_addr32, saddr, 16);
2011: (63) *(u32 *)(r1 +34) = r3      ; R1=pkt(off=0,r=54,imm=0) R3=scalar()
; ip6h->flow_lbl[0] = (tc & 0x0F) << 4;
2012: (bf) r3 = r2                    ; R2=scalar(id=450,umax=255,var_off=(0x0; 0xff)) R3_w=scalar(id=450,umax=255,var_off=(0x0; 0xff))
2013: (67) r3 <<= 4                   ; R3_w=scalar(umax=4080,var_off=(0x0; 0xff0))
; ip6h->flow_lbl[0] = (tc & 0x0F) << 4;
2014: (73) *(u8 *)(r1 +15) = r3       ; R1=pkt(off=0,r=54,imm=0) R3_w=scalar(umax=4080,var_off=(0x0; 0xff0))
2015: (77) r2 >>= 4                   ; R2_w=scalar(umax=15,var_off=(0x0; 0xf))
; ip6h->priority = (tc & 0xF0) >> 4;
2016: (47) r2 |= 96                   ; R2_w=scalar(umin=96,umax=111,var_off=(0x60; 0xf))
2017: (73) *(u8 *)(r1 +14) = r2       ; R1=pkt(off=0,r=54,imm=0) R2_w=scalar(umin=96,umax=111,var_off=(0x60; 0xf))
2018: (79) r3 = *(u64 *)(r10 -176)    ; R3_w=map_value(off=0,ks=4,vs=20,imm=0) R10=fp0
; memcpy(ip6h->daddr.s6_addr32, daddr, 16);
2019: (61) r2 = *(u32 *)(r3 +0)       ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3_w=map_value(off=0,ks=4,vs=20,imm=0)
2020: (63) *(u32 *)(r1 +38) = r2      ; R1=pkt(off=0,r=54,imm=0) R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
2021: (61) r2 = *(u32 *)(r3 +4)       ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3_w=map_value(off=0,ks=4,vs=20,imm=0)
2022: (63) *(u32 *)(r1 +42) = r2      ; R1=pkt(off=0,r=54,imm=0) R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
2023: (61) r2 = *(u32 *)(r3 +12)      ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3_w=map_value(off=0,ks=4,vs=20,imm=0)
2024: (63) *(u32 *)(r1 +50) = r2      ; R1=pkt(off=0,r=54,imm=0) R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
2025: (61) r2 = *(u32 *)(r3 +8)       ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3_w=map_value(off=0,ks=4,vs=20,imm=0)
2026: (63) *(u32 *)(r1 +46) = r2      ; R1=pkt(off=0,r=54,imm=0) R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
2027: (05) goto pc-1776
252: safe

from 1376 to 1858: safe

from 1373 to 1858: safe

from 1368 to 1858: safe

from 1361 to 1422: R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=0 R2_w=scalar() R6=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=20,imm=0) R8=map_value(off=0,ks=4,vs=8,imm=0) R9=1 R10=fp0 fp-8=mmmmmmmm fp-16=mmmmmmmm fp-24=mmmm???? fp-32=mmmm???? fp-40=mmmmmmmm fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136=mmmmmmmm fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=map_value fp-184= fp-192=00000000 fp-200= fp-208=mmmmmmmm
; __u32 ip_src = create_encap_ipv4_src(pckt->flow.port16[0], pckt->flow.src);
1422: (61) r7 = *(u32 *)(r10 -80)     ; R7_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; if (XDP_ADJUST_HEAD_FUNC(xdp, 0 - (int)sizeof(struct iphdr))) {
1423: (bf) r1 = r6                    ; R1_w=ctx(off=0,imm=0) R6=ctx(off=0,imm=0)
1424: (18) r2 = 0xffffffec            ; R2_w=4294967276
1426: (85) call bpf_xdp_adjust_head#44        ; R0=scalar()
1427: (bc) w0 = w0                    ; R0_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
1428: (05) goto pc+0
; if (XDP_ADJUST_HEAD_FUNC(xdp, 0 - (int)sizeof(struct iphdr))) {
1429: (55) if r0 != 0x0 goto pc+428   ; R0_w=0
; data = (void*)(long)xdp->data;
1430: (61) r1 = *(u32 *)(r6 +0)       ; R1_w=pkt(off=0,r=0,imm=0) R6=ctx(off=0,imm=0)
; data_end = (void*)(long)xdp->data_end;
1431: (61) r2 = *(u32 *)(r6 +4)       ; R2_w=pkt_end(off=0,imm=0) R6=ctx(off=0,imm=0)
; if (new_eth + 1 > data_end || old_eth + 1 > data_end || iph + 1 > data_end) {
1432: (bf) r3 = r1                    ; R1_w=pkt(off=0,r=0,imm=0) R3_w=pkt(off=0,r=0,imm=0)
1433: (07) r3 += 14                   ; R3_w=pkt(off=14,r=0,imm=0)
; if (new_eth + 1 > data_end || old_eth + 1 > data_end || iph + 1 > data_end) {
1434: (2d) if r3 > r2 goto pc+423     ; R2_w=pkt_end(off=0,imm=0) R3_w=pkt(off=14,r=14,imm=0)
1435: (bf) r3 = r1                    ; R1_w=pkt(off=0,r=14,imm=0) R3_w=pkt(off=0,r=14,imm=0)
1436: (07) r3 += 34                   ; R3=pkt(off=34,r=14,imm=0)
1437: (2d) if r3 > r2 goto pc+420     ; R2=pkt_end(off=0,imm=0) R3=pkt(off=34,r=34,imm=0)
1438: (79) r3 = *(u64 *)(r10 -200)    ; R3_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
1439: (dc) r3 = be32 r3               ; R3_w=scalar()
1440: (18) r2 = 0xffff0000            ; R2_w=4294901760
1442: (5f) r3 &= r2                   ; R2_w=4294901760 R3_w=scalar(umax=4294901760,var_off=(0x0; 0xffff0000),s32_max=2147418112)
1443: (57) r7 &= -65536               ; R7_w=scalar(umax=4294901760,var_off=(0x0; 0xffff0000),s32_max=2147418112)
1444: (af) r7 ^= r3                   ; R3_w=scalar(umax=4294901760,var_off=(0x0; 0xffff0000),s32_max=2147418112) R7_w=scalar()
1445: (bf) r3 = r7                    ; R3_w=scalar(id=451) R7_w=scalar(id=451)
1446: (47) r3 |= 4268                 ; R3_w=scalar(smin=-9223372036854771540,umin=4268,var_off=(0x10ac; 0xffffffffffffef53),s32_min=-2147479380)
; memcpy(new_eth->h_dest, cval->mac, 6);
1447: (71) r2 = *(u8 *)(r8 +0)        ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8=map_value(off=0,ks=4,vs=8,imm=0)
1448: (71) r4 = *(u8 *)(r8 +1)        ; R4_w=scalar(umax=255,var_off=(0x0; 0xff)) R8=map_value(off=0,ks=4,vs=8,imm=0)
1449: (71) r5 = *(u8 *)(r8 +2)        ; R5_w=scalar(umax=255,var_off=(0x0; 0xff)) R8=map_value(off=0,ks=4,vs=8,imm=0)
1450: (71) r0 = *(u8 *)(r8 +3)        ; R0_w=scalar(umax=255,var_off=(0x0; 0xff)) R8=map_value(off=0,ks=4,vs=8,imm=0)
1451: (71) r6 = *(u8 *)(r8 +4)        ; R6_w=scalar(umax=255,var_off=(0x0; 0xff)) R8=map_value(off=0,ks=4,vs=8,imm=0)
1452: (71) r8 = *(u8 *)(r8 +5)        ; R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; memcpy(new_eth->h_source, old_eth->h_dest, 6);
1453: (71) r9 = *(u8 *)(r1 +22)       ; R1=pkt(off=0,r=34,imm=0) R9_w=scalar(umax=255,var_off=(0x0; 0xff))
1454: (73) *(u8 *)(r1 +8) = r9        ; R1=pkt(off=0,r=34,imm=0) R9_w=scalar(umax=255,var_off=(0x0; 0xff))
1455: (71) r9 = *(u8 *)(r1 +23)       ; R1=pkt(off=0,r=34,imm=0) R9_w=scalar(umax=255,var_off=(0x0; 0xff))
1456: (73) *(u8 *)(r1 +9) = r9        ; R1=pkt(off=0,r=34,imm=0) R9_w=scalar(umax=255,var_off=(0x0; 0xff))
1457: (71) r9 = *(u8 *)(r1 +20)       ; R1=pkt(off=0,r=34,imm=0) R9_w=scalar(umax=255,var_off=(0x0; 0xff))
1458: (73) *(u8 *)(r1 +6) = r9        ; R1=pkt(off=0,r=34,imm=0) R9_w=scalar(umax=255,var_off=(0x0; 0xff))
1459: (71) r9 = *(u8 *)(r1 +21)       ; R1=pkt(off=0,r=34,imm=0) R9_w=scalar(umax=255,var_off=(0x0; 0xff))
1460: (73) *(u8 *)(r1 +7) = r9        ; R1=pkt(off=0,r=34,imm=0) R9_w=scalar(umax=255,var_off=(0x0; 0xff))
; memcpy(new_eth->h_dest, cval->mac, 6);
1461: (73) *(u8 *)(r1 +5) = r8        ; R1=pkt(off=0,r=34,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
1462: (73) *(u8 *)(r1 +4) = r6        ; R1=pkt(off=0,r=34,imm=0) R6_w=scalar(umax=255,var_off=(0x0; 0xff))
1463: (73) *(u8 *)(r1 +3) = r0        ; R0_w=scalar(umax=255,var_off=(0x0; 0xff)) R1=pkt(off=0,r=34,imm=0)
1464: (73) *(u8 *)(r1 +2) = r5        ; R1=pkt(off=0,r=34,imm=0) R5_w=scalar(umax=255,var_off=(0x0; 0xff))
1465: (73) *(u8 *)(r1 +1) = r4        ; R1=pkt(off=0,r=34,imm=0) R4_w=scalar(umax=255,var_off=(0x0; 0xff))
1466: (73) *(u8 *)(r1 +0) = r2        ; R1=pkt(off=0,r=34,imm=0) R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; memcpy(new_eth->h_source, old_eth->h_dest, 6);
1467: (71) r2 = *(u8 *)(r1 +24)       ; R1=pkt(off=0,r=34,imm=0) R2_w=scalar(umax=255,var_off=(0x0; 0xff))
1468: (73) *(u8 *)(r1 +10) = r2       ; R1=pkt(off=0,r=34,imm=0) R2_w=scalar(umax=255,var_off=(0x0; 0xff))
1469: (71) r2 = *(u8 *)(r1 +25)       ; R1=pkt(off=0,r=34,imm=0) R2_w=scalar(umax=255,var_off=(0x0; 0xff))
1470: (73) *(u8 *)(r1 +11) = r2       ; R1=pkt(off=0,r=34,imm=0) R2_w=scalar(umax=255,var_off=(0x0; 0xff))
1471: (05) goto pc+0
; new_eth->h_proto = BE_ETH_P_IP;
1472: (72) *(u8 *)(r1 +12) = 8        ; R1=pkt(off=0,r=34,imm=0)
1473: (05) goto pc+0
1474: (05) goto pc+0
; *csum += *next_iph_u16++;
1475: (bc) w7 = w7                    ; R7_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
1476: (05) goto pc+0
; new_eth->h_proto = BE_ETH_P_IP;
1477: (72) *(u8 *)(r1 +13) = 0        ; R1=pkt(off=0,r=34,imm=0)
; create_v4_hdr(iph, pckt->tos, ip_src, dst->dst, pkt_bytes, IPPROTO_IPIP);
1478: (79) r2 = *(u64 *)(r10 -176)    ; R2_w=map_value(off=0,ks=4,vs=20,imm=0) R10=fp0
1479: (61) r4 = *(u32 *)(r2 +0)       ; R2_w=map_value(off=0,ks=4,vs=20,imm=0) R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; create_v4_hdr(iph, pckt->tos, ip_src, dst->dst, pkt_bytes, IPPROTO_IPIP);
1480: (71) r0 = *(u8 *)(r10 -35)      ; R0_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
1481: (05) goto pc+0
; iph->ihl = 5;
1482: (72) *(u8 *)(r1 +14) = 69       ; R1=pkt(off=0,r=34,imm=0)
; *csum += *next_iph_u16++;
1483: (77) r7 >>= 16                  ; R7_w=scalar(umax=65535,var_off=(0x0; 0xffff))
1484: (79) r8 = *(u64 *)(r10 -136)    ; R8_w=scalar() R10=fp0
; iph->tot_len = bpf_htons(pkt_bytes + sizeof(struct iphdr));
1485: (07) r8 += 20                   ; R8_w=scalar()
1486: (dc) r8 = be16 r8               ; R8_w=scalar()
; *csum += *next_iph_u16++;
1487: (bf) r2 = r8                    ; R2_w=scalar(id=452) R8_w=scalar(id=452)
1488: (0f) r2 += r7                   ; R2_w=scalar() R7_w=scalar(umax=65535,var_off=(0x0; 0xffff))
; *csum += *next_iph_u16++;
1489: (bf) r6 = r4                    ; R4=scalar(id=453,umax=4294967295,var_off=(0x0; 0xffffffff)) R6_w=scalar(id=453,umax=4294967295,var_off=(0x0; 0xffffffff))
1490: (57) r6 &= 65535                ; R6_w=scalar(umax=65535,var_off=(0x0; 0xffff))
; *csum += *next_iph_u16++;
1491: (0f) r2 += r6                   ; R2_w=scalar() R6_w=scalar(umax=65535,var_off=(0x0; 0xffff))
; iph->tos = tos;
1492: (73) *(u8 *)(r1 +15) = r0       ; R0=scalar(umax=255,var_off=(0x0; 0xff)) R1=pkt(off=0,r=34,imm=0)
1493: (05) goto pc+0
; iph->ttl = DEFAULT_TTL;
1494: (6a) *(u16 *)(r1 +22) = 1088    ; R1=pkt(off=0,r=34,imm=0)
; iph->id = 0;
1495: (62) *(u32 *)(r1 +18) = 0       ; R1=pkt(off=0,r=34,imm=0)
; iph->saddr = saddr;
1496: (63) *(u32 *)(r1 +26) = r3      ; R1=pkt(off=0,r=34,imm=0) R3=scalar(smin=-9223372036854771540,umin=4268,var_off=(0x10ac; 0xffffffffffffef53),s32_min=-2147479380)
; iph->tot_len = bpf_htons(pkt_bytes + sizeof(struct iphdr));
1497: (6b) *(u16 *)(r1 +16) = r8      ; R1=pkt(off=0,r=34,imm=0) R8_w=scalar(id=452)
; iph->daddr = daddr;
1498: (63) *(u32 *)(r1 +30) = r4      ; R1=pkt(off=0,r=34,imm=0) R4=scalar(id=453,umax=4294967295,var_off=(0x0; 0xffffffff))
; *csum += *next_iph_u16++;
1499: (77) r4 >>= 16                  ; R4_w=scalar(umax=65535,var_off=(0x0; 0xffff))
; *csum += *next_iph_u16++;
1500: (0f) r2 += r4                   ; R2_w=scalar() R4_w=scalar(umax=65535,var_off=(0x0; 0xffff))
; *csum += *next_iph_u16++;
1501: (69) r3 = *(u16 *)(r1 +14)      ; R1=pkt(off=0,r=34,imm=0) R3_w=scalar(umax=65535,var_off=(0x0; 0xffff))
; *csum += *next_iph_u16++;
1502: (0f) r2 += r3                   ; R2_w=scalar() R3_w=scalar(umax=65535,var_off=(0x0; 0xffff))
; *csum += *next_iph_u16++;
1503: (69) r3 = *(u16 *)(r1 +22)      ; R1=pkt(off=0,r=34,imm=0) R3_w=scalar(umax=65535,var_off=(0x0; 0xffff))
; *csum += *next_iph_u16++;
1504: (0f) r2 += r3                   ; R2_w=scalar() R3_w=scalar(umax=65535,var_off=(0x0; 0xffff))
1505: (07) r2 += 4268                 ; R2_w=scalar()
1506: (b7) r3 = 65536                 ; R3_w=65536
; if (csum >> 16)
1507: (2d) if r3 > r2 goto pc+4       ; R2_w=scalar(umin=65536) R3_w=65536
1508: (bf) r4 = r2                    ; R2_w=scalar(id=454,umin=65536) R4_w=scalar(id=454,umin=65536)
1509: (77) r4 >>= 16                  ; R4_w=scalar(umin=1,umax=281474976710655,var_off=(0x0; 0xffffffffffff))
1510: (57) r2 &= 65535                ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff))
1511: (0f) r2 += r4                   ; R2=scalar(umin=1,umax=281474976776190,var_off=(0x0; 0x1ffffffffffff)) R4=scalar(umin=1,umax=281474976710655,var_off=(0x0; 0xffffffffffff))
1512: (2d) if r3 > r2 goto pc+4       ; R2=scalar(umin=65536,umax=281474976776190,var_off=(0x0; 0x1ffffffffffff)) R3=65536
1513: (bf) r4 = r2                    ; R2=scalar(id=455,umin=65536,umax=281474976776190,var_off=(0x0; 0x1ffffffffffff)) R4_w=scalar(id=455,umin=65536,umax=281474976776190,var_off=(0x0; 0x1ffffffffffff))
1514: (77) r4 >>= 16                  ; R4_w=scalar(umin=1,umax=4294967296,var_off=(0x0; 0x1ffffffff))
1515: (57) r2 &= 65535                ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff))
1516: (0f) r2 += r4                   ; R2_w=scalar(umin=1,umax=4295032831,var_off=(0x0; 0x1ffffffff)) R4_w=scalar(umin=1,umax=4294967296,var_off=(0x0; 0x1ffffffff))
1517: (2d) if r3 > r2 goto pc+4       ; R2_w=scalar(umin=65536,umax=4295032831,var_off=(0x0; 0x1ffffffff)) R3=65536
1518: safe

from 1517 to 1522: safe

from 1512 to 1517: R0=scalar(umax=255,var_off=(0x0; 0xff)) R1=pkt(off=0,r=34,imm=0) R2=scalar(umin=1,umax=65535,var_off=(0x0; 0xffff)) R3=65536 R4=scalar(umin=1,umax=281474976710655,var_off=(0x0; 0xffffffffffff)) R5=scalar(umax=255,var_off=(0x0; 0xff)) R6=scalar(umax=65535,var_off=(0x0; 0xffff)) R7=scalar(umax=65535,var_off=(0x0; 0xffff)) R8=scalar(id=452) R9=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0 fp-8=mmmmmmmm fp-16=mmmmmmmm fp-24=mmmm???? fp-32=mmmm???? fp-40=mmmmmmmm fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136=mmmmmmmm fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=map_value fp-184= fp-192=00000000 fp-200= fp-208=mmmmmmmm
1517: (2d) if r3 > r2 goto pc+4       ; R2=scalar(umin=65536,umax=65535,var_off=(0x0; 0xffff)) R3=65536
1518: safe

from 1517 to 1522: safe

from 1507 to 1512: safe

from 1437 to 1858: safe

from 1434 to 1858: safe

from 1429 to 1858: safe

from 1348 to 1858: safe

from 1333 to 1858: safe

from 1327 to 1858: safe

from 1311 to 1857: safe

from 1303 to 1315: R0=map_value(off=0,ks=4,vs=20,imm=0) R1_w=0 R2=0 R3=scalar(umax=65535,var_off=(0x0; 0xffff)) R6=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=20,imm=0) R8=0 R9=scalar(umax=65280,var_off=(0x0; 0xff00)) R10=fp0 fp-8=mmmmmmmm fp-16=mmmmmmmm fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184= fp-192=00000000 fp-200= fp-208=mmmmmmmm
; *lru_miss_stat += 1;
1315: (7b) *(u64 *)(r10 -176) = r7    ; R7=map_value(off=0,ks=4,vs=20,imm=0) R10=fp0 fp-176_w=map_value
1316: (79) r2 = *(u64 *)(r10 -160)    ; R2_w=map_value(off=0,ks=4,vs=16,imm=0) R10=fp0
; data_stats->v2 += 1;
1317: (79) r1 = *(u64 *)(r2 +8)       ; R1_w=scalar() R2_w=map_value(off=0,ks=4,vs=16,imm=0)
1318: (07) r1 += 1                    ; R1_w=scalar()
1319: (7b) *(u64 *)(r2 +8) = r1       ; R1_w=scalar() R2_w=map_value(off=0,ks=4,vs=16,imm=0)
1320: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1321: (07) r2 += -112                 ; R2_w=fp-112
; cval = bpf_map_lookup_elem(&ctl_array, &mac_addr_pos);
1322: (18) r1 = 0xffffa03553eeca00    ; R1_w=map_ptr(off=0,ks=4,vs=8,imm=0)
1324: (85) call bpf_map_lookup_elem#1
1325: safe

from 1301 to 1315: R0=map_value(off=0,ks=4,vs=20,imm=0) R1=scalar(umax=65535,var_off=(0x0; 0xffff)) R2=scalar(umax=255,var_off=(0x0; 0xff)) R3=scalar(umax=65535,var_off=(0x0; 0xffff)) R6=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=20,imm=0) R8=0 R9=scalar(umax=65280,var_off=(0x0; 0xff00)) R10=fp0 fp-8=mmmmmmmm fp-16=mmmmmmmm fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184= fp-192=00000000 fp-200= fp-208=mmmmmmmm
; *lru_miss_stat += 1;
1315: (7b) *(u64 *)(r10 -176) = r7    ; R7=map_value(off=0,ks=4,vs=20,imm=0) R10=fp0 fp-176_w=map_value
1316: (79) r2 = *(u64 *)(r10 -160)    ; R2_w=map_value(off=0,ks=4,vs=16,imm=0) R10=fp0
; data_stats->v2 += 1;
1317: (79) r1 = *(u64 *)(r2 +8)       ; R1_w=scalar() R2_w=map_value(off=0,ks=4,vs=16,imm=0)
1318: (07) r1 += 1                    ; R1_w=scalar()
1319: (7b) *(u64 *)(r2 +8) = r1       ; R1_w=scalar() R2_w=map_value(off=0,ks=4,vs=16,imm=0)
1320: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1321: (07) r2 += -112                 ; R2_w=fp-112
; cval = bpf_map_lookup_elem(&ctl_array, &mac_addr_pos);
1322: (18) r1 = 0xffffa03553eeca00    ; R1_w=map_ptr(off=0,ks=4,vs=8,imm=0)
1324: (85) call bpf_map_lookup_elem#1
1325: safe

from 1293 to 1295: R0=map_value(off=0,ks=4,vs=20,imm=0) R1=1 R2=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=20,imm=0) R8=0 R9=scalar(umax=65280,var_off=(0x0; 0xff00)) R10=fp0 fp-8=mmmmmmmm fp-16=mmmmmmmm fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184= fp-192=00000000 fp-200= fp-208=mmmmmmmm
; bool vip_match = address_match && port_match && proto_match;
1295: (69) r3 = *(u16 *)(r10 -88)     ; R3_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
1296: (71) r2 = *(u8 *)(r10 -86)      ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; bool proto_match = lru_miss_stat_vip->proto = vip->proto;
1297: (73) *(u8 *)(r0 +18) = r2       ; R0=map_value(off=0,ks=4,vs=20,imm=0) R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; bool vip_match = address_match && port_match && proto_match;
1298: (57) r1 &= 1                    ; R1_w=1
1299: (55) if r1 != 0x0 goto pc+15
last_idx 1299 first_idx 1293
regs=2 stack=0 before 1298: (57) r1 &= 1
regs=2 stack=0 before 1297: (73) *(u8 *)(r0 +18) = r2
regs=2 stack=0 before 1296: (71) r2 = *(u8 *)(r10 -86)
regs=2 stack=0 before 1295: (69) r3 = *(u16 *)(r10 -88)
regs=2 stack=0 before 1293: (5d) if r2 != r3 goto pc+1
parent didn't have regs=2 stack=0 marks: R0_r=map_value(off=0,ks=4,vs=20,imm=0) R1_r=P1 R2_rw=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3_rw=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6_r=ctx(off=0,imm=0) R7_r=map_value(off=0,ks=4,vs=20,imm=0) R8=0 R9=scalar(umax=65280,var_off=(0x0; 0xff00)) R10=fp0 fp-8=mmmmmmmm fp-16=mmmmmmmm fp-24=mmmm???? fp-32_r=mmmm???? fp-40_r= fp-48_r=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144=map_value fp-152=map_ptr fp-160_r=map_value fp-168= fp-176=mmmmmmmm fp-184= fp-192=00000000 fp-200_r= fp-208=mmmmmmmm
last_idx 1292 first_idx 1284
regs=2 stack=0 before 1292: (61) r3 = *(u32 *)(r10 -92)
regs=2 stack=0 before 1291: (61) r2 = *(u32 *)(r0 +12)
regs=2 stack=0 before 1290: (5d) if r2 != r3 goto pc+4
regs=2 stack=0 before 1289: (61) r3 = *(u32 *)(r10 -96)
regs=2 stack=0 before 1288: (61) r2 = *(u32 *)(r0 +8)
regs=2 stack=0 before 1287: (5d) if r2 != r3 goto pc+7
regs=2 stack=0 before 1286: (61) r3 = *(u32 *)(r10 -100)
regs=2 stack=0 before 1285: (61) r2 = *(u32 *)(r0 +4)
regs=2 stack=0 before 1284: (5d) if r2 != r3 goto pc+10
parent didn't have regs=2 stack=0 marks: R0_rw=map_value(off=0,ks=4,vs=20,imm=0) R1_rw=P1 R2_rw=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3_rw=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6_r=ctx(off=0,imm=0) R7_r=map_value(off=0,ks=4,vs=20,imm=0) R8=0 R9=scalar(umax=65280,var_off=(0x0; 0xff00)) R10=fp0 fp-8=mmmmmmmm fp-16=mmmmmmmm fp-24=mmmm???? fp-32_r=mmmm???? fp-40_r= fp-48_r=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96_r=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144=map_value fp-152=map_ptr fp-160_r=map_value fp-168= fp-176=mmmmmmmm fp-184= fp-192=00000000 fp-200_r= fp-208=mmmmmmmm
last_idx 1283 first_idx 1273
regs=2 stack=0 before 1283: (61) r3 = *(u32 *)(r10 -104)
regs=2 stack=0 before 1282: (61) r2 = *(u32 *)(r0 +0)
regs=2 stack=0 before 1281: (b7) r1 = 1
1315: safe

from 1290 to 1295: R0=map_value(off=0,ks=4,vs=20,imm=0) R1=1 R2=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=20,imm=0) R8=0 R9=scalar(umax=65280,var_off=(0x0; 0xff00)) R10=fp0 fp-8=mmmmmmmm fp-16=mmmmmmmm fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184= fp-192=00000000 fp-200= fp-208=mmmmmmmm
; bool vip_match = address_match && port_match && proto_match;
1295: (69) r3 = *(u16 *)(r10 -88)     ; R3_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
1296: (71) r2 = *(u8 *)(r10 -86)      ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; bool proto_match = lru_miss_stat_vip->proto = vip->proto;
1297: (73) *(u8 *)(r0 +18) = r2       ; R0=map_value(off=0,ks=4,vs=20,imm=0) R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; bool vip_match = address_match && port_match && proto_match;
1298: (57) r1 &= 1                    ; R1_w=1
1299: (55) if r1 != 0x0 goto pc+15
last_idx 1299 first_idx 1295
regs=2 stack=0 before 1298: (57) r1 &= 1
regs=2 stack=0 before 1297: (73) *(u8 *)(r0 +18) = r2
regs=2 stack=0 before 1296: (71) r2 = *(u8 *)(r10 -86)
regs=2 stack=0 before 1295: (69) r3 = *(u16 *)(r10 -88)
parent didn't have regs=2 stack=0 marks: R0_r=map_value(off=0,ks=4,vs=20,imm=0) R1_r=P1 R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=20,imm=0) R8=0 R9=scalar(umax=65280,var_off=(0x0; 0xff00)) R10=fp0 fp-8=mmmmmmmm fp-16=mmmmmmmm fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184= fp-192=00000000 fp-200= fp-208=mmmmmmmm
last_idx 1290 first_idx 1284
regs=2 stack=0 before 1290: (5d) if r2 != r3 goto pc+4
regs=2 stack=0 before 1289: (61) r3 = *(u32 *)(r10 -96)
regs=2 stack=0 before 1288: (61) r2 = *(u32 *)(r0 +8)
regs=2 stack=0 before 1287: (5d) if r2 != r3 goto pc+7
regs=2 stack=0 before 1286: (61) r3 = *(u32 *)(r10 -100)
regs=2 stack=0 before 1285: (61) r2 = *(u32 *)(r0 +4)
regs=2 stack=0 before 1284: (5d) if r2 != r3 goto pc+10
parent already had regs=2 stack=0 marks: R0_rw=map_value(off=0,ks=4,vs=20,imm=0) R1_rw=P1 R2_rw=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3_rw=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6_r=ctx(off=0,imm=0) R7_r=map_value(off=0,ks=4,vs=20,imm=0) R8=0 R9=scalar(umax=65280,var_off=(0x0; 0xff00)) R10=fp0 fp-8=mmmmmmmm fp-16=mmmmmmmm fp-24=mmmm???? fp-32_r=mmmm???? fp-40_r= fp-48_r=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96_r=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144=map_value fp-152=map_ptr fp-160_r=map_value fp-168= fp-176=mmmmmmmm fp-184= fp-192=00000000 fp-200_r= fp-208=mmmmmmmm
1315: safe
frame 1: propagating r0
last_idx 1295 first_idx 1284
regs=2 stack=0 before 1287: (5d) if r2 != r3 goto pc+7
regs=2 stack=0 before 1286: (61) r3 = *(u32 *)(r10 -100)
regs=2 stack=0 before 1285: (61) r2 = *(u32 *)(r0 +4)
regs=2 stack=0 before 1284: (5d) if r2 != r3 goto pc+10
parent already had regs=2 stack=0 marks: R0_rw=map_value(off=0,ks=4,vs=20,imm=0) R1_rw=P1 R2_rw=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3_rw=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6_r=ctx(off=0,imm=0) R7_r=map_value(off=0,ks=4,vs=20,imm=0) R8=0 R9=scalar(umax=65280,var_off=(0x0; 0xff00)) R10=fp0 fp-8=mmmmmmmm fp-16=mmmmmmmm fp-24=mmmm???? fp-32_r=mmmm???? fp-40_r= fp-48_r=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96_r=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144=map_value fp-152=map_ptr fp-160_r=map_value fp-168= fp-176=mmmmmmmm fp-184= fp-192=00000000 fp-200_r= fp-208=mmmmmmmm

from 1287 to 1295: safe
frame 1: propagating r0
last_idx 1295 first_idx 1284
regs=2 stack=0 before 1284: (5d) if r2 != r3 goto pc+10
parent already had regs=2 stack=0 marks: R0_rw=map_value(off=0,ks=4,vs=20,imm=0) R1_rw=P1 R2_rw=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3_rw=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6_r=ctx(off=0,imm=0) R7_r=map_value(off=0,ks=4,vs=20,imm=0) R8=0 R9=scalar(umax=65280,var_off=(0x0; 0xff00)) R10=fp0 fp-8=mmmmmmmm fp-16=mmmmmmmm fp-24=mmmm???? fp-32_r=mmmm???? fp-40_r= fp-48_r=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96_r=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144=map_value fp-152=map_ptr fp-160_r=map_value fp-168= fp-176=mmmmmmmm fp-184= fp-192=00000000 fp-200_r= fp-208=mmmmmmmm

from 1284 to 1295: safe

from 1280 to 1857: safe

from 1261 to 1264: R0=map_value(off=0,ks=4,vs=20,imm=0) R1=scalar(umax=255,var_off=(0x0; 0xff)) R6=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=20,imm=0) R8=0 R9=scalar(umax=65280,var_off=(0x0; 0xff00)) R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184= fp-192=00000000 fp-200= fp-208=mmmmmmmm
; new_dst_lru.pos = key;
1264: (61) r1 = *(u32 *)(r10 -20)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; new_dst_lru.pos = key;
1265: (63) *(u32 *)(r10 -16) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-16=
1266: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; new_dst_lru.pos = key;
1267: (07) r2 += -80                  ; R2_w=fp-80
1268: (bf) r3 = r10                   ; R3_w=fp0 R10=fp0
1269: (07) r3 += -16                  ; R3_w=fp-16
; bpf_map_update_elem(lru_map, &pckt->flow, &new_dst_lru, BPF_ANY);
1270: (79) r1 = *(u64 *)(r10 -152)    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0
1271: (b7) r4 = 0                     ; R4_w=0
1272: (85) call bpf_map_update_elem#2
1273: safe

from 1259 to 1273: safe

from 1253 to 1273: safe

from 1230 to 1234: R0=0 R6=ctx(off=0,imm=0) R7=scalar() R8=P0 R9=scalar(umax=65280,var_off=(0x0; 0xff00)) R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184= fp-192=00000000 fp-200= fp-208=mmmmmmmm
; pckt->real_index = key;
1234: (61) r1 = *(u32 *)(r10 -20)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; pckt->real_index = key;
1235: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1236: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1237: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1238: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1240: (85) call bpf_map_lookup_elem#1
frame 8: propagating r0
1241: safe

from 1222 to 1235: R0=map_value(off=0,ks=4,vs=4,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6=ctx(off=0,imm=0) R7=scalar() R8_w=P0 R9=scalar(umax=65280,var_off=(0x0; 0xff00)) R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184= fp-192=00000000 fp-200= fp-208=mmmmmmmm
; pckt->real_index = key;
1235: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1236: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1237: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1238: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1240: (85) call bpf_map_lookup_elem#1
frame 8: propagating r0
1241: safe

from 1218 to 1857: safe

from 957 to 967: R0=scalar(id=418) R1=scalar(umax=8,var_off=(0x0; 0x8)) R2=scalar(umin=1000000001) R6=ctx(off=0,imm=0) R7=scalar(id=418) R8=P0 R9=map_value(off=0,ks=4,vs=16,imm=0) R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0 fp-192=00000000 fp-200= fp-208=mmmmmmmm
; pckt->flow.port16[0] = pckt->flow.port16[1];
967: (69) r1 = *(u16 *)(r10 -46)      ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; pckt->flow.port16[0] = pckt->flow.port16[1];
968: (6b) *(u16 *)(r10 -48) = r1      ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-48=
969: (05) goto pc+0
; memset(pckt->flow.srcv6, 0, 16);
970: (7a) *(u64 *)(r10 -80) = 0       ; R10=fp0 fp-80_w=mmmmmmmm
971: (b7) r1 = 0                      ; R1_w=0
972: (7b) *(u64 *)(r10 -184) = r1
last_idx 972 first_idx 967
regs=2 stack=0 before 971: (b7) r1 = 0
973: R1_w=P0 R10=fp0 fp-184_w=00000000
973: (7a) *(u64 *)(r10 -72) = 0       ; R10=fp0 fp-72_w=mmmmmmmm
974: (b7) r9 = 0                      ; R9_w=0
975: (b7) r0 = 0                      ; R0_w=0
976: (b7) r8 = 0                      ; R8_w=0
977: (b7) r3 = 0                      ; R3_w=0
978: (b7) r4 = 0                      ; R4_w=0
; __jhash_mix(a, b, c);
979: (1f) r3 -= r8                    ; R3_w=0 R8_w=0
; c += *(u32*)(k + 8);
980: (07) r8 += -559038209            ; R8_w=-559038209
981: (05) goto pc+0
982: (05) goto pc+0
983: (05) goto pc+0
984: (bc) w5 = w8                     ; R5_w=3735929087 R8=-559038209
; return (word << shift) | (word >> ((-shift) & 31));
985: (77) r5 >>= 28                   ; R5_w=13
986: (bf) r2 = r8                     ; R2_w=-559038209 R8=-559038209
987: (67) r2 <<= 4                    ; R2_w=-8944611344
988: (4f) r2 |= r5                    ; R2_w=-8944611331 R5_w=13
; __jhash_mix(a, b, c);
989: (af) r2 ^= r3                    ; R2_w=-8944611331 R3=0
990: (05) goto pc+0
991: (05) goto pc+0
992: (05) goto pc+0
993: (bc) w5 = w2                     ; R2=-8944611331 R5_w=3940290557
; return (word << shift) | (word >> ((-shift) & 31));
994: (77) r5 >>= 26                   ; R5_w=58
995: (bf) r7 = r2                     ; R2=-8944611331 R7_w=-8944611331
996: (67) r7 <<= 6                    ; R7_w=-572455125184
997: (4f) r7 |= r5                    ; R5_w=58 R7_w=-572455125126
; b += *(u32*)(k + 4);
998: (07) r1 += -559038209            ; R1_w=P-559038209
; __jhash_mix(a, b, c);
999: (bf) r3 = r1                     ; R1_w=P-559038209 R3_w=P-559038209
1000: (1f) r3 -= r2
last_idx 1000 first_idx 991
regs=4 stack=0 before 999: (bf) r3 = r1
regs=4 stack=0 before 998: (07) r1 += -559038209
regs=4 stack=0 before 997: (4f) r7 |= r5
regs=4 stack=0 before 996: (67) r7 <<= 6
regs=4 stack=0 before 995: (bf) r7 = r2
regs=4 stack=0 before 994: (77) r5 >>= 26
regs=4 stack=0 before 993: (bc) w5 = w2
regs=4 stack=0 before 992: (05) goto pc+0
regs=4 stack=0 before 991: (05) goto pc+0
parent didn't have regs=4 stack=0 marks: R0=0 R1_r=P0 R2_rw=P-8944611331 R3=0 R4=0 R5_w=13 R6=ctx(off=0,imm=0) R7=scalar(id=418) R8=-559038209 R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0 fp-184=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
last_idx 990 first_idx 982
regs=4 stack=0 before 990: (05) goto pc+0
regs=4 stack=0 before 989: (af) r2 ^= r3
regs=c stack=0 before 988: (4f) r2 |= r5
regs=2c stack=0 before 987: (67) r2 <<= 4
regs=2c stack=0 before 986: (bf) r2 = r8
regs=128 stack=0 before 985: (77) r5 >>= 28
regs=128 stack=0 before 984: (bc) w5 = w8
regs=108 stack=0 before 983: (05) goto pc+0
regs=108 stack=0 before 982: (05) goto pc+0
parent didn't have regs=108 stack=0 marks: R0_w=0 R1_rw=P0 R2=scalar(umin=1000000001) R3_rw=P0 R4_w=0 R6=ctx(off=0,imm=0) R7=scalar(id=418) R8_rw=P-559038209 R9_w=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72_w=mmmmmmmm fp-80_w=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0 fp-184_w=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
last_idx 981 first_idx 967
regs=108 stack=0 before 981: (05) goto pc+0
regs=108 stack=0 before 980: (07) r8 += -559038209
regs=108 stack=0 before 979: (1f) r3 -= r8
regs=108 stack=0 before 978: (b7) r4 = 0
regs=108 stack=0 before 977: (b7) r3 = 0
regs=100 stack=0 before 976: (b7) r8 = 0
1001: (af) r3 ^= r7
last_idx 1001 first_idx 991
regs=80 stack=0 before 1000: (1f) r3 -= r2
regs=80 stack=0 before 999: (bf) r3 = r1
regs=80 stack=0 before 998: (07) r1 += -559038209
regs=80 stack=0 before 997: (4f) r7 |= r5
regs=a0 stack=0 before 996: (67) r7 <<= 6
regs=a0 stack=0 before 995: (bf) r7 = r2
regs=24 stack=0 before 994: (77) r5 >>= 26
regs=24 stack=0 before 993: (bc) w5 = w2
regs=4 stack=0 before 992: (05) goto pc+0
regs=4 stack=0 before 991: (05) goto pc+0
parent already had regs=4 stack=0 marks: R0=0 R1_r=P0 R2_rw=P-8944611331 R3=0 R4=0 R5_w=13 R6=ctx(off=0,imm=0) R7=scalar(id=418) R8=-559038209 R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0 fp-184=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
; a += (u32)k[3] << 24;
1002: (67) r4 <<= 24                  ; R4_w=0
; a += (u32)k[2] << 16;
1003: (57) r0 &= 255                  ; R0_w=0
; a += (u32)k[2] << 16;
1004: (67) r0 <<= 16                  ; R0_w=0
; a += (u32)k[3] << 24;
1005: (4f) r0 |= r4                   ; R0_w=0 R4_w=0
; pckt->flow.ports,
1006: (61) r5 = *(u32 *)(r10 -48)     ; R5_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; b += initval;
1007: (07) r5 += -525483785           ; R5_w=scalar(smin=-525483785,smax=3769483510)
1008: (05) goto pc+0
1009: (7b) *(u64 *)(r10 -168) = r5    ; R5=scalar(smin=-525483785,smax=3769483510) R10=fp0 fp-168_w=
1010: (05) goto pc+0
1011: (05) goto pc+0
1012: (bc) w4 = w5                    ; R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R5=scalar(smin=-525483785,smax=3769483510)
; return (word << shift) | (word >> ((-shift) & 31));
1013: (77) r4 >>= 18                  ; R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1014: (bf) r7 = r5                    ; R5=scalar(id=463,smin=-525483785,smax=3769483510) R7_w=scalar(id=463,smin=-525483785,smax=3769483510)
1015: (67) r7 <<= 14                  ; R7_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1016: (4f) r7 |= r4                   ; R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff)) R7_w=scalar()
; __jhash_final(a, b, c);
1017: (a7) r5 ^= -525483785           ; R5_w=scalar()
1018: (1f) r5 -= r7                   ; R5_w=scalar() R7_w=scalar()
; __jhash_mix(a, b, c);
1019: (0f) r1 += r8
last_idx 1019 first_idx 1009
regs=100 stack=0 before 1018: (1f) r5 -= r7
regs=100 stack=0 before 1017: (a7) r5 ^= -525483785
regs=100 stack=0 before 1016: (4f) r7 |= r4
regs=100 stack=0 before 1015: (67) r7 <<= 14
regs=100 stack=0 before 1014: (bf) r7 = r5
regs=100 stack=0 before 1013: (77) r4 >>= 18
regs=100 stack=0 before 1012: (bc) w4 = w5
regs=100 stack=0 before 1011: (05) goto pc+0
regs=100 stack=0 before 1010: (05) goto pc+0
regs=100 stack=0 before 1009: (7b) *(u64 *)(r10 -168) = r5
parent didn't have regs=100 stack=0 marks: R0_w=0 R1_rw=P-559038209 R2=P-8944611331 R3_w=P-570076017032 R4_w=0 R5_rw=scalar(smin=-525483785,smax=3769483510) R6=ctx(off=0,imm=0) R7_w=P-572455125126 R8_r=P-559038209 R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0 fp-184=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
last_idx 1008 first_idx 991
regs=100 stack=0 before 1008: (05) goto pc+0
regs=100 stack=0 before 1007: (07) r5 += -525483785
regs=100 stack=0 before 1006: (61) r5 = *(u32 *)(r10 -48)
regs=100 stack=0 before 1005: (4f) r0 |= r4
regs=100 stack=0 before 1004: (67) r0 <<= 16
regs=100 stack=0 before 1003: (57) r0 &= 255
regs=100 stack=0 before 1002: (67) r4 <<= 24
regs=100 stack=0 before 1001: (af) r3 ^= r7
regs=100 stack=0 before 1000: (1f) r3 -= r2
regs=100 stack=0 before 999: (bf) r3 = r1
regs=100 stack=0 before 998: (07) r1 += -559038209
regs=100 stack=0 before 997: (4f) r7 |= r5
regs=100 stack=0 before 996: (67) r7 <<= 6
regs=100 stack=0 before 995: (bf) r7 = r2
regs=100 stack=0 before 994: (77) r5 >>= 26
regs=100 stack=0 before 993: (bc) w5 = w2
regs=100 stack=0 before 992: (05) goto pc+0
regs=100 stack=0 before 991: (05) goto pc+0
parent didn't have regs=100 stack=0 marks: R0_r=0 R1_r=P0 R2_rw=P-8944611331 R3=0 R4_r=0 R5_w=13 R6=ctx(off=0,imm=0) R7=scalar(id=418) R8_r=P-559038209 R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48_r= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0 fp-184=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
last_idx 990 first_idx 982
regs=100 stack=0 before 990: (05) goto pc+0
regs=100 stack=0 before 989: (af) r2 ^= r3
regs=100 stack=0 before 988: (4f) r2 |= r5
regs=100 stack=0 before 987: (67) r2 <<= 4
regs=100 stack=0 before 986: (bf) r2 = r8
regs=100 stack=0 before 985: (77) r5 >>= 28
regs=100 stack=0 before 984: (bc) w5 = w8
regs=100 stack=0 before 983: (05) goto pc+0
regs=100 stack=0 before 982: (05) goto pc+0
parent already had regs=100 stack=0 marks: R0_rw=0 R1_rw=P0 R2=scalar(umin=1000000001) R3_rw=P0 R4_rw=0 R6=ctx(off=0,imm=0) R7=scalar(id=418) R8_rw=P-559038209 R9_w=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48_r= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72_w=mmmmmmmm fp-80_w=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0 fp-184_w=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
; a += (u32)k[1] << 8;
1020: (57) r9 &= 255                  ; R9_w=0
; a += (u32)k[1] << 8;
1021: (67) r9 <<= 8                   ; R9_w=0
; a += (u32)k[2] << 16;
1022: (4f) r0 |= r9                   ; R0_w=0 R9_w=0
1023: (79) r4 = *(u64 *)(r10 -184)    ; R4_w=P0 R10=fp0
; a += k[0];
1024: (57) r4 &= 255                  ; R4_w=P0
; a += (u32)k[1] << 8;
1025: (4f) r0 |= r4                   ; R0_w=0 R4_w=P0
1026: (05) goto pc+0
1027: (05) goto pc+0
; __jhash_mix(a, b, c);
1028: (05) goto pc+0
1029: (bc) w7 = w3                    ; R3=P-570076017032 R7_w=P1154633336
; return (word << shift) | (word >> ((-shift) & 31));
1030: (77) r7 >>= 24                  ; R7_w=P68
1031: (bf) r4 = r3                    ; R3=P-570076017032 R4_w=P-570076017032
1032: (67) r4 <<= 8                   ; R4_w=P-145939460360192
1033: (4f) r4 |= r7                   ; R4_w=P-145939460360124 R7_w=P68
; __jhash_mix(a, b, c);
1034: (0f) r2 += r1                   ; R1=P-1118076418 R2_w=P-10062687749
1035: (1f) r1 -= r3                   ; R1_w=P568957940614 R3=P-570076017032
1036: (af) r1 ^= r4                   ; R1_w=P-145407547585598 R4_w=P-145939460360124
1037: (05) goto pc+0
1038: (05) goto pc+0
; __jhash_final(a, b, c);
1039: (7b) *(u64 *)(r10 -176) = r5    ; R5=scalar() R10=fp0 fp-176_w=mmmmmmmm
1040: (05) goto pc+0
1041: (bc) w4 = w5                    ; R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R5=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1042: (77) r4 >>= 21                  ; R4_w=scalar(umax=2047,var_off=(0x0; 0x7ff))
1043: (bf) r8 = r5                    ; R5=scalar(id=465) R8_w=scalar(id=465)
1044: (67) r8 <<= 11                  ; R8_w=scalar(smax=9223372036854773760,umax=18446744073709549568,var_off=(0x0; 0xfffffffffffff800),s32_max=2147481600,u32_max=-2048)
1045: (4f) r8 |= r4                   ; R4_w=scalar(umax=2047,var_off=(0x0; 0x7ff)) R8_w=scalar()
1046: (05) goto pc+0
1047: (05) goto pc+0
; __jhash_mix(a, b, c);
1048: (05) goto pc+0
1049: (bc) w4 = w1                    ; R1=P-145407547585598 R4_w=P2865187778
; return (word << shift) | (word >> ((-shift) & 31));
1050: (77) r4 >>= 16                  ; R4_w=P43719
1051: (bf) r7 = r1                    ; R1=P-145407547585598 R7_w=P-145407547585598
1052: (67) r7 <<= 16                  ; R7_w=P8917315035139801088
1053: (4f) r7 |= r4                   ; R4_w=P43719 R7_w=P8917315035139844807
; __jhash_mix(a, b, c);
1054: (0f) r3 += r2                   ; R2=P-10062687749 R3_w=P-580138704781
1055: (1f) r2 -= r1                   ; R1=P-145407547585598 R2_w=P145397484897849
1056: (af) r2 ^= r7                   ; R2_w=P8917178920830430462 R7_w=P8917315035139844807
1057: (05) goto pc+0
1058: (05) goto pc+0
1059: (05) goto pc+0
1060: (bc) w7 = w2                    ; R2=P8917178920830430462 R7_w=P3065179390
; return (word << shift) | (word >> ((-shift) & 31));
1061: (77) r7 >>= 13                  ; R7_w=P374167
1062: (bf) r4 = r2                    ; R2=P8917178920830430462 R4_w=P8917178920830430462
1063: (67) r4 <<= 19                  ; R4_w=P8637259322254950400
1064: (4f) r4 |= r7                   ; R4_w=P8637259322255324567 R7_w=P374167
; __jhash_mix(a, b, c);
1065: (0f) r1 += r3                   ; R1_w=P-145987686290379 R3=P-580138704781
1066: (1f) r3 -= r2                   ; R2=P8917178920830430462 R3_w=P-8917179500969135243
1067: (af) r3 ^= r4                   ; R3_w=P-873023320690047262 R4_w=P8637259322255324567
1068: (0f) r2 += r1                   ; R1_w=P-145987686290379 R2_w=P8917032933144140083
1069: (bf) r5 = r3                    ; R3_w=P-873023320690047262 R5_w=P-873023320690047262
1070: (0f) r5 += r2                   ; R2_w=P8917032933144140083 R5_w=P8044009612454092821
1071: (05) goto pc+0
1072: (05) goto pc+0
1073: (05) goto pc+0
1074: (bc) w4 = w5                    ; R4_w=P2686935061 R5=P8044009612454092821
; return (word << shift) | (word >> ((-shift) & 31));
1075: (77) r4 >>= 18                  ; R4_w=P10249
1076: (bf) r7 = r5                    ; R5=P8044009612454092821 R7_w=P8044009612454092821
1077: (67) r7 <<= 14                  ; R7_w=P-8932916206889517056
1078: (4f) r7 |= r4                   ; R4_w=P10249 R7_w=P-8932916206889506807
; __jhash_mix(a, b, c);
1079: (05) goto pc+0
1080: (05) goto pc+0
1081: (05) goto pc+0
1082: (bc) w4 = w3                    ; R3=P-873023320690047262 R4_w=P1369655010
; return (word << shift) | (word >> ((-shift) & 31));
1083: (77) r4 >>= 28                  ; R4_w=P5
; __jhash_mix(a, b, c);
1084: (1f) r1 -= r3                   ; R1_w=P872877333003756883 R3=P-873023320690047262
; return (word << shift) | (word >> ((-shift) & 31));
1085: (67) r3 <<= 4                   ; R3_w=P4478370942668795424
1086: (4f) r3 |= r4                   ; R3_w=P4478370942668795429 R4_w=P5
; __jhash_mix(a, b, c);
1087: (af) r1 ^= r3                   ; R1_w=P3619570195461933942 R3_w=P4478370942668795429
; a += k[0];
1088: (0f) r2 += r0
last_idx 1088 first_idx 1080
regs=1 stack=0 before 1087: (af) r1 ^= r3
regs=1 stack=0 before 1086: (4f) r3 |= r4
regs=1 stack=0 before 1085: (67) r3 <<= 4
regs=1 stack=0 before 1084: (1f) r1 -= r3
regs=1 stack=0 before 1083: (77) r4 >>= 28
regs=1 stack=0 before 1082: (bc) w4 = w3
regs=1 stack=0 before 1081: (05) goto pc+0
regs=1 stack=0 before 1080: (05) goto pc+0
parent didn't have regs=1 stack=0 marks: R0_r=P0 R1_r=P-145987686290379 R2_r=P8917032933144140083 R3_r=P-873023320690047262 R4_w=P10249 R5=P8044009612454092821 R6=ctx(off=0,imm=0) R7_w=P-8932916206889506807 R8=scalar() R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
last_idx 1079 first_idx 1072
regs=1 stack=0 before 1079: (05) goto pc+0
regs=1 stack=0 before 1078: (4f) r7 |= r4
regs=1 stack=0 before 1077: (67) r7 <<= 14
regs=1 stack=0 before 1076: (bf) r7 = r5
regs=1 stack=0 before 1075: (77) r4 >>= 18
regs=1 stack=0 before 1074: (bc) w4 = w5
regs=1 stack=0 before 1073: (05) goto pc+0
regs=1 stack=0 before 1072: (05) goto pc+0
parent didn't have regs=1 stack=0 marks: R0_r=P0 R1_rw=P-145987686290379 R2_rw=P8917032933144140083 R3_rw=P-873023320690047262 R4_w=P8637259322255324567 R5_rw=P8044009612454092821 R6=ctx(off=0,imm=0) R7_w=P374167 R8=scalar() R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
last_idx 1071 first_idx 1058
regs=1 stack=0 before 1071: (05) goto pc+0
regs=1 stack=0 before 1070: (0f) r5 += r2
regs=1 stack=0 before 1069: (bf) r5 = r3
regs=1 stack=0 before 1068: (0f) r2 += r1
regs=1 stack=0 before 1067: (af) r3 ^= r4
regs=1 stack=0 before 1066: (1f) r3 -= r2
regs=1 stack=0 before 1065: (0f) r1 += r3
regs=1 stack=0 before 1064: (4f) r4 |= r7
regs=1 stack=0 before 1063: (67) r4 <<= 19
regs=1 stack=0 before 1062: (bf) r4 = r2
regs=1 stack=0 before 1061: (77) r7 >>= 13
regs=1 stack=0 before 1060: (bc) w7 = w2
regs=1 stack=0 before 1059: (05) goto pc+0
regs=1 stack=0 before 1058: (05) goto pc+0
parent didn't have regs=1 stack=0 marks: R0_r=P0 R1_r=P-145407547585598 R2_rw=P8917178920830430462 R3_rw=P-580138704781 R4_w=P43719 R5=scalar(id=465) R6=ctx(off=0,imm=0) R7_w=P8917315035139844807 R8=scalar() R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
last_idx 1057 first_idx 1047
regs=1 stack=0 before 1057: (05) goto pc+0
regs=1 stack=0 before 1056: (af) r2 ^= r7
regs=1 stack=0 before 1055: (1f) r2 -= r1
regs=1 stack=0 before 1054: (0f) r3 += r2
regs=1 stack=0 before 1053: (4f) r7 |= r4
regs=1 stack=0 before 1052: (67) r7 <<= 16
regs=1 stack=0 before 1051: (bf) r7 = r1
regs=1 stack=0 before 1050: (77) r4 >>= 16
regs=1 stack=0 before 1049: (bc) w4 = w1
regs=1 stack=0 before 1048: (05) goto pc+0
regs=1 stack=0 before 1047: (05) goto pc+0
parent didn't have regs=1 stack=0 marks: R0_r=P0 R1_r=P-145407547585598 R2_r=P-10062687749 R3_r=P-570076017032 R4_w=scalar(umax=2047,var_off=(0x0; 0x7ff)) R5=scalar(id=465) R6=ctx(off=0,imm=0) R7=P68 R8_w=scalar() R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176_w=mmmmmmmm fp-184=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
last_idx 1046 first_idx 1038
regs=1 stack=0 before 1046: (05) goto pc+0
regs=1 stack=0 before 1045: (4f) r8 |= r4
regs=1 stack=0 before 1044: (67) r8 <<= 11
regs=1 stack=0 before 1043: (bf) r8 = r5
regs=1 stack=0 before 1042: (77) r4 >>= 21
regs=1 stack=0 before 1041: (bc) w4 = w5
regs=1 stack=0 before 1040: (05) goto pc+0
regs=1 stack=0 before 1039: (7b) *(u64 *)(r10 -176) = r5
regs=1 stack=0 before 1038: (05) goto pc+0
parent didn't have regs=1 stack=0 marks: R0_r=P0 R1_rw=P-145407547585598 R2_rw=P-10062687749 R3_r=P-570076017032 R4_w=P-145939460360124 R5_r=scalar() R6=ctx(off=0,imm=0) R7_w=P68 R8=P-559038209 R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0 fp-184=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
last_idx 1037 first_idx 1027
regs=1 stack=0 before 1037: (05) goto pc+0
regs=1 stack=0 before 1036: (af) r1 ^= r4
regs=1 stack=0 before 1035: (1f) r1 -= r3
regs=1 stack=0 before 1034: (0f) r2 += r1
regs=1 stack=0 before 1033: (4f) r4 |= r7
regs=1 stack=0 before 1032: (67) r4 <<= 8
regs=1 stack=0 before 1031: (bf) r4 = r3
regs=1 stack=0 before 1030: (77) r7 >>= 24
regs=1 stack=0 before 1029: (bc) w7 = w3
regs=1 stack=0 before 1028: (05) goto pc+0
regs=1 stack=0 before 1027: (05) goto pc+0
parent didn't have regs=1 stack=0 marks: R0_rw=P0 R1_rw=P-1118076418 R2_r=P-8944611331 R3_r=P-570076017032 R4_w=P0 R5_rw=scalar() R6=ctx(off=0,imm=0) R7_w=scalar() R8=P-559038209 R9_w=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168_w= fp-176=0 fp-184=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
last_idx 1026 first_idx 1009
regs=1 stack=0 before 1026: (05) goto pc+0
regs=1 stack=0 before 1025: (4f) r0 |= r4
regs=11 stack=0 before 1024: (57) r4 &= 255
regs=11 stack=0 before 1023: (79) r4 = *(u64 *)(r10 -184)
regs=1 stack=400000 before 1022: (4f) r0 |= r9
regs=201 stack=400000 before 1021: (67) r9 <<= 8
regs=201 stack=400000 before 1020: (57) r9 &= 255
regs=201 stack=400000 before 1019: (0f) r1 += r8
regs=201 stack=400000 before 1018: (1f) r5 -= r7
regs=201 stack=400000 before 1017: (a7) r5 ^= -525483785
regs=201 stack=400000 before 1016: (4f) r7 |= r4
regs=201 stack=400000 before 1015: (67) r7 <<= 14
regs=201 stack=400000 before 1014: (bf) r7 = r5
regs=201 stack=400000 before 1013: (77) r4 >>= 18
regs=201 stack=400000 before 1012: (bc) w4 = w5
regs=201 stack=400000 before 1011: (05) goto pc+0
regs=201 stack=400000 before 1010: (05) goto pc+0
regs=201 stack=400000 before 1009: (7b) *(u64 *)(r10 -168) = r5
parent didn't have regs=201 stack=0 marks: R0_rw=P0 R1_rw=P-559038209 R2_r=P-8944611331 R3_rw=P-570076017032 R4_w=0 R5_rw=scalar(smin=-525483785,smax=3769483510) R6=ctx(off=0,imm=0) R7_w=P-572455125126 R8_r=P-559038209 R9_r=P0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0 fp-184_r=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
last_idx 1008 first_idx 991
regs=201 stack=0 before 1008: (05) goto pc+0
regs=201 stack=0 before 1007: (07) r5 += -525483785
regs=201 stack=0 before 1006: (61) r5 = *(u32 *)(r10 -48)
regs=201 stack=0 before 1005: (4f) r0 |= r4
regs=211 stack=0 before 1004: (67) r0 <<= 16
regs=211 stack=0 before 1003: (57) r0 &= 255
regs=211 stack=0 before 1002: (67) r4 <<= 24
regs=211 stack=0 before 1001: (af) r3 ^= r7
regs=211 stack=0 before 1000: (1f) r3 -= r2
regs=211 stack=0 before 999: (bf) r3 = r1
regs=211 stack=0 before 998: (07) r1 += -559038209
regs=211 stack=0 before 997: (4f) r7 |= r5
regs=211 stack=0 before 996: (67) r7 <<= 6
regs=211 stack=0 before 995: (bf) r7 = r2
regs=211 stack=0 before 994: (77) r5 >>= 26
regs=211 stack=0 before 993: (bc) w5 = w2
regs=211 stack=0 before 992: (05) goto pc+0
regs=211 stack=0 before 991: (05) goto pc+0
parent didn't have regs=211 stack=0 marks: R0_r=P0 R1_r=P0 R2_rw=P-8944611331 R3=0 R4_r=P0 R5_w=13 R6=ctx(off=0,imm=0) R7=scalar(id=418) R8_r=P-559038209 R9_r=P0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48_r= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0 fp-184_r=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
last_idx 990 first_idx 982
regs=211 stack=0 before 990: (05) goto pc+0
regs=211 stack=0 before 989: (af) r2 ^= r3
regs=211 stack=0 before 988: (4f) r2 |= r5
regs=211 stack=0 before 987: (67) r2 <<= 4
regs=211 stack=0 before 986: (bf) r2 = r8
regs=211 stack=0 before 985: (77) r5 >>= 28
regs=211 stack=0 before 984: (bc) w5 = w8
regs=211 stack=0 before 983: (05) goto pc+0
regs=211 stack=0 before 982: (05) goto pc+0
parent didn't have regs=211 stack=0 marks: R0_rw=P0 R1_rw=P0 R2=scalar(umin=1000000001) R3_rw=P0 R4_rw=P0 R6=ctx(off=0,imm=0) R7=scalar(id=418) R8_rw=P-559038209 R9_rw=P0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48_r= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72_w=mmmmmmmm fp-80_w=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0 fp-184_rw=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
last_idx 981 first_idx 967
regs=211 stack=0 before 981: (05) goto pc+0
regs=211 stack=0 before 980: (07) r8 += -559038209
regs=211 stack=0 before 979: (1f) r3 -= r8
regs=211 stack=0 before 978: (b7) r4 = 0
regs=201 stack=0 before 977: (b7) r3 = 0
regs=201 stack=0 before 976: (b7) r8 = 0
regs=201 stack=0 before 975: (b7) r0 = 0
regs=200 stack=0 before 974: (b7) r9 = 0
; __jhash_final(a, b, c);
1089: (af) r1 ^= r5                   ; R1_w=P6744523029021125475 R5=P8044009612454092821
1090: (1f) r1 -= r7                   ; R1_w=P-2769304837798919334 R7=P-8932916206889506807
1091: (05) goto pc+0
1092: (05) goto pc+0
1093: (05) goto pc+0
1094: (bc) w3 = w1                    ; R1=P-2769304837798919334 R3_w=P607748954
; return (word << shift) | (word >> ((-shift) & 31));
1095: (77) r3 >>= 21                  ; R3_w=P289
1096: (bf) r4 = r1                    ; R1=P-2769304837798919334 R4_w=P-2769304837798919334
1097: (67) r4 <<= 11                  ; R4_w=P-8385877183354449920
1098: (4f) r4 |= r3                   ; R3_w=P289 R4_w=P-8385877183354449631
; __jhash_final(a, b, c);
1099: (bf) r3 = r1                    ; R1=P-2769304837798919334 R3_w=P-2769304837798919334
1100: (af) r3 ^= r2                   ; R2=P8917032933144140083 R3_w=P-6760226462814594455
1101: (1f) r3 -= r4                   ; R3_w=P1625650720539855176 R4_w=P-8385877183354449631
1102: (05) goto pc+0
1103: (05) goto pc+0
1104: (05) goto pc+0
1105: (bc) w2 = w3                    ; R2_w=P2661468488 R3=P1625650720539855176
; return (word << shift) | (word >> ((-shift) & 31));
1106: (77) r2 >>= 7                   ; R2_w=P20792722
1107: (bf) r4 = r3                    ; R3=P1625650720539855176 R4_w=P1625650720539855176
1108: (67) r4 <<= 25                  ; R4_w=P8015639407572811776
1109: (4f) r4 |= r2                   ; R2_w=P20792722 R4_w=P8015639407593604498
; __jhash_final(a, b, c);
1110: (bf) r7 = r3                    ; R3=P1625650720539855176 R7_w=P1625650720539855176
1111: (af) r7 ^= r5                   ; R5=P8044009612454092821 R7_w=P8731750324354001245
1112: (1f) r7 -= r4                   ; R4_w=P8015639407593604498 R7_w=P716110916760396747
1113: (05) goto pc+0
1114: (05) goto pc+0
1115: (05) goto pc+0
1116: (bc) w2 = w7                    ; R2_w=P2907202507 R7=P716110916760396747
; return (word << shift) | (word >> ((-shift) & 31));
1117: (77) r2 >>= 16                  ; R2_w=P44360
1118: (bf) r4 = r7                    ; R4_w=P716110916760396747 R7=P716110916760396747
1119: (67) r4 <<= 16                  ; R4_w=P2528117292261900288
1120: (4f) r4 |= r2                   ; R2_w=P44360 R4_w=P2528117292261944648
; __jhash_final(a, b, c);
1121: (bf) r2 = r7                    ; R2_w=P716110916760396747 R7=P716110916760396747
1122: (af) r2 ^= r1                   ; R1=P-2769304837798919334 R2_w=P-3431372408396586863
1123: (1f) r2 -= r4                   ; R2_w=P-5959489700658531511 R4_w=P2528117292261944648
1124: (05) goto pc+0
1125: (bc) w1 = w2                    ; R1_w=P631649097 R2=P-5959489700658531511
; return (word << shift) | (word >> ((-shift) & 31));
1126: (77) r1 >>= 28                  ; R1_w=P2
1127: (bf) r4 = r2                    ; R2=P-5959489700658531511 R4_w=P-5959489700658531511
1128: (67) r4 <<= 4                   ; R4_w=P-3118114841988746096
1129: (4f) r4 |= r1                   ; R1_w=P2 R4_w=P-3118114841988746094
; __jhash_final(a, b, c);
1130: (bf) r1 = r2                    ; R1_w=P-5959489700658531511 R2=P-5959489700658531511
1131: (af) r1 ^= r3                   ; R1_w=P-4916564071227786751 R3=P1625650720539855176
1132: (1f) r1 -= r4                   ; R1_w=P-1798449229239040657 R4_w=P-3118114841988746094
1133: (05) goto pc+0
1134: (05) goto pc+0
1135: (05) goto pc+0
1136: (bc) w3 = w1                    ; R1=P-1798449229239040657 R3_w=P1621214575
; return (word << shift) | (word >> ((-shift) & 31));
1137: (77) r3 >>= 18                  ; R3_w=P6184
1138: (bf) r4 = r1                    ; R1=P-1798449229239040657 R4_w=P-1798449229239040657
1139: (67) r4 <<= 14                  ; R4_w=P-6341886138288193536
1140: (4f) r4 |= r3                   ; R3_w=P6184 R4_w=P-6341886138288187352
; __jhash_final(a, b, c);
1141: (af) r1 ^= r7                   ; R1_w=P-1226460270496733532 R7=P716110916760396747
1142: (1f) r1 -= r4                   ; R1_w=P5115425867791453820 R4_w=P-6341886138288187352
1143: (05) goto pc+0
1144: (05) goto pc+0
1145: (05) goto pc+0
1146: (bc) w4 = w1                    ; R1=P5115425867791453820 R4_w=P1552797308
; return (word << shift) | (word >> ((-shift) & 31));
1147: (77) r4 >>= 8                   ; R4_w=P6065614
1148: (bf) r5 = r1                    ; R1=P5115425867791453820 R5_w=P5115425867791453820
1149: (67) r5 <<= 24                  ; R5_w=P-5090037560852348928
1150: (4f) r5 |= r4                   ; R4_w=P6065614 R5_w=P-5090037560846283314
; __jhash_final(a, b, c);
1151: (af) r1 ^= r2                   ; R1_w=P-1461973296061088459 R2=P-5959489700658531511
; a += initval;
1152: (1f) r1 -= r5                   ; R1_w=P3628064264785194855 R5_w=P-5090037560846283314
1153: (07) r1 += -525483785           ; R1_w=P3628064264259711070
1154: (79) r7 = *(u64 *)(r10 -176)    ; R7_w=scalar() R10=fp0
; __jhash_final(a, b, c);
1155: (af) r1 ^= r7
last_idx 1155 first_idx 1144
regs=80 stack=0 before 1154: (79) r7 = *(u64 *)(r10 -176)
regs=0 stack=200000 before 1153: (07) r1 += -525483785
regs=0 stack=200000 before 1152: (1f) r1 -= r5
regs=0 stack=200000 before 1151: (af) r1 ^= r2
regs=0 stack=200000 before 1150: (4f) r5 |= r4
regs=0 stack=200000 before 1149: (67) r5 <<= 24
regs=0 stack=200000 before 1148: (bf) r5 = r1
regs=0 stack=200000 before 1147: (77) r4 >>= 8
regs=0 stack=200000 before 1146: (bc) w4 = w1
regs=0 stack=200000 before 1145: (05) goto pc+0
regs=0 stack=200000 before 1144: (05) goto pc+0
parent already had regs=0 stack=0 marks: R0=P0 R1_rw=P5115425867791453820 R2_r=P-5959489700658531511 R3_w=P6184 R4_w=P-6341886138288187352 R5=P8044009612454092821 R6=ctx(off=0,imm=0) R7=P716110916760396747 R8=scalar() R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176_r=mmmmmmmm fp-184=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
1156: (1f) r1 -= r8                   ; R1_w=scalar() R8=scalar()
1157: (05) goto pc+0
1158: (bc) w2 = w1                    ; R1=scalar() R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1159: (77) r2 >>= 7                   ; R2_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff))
1160: (bf) r4 = r1                    ; R1=scalar(id=476) R4_w=scalar(id=476)
1161: (67) r4 <<= 25                  ; R4_w=scalar(smax=9223372036821221376,umax=18446744073675997184,var_off=(0x0; 0xfffffffffe000000),s32_max=2113929216,u32_max=-33554432)
1162: (4f) r4 |= r2                   ; R2_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff)) R4_w=scalar()
; __jhash_final(a, b, c);
1163: (bf) r0 = r1                    ; R0_w=scalar(id=476) R1=scalar(id=476)
1164: (79) r2 = *(u64 *)(r10 -168)    ; R2_w=scalar(smin=-525483785,smax=3769483510) R10=fp0
1165: (af) r0 ^= r2                   ; R0_w=scalar() R2_w=scalar(smin=-525483785,smax=3769483510)
1166: (1f) r0 -= r4                   ; R0_w=scalar() R4_w=scalar()
1167: (05) goto pc+0
1168: (05) goto pc+0
1169: (05) goto pc+0
1170: (bc) w2 = w0                    ; R0=scalar() R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1171: (77) r2 >>= 16                  ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff))
1172: (bf) r5 = r0                    ; R0=scalar(id=477) R5_w=scalar(id=477)
1173: (67) r5 <<= 16                  ; R5_w=scalar(smax=9223372036854710272,umax=18446744073709486080,var_off=(0x0; 0xffffffffffff0000),s32_max=2147418112,u32_max=-65536)
1174: (4f) r5 |= r2                   ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R5_w=scalar()
; __jhash_final(a, b, c);
1175: (bf) r4 = r0                    ; R0=scalar(id=477) R4_w=scalar(id=477)
1176: (af) r4 ^= r7                   ; R4_w=scalar() R7=Pscalar()
1177: (1f) r4 -= r5                   ; R4_w=scalar() R5_w=scalar()
1178: (05) goto pc+0
1179: (bc) w2 = w4                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R4=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1180: (77) r2 >>= 28                  ; R2_w=scalar(umax=15,var_off=(0x0; 0xf))
1181: (bf) r5 = r4                    ; R4=scalar(id=478) R5_w=scalar(id=478)
1182: (67) r5 <<= 4                   ; R5_w=scalar(smax=9223372036854775792,umax=18446744073709551600,var_off=(0x0; 0xfffffffffffffff0),s32_max=2147483632,u32_max=-16)
1183: (4f) r5 |= r2                   ; R2_w=scalar(umax=15,var_off=(0x0; 0xf)) R5_w=scalar()
; __jhash_final(a, b, c);
1184: (bf) r2 = r4                    ; R2_w=scalar(id=478) R4=scalar(id=478)
1185: (af) r2 ^= r1                   ; R1=scalar(id=476) R2_w=scalar()
1186: (1f) r2 -= r5                   ; R2_w=scalar() R5_w=scalar()
1187: (05) goto pc+0
1188: (05) goto pc+0
1189: (05) goto pc+0
1190: (bc) w1 = w2                    ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R2=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1191: (77) r1 >>= 18                  ; R1_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1192: (bf) r5 = r2                    ; R2=scalar(id=479) R5_w=scalar(id=479)
1193: (67) r5 <<= 14                  ; R5_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1194: (4f) r5 |= r1                   ; R1_w=scalar(umax=16383,var_off=(0x0; 0x3fff)) R5_w=scalar()
; __jhash_final(a, b, c);
1195: (af) r2 ^= r0                   ; R0=scalar(id=477) R2_w=scalar()
1196: (1f) r2 -= r5                   ; R2_w=scalar() R5_w=scalar()
1197: (05) goto pc+0
1198: (bc) w1 = w2                    ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R2=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1199: (77) r1 >>= 8                   ; R1_w=scalar(umax=16777215,var_off=(0x0; 0xffffff))
1200: (bf) r3 = r2                    ; R2=scalar(id=480) R3_w=scalar(id=480)
1201: (67) r3 <<= 24                  ; R3_w=scalar(smax=9223372036837998592,umax=18446744073692774400,var_off=(0x0; 0xffffffffff000000),s32_max=2130706432,u32_max=-16777216)
1202: (4f) r3 |= r1                   ; R1_w=scalar(umax=16777215,var_off=(0x0; 0xffffff)) R3_w=scalar()
; __jhash_final(a, b, c);
1203: (af) r2 ^= r4                   ; R2_w=scalar() R4=scalar(id=478)
1204: (1f) r2 -= r3                   ; R2_w=scalar() R3_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1205: (79) r1 = *(u64 *)(r10 -144)    ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
1206: (61) r1 = *(u32 *)(r1 +4)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; key = RING_SIZE * (vip_info->vip_num) + hash;
1207: (27) r1 *= 65537                ; R1_w=scalar(umax=281479271612415,var_off=(0x0; 0x1ffffffffffff))
; __jhash_final(a, b, c);
1208: (bc) w2 = w2                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
1209: (05) goto pc+0
; hash = get_packet_hash(pckt, hash_16bytes) % RING_SIZE;
1210: (97) r2 %= 65537                ; R2_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1211: (0f) r2 += r1                   ; R1_w=scalar(umax=281479271612415,var_off=(0x0; 0x1ffffffffffff)) R2_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1212: (63) *(u32 *)(r10 -20) = r2     ; R2_w=scalar() R10=fp0 fp-24=mmmm????
1213: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1214: (07) r2 += -20                  ; R2_w=fp-20
; real_pos = bpf_map_lookup_elem(&ch_rings, &key);
1215: (18) r1 = 0xffffaebaa0631000    ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
1217: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=481,off=0,ks=4,vs=4,imm=0)
; if (!real_pos) {
1218: (15) if r0 == 0x0 goto pc+638   ; R0=map_value(off=0,ks=4,vs=4,imm=0)
; key = *real_pos;
1219: (61) r1 = *(u32 *)(r0 +0)       ; R0=map_value(off=0,ks=4,vs=4,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; key = *real_pos;
1220: (63) *(u32 *)(r10 -20) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-24=mmmm????
1221: (79) r8 = *(u64 *)(r10 -192)    ; R8_w=P0 R10=fp0
; if (key == 0) {
1222: (55) if r1 != 0x0 goto pc+12    ; R1_w=0
1223: (05) goto pc+0
; __u32 ch_drop_stats_key = MAX_VIPS + CH_DROP_STATS;
1224: (62) *(u32 *)(r10 -28) = 521    ; R10=fp0 fp-32=mmmm????
1225: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1226: (07) r2 += -28                  ; R2_w=fp-28
; bpf_map_lookup_elem(&stats, &ch_drop_stats_key);
1227: (18) r1 = 0xffffa03499be8000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
1229: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=482,off=0,ks=4,vs=16,imm=0)
; if (!ch_drop_stats) {
1230: (15) if r0 == 0x0 goto pc+3     ; R0=map_value(off=0,ks=4,vs=16,imm=0)
; ch_drop_stats->v2 += 1;
1231: (79) r1 = *(u64 *)(r0 +8)       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1232: (07) r1 += 1                    ; R1_w=scalar()
1233: (7b) *(u64 *)(r0 +8) = r1       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
; pckt->real_index = key;
1234: (61) r1 = *(u32 *)(r10 -20)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; pckt->real_index = key;
1235: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1236: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1237: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1238: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1240: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=483,off=0,ks=4,vs=20,imm=0)
1241: (bf) r7 = r0                    ; R0=map_value_or_null(id=483,off=0,ks=4,vs=20,imm=0) R7_w=map_value_or_null(id=483,off=0,ks=4,vs=20,imm=0)
; if (!(*real)) {
1242: (55) if r7 != 0x0 goto pc+9     ; R7_w=0
1243: (05) goto pc+0
; __u32 ch_drop_stats_key = MAX_VIPS + CH_DROP_STATS;
1244: (62) *(u32 *)(r10 -28) = 521    ; R10=fp0 fp-32=mmmm????
1245: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1246: (07) r2 += -28                  ; R2_w=fp-28
; bpf_map_lookup_elem(&stats, &ch_drop_stats_key);
1247: (18) r1 = 0xffffa03499be8000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
1249: (85) call bpf_map_lookup_elem#1
1250: safe

from 1242 to 1252: R0=map_value(off=0,ks=4,vs=20,imm=0) R6=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=20,imm=0) R8=P0 R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
; if (lru_map && !(vip_info->flags & F_LRU_BYPASS) && !under_flood) {
1252: (79) r1 = *(u64 *)(r10 -152)    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0
1253: (15) if r1 == 0x0 goto pc+19    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0)
; if (lru_map && !(vip_info->flags & F_LRU_BYPASS) && !under_flood) {
1254: (79) r1 = *(u64 *)(r10 -144)    ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
1255: (61) r1 = *(u32 *)(r1 +0)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (lru_map && !(vip_info->flags & F_LRU_BYPASS) && !under_flood) {
1256: (57) r1 &= 2                    ; R1_w=scalar(umax=2,var_off=(0x0; 0x2))
1257: (77) r1 >>= 1                   ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
; if (lru_map && !(vip_info->flags & F_LRU_BYPASS) && !under_flood) {
1258: (4f) r8 |= r1
last_idx 1258 first_idx 1252
regs=2 stack=0 before 1257: (77) r1 >>= 1
regs=2 stack=0 before 1256: (57) r1 &= 2
regs=2 stack=0 before 1255: (61) r1 = *(u32 *)(r1 +0)
1259: R1_w=Pscalar(umax=1,var_off=(0x0; 0x1)) R8_w=scalar()
1259: (55) if r8 != 0x0 goto pc+13    ; R8_w=0
; if (pckt->flow.proto == IPPROTO_UDP) {
1260: (71) r1 = *(u8 *)(r10 -44)      ; R1=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (pckt->flow.proto == IPPROTO_UDP) {
1261: (55) if r1 != 0x11 goto pc+2    ; R1=17
; new_dst_lru.atime = cur_time;
1262: (79) r1 = *(u64 *)(r10 -208)    ; R1_w=scalar() R10=fp0
1263: (7b) *(u64 *)(r10 -8) = r1      ; R1_w=scalar() R10=fp0 fp-8_w=mmmmmmmm
; new_dst_lru.pos = key;
1264: (61) r1 = *(u32 *)(r10 -20)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; new_dst_lru.pos = key;
1265: (63) *(u32 *)(r10 -16) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-16=
1266: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; new_dst_lru.pos = key;
1267: (07) r2 += -80                  ; R2_w=fp-80
1268: (bf) r3 = r10                   ; R3_w=fp0 R10=fp0
1269: (07) r3 += -16                  ; R3_w=fp-16
; bpf_map_update_elem(lru_map, &pckt->flow, &new_dst_lru, BPF_ANY);
1270: (79) r1 = *(u64 *)(r10 -152)    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0
1271: (b7) r4 = 0                     ; R4_w=0
1272: (85) call bpf_map_update_elem#2
1273: safe

from 1261 to 1264: R0=map_value(off=0,ks=4,vs=20,imm=0) R1=scalar(umax=255,var_off=(0x0; 0xff)) R6=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=20,imm=0) R8=0 R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
; new_dst_lru.pos = key;
1264: (61) r1 = *(u32 *)(r10 -20)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; new_dst_lru.pos = key;
1265: (63) *(u32 *)(r10 -16) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-16=
1266: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; new_dst_lru.pos = key;
1267: (07) r2 += -80                  ; R2_w=fp-80
1268: (bf) r3 = r10                   ; R3_w=fp0 R10=fp0
1269: (07) r3 += -16                  ; R3_w=fp-16
; bpf_map_update_elem(lru_map, &pckt->flow, &new_dst_lru, BPF_ANY);
1270: (79) r1 = *(u64 *)(r10 -152)    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0
1271: (b7) r4 = 0                     ; R4_w=0
1272: (85) call bpf_map_update_elem#2
1273: safe

from 1259 to 1273: R0=map_value(off=0,ks=4,vs=20,imm=0) R1_w=Pscalar(umax=1,var_off=(0x0; 0x1)) R6=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=20,imm=0) R8_w=scalar() R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
1273: (05) goto pc+0
; __u32 vip_miss_stats_key = 0;
1274: (62) *(u32 *)(r10 -16) = 0      ; R10=fp0 fp-16=0000mmmm
1275: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1276: (07) r2 += -16                  ; R2_w=fp-16
; bpf_map_lookup_elem(&vip_miss_stats, &vip_miss_stats_key);
1277: (18) r1 = 0xffffa03587067400    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1279: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=485,off=0,ks=4,vs=20,imm=0)
; if (!lru_miss_stat_vip) {
1280: (15) if r0 == 0x0 goto pc+576   ; R0_w=map_value(off=0,ks=4,vs=20,imm=0)
1281: (b7) r1 = 1                     ; R1_w=1
; 
1282: (61) r2 = *(u32 *)(r0 +0)       ; R0_w=map_value(off=0,ks=4,vs=20,imm=0) R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
1283: (61) r3 = *(u32 *)(r10 -104)    ; R3=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; bool address_match = (is_ipv6 &&
1284: (5d) if r2 != r3 goto pc+10     ; R2=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; lru_miss_stat_vip->vipv6[1] == vip->vipv6[1] &&
1285: (61) r2 = *(u32 *)(r0 +4)       ; R0=map_value(off=0,ks=4,vs=20,imm=0) R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; lru_miss_stat_vip->vipv6[1] == vip->vipv6[1] &&
1286: (61) r3 = *(u32 *)(r10 -100)    ; R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; lru_miss_stat_vip->vipv6[1] == vip->vipv6[1] &&
1287: (5d) if r2 != r3 goto pc+7      ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; lru_miss_stat_vip->vipv6[2] == vip->vipv6[2] &&
1288: (61) r2 = *(u32 *)(r0 +8)       ; R0=map_value(off=0,ks=4,vs=20,imm=0) R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; lru_miss_stat_vip->vipv6[2] == vip->vipv6[2] &&
1289: (61) r3 = *(u32 *)(r10 -96)     ; R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; lru_miss_stat_vip->vipv6[2] == vip->vipv6[2] &&
1290: (5d) if r2 != r3 goto pc+4      ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; lru_miss_stat_vip->vipv6[3] == vip->vipv6[3])) ||
1291: (61) r2 = *(u32 *)(r0 +12)      ; R0=map_value(off=0,ks=4,vs=20,imm=0) R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; lru_miss_stat_vip->vipv6[3] == vip->vipv6[3])) ||
1292: (61) r3 = *(u32 *)(r10 -92)     ; R3=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; lru_miss_stat_vip->vipv6[3] == vip->vipv6[3])) ||
1293: (5d) if r2 != r3 goto pc+1      ; R2=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
1294: (b7) r1 = 0                     ; R1_w=0
; bool vip_match = address_match && port_match && proto_match;
1295: (69) r3 = *(u16 *)(r10 -88)     ; R3_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
1296: (71) r2 = *(u8 *)(r10 -86)      ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; bool proto_match = lru_miss_stat_vip->proto = vip->proto;
1297: (73) *(u8 *)(r0 +18) = r2       ; R0=map_value(off=0,ks=4,vs=20,imm=0) R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; bool vip_match = address_match && port_match && proto_match;
1298: (57) r1 &= 1                    ; R1_w=0
1299: (55) if r1 != 0x0 goto pc+15
last_idx 1299 first_idx 1293
regs=2 stack=0 before 1298: (57) r1 &= 1
regs=2 stack=0 before 1297: (73) *(u8 *)(r0 +18) = r2
regs=2 stack=0 before 1296: (71) r2 = *(u8 *)(r10 -86)
regs=2 stack=0 before 1295: (69) r3 = *(u16 *)(r10 -88)
regs=2 stack=0 before 1294: (b7) r1 = 0
1300: R1_w=P0
1300: (69) r1 = *(u16 *)(r0 +16)      ; R0=map_value(off=0,ks=4,vs=20,imm=0) R1=scalar(umax=65535,var_off=(0x0; 0xffff))
1301: (5d) if r1 != r3 goto pc+13     ; R1=scalar(umax=65535,var_off=(0x0; 0xffff)) R3=scalar(umax=65535,var_off=(0x0; 0xffff))
1302: (bf) r1 = r2                    ; R1_w=scalar(id=486,umax=255,var_off=(0x0; 0xff)) R2=scalar(id=486,umax=255,var_off=(0x0; 0xff))
1303: (15) if r1 == 0x0 goto pc+11    ; R1_w=scalar(id=486,umax=255,var_off=(0x0; 0xff))
; __u32 lru_stats_key = pckt->real_index;
1304: (61) r1 = *(u32 *)(r10 -40)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; __u32 lru_stats_key = pckt->real_index;
1305: (63) *(u32 *)(r10 -28) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmm????
1306: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; __u32 lru_stats_key = pckt->real_index;
1307: (07) r2 += -28                  ; R2_w=fp-28
; __u32* lru_miss_stat = bpf_map_lookup_elem(&lru_miss_stats, &lru_stats_key);
1308: (18) r1 = 0xffffaeba8afdd000    ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
1310: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=487,off=0,ks=4,vs=4,imm=0)
; if (!lru_miss_stat) {
1311: (15) if r0 == 0x0 goto pc+545   ; R0=map_value(off=0,ks=4,vs=4,imm=0)
; *lru_miss_stat += 1;
1312: (61) r1 = *(u32 *)(r0 +0)       ; R0=map_value(off=0,ks=4,vs=4,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
1313: (07) r1 += 1                    ; R1_w=scalar(umin=1,umax=4294967296,var_off=(0x0; 0x1ffffffff))
1314: (63) *(u32 *)(r0 +0) = r1       ; R0=map_value(off=0,ks=4,vs=4,imm=0) R1_w=scalar(umin=1,umax=4294967296,var_off=(0x0; 0x1ffffffff))
1315: (7b) *(u64 *)(r10 -176) = r7    ; R7=map_value(off=0,ks=4,vs=20,imm=0) R10=fp0 fp-176_w=map_value
1316: (79) r2 = *(u64 *)(r10 -160)    ; R2_w=map_value(off=0,ks=4,vs=16,imm=0) R10=fp0
; data_stats->v2 += 1;
1317: (79) r1 = *(u64 *)(r2 +8)       ; R1_w=scalar() R2_w=map_value(off=0,ks=4,vs=16,imm=0)
1318: (07) r1 += 1                    ; R1_w=scalar()
1319: (7b) *(u64 *)(r2 +8) = r1       ; R1_w=scalar() R2_w=map_value(off=0,ks=4,vs=16,imm=0)
1320: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1321: (07) r2 += -112                 ; R2_w=fp-112
; cval = bpf_map_lookup_elem(&ctl_array, &mac_addr_pos);
1322: (18) r1 = 0xffffa03553eeca00    ; R1_w=map_ptr(off=0,ks=4,vs=8,imm=0)
1324: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=488,off=0,ks=4,vs=8,imm=0)
1325: (bf) r8 = r0                    ; R0=map_value_or_null(id=488,off=0,ks=4,vs=8,imm=0) R8_w=map_value_or_null(id=488,off=0,ks=4,vs=8,imm=0)
1326: (b7) r9 = 1                     ; R9_w=1
; if (!cval) {
1327: (15) if r8 == 0x0 goto pc+530   ; R8_w=map_value(off=0,ks=4,vs=8,imm=0)
1328: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1329: (07) r2 += -108                 ; R2_w=fp-108
; data_stats = bpf_map_lookup_elem(&stats, &vip_num);
1330: (18) r1 = 0xffffa03499be8000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
1332: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=489,off=0,ks=4,vs=16,imm=0)
; if (!data_stats) {
1333: (15) if r0 == 0x0 goto pc+524   ; R0_w=map_value(off=0,ks=4,vs=16,imm=0)
1334: (79) r2 = *(u64 *)(r10 -136)    ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
1335: (dc) r2 = be16 r2               ; R2_w=scalar()
; data_stats->v1 += 1;
1336: (79) r1 = *(u64 *)(r0 +8)       ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1337: (7b) *(u64 *)(r10 -136) = r2    ; R2_w=scalar() R10=fp0 fp-136_w=mmmmmmmm
1338: (0f) r1 += r2                   ; R1_w=scalar() R2_w=scalar()
1339: (7b) *(u64 *)(r0 +8) = r1       ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1340: (79) r1 = *(u64 *)(r0 +0)       ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1341: (07) r1 += 1                    ; R1_w=scalar()
1342: (7b) *(u64 *)(r0 +0) = r1       ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
; data_stats = bpf_map_lookup_elem(&reals_stats, &pckt.real_index);
1343: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1344: (07) r2 += -40                  ; R2_w=fp-40
; data_stats = bpf_map_lookup_elem(&reals_stats, &pckt.real_index);
1345: (18) r1 = 0xffffaeba8ae7d000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
1347: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=490,off=0,ks=4,vs=16,imm=0)
; if (!data_stats) {
1348: (15) if r0 == 0x0 goto pc+509   ; R0=map_value(off=0,ks=4,vs=16,imm=0)
; data_stats->v1 += 1;
1349: (79) r1 = *(u64 *)(r0 +8)       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1350: (79) r2 = *(u64 *)(r10 -136)    ; R2_w=scalar() R10=fp0
1351: (0f) r1 += r2                   ; R1_w=scalar() R2_w=scalar()
1352: (7b) *(u64 *)(r0 +8) = r1       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1353: (79) r1 = *(u64 *)(r0 +0)       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1354: (0f) r1 += r9                   ; R1_w=scalar() R9=1
1355: (7b) *(u64 *)(r0 +0) = r1       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
; pckt.flow.port16[0] = original_sport;
1356: (79) r1 = *(u64 *)(r10 -200)    ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
1357: (6b) *(u16 *)(r10 -48) = r1     ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-48=
; if (dst->flags & F_IPV6) {
1358: (79) r1 = *(u64 *)(r10 -176)    ; R1_w=map_value(off=0,ks=4,vs=20,imm=0) R10=fp0
1359: (71) r1 = *(u8 *)(r1 +16)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff))
; if (dst->flags & F_IPV6) {
1360: (57) r1 &= 1                    ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
; if (dst->flags & F_IPV6) {
1361: (15) if r1 == 0x0 goto pc+60    ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
; if (XDP_ADJUST_HEAD_FUNC(xdp, 0 - (int)sizeof(struct ipv6hdr))) {
1362: (bf) r1 = r6                    ; R1_w=ctx(off=0,imm=0) R6=ctx(off=0,imm=0)
1363: (18) r2 = 0xffffffd8            ; R2_w=4294967256
1365: (85) call bpf_xdp_adjust_head#44
1366: safe

from 1361 to 1422: R0=map_value(off=0,ks=4,vs=16,imm=0) R1=0 R2=scalar() R6=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=20,imm=0) R8=map_value(off=0,ks=4,vs=8,imm=0) R9=1 R10=fp0 fp-8=00000000 fp-16=0000mmmm fp-24=mmmm???? fp-32=mmmm???? fp-40=mmmmmmmm fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136=mmmmmmmm fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=map_value fp-184=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
; __u32 ip_src = create_encap_ipv4_src(pckt->flow.port16[0], pckt->flow.src);
1422: (61) r7 = *(u32 *)(r10 -80)     ; R7_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; if (XDP_ADJUST_HEAD_FUNC(xdp, 0 - (int)sizeof(struct iphdr))) {
1423: (bf) r1 = r6                    ; R1_w=ctx(off=0,imm=0) R6=ctx(off=0,imm=0)
1424: (18) r2 = 0xffffffec            ; R2_w=4294967276
1426: (85) call bpf_xdp_adjust_head#44
1427: safe

from 1348 to 1858: safe

from 1333 to 1858: safe

from 1327 to 1858: safe

from 1311 to 1857: safe

from 1303 to 1315: R0=map_value(off=0,ks=4,vs=20,imm=0) R1_w=0 R2=0 R3=scalar(umax=65535,var_off=(0x0; 0xffff)) R6=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=20,imm=0) R8=scalar() R9=0 R10=fp0 fp-8=00000000 fp-16=0000mmmm fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
; *lru_miss_stat += 1;
1315: (7b) *(u64 *)(r10 -176) = r7    ; R7=map_value(off=0,ks=4,vs=20,imm=0) R10=fp0 fp-176_w=map_value
1316: (79) r2 = *(u64 *)(r10 -160)    ; R2_w=map_value(off=0,ks=4,vs=16,imm=0) R10=fp0
; data_stats->v2 += 1;
1317: (79) r1 = *(u64 *)(r2 +8)       ; R1_w=scalar() R2_w=map_value(off=0,ks=4,vs=16,imm=0)
1318: (07) r1 += 1                    ; R1_w=scalar()
1319: (7b) *(u64 *)(r2 +8) = r1       ; R1_w=scalar() R2_w=map_value(off=0,ks=4,vs=16,imm=0)
1320: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1321: (07) r2 += -112                 ; R2_w=fp-112
; cval = bpf_map_lookup_elem(&ctl_array, &mac_addr_pos);
1322: (18) r1 = 0xffffa03553eeca00    ; R1_w=map_ptr(off=0,ks=4,vs=8,imm=0)
1324: (85) call bpf_map_lookup_elem#1
1325: safe

from 1301 to 1315: R0=map_value(off=0,ks=4,vs=20,imm=0) R1=scalar(umax=65535,var_off=(0x0; 0xffff)) R2=scalar(umax=255,var_off=(0x0; 0xff)) R3=scalar(umax=65535,var_off=(0x0; 0xffff)) R6=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=20,imm=0) R8=scalar() R9=0 R10=fp0 fp-8=00000000 fp-16=0000mmmm fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
; *lru_miss_stat += 1;
1315: (7b) *(u64 *)(r10 -176) = r7    ; R7=map_value(off=0,ks=4,vs=20,imm=0) R10=fp0 fp-176_w=map_value
1316: (79) r2 = *(u64 *)(r10 -160)    ; R2_w=map_value(off=0,ks=4,vs=16,imm=0) R10=fp0
; data_stats->v2 += 1;
1317: (79) r1 = *(u64 *)(r2 +8)       ; R1_w=scalar() R2_w=map_value(off=0,ks=4,vs=16,imm=0)
1318: (07) r1 += 1                    ; R1_w=scalar()
1319: (7b) *(u64 *)(r2 +8) = r1       ; R1_w=scalar() R2_w=map_value(off=0,ks=4,vs=16,imm=0)
1320: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1321: (07) r2 += -112                 ; R2_w=fp-112
; cval = bpf_map_lookup_elem(&ctl_array, &mac_addr_pos);
1322: (18) r1 = 0xffffa03553eeca00    ; R1_w=map_ptr(off=0,ks=4,vs=8,imm=0)
1324: (85) call bpf_map_lookup_elem#1
1325: safe

from 1293 to 1295: R0=map_value(off=0,ks=4,vs=20,imm=0) R1=1 R2=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=20,imm=0) R8=scalar() R9=0 R10=fp0 fp-8=00000000 fp-16=0000mmmm fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
; bool vip_match = address_match && port_match && proto_match;
1295: (69) r3 = *(u16 *)(r10 -88)     ; R3_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
1296: (71) r2 = *(u8 *)(r10 -86)      ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; bool proto_match = lru_miss_stat_vip->proto = vip->proto;
1297: (73) *(u8 *)(r0 +18) = r2       ; R0=map_value(off=0,ks=4,vs=20,imm=0) R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; bool vip_match = address_match && port_match && proto_match;
1298: (57) r1 &= 1                    ; R1_w=1
1299: (55) if r1 != 0x0 goto pc+15
last_idx 1299 first_idx 1293
regs=2 stack=0 before 1298: (57) r1 &= 1
regs=2 stack=0 before 1297: (73) *(u8 *)(r0 +18) = r2
regs=2 stack=0 before 1296: (71) r2 = *(u8 *)(r10 -86)
regs=2 stack=0 before 1295: (69) r3 = *(u16 *)(r10 -88)
regs=2 stack=0 before 1293: (5d) if r2 != r3 goto pc+1
parent didn't have regs=2 stack=0 marks: R0_r=map_value(off=0,ks=4,vs=20,imm=0) R1_r=P1 R2_rw=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3_rw=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6_r=ctx(off=0,imm=0) R7_r=map_value(off=0,ks=4,vs=20,imm=0) R8=scalar() R9=0 R10=fp0 fp-8=00000000 fp-16=0000mmmm fp-24=mmmm???? fp-32_r=mmmm???? fp-40_r= fp-48_r= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144=map_value fp-152=map_ptr fp-160_r=map_value fp-168= fp-176=mmmmmmmm fp-184=00000000 fp-192=00000000 fp-200_r= fp-208=mmmmmmmm
last_idx 1292 first_idx 1284
regs=2 stack=0 before 1292: (61) r3 = *(u32 *)(r10 -92)
regs=2 stack=0 before 1291: (61) r2 = *(u32 *)(r0 +12)
regs=2 stack=0 before 1290: (5d) if r2 != r3 goto pc+4
regs=2 stack=0 before 1289: (61) r3 = *(u32 *)(r10 -96)
regs=2 stack=0 before 1288: (61) r2 = *(u32 *)(r0 +8)
regs=2 stack=0 before 1287: (5d) if r2 != r3 goto pc+7
regs=2 stack=0 before 1286: (61) r3 = *(u32 *)(r10 -100)
regs=2 stack=0 before 1285: (61) r2 = *(u32 *)(r0 +4)
regs=2 stack=0 before 1284: (5d) if r2 != r3 goto pc+10
parent didn't have regs=2 stack=0 marks: R0_rw=map_value(off=0,ks=4,vs=20,imm=0) R1_rw=P1 R2_rw=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3_rw=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6_r=ctx(off=0,imm=0) R7_r=map_value(off=0,ks=4,vs=20,imm=0) R8=scalar() R9=0 R10=fp0 fp-8=00000000 fp-16=0000mmmm fp-24=mmmm???? fp-32_r=mmmm???? fp-40_r= fp-48_r= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96_r=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144=map_value fp-152=map_ptr fp-160_r=map_value fp-168= fp-176=mmmmmmmm fp-184=00000000 fp-192=00000000 fp-200_r= fp-208=mmmmmmmm
last_idx 1283 first_idx 1274
regs=2 stack=0 before 1283: (61) r3 = *(u32 *)(r10 -104)
regs=2 stack=0 before 1282: (61) r2 = *(u32 *)(r0 +0)
regs=2 stack=0 before 1281: (b7) r1 = 1
1315: safe

from 1290 to 1295: R0=map_value(off=0,ks=4,vs=20,imm=0) R1=1 R2=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=20,imm=0) R8=scalar() R9=0 R10=fp0 fp-8=00000000 fp-16=0000mmmm fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
; bool vip_match = address_match && port_match && proto_match;
1295: (69) r3 = *(u16 *)(r10 -88)     ; R3_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
1296: (71) r2 = *(u8 *)(r10 -86)      ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; bool proto_match = lru_miss_stat_vip->proto = vip->proto;
1297: (73) *(u8 *)(r0 +18) = r2       ; R0=map_value(off=0,ks=4,vs=20,imm=0) R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; bool vip_match = address_match && port_match && proto_match;
1298: (57) r1 &= 1                    ; R1_w=1
1299: (55) if r1 != 0x0 goto pc+15
last_idx 1299 first_idx 1295
regs=2 stack=0 before 1298: (57) r1 &= 1
regs=2 stack=0 before 1297: (73) *(u8 *)(r0 +18) = r2
regs=2 stack=0 before 1296: (71) r2 = *(u8 *)(r10 -86)
regs=2 stack=0 before 1295: (69) r3 = *(u16 *)(r10 -88)
parent didn't have regs=2 stack=0 marks: R0_r=map_value(off=0,ks=4,vs=20,imm=0) R1_r=P1 R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=20,imm=0) R8=scalar() R9=0 R10=fp0 fp-8=00000000 fp-16=0000mmmm fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
last_idx 1290 first_idx 1284
regs=2 stack=0 before 1290: (5d) if r2 != r3 goto pc+4
regs=2 stack=0 before 1289: (61) r3 = *(u32 *)(r10 -96)
regs=2 stack=0 before 1288: (61) r2 = *(u32 *)(r0 +8)
regs=2 stack=0 before 1287: (5d) if r2 != r3 goto pc+7
regs=2 stack=0 before 1286: (61) r3 = *(u32 *)(r10 -100)
regs=2 stack=0 before 1285: (61) r2 = *(u32 *)(r0 +4)
regs=2 stack=0 before 1284: (5d) if r2 != r3 goto pc+10
parent already had regs=2 stack=0 marks: R0_rw=map_value(off=0,ks=4,vs=20,imm=0) R1_rw=P1 R2_rw=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3_rw=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6_r=ctx(off=0,imm=0) R7_r=map_value(off=0,ks=4,vs=20,imm=0) R8=scalar() R9=0 R10=fp0 fp-8=00000000 fp-16=0000mmmm fp-24=mmmm???? fp-32_r=mmmm???? fp-40_r= fp-48_r= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96_r=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144=map_value fp-152=map_ptr fp-160_r=map_value fp-168= fp-176=mmmmmmmm fp-184=00000000 fp-192=00000000 fp-200_r= fp-208=mmmmmmmm
1315: safe
frame 1: propagating r0
last_idx 1295 first_idx 1284
regs=2 stack=0 before 1287: (5d) if r2 != r3 goto pc+7
regs=2 stack=0 before 1286: (61) r3 = *(u32 *)(r10 -100)
regs=2 stack=0 before 1285: (61) r2 = *(u32 *)(r0 +4)
regs=2 stack=0 before 1284: (5d) if r2 != r3 goto pc+10
parent already had regs=2 stack=0 marks: R0_rw=map_value(off=0,ks=4,vs=20,imm=0) R1_rw=P1 R2_rw=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3_rw=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6_r=ctx(off=0,imm=0) R7_r=map_value(off=0,ks=4,vs=20,imm=0) R8=scalar() R9=0 R10=fp0 fp-8=00000000 fp-16=0000mmmm fp-24=mmmm???? fp-32_r=mmmm???? fp-40_r= fp-48_r= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96_r=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144=map_value fp-152=map_ptr fp-160_r=map_value fp-168= fp-176=mmmmmmmm fp-184=00000000 fp-192=00000000 fp-200_r= fp-208=mmmmmmmm

from 1287 to 1295: safe
frame 1: propagating r0
last_idx 1295 first_idx 1284
regs=2 stack=0 before 1284: (5d) if r2 != r3 goto pc+10
parent already had regs=2 stack=0 marks: R0_rw=map_value(off=0,ks=4,vs=20,imm=0) R1_rw=P1 R2_rw=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3_rw=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6_r=ctx(off=0,imm=0) R7_r=map_value(off=0,ks=4,vs=20,imm=0) R8=scalar() R9=0 R10=fp0 fp-8=00000000 fp-16=0000mmmm fp-24=mmmm???? fp-32_r=mmmm???? fp-40_r= fp-48_r= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96_r=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144=map_value fp-152=map_ptr fp-160_r=map_value fp-168= fp-176=mmmmmmmm fp-184=00000000 fp-192=00000000 fp-200_r= fp-208=mmmmmmmm

from 1284 to 1295: safe

from 1280 to 1857: safe

from 1253 to 1273: R0=map_value(off=0,ks=4,vs=20,imm=0) R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R6=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=20,imm=0) R8=P0 R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
; bpf_map_update_elem(lru_map, &pckt->flow, &new_dst_lru, BPF_ANY);
1273: (05) goto pc+0
1274: safe

from 1230 to 1234: R0=0 R6=ctx(off=0,imm=0) R7=Pscalar() R8=P0 R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
; pckt->real_index = key;
1234: (61) r1 = *(u32 *)(r10 -20)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; pckt->real_index = key;
1235: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1236: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1237: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1238: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1240: (85) call bpf_map_lookup_elem#1
frame 8: propagating r0
1241: safe

from 1222 to 1235: R0=map_value(off=0,ks=4,vs=4,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6=ctx(off=0,imm=0) R7=Pscalar() R8_w=P0 R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
; pckt->real_index = key;
1235: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1236: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1237: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1238: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1240: (85) call bpf_map_lookup_elem#1
frame 8: propagating r0
1241: safe

from 1218 to 1857: safe

from 942 to 947: R0=scalar(id=418) R1=1000000001 R2=scalar(umax=1000000000,var_off=(0x0; 0x3fffffff)) R6=ctx(off=0,imm=0) R7=scalar(id=418) R8=1 R9=map_value(off=0,ks=4,vs=16,imm=0) R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0 fp-200=
; conn_rate_stats->v1 += 1;
947: (79) r1 = *(u64 *)(r9 +0)        ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=16,imm=0)
948: (07) r1 += 1                     ; R1_w=scalar()
949: (7b) *(u64 *)(r9 +0) = r1        ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=16,imm=0)
; if (conn_rate_stats->v1 > MAX_CONN_RATE) {
950: (25) if r1 > 0x1e848 goto pc+1   ; R1_w=scalar(umax=125000,var_off=(0x0; 0x1ffff))
951: (b7) r8 = 0                      ; R8_w=0
952: (7b) *(u64 *)(r10 -192) = r8
last_idx 952 first_idx 947
regs=100 stack=0 before 951: (b7) r8 = 0
953: R8_w=P0 R10=fp0 fp-192_w=00000000
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
953: (79) r1 = *(u64 *)(r10 -144)     ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
954: (61) r1 = *(u32 *)(r1 +0)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
955: (57) r1 &= 8                     ; R1_w=scalar(umax=8,var_off=(0x0; 0x8))
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
956: (7b) *(u64 *)(r10 -208) = r7
957: safe

from 950 to 952: R0=scalar(id=418) R1_w=scalar(umin=125001) R2=scalar(umax=1000000000,var_off=(0x0; 0x3fffffff)) R6=ctx(off=0,imm=0) R7=scalar(id=418) R8=1 R9=map_value(off=0,ks=4,vs=16,imm=0) R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0 fp-200=
; if (conn_rate_stats->v1 > MAX_CONN_RATE) {
952: (7b) *(u64 *)(r10 -192) = r8     ; R8=1 R10=fp0 fp-192_w=1
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
953: (79) r1 = *(u64 *)(r10 -144)     ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
954: (61) r1 = *(u32 *)(r1 +0)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
955: (57) r1 &= 8                     ; R1_w=scalar(umax=8,var_off=(0x0; 0x8))
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
956: (7b) *(u64 *)(r10 -208) = r7     ; R7=scalar(id=418) R10=fp0 fp-208_w=mmmmmmmm
957: (55) if r1 != 0x0 goto pc+9      ; R1_w=0
; a += k[0];
958: (71) r1 = *(u8 *)(r10 -68)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; a += (u32)k[1] << 8;
959: (7b) *(u64 *)(r10 -184) = r1     ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0 fp-184_w=
960: (71) r9 = *(u8 *)(r10 -67)       ; R9_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; a += (u32)k[2] << 16;
961: (71) r0 = *(u8 *)(r10 -66)       ; R0_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; b += *(u32*)(k + 4);
962: (61) r1 = *(u32 *)(r10 -76)      ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; c += *(u32*)(k + 8);
963: (61) r8 = *(u32 *)(r10 -72)      ; R8_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; a += *(u32*)(k);
964: (61) r3 = *(u32 *)(r10 -80)      ; R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; a += (u32)k[3] << 24;
965: (71) r4 = *(u8 *)(r10 -65)       ; R4_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
966: (05) goto pc+12
; __jhash_mix(a, b, c);
979: (1f) r3 -= r8                    ; R3_w=scalar(smin=-4294967295,smax=4294967295) R8=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; c += *(u32*)(k + 8);
980: (07) r8 += -559038209            ; R8_w=scalar(smin=-559038209,smax=3735929086)
981: (05) goto pc+0
982: (05) goto pc+0
983: (05) goto pc+0
984: (bc) w5 = w8                     ; R5_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R8_w=scalar(smin=-559038209,smax=3735929086)
; return (word << shift) | (word >> ((-shift) & 31));
985: (77) r5 >>= 28                   ; R5_w=scalar(umax=15,var_off=(0x0; 0xf))
986: (bf) r2 = r8                     ; R2_w=scalar(id=495,smin=-559038209,smax=3735929086) R8_w=scalar(id=495,smin=-559038209,smax=3735929086)
987: (67) r2 <<= 4                    ; R2_w=scalar(smax=9223372036854775792,umax=18446744073709551600,var_off=(0x0; 0xfffffffffffffff0),s32_max=2147483632,u32_max=-16)
988: (4f) r2 |= r5                    ; R2_w=scalar() R5_w=scalar(umax=15,var_off=(0x0; 0xf))
; __jhash_mix(a, b, c);
989: (af) r2 ^= r3                    ; R2_w=scalar() R3_w=scalar(smin=-4294967295,smax=4294967295)
990: (05) goto pc+0
991: (05) goto pc+0
992: (05) goto pc+0
993: (bc) w5 = w2                     ; R2=scalar() R5_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
994: (77) r5 >>= 26                   ; R5_w=scalar(umax=63,var_off=(0x0; 0x3f))
995: (bf) r7 = r2                     ; R2=scalar(id=496) R7_w=scalar(id=496)
996: (67) r7 <<= 6                    ; R7_w=scalar(smax=9223372036854775744,umax=18446744073709551552,var_off=(0x0; 0xffffffffffffffc0),s32_max=2147483584,u32_max=-64)
997: (4f) r7 |= r5                    ; R5_w=scalar(umax=63,var_off=(0x0; 0x3f)) R7_w=scalar()
; b += *(u32*)(k + 4);
998: (07) r1 += -559038209            ; R1_w=scalar(smin=-559038209,smax=3735929086)
; __jhash_mix(a, b, c);
999: (bf) r3 = r1                     ; R1_w=scalar(id=497,smin=-559038209,smax=3735929086) R3_w=scalar(id=497,smin=-559038209,smax=3735929086)
1000: (1f) r3 -= r2                   ; R2=scalar(id=496) R3_w=scalar()
1001: (af) r3 ^= r7                   ; R3_w=scalar() R7_w=scalar()
; a += (u32)k[3] << 24;
1002: (67) r4 <<= 24                  ; R4_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; a += (u32)k[2] << 16;
1003: (57) r0 &= 255                  ; R0_w=scalar(umax=255,var_off=(0x0; 0xff))
; a += (u32)k[2] << 16;
1004: (67) r0 <<= 16                  ; R0_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; a += (u32)k[3] << 24;
1005: (4f) r0 |= r4                   ; R0_w=scalar() R4_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; pckt->flow.ports,
1006: (61) r5 = *(u32 *)(r10 -48)     ; R5_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; b += initval;
1007: (07) r5 += -525483785           ; R5_w=scalar(smin=-525483785,smax=3769483510)
1008: (05) goto pc+0
1009: (7b) *(u64 *)(r10 -168) = r5    ; R5=scalar(smin=-525483785,smax=3769483510) R10=fp0 fp-168_w=
1010: (05) goto pc+0
1011: (05) goto pc+0
1012: (bc) w4 = w5                    ; R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R5=scalar(smin=-525483785,smax=3769483510)
; return (word << shift) | (word >> ((-shift) & 31));
1013: (77) r4 >>= 18                  ; R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1014: (bf) r7 = r5                    ; R5=scalar(id=498,smin=-525483785,smax=3769483510) R7_w=scalar(id=498,smin=-525483785,smax=3769483510)
1015: (67) r7 <<= 14                  ; R7_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1016: (4f) r7 |= r4                   ; R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff)) R7_w=scalar()
; __jhash_final(a, b, c);
1017: (a7) r5 ^= -525483785           ; R5_w=scalar()
1018: (1f) r5 -= r7                   ; R5_w=scalar() R7_w=scalar()
; __jhash_mix(a, b, c);
1019: (0f) r1 += r8                   ; R1_w=scalar(smin=-1118076418,smax=7471858172) R8=scalar(id=495,smin=-559038209,smax=3735929086)
; a += (u32)k[1] << 8;
1020: (57) r9 &= 255                  ; R9_w=scalar(umax=255,var_off=(0x0; 0xff))
; a += (u32)k[1] << 8;
1021: (67) r9 <<= 8                   ; R9_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; a += (u32)k[2] << 16;
1022: (4f) r0 |= r9                   ; R0_w=scalar() R9_w=scalar(umax=65280,var_off=(0x0; 0xff00))
1023: (79) r4 = *(u64 *)(r10 -184)    ; R4_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; a += k[0];
1024: (57) r4 &= 255                  ; R4_w=scalar(umax=255,var_off=(0x0; 0xff))
; a += (u32)k[1] << 8;
1025: (4f) r0 |= r4                   ; R0_w=scalar() R4_w=scalar(umax=255,var_off=(0x0; 0xff))
1026: (05) goto pc+0
1027: (05) goto pc+0
; __jhash_mix(a, b, c);
1028: (05) goto pc+0
1029: (bc) w7 = w3                    ; R3=scalar() R7_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1030: (77) r7 >>= 24                  ; R7_w=scalar(umax=255,var_off=(0x0; 0xff))
1031: (bf) r4 = r3                    ; R3=scalar(id=499) R4_w=scalar(id=499)
1032: (67) r4 <<= 8                   ; R4_w=scalar(smax=9223372036854775552,umax=18446744073709551360,var_off=(0x0; 0xffffffffffffff00),s32_max=2147483392,u32_max=-256)
1033: (4f) r4 |= r7                   ; R4_w=scalar() R7_w=scalar(umax=255,var_off=(0x0; 0xff))
; __jhash_mix(a, b, c);
1034: (0f) r2 += r1                   ; R1=scalar(smin=-1118076418,smax=7471858172) R2_w=scalar()
1035: (1f) r1 -= r3                   ; R1_w=scalar() R3=scalar(id=499)
1036: (af) r1 ^= r4                   ; R1_w=scalar() R4_w=scalar()
1037: (05) goto pc+0
1038: (05) goto pc+0
; __jhash_final(a, b, c);
1039: (7b) *(u64 *)(r10 -176) = r5    ; R5=scalar() R10=fp0 fp-176_w=mmmmmmmm
1040: (05) goto pc+0
1041: (bc) w4 = w5                    ; R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R5=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1042: (77) r4 >>= 21                  ; R4_w=scalar(umax=2047,var_off=(0x0; 0x7ff))
1043: (bf) r8 = r5                    ; R5=scalar(id=500) R8_w=scalar(id=500)
1044: (67) r8 <<= 11                  ; R8_w=scalar(smax=9223372036854773760,umax=18446744073709549568,var_off=(0x0; 0xfffffffffffff800),s32_max=2147481600,u32_max=-2048)
1045: (4f) r8 |= r4                   ; R4_w=scalar(umax=2047,var_off=(0x0; 0x7ff)) R8_w=scalar()
1046: (05) goto pc+0
1047: (05) goto pc+0
; __jhash_mix(a, b, c);
1048: (05) goto pc+0
1049: (bc) w4 = w1                    ; R1=scalar() R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1050: (77) r4 >>= 16                  ; R4_w=scalar(umax=65535,var_off=(0x0; 0xffff))
1051: (bf) r7 = r1                    ; R1=scalar(id=501) R7_w=scalar(id=501)
1052: (67) r7 <<= 16                  ; R7_w=scalar(smax=9223372036854710272,umax=18446744073709486080,var_off=(0x0; 0xffffffffffff0000),s32_max=2147418112,u32_max=-65536)
1053: (4f) r7 |= r4                   ; R4_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R7_w=scalar()
; __jhash_mix(a, b, c);
1054: (0f) r3 += r2                   ; R2=scalar() R3_w=scalar()
1055: (1f) r2 -= r1                   ; R1=scalar(id=501) R2_w=scalar()
1056: (af) r2 ^= r7                   ; R2_w=scalar() R7_w=scalar()
1057: (05) goto pc+0
1058: (05) goto pc+0
1059: (05) goto pc+0
1060: (bc) w7 = w2                    ; R2=scalar() R7_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1061: (77) r7 >>= 13                  ; R7_w=scalar(umax=524287,var_off=(0x0; 0x7ffff))
1062: (bf) r4 = r2                    ; R2=scalar(id=502) R4_w=scalar(id=502)
1063: (67) r4 <<= 19                  ; R4_w=scalar(smax=9223372036854251520,umax=18446744073709027328,var_off=(0x0; 0xfffffffffff80000),s32_max=2146959360,u32_max=-524288)
1064: (4f) r4 |= r7                   ; R4_w=scalar() R7_w=scalar(umax=524287,var_off=(0x0; 0x7ffff))
; __jhash_mix(a, b, c);
1065: (0f) r1 += r3                   ; R1_w=scalar() R3=scalar()
1066: (1f) r3 -= r2                   ; R2=scalar(id=502) R3_w=scalar()
1067: (af) r3 ^= r4                   ; R3_w=scalar() R4_w=scalar()
1068: (0f) r2 += r1                   ; R1_w=scalar() R2_w=scalar()
1069: (bf) r5 = r3                    ; R3_w=scalar(id=503) R5_w=scalar(id=503)
1070: (0f) r5 += r2                   ; R2_w=scalar() R5_w=scalar()
1071: (05) goto pc+0
1072: (05) goto pc+0
1073: (05) goto pc+0
1074: (bc) w4 = w5                    ; R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R5=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1075: (77) r4 >>= 18                  ; R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1076: (bf) r7 = r5                    ; R5=scalar(id=504) R7_w=scalar(id=504)
1077: (67) r7 <<= 14                  ; R7_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1078: (4f) r7 |= r4                   ; R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff)) R7_w=scalar()
; __jhash_mix(a, b, c);
1079: (05) goto pc+0
1080: (05) goto pc+0
1081: (05) goto pc+0
1082: (bc) w4 = w3                    ; R3=scalar(id=503) R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1083: (77) r4 >>= 28                  ; R4_w=scalar(umax=15,var_off=(0x0; 0xf))
; __jhash_mix(a, b, c);
1084: (1f) r1 -= r3                   ; R1_w=scalar() R3=scalar(id=503)
; return (word << shift) | (word >> ((-shift) & 31));
1085: (67) r3 <<= 4                   ; R3_w=scalar(smax=9223372036854775792,umax=18446744073709551600,var_off=(0x0; 0xfffffffffffffff0),s32_max=2147483632,u32_max=-16)
1086: (4f) r3 |= r4                   ; R3_w=scalar() R4_w=scalar(umax=15,var_off=(0x0; 0xf))
; __jhash_mix(a, b, c);
1087: (af) r1 ^= r3                   ; R1_w=scalar() R3_w=scalar()
; a += k[0];
1088: (0f) r2 += r0                   ; R0=scalar() R2_w=scalar()
; __jhash_final(a, b, c);
1089: (af) r1 ^= r5                   ; R1_w=scalar() R5=scalar(id=504)
1090: (1f) r1 -= r7                   ; R1_w=scalar() R7=scalar()
1091: (05) goto pc+0
1092: (05) goto pc+0
1093: (05) goto pc+0
1094: (bc) w3 = w1                    ; R1=scalar() R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1095: (77) r3 >>= 21                  ; R3_w=scalar(umax=2047,var_off=(0x0; 0x7ff))
1096: (bf) r4 = r1                    ; R1=scalar(id=505) R4_w=scalar(id=505)
1097: (67) r4 <<= 11                  ; R4_w=scalar(smax=9223372036854773760,umax=18446744073709549568,var_off=(0x0; 0xfffffffffffff800),s32_max=2147481600,u32_max=-2048)
1098: (4f) r4 |= r3                   ; R3_w=scalar(umax=2047,var_off=(0x0; 0x7ff)) R4_w=scalar()
; __jhash_final(a, b, c);
1099: (bf) r3 = r1                    ; R1=scalar(id=505) R3_w=scalar(id=505)
1100: (af) r3 ^= r2                   ; R2=scalar() R3_w=scalar()
1101: (1f) r3 -= r4                   ; R3_w=scalar() R4_w=scalar()
1102: (05) goto pc+0
1103: (05) goto pc+0
1104: (05) goto pc+0
1105: (bc) w2 = w3                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1106: (77) r2 >>= 7                   ; R2_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff))
1107: (bf) r4 = r3                    ; R3=scalar(id=506) R4_w=scalar(id=506)
1108: (67) r4 <<= 25                  ; R4_w=scalar(smax=9223372036821221376,umax=18446744073675997184,var_off=(0x0; 0xfffffffffe000000),s32_max=2113929216,u32_max=-33554432)
1109: (4f) r4 |= r2                   ; R2_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff)) R4_w=scalar()
; __jhash_final(a, b, c);
1110: (bf) r7 = r3                    ; R3=scalar(id=506) R7_w=scalar(id=506)
1111: (af) r7 ^= r5                   ; R5=scalar(id=504) R7_w=scalar()
1112: (1f) r7 -= r4                   ; R4_w=scalar() R7_w=scalar()
1113: (05) goto pc+0
1114: (05) goto pc+0
1115: (05) goto pc+0
1116: (bc) w2 = w7                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R7=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1117: (77) r2 >>= 16                  ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff))
1118: (bf) r4 = r7                    ; R4_w=scalar(id=507) R7=scalar(id=507)
1119: (67) r4 <<= 16                  ; R4_w=scalar(smax=9223372036854710272,umax=18446744073709486080,var_off=(0x0; 0xffffffffffff0000),s32_max=2147418112,u32_max=-65536)
1120: (4f) r4 |= r2                   ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R4_w=scalar()
; __jhash_final(a, b, c);
1121: (bf) r2 = r7                    ; R2_w=scalar(id=507) R7=scalar(id=507)
1122: (af) r2 ^= r1                   ; R1=scalar(id=505) R2_w=scalar()
1123: (1f) r2 -= r4                   ; R2_w=scalar() R4_w=scalar()
1124: (05) goto pc+0
1125: (bc) w1 = w2                    ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R2=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1126: (77) r1 >>= 28                  ; R1_w=scalar(umax=15,var_off=(0x0; 0xf))
1127: (bf) r4 = r2                    ; R2=scalar(id=508) R4_w=scalar(id=508)
1128: (67) r4 <<= 4                   ; R4_w=scalar(smax=9223372036854775792,umax=18446744073709551600,var_off=(0x0; 0xfffffffffffffff0),s32_max=2147483632,u32_max=-16)
1129: (4f) r4 |= r1                   ; R1_w=scalar(umax=15,var_off=(0x0; 0xf)) R4_w=scalar()
; __jhash_final(a, b, c);
1130: (bf) r1 = r2                    ; R1_w=scalar(id=508) R2=scalar(id=508)
1131: (af) r1 ^= r3                   ; R1_w=scalar() R3=scalar(id=506)
1132: (1f) r1 -= r4                   ; R1_w=scalar() R4_w=scalar()
1133: (05) goto pc+0
1134: (05) goto pc+0
1135: (05) goto pc+0
1136: (bc) w3 = w1                    ; R1=scalar() R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1137: (77) r3 >>= 18                  ; R3_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1138: (bf) r4 = r1                    ; R1=scalar(id=509) R4_w=scalar(id=509)
1139: (67) r4 <<= 14                  ; R4_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1140: (4f) r4 |= r3                   ; R3_w=scalar(umax=16383,var_off=(0x0; 0x3fff)) R4_w=scalar()
; __jhash_final(a, b, c);
1141: (af) r1 ^= r7                   ; R1_w=scalar() R7=scalar(id=507)
1142: (1f) r1 -= r4                   ; R1_w=scalar() R4_w=scalar()
1143: (05) goto pc+0
1144: (05) goto pc+0
1145: (05) goto pc+0
1146: (bc) w4 = w1                    ; R1=scalar() R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1147: (77) r4 >>= 8                   ; R4_w=scalar(umax=16777215,var_off=(0x0; 0xffffff))
1148: (bf) r5 = r1                    ; R1=scalar(id=510) R5_w=scalar(id=510)
1149: (67) r5 <<= 24                  ; R5_w=scalar(smax=9223372036837998592,umax=18446744073692774400,var_off=(0x0; 0xffffffffff000000),s32_max=2130706432,u32_max=-16777216)
1150: (4f) r5 |= r4                   ; R4_w=scalar(umax=16777215,var_off=(0x0; 0xffffff)) R5_w=scalar()
; __jhash_final(a, b, c);
1151: (af) r1 ^= r2                   ; R1_w=scalar() R2=scalar(id=508)
; a += initval;
1152: (1f) r1 -= r5                   ; R1_w=scalar() R5_w=scalar()
1153: (07) r1 += -525483785           ; R1_w=scalar()
1154: (79) r7 = *(u64 *)(r10 -176)    ; R7_w=scalar() R10=fp0
; __jhash_final(a, b, c);
1155: (af) r1 ^= r7                   ; R1_w=scalar() R7_w=scalar()
1156: (1f) r1 -= r8                   ; R1_w=scalar() R8=scalar()
1157: (05) goto pc+0
1158: (bc) w2 = w1                    ; R1=scalar() R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1159: (77) r2 >>= 7                   ; R2_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff))
1160: (bf) r4 = r1                    ; R1=scalar(id=511) R4_w=scalar(id=511)
1161: (67) r4 <<= 25                  ; R4_w=scalar(smax=9223372036821221376,umax=18446744073675997184,var_off=(0x0; 0xfffffffffe000000),s32_max=2113929216,u32_max=-33554432)
1162: (4f) r4 |= r2                   ; R2_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff)) R4_w=scalar()
; __jhash_final(a, b, c);
1163: (bf) r0 = r1                    ; R0_w=scalar(id=511) R1=scalar(id=511)
1164: (79) r2 = *(u64 *)(r10 -168)    ; R2_w=scalar(smin=-525483785,smax=3769483510) R10=fp0
1165: (af) r0 ^= r2                   ; R0_w=scalar() R2_w=scalar(smin=-525483785,smax=3769483510)
1166: (1f) r0 -= r4                   ; R0_w=scalar() R4_w=scalar()
1167: (05) goto pc+0
1168: (05) goto pc+0
1169: (05) goto pc+0
1170: (bc) w2 = w0                    ; R0=scalar() R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1171: (77) r2 >>= 16                  ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff))
1172: (bf) r5 = r0                    ; R0=scalar(id=512) R5_w=scalar(id=512)
1173: (67) r5 <<= 16                  ; R5_w=scalar(smax=9223372036854710272,umax=18446744073709486080,var_off=(0x0; 0xffffffffffff0000),s32_max=2147418112,u32_max=-65536)
1174: (4f) r5 |= r2                   ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R5_w=scalar()
; __jhash_final(a, b, c);
1175: (bf) r4 = r0                    ; R0=scalar(id=512) R4_w=scalar(id=512)
1176: (af) r4 ^= r7                   ; R4_w=scalar() R7=scalar()
1177: (1f) r4 -= r5                   ; R4_w=scalar() R5_w=scalar()
1178: (05) goto pc+0
1179: (bc) w2 = w4                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R4=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1180: (77) r2 >>= 28                  ; R2_w=scalar(umax=15,var_off=(0x0; 0xf))
1181: (bf) r5 = r4                    ; R4=scalar(id=513) R5_w=scalar(id=513)
1182: (67) r5 <<= 4                   ; R5_w=scalar(smax=9223372036854775792,umax=18446744073709551600,var_off=(0x0; 0xfffffffffffffff0),s32_max=2147483632,u32_max=-16)
1183: (4f) r5 |= r2                   ; R2_w=scalar(umax=15,var_off=(0x0; 0xf)) R5_w=scalar()
; __jhash_final(a, b, c);
1184: (bf) r2 = r4                    ; R2_w=scalar(id=513) R4=scalar(id=513)
1185: (af) r2 ^= r1                   ; R1=scalar(id=511) R2_w=scalar()
1186: (1f) r2 -= r5                   ; R2_w=scalar() R5_w=scalar()
1187: (05) goto pc+0
1188: (05) goto pc+0
1189: (05) goto pc+0
1190: (bc) w1 = w2                    ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R2=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1191: (77) r1 >>= 18                  ; R1_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1192: (bf) r5 = r2                    ; R2=scalar(id=514) R5_w=scalar(id=514)
1193: (67) r5 <<= 14                  ; R5_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1194: (4f) r5 |= r1                   ; R1_w=scalar(umax=16383,var_off=(0x0; 0x3fff)) R5_w=scalar()
; __jhash_final(a, b, c);
1195: (af) r2 ^= r0                   ; R0=scalar(id=512) R2_w=scalar()
1196: (1f) r2 -= r5                   ; R2_w=scalar() R5_w=scalar()
1197: (05) goto pc+0
1198: (bc) w1 = w2                    ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R2=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1199: (77) r1 >>= 8                   ; R1_w=scalar(umax=16777215,var_off=(0x0; 0xffffff))
1200: (bf) r3 = r2                    ; R2=scalar(id=515) R3_w=scalar(id=515)
1201: (67) r3 <<= 24                  ; R3_w=scalar(smax=9223372036837998592,umax=18446744073692774400,var_off=(0x0; 0xffffffffff000000),s32_max=2130706432,u32_max=-16777216)
1202: (4f) r3 |= r1                   ; R1_w=scalar(umax=16777215,var_off=(0x0; 0xffffff)) R3_w=scalar()
; __jhash_final(a, b, c);
1203: (af) r2 ^= r4                   ; R2_w=scalar() R4=scalar(id=513)
1204: (1f) r2 -= r3                   ; R2_w=scalar() R3_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1205: (79) r1 = *(u64 *)(r10 -144)    ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
1206: (61) r1 = *(u32 *)(r1 +4)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; key = RING_SIZE * (vip_info->vip_num) + hash;
1207: (27) r1 *= 65537                ; R1_w=scalar(umax=281479271612415,var_off=(0x0; 0x1ffffffffffff))
; __jhash_final(a, b, c);
1208: (bc) w2 = w2                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
1209: (05) goto pc+0
; hash = get_packet_hash(pckt, hash_16bytes) % RING_SIZE;
1210: (97) r2 %= 65537                ; R2_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1211: (0f) r2 += r1                   ; R1_w=scalar(umax=281479271612415,var_off=(0x0; 0x1ffffffffffff)) R2_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1212: (63) *(u32 *)(r10 -20) = r2     ; R2_w=scalar() R10=fp0 fp-24=mmmm????
1213: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1214: (07) r2 += -20                  ; R2_w=fp-20
; real_pos = bpf_map_lookup_elem(&ch_rings, &key);
1215: (18) r1 = 0xffffaebaa0631000    ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
1217: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=516,off=0,ks=4,vs=4,imm=0)
; if (!real_pos) {
1218: (15) if r0 == 0x0 goto pc+638   ; R0=map_value(off=0,ks=4,vs=4,imm=0)
; key = *real_pos;
1219: (61) r1 = *(u32 *)(r0 +0)       ; R0=map_value(off=0,ks=4,vs=4,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; key = *real_pos;
1220: (63) *(u32 *)(r10 -20) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-24=mmmm????
1221: (79) r8 = *(u64 *)(r10 -192)    ; R8_w=1 R10=fp0
; if (key == 0) {
1222: (55) if r1 != 0x0 goto pc+12    ; R1_w=0
1223: (05) goto pc+0
; __u32 ch_drop_stats_key = MAX_VIPS + CH_DROP_STATS;
1224: (62) *(u32 *)(r10 -28) = 521    ; R10=fp0 fp-32=mmmm????
1225: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1226: (07) r2 += -28                  ; R2_w=fp-28
; bpf_map_lookup_elem(&stats, &ch_drop_stats_key);
1227: (18) r1 = 0xffffa03499be8000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
1229: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=517,off=0,ks=4,vs=16,imm=0)
; if (!ch_drop_stats) {
1230: (15) if r0 == 0x0 goto pc+3     ; R0=map_value(off=0,ks=4,vs=16,imm=0)
; ch_drop_stats->v2 += 1;
1231: (79) r1 = *(u64 *)(r0 +8)       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1232: (07) r1 += 1                    ; R1_w=scalar()
1233: (7b) *(u64 *)(r0 +8) = r1       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
; pckt->real_index = key;
1234: (61) r1 = *(u32 *)(r10 -20)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; pckt->real_index = key;
1235: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1236: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1237: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1238: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1240: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=518,off=0,ks=4,vs=20,imm=0)
1241: (bf) r7 = r0                    ; R0=map_value_or_null(id=518,off=0,ks=4,vs=20,imm=0) R7_w=map_value_or_null(id=518,off=0,ks=4,vs=20,imm=0)
; if (!(*real)) {
1242: (55) if r7 != 0x0 goto pc+9     ; R7_w=0
1243: (05) goto pc+0
; __u32 ch_drop_stats_key = MAX_VIPS + CH_DROP_STATS;
1244: (62) *(u32 *)(r10 -28) = 521    ; R10=fp0 fp-32=mmmm????
1245: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1246: (07) r2 += -28                  ; R2_w=fp-28
; bpf_map_lookup_elem(&stats, &ch_drop_stats_key);
1247: (18) r1 = 0xffffa03499be8000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
1249: (85) call bpf_map_lookup_elem#1
1250: safe

from 1242 to 1252: R0=map_value(off=0,ks=4,vs=20,imm=0) R6=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=20,imm=0) R8=1 R9=scalar(umax=65280,var_off=(0x0; 0xff00)) R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184= fp-192=1 fp-200= fp-208=mmmmmmmm
; if (lru_map && !(vip_info->flags & F_LRU_BYPASS) && !under_flood) {
1252: (79) r1 = *(u64 *)(r10 -152)    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0
1253: (15) if r1 == 0x0 goto pc+19    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0)
; if (lru_map && !(vip_info->flags & F_LRU_BYPASS) && !under_flood) {
1254: (79) r1 = *(u64 *)(r10 -144)    ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
1255: (61) r1 = *(u32 *)(r1 +0)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (lru_map && !(vip_info->flags & F_LRU_BYPASS) && !under_flood) {
1256: (57) r1 &= 2                    ; R1_w=scalar(umax=2,var_off=(0x0; 0x2))
1257: (77) r1 >>= 1                   ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
; if (lru_map && !(vip_info->flags & F_LRU_BYPASS) && !under_flood) {
1258: (4f) r8 |= r1                   ; R1_w=scalar(umax=1,var_off=(0x0; 0x1)) R8_w=scalar()
1259: (55) if r8 != 0x0 goto pc+13    ; R8_w=0
; if (pckt->flow.proto == IPPROTO_UDP) {
1260: (71) r1 = *(u8 *)(r10 -44)
1261: safe

from 1259 to 1273: safe

from 1253 to 1273: safe

from 1230 to 1234: R0=0 R6=ctx(off=0,imm=0) R7=scalar() R8=1 R9=scalar(umax=65280,var_off=(0x0; 0xff00)) R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184= fp-192=1 fp-200= fp-208=mmmmmmmm
; pckt->real_index = key;
1234: (61) r1 = *(u32 *)(r10 -20)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; pckt->real_index = key;
1235: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1236: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1237: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1238: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1240: (85) call bpf_map_lookup_elem#1
1241: safe

from 1222 to 1235: R0=map_value(off=0,ks=4,vs=4,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6=ctx(off=0,imm=0) R7=scalar() R8_w=1 R9=scalar(umax=65280,var_off=(0x0; 0xff00)) R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184= fp-192=1 fp-200= fp-208=mmmmmmmm
; pckt->real_index = key;
1235: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1236: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1237: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1238: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1240: (85) call bpf_map_lookup_elem#1
1241: safe

from 1218 to 1857: safe

from 957 to 967: R0=scalar(id=418) R1=scalar(umax=8,var_off=(0x0; 0x8)) R2=scalar(umax=1000000000,var_off=(0x0; 0x3fffffff)) R6=ctx(off=0,imm=0) R7=scalar(id=418) R8=1 R9=map_value(off=0,ks=4,vs=16,imm=0) R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0 fp-192=1 fp-200= fp-208=mmmmmmmm
; pckt->flow.port16[0] = pckt->flow.port16[1];
967: (69) r1 = *(u16 *)(r10 -46)      ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; pckt->flow.port16[0] = pckt->flow.port16[1];
968: (6b) *(u16 *)(r10 -48) = r1      ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-48=
969: (05) goto pc+0
; memset(pckt->flow.srcv6, 0, 16);
970: (7a) *(u64 *)(r10 -80) = 0       ; R10=fp0 fp-80_w=mmmmmmmm
971: (b7) r1 = 0                      ; R1_w=0
972: (7b) *(u64 *)(r10 -184) = r1
last_idx 972 first_idx 967
regs=2 stack=0 before 971: (b7) r1 = 0
973: R1_w=P0 R10=fp0 fp-184_w=00000000
973: (7a) *(u64 *)(r10 -72) = 0       ; R10=fp0 fp-72_w=mmmmmmmm
974: (b7) r9 = 0                      ; R9_w=0
975: (b7) r0 = 0                      ; R0_w=0
976: (b7) r8 = 0                      ; R8_w=0
977: (b7) r3 = 0                      ; R3_w=0
978: (b7) r4 = 0                      ; R4_w=0
; __jhash_mix(a, b, c);
979: (1f) r3 -= r8                    ; R3_w=0 R8_w=0
; c += *(u32*)(k + 8);
980: (07) r8 += -559038209            ; R8_w=-559038209
981: (05) goto pc+0
982: (05) goto pc+0
983: (05) goto pc+0
984: (bc) w5 = w8                     ; R5_w=3735929087 R8=-559038209
; return (word << shift) | (word >> ((-shift) & 31));
985: (77) r5 >>= 28                   ; R5_w=13
986: (bf) r2 = r8                     ; R2_w=-559038209 R8=-559038209
987: (67) r2 <<= 4                    ; R2_w=-8944611344
988: (4f) r2 |= r5                    ; R2_w=-8944611331 R5_w=13
; __jhash_mix(a, b, c);
989: (af) r2 ^= r3                    ; R2_w=-8944611331 R3=0
990: (05) goto pc+0
991: (05) goto pc+0
992: (05) goto pc+0
993: (bc) w5 = w2                     ; R2=-8944611331 R5_w=3940290557
; return (word << shift) | (word >> ((-shift) & 31));
994: (77) r5 >>= 26                   ; R5_w=58
995: (bf) r7 = r2                     ; R2=-8944611331 R7_w=-8944611331
996: (67) r7 <<= 6                    ; R7_w=-572455125184
997: (4f) r7 |= r5                    ; R5_w=58 R7_w=-572455125126
; b += *(u32*)(k + 4);
998: (07) r1 += -559038209            ; R1_w=P-559038209
; __jhash_mix(a, b, c);
999: (bf) r3 = r1                     ; R1_w=P-559038209 R3_w=P-559038209
1000: (1f) r3 -= r2
last_idx 1000 first_idx 991
regs=4 stack=0 before 999: (bf) r3 = r1
regs=4 stack=0 before 998: (07) r1 += -559038209
regs=4 stack=0 before 997: (4f) r7 |= r5
regs=4 stack=0 before 996: (67) r7 <<= 6
regs=4 stack=0 before 995: (bf) r7 = r2
regs=4 stack=0 before 994: (77) r5 >>= 26
regs=4 stack=0 before 993: (bc) w5 = w2
regs=4 stack=0 before 992: (05) goto pc+0
regs=4 stack=0 before 991: (05) goto pc+0
parent didn't have regs=4 stack=0 marks: R0=0 R1_r=P0 R2_rw=P-8944611331 R3=0 R4=0 R5_w=13 R6=ctx(off=0,imm=0) R7=scalar(id=418) R8=-559038209 R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0 fp-184=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
last_idx 990 first_idx 982
regs=4 stack=0 before 990: (05) goto pc+0
regs=4 stack=0 before 989: (af) r2 ^= r3
regs=c stack=0 before 988: (4f) r2 |= r5
regs=2c stack=0 before 987: (67) r2 <<= 4
regs=2c stack=0 before 986: (bf) r2 = r8
regs=128 stack=0 before 985: (77) r5 >>= 28
regs=128 stack=0 before 984: (bc) w5 = w8
regs=108 stack=0 before 983: (05) goto pc+0
regs=108 stack=0 before 982: (05) goto pc+0
parent didn't have regs=108 stack=0 marks: R0_w=0 R1_rw=P0 R2=scalar(umax=1000000000,var_off=(0x0; 0x3fffffff)) R3_rw=P0 R4_w=0 R6=ctx(off=0,imm=0) R7=scalar(id=418) R8_rw=P-559038209 R9_w=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72_w=mmmmmmmm fp-80_w=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0 fp-184_w=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
last_idx 981 first_idx 967
regs=108 stack=0 before 981: (05) goto pc+0
regs=108 stack=0 before 980: (07) r8 += -559038209
regs=108 stack=0 before 979: (1f) r3 -= r8
regs=108 stack=0 before 978: (b7) r4 = 0
regs=108 stack=0 before 977: (b7) r3 = 0
regs=100 stack=0 before 976: (b7) r8 = 0
1001: (af) r3 ^= r7
last_idx 1001 first_idx 991
regs=80 stack=0 before 1000: (1f) r3 -= r2
regs=80 stack=0 before 999: (bf) r3 = r1
regs=80 stack=0 before 998: (07) r1 += -559038209
regs=80 stack=0 before 997: (4f) r7 |= r5
regs=a0 stack=0 before 996: (67) r7 <<= 6
regs=a0 stack=0 before 995: (bf) r7 = r2
regs=24 stack=0 before 994: (77) r5 >>= 26
regs=24 stack=0 before 993: (bc) w5 = w2
regs=4 stack=0 before 992: (05) goto pc+0
regs=4 stack=0 before 991: (05) goto pc+0
parent already had regs=4 stack=0 marks: R0=0 R1_r=P0 R2_rw=P-8944611331 R3=0 R4=0 R5_w=13 R6=ctx(off=0,imm=0) R7=scalar(id=418) R8=-559038209 R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0 fp-184=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
; a += (u32)k[3] << 24;
1002: (67) r4 <<= 24                  ; R4_w=0
; a += (u32)k[2] << 16;
1003: (57) r0 &= 255                  ; R0_w=0
; a += (u32)k[2] << 16;
1004: (67) r0 <<= 16                  ; R0_w=0
; a += (u32)k[3] << 24;
1005: (4f) r0 |= r4                   ; R0_w=0 R4_w=0
; pckt->flow.ports,
1006: (61) r5 = *(u32 *)(r10 -48)     ; R5_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; b += initval;
1007: (07) r5 += -525483785           ; R5_w=scalar(smin=-525483785,smax=3769483510)
1008: (05) goto pc+0
1009: (7b) *(u64 *)(r10 -168) = r5    ; R5=scalar(smin=-525483785,smax=3769483510) R10=fp0 fp-168_w=
1010: (05) goto pc+0
1011: (05) goto pc+0
1012: (bc) w4 = w5                    ; R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R5=scalar(smin=-525483785,smax=3769483510)
; return (word << shift) | (word >> ((-shift) & 31));
1013: (77) r4 >>= 18                  ; R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1014: (bf) r7 = r5                    ; R5=scalar(id=525,smin=-525483785,smax=3769483510) R7_w=scalar(id=525,smin=-525483785,smax=3769483510)
1015: (67) r7 <<= 14                  ; R7_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1016: (4f) r7 |= r4                   ; R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff)) R7_w=scalar()
; __jhash_final(a, b, c);
1017: (a7) r5 ^= -525483785           ; R5_w=scalar()
1018: (1f) r5 -= r7                   ; R5_w=scalar() R7_w=scalar()
; __jhash_mix(a, b, c);
1019: (0f) r1 += r8
last_idx 1019 first_idx 1009
regs=100 stack=0 before 1018: (1f) r5 -= r7
regs=100 stack=0 before 1017: (a7) r5 ^= -525483785
regs=100 stack=0 before 1016: (4f) r7 |= r4
regs=100 stack=0 before 1015: (67) r7 <<= 14
regs=100 stack=0 before 1014: (bf) r7 = r5
regs=100 stack=0 before 1013: (77) r4 >>= 18
regs=100 stack=0 before 1012: (bc) w4 = w5
regs=100 stack=0 before 1011: (05) goto pc+0
regs=100 stack=0 before 1010: (05) goto pc+0
regs=100 stack=0 before 1009: (7b) *(u64 *)(r10 -168) = r5
parent didn't have regs=100 stack=0 marks: R0_w=0 R1_rw=P-559038209 R2=P-8944611331 R3_w=P-570076017032 R4_w=0 R5_rw=scalar(smin=-525483785,smax=3769483510) R6=ctx(off=0,imm=0) R7_w=P-572455125126 R8_r=P-559038209 R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0 fp-184=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
last_idx 1008 first_idx 991
regs=100 stack=0 before 1008: (05) goto pc+0
regs=100 stack=0 before 1007: (07) r5 += -525483785
regs=100 stack=0 before 1006: (61) r5 = *(u32 *)(r10 -48)
regs=100 stack=0 before 1005: (4f) r0 |= r4
regs=100 stack=0 before 1004: (67) r0 <<= 16
regs=100 stack=0 before 1003: (57) r0 &= 255
regs=100 stack=0 before 1002: (67) r4 <<= 24
regs=100 stack=0 before 1001: (af) r3 ^= r7
regs=100 stack=0 before 1000: (1f) r3 -= r2
regs=100 stack=0 before 999: (bf) r3 = r1
regs=100 stack=0 before 998: (07) r1 += -559038209
regs=100 stack=0 before 997: (4f) r7 |= r5
regs=100 stack=0 before 996: (67) r7 <<= 6
regs=100 stack=0 before 995: (bf) r7 = r2
regs=100 stack=0 before 994: (77) r5 >>= 26
regs=100 stack=0 before 993: (bc) w5 = w2
regs=100 stack=0 before 992: (05) goto pc+0
regs=100 stack=0 before 991: (05) goto pc+0
parent didn't have regs=100 stack=0 marks: R0_r=0 R1_r=P0 R2_rw=P-8944611331 R3=0 R4_r=0 R5_w=13 R6=ctx(off=0,imm=0) R7=scalar(id=418) R8_r=P-559038209 R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48_r= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0 fp-184=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
last_idx 990 first_idx 982
regs=100 stack=0 before 990: (05) goto pc+0
regs=100 stack=0 before 989: (af) r2 ^= r3
regs=100 stack=0 before 988: (4f) r2 |= r5
regs=100 stack=0 before 987: (67) r2 <<= 4
regs=100 stack=0 before 986: (bf) r2 = r8
regs=100 stack=0 before 985: (77) r5 >>= 28
regs=100 stack=0 before 984: (bc) w5 = w8
regs=100 stack=0 before 983: (05) goto pc+0
regs=100 stack=0 before 982: (05) goto pc+0
parent already had regs=100 stack=0 marks: R0_rw=0 R1_rw=P0 R2=scalar(umax=1000000000,var_off=(0x0; 0x3fffffff)) R3_rw=P0 R4_rw=0 R6=ctx(off=0,imm=0) R7=scalar(id=418) R8_rw=P-559038209 R9_w=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48_r= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72_w=mmmmmmmm fp-80_w=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0 fp-184_w=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
; a += (u32)k[1] << 8;
1020: (57) r9 &= 255                  ; R9_w=0
; a += (u32)k[1] << 8;
1021: (67) r9 <<= 8                   ; R9_w=0
; a += (u32)k[2] << 16;
1022: (4f) r0 |= r9                   ; R0_w=0 R9_w=0
1023: (79) r4 = *(u64 *)(r10 -184)    ; R4_w=P0 R10=fp0
; a += k[0];
1024: (57) r4 &= 255                  ; R4_w=P0
; a += (u32)k[1] << 8;
1025: (4f) r0 |= r4                   ; R0_w=0 R4_w=P0
1026: (05) goto pc+0
1027: (05) goto pc+0
; __jhash_mix(a, b, c);
1028: (05) goto pc+0
1029: (bc) w7 = w3                    ; R3=P-570076017032 R7_w=P1154633336
; return (word << shift) | (word >> ((-shift) & 31));
1030: (77) r7 >>= 24                  ; R7_w=P68
1031: (bf) r4 = r3                    ; R3=P-570076017032 R4_w=P-570076017032
1032: (67) r4 <<= 8                   ; R4_w=P-145939460360192
1033: (4f) r4 |= r7                   ; R4_w=P-145939460360124 R7_w=P68
; __jhash_mix(a, b, c);
1034: (0f) r2 += r1                   ; R1=P-1118076418 R2_w=P-10062687749
1035: (1f) r1 -= r3                   ; R1_w=P568957940614 R3=P-570076017032
1036: (af) r1 ^= r4                   ; R1_w=P-145407547585598 R4_w=P-145939460360124
1037: (05) goto pc+0
1038: (05) goto pc+0
; __jhash_final(a, b, c);
1039: (7b) *(u64 *)(r10 -176) = r5    ; R5=scalar() R10=fp0 fp-176_w=mmmmmmmm
1040: (05) goto pc+0
1041: (bc) w4 = w5                    ; R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R5=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1042: (77) r4 >>= 21                  ; R4_w=scalar(umax=2047,var_off=(0x0; 0x7ff))
1043: (bf) r8 = r5                    ; R5=scalar(id=527) R8_w=scalar(id=527)
1044: (67) r8 <<= 11                  ; R8_w=scalar(smax=9223372036854773760,umax=18446744073709549568,var_off=(0x0; 0xfffffffffffff800),s32_max=2147481600,u32_max=-2048)
1045: (4f) r8 |= r4                   ; R4_w=scalar(umax=2047,var_off=(0x0; 0x7ff)) R8_w=scalar()
1046: (05) goto pc+0
1047: (05) goto pc+0
; __jhash_mix(a, b, c);
1048: (05) goto pc+0
1049: (bc) w4 = w1                    ; R1=P-145407547585598 R4_w=P2865187778
; return (word << shift) | (word >> ((-shift) & 31));
1050: (77) r4 >>= 16                  ; R4_w=P43719
1051: (bf) r7 = r1                    ; R1=P-145407547585598 R7_w=P-145407547585598
1052: (67) r7 <<= 16                  ; R7_w=P8917315035139801088
1053: (4f) r7 |= r4                   ; R4_w=P43719 R7_w=P8917315035139844807
; __jhash_mix(a, b, c);
1054: (0f) r3 += r2                   ; R2=P-10062687749 R3_w=P-580138704781
1055: (1f) r2 -= r1                   ; R1=P-145407547585598 R2_w=P145397484897849
1056: (af) r2 ^= r7                   ; R2_w=P8917178920830430462 R7_w=P8917315035139844807
1057: (05) goto pc+0
1058: (05) goto pc+0
1059: (05) goto pc+0
1060: (bc) w7 = w2                    ; R2=P8917178920830430462 R7_w=P3065179390
; return (word << shift) | (word >> ((-shift) & 31));
1061: (77) r7 >>= 13                  ; R7_w=P374167
1062: (bf) r4 = r2                    ; R2=P8917178920830430462 R4_w=P8917178920830430462
1063: (67) r4 <<= 19                  ; R4_w=P8637259322254950400
1064: (4f) r4 |= r7                   ; R4_w=P8637259322255324567 R7_w=P374167
; __jhash_mix(a, b, c);
1065: (0f) r1 += r3                   ; R1_w=P-145987686290379 R3=P-580138704781
1066: (1f) r3 -= r2                   ; R2=P8917178920830430462 R3_w=P-8917179500969135243
1067: (af) r3 ^= r4                   ; R3_w=P-873023320690047262 R4_w=P8637259322255324567
1068: (0f) r2 += r1                   ; R1_w=P-145987686290379 R2_w=P8917032933144140083
1069: (bf) r5 = r3                    ; R3_w=P-873023320690047262 R5_w=P-873023320690047262
1070: (0f) r5 += r2                   ; R2_w=P8917032933144140083 R5_w=P8044009612454092821
1071: (05) goto pc+0
1072: (05) goto pc+0
1073: (05) goto pc+0
1074: (bc) w4 = w5                    ; R4_w=P2686935061 R5=P8044009612454092821
; return (word << shift) | (word >> ((-shift) & 31));
1075: (77) r4 >>= 18                  ; R4_w=P10249
1076: (bf) r7 = r5                    ; R5=P8044009612454092821 R7_w=P8044009612454092821
1077: (67) r7 <<= 14                  ; R7_w=P-8932916206889517056
1078: (4f) r7 |= r4                   ; R4_w=P10249 R7_w=P-8932916206889506807
; __jhash_mix(a, b, c);
1079: (05) goto pc+0
1080: (05) goto pc+0
1081: (05) goto pc+0
1082: (bc) w4 = w3                    ; R3=P-873023320690047262 R4_w=P1369655010
; return (word << shift) | (word >> ((-shift) & 31));
1083: (77) r4 >>= 28                  ; R4_w=P5
; __jhash_mix(a, b, c);
1084: (1f) r1 -= r3                   ; R1_w=P872877333003756883 R3=P-873023320690047262
; return (word << shift) | (word >> ((-shift) & 31));
1085: (67) r3 <<= 4                   ; R3_w=P4478370942668795424
1086: (4f) r3 |= r4                   ; R3_w=P4478370942668795429 R4_w=P5
; __jhash_mix(a, b, c);
1087: (af) r1 ^= r3                   ; R1_w=P3619570195461933942 R3_w=P4478370942668795429
; a += k[0];
1088: (0f) r2 += r0
last_idx 1088 first_idx 1080
regs=1 stack=0 before 1087: (af) r1 ^= r3
regs=1 stack=0 before 1086: (4f) r3 |= r4
regs=1 stack=0 before 1085: (67) r3 <<= 4
regs=1 stack=0 before 1084: (1f) r1 -= r3
regs=1 stack=0 before 1083: (77) r4 >>= 28
regs=1 stack=0 before 1082: (bc) w4 = w3
regs=1 stack=0 before 1081: (05) goto pc+0
regs=1 stack=0 before 1080: (05) goto pc+0
parent didn't have regs=1 stack=0 marks: R0_r=P0 R1_r=P-145987686290379 R2_r=P8917032933144140083 R3_r=P-873023320690047262 R4_w=P10249 R5=P8044009612454092821 R6=ctx(off=0,imm=0) R7_w=P-8932916206889506807 R8=scalar() R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
last_idx 1079 first_idx 1072
regs=1 stack=0 before 1079: (05) goto pc+0
regs=1 stack=0 before 1078: (4f) r7 |= r4
regs=1 stack=0 before 1077: (67) r7 <<= 14
regs=1 stack=0 before 1076: (bf) r7 = r5
regs=1 stack=0 before 1075: (77) r4 >>= 18
regs=1 stack=0 before 1074: (bc) w4 = w5
regs=1 stack=0 before 1073: (05) goto pc+0
regs=1 stack=0 before 1072: (05) goto pc+0
parent didn't have regs=1 stack=0 marks: R0_r=P0 R1_rw=P-145987686290379 R2_rw=P8917032933144140083 R3_rw=P-873023320690047262 R4_w=P8637259322255324567 R5_rw=P8044009612454092821 R6=ctx(off=0,imm=0) R7_w=P374167 R8=scalar() R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
last_idx 1071 first_idx 1058
regs=1 stack=0 before 1071: (05) goto pc+0
regs=1 stack=0 before 1070: (0f) r5 += r2
regs=1 stack=0 before 1069: (bf) r5 = r3
regs=1 stack=0 before 1068: (0f) r2 += r1
regs=1 stack=0 before 1067: (af) r3 ^= r4
regs=1 stack=0 before 1066: (1f) r3 -= r2
regs=1 stack=0 before 1065: (0f) r1 += r3
regs=1 stack=0 before 1064: (4f) r4 |= r7
regs=1 stack=0 before 1063: (67) r4 <<= 19
regs=1 stack=0 before 1062: (bf) r4 = r2
regs=1 stack=0 before 1061: (77) r7 >>= 13
regs=1 stack=0 before 1060: (bc) w7 = w2
regs=1 stack=0 before 1059: (05) goto pc+0
regs=1 stack=0 before 1058: (05) goto pc+0
parent didn't have regs=1 stack=0 marks: R0_r=P0 R1_r=P-145407547585598 R2_rw=P8917178920830430462 R3_rw=P-580138704781 R4_w=P43719 R5=scalar(id=527) R6=ctx(off=0,imm=0) R7_w=P8917315035139844807 R8=scalar() R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
last_idx 1057 first_idx 1047
regs=1 stack=0 before 1057: (05) goto pc+0
regs=1 stack=0 before 1056: (af) r2 ^= r7
regs=1 stack=0 before 1055: (1f) r2 -= r1
regs=1 stack=0 before 1054: (0f) r3 += r2
regs=1 stack=0 before 1053: (4f) r7 |= r4
regs=1 stack=0 before 1052: (67) r7 <<= 16
regs=1 stack=0 before 1051: (bf) r7 = r1
regs=1 stack=0 before 1050: (77) r4 >>= 16
regs=1 stack=0 before 1049: (bc) w4 = w1
regs=1 stack=0 before 1048: (05) goto pc+0
regs=1 stack=0 before 1047: (05) goto pc+0
parent didn't have regs=1 stack=0 marks: R0_r=P0 R1_r=P-145407547585598 R2_r=P-10062687749 R3_r=P-570076017032 R4_w=scalar(umax=2047,var_off=(0x0; 0x7ff)) R5=scalar(id=527) R6=ctx(off=0,imm=0) R7=P68 R8_w=scalar() R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176_w=mmmmmmmm fp-184=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
last_idx 1046 first_idx 1038
regs=1 stack=0 before 1046: (05) goto pc+0
regs=1 stack=0 before 1045: (4f) r8 |= r4
regs=1 stack=0 before 1044: (67) r8 <<= 11
regs=1 stack=0 before 1043: (bf) r8 = r5
regs=1 stack=0 before 1042: (77) r4 >>= 21
regs=1 stack=0 before 1041: (bc) w4 = w5
regs=1 stack=0 before 1040: (05) goto pc+0
regs=1 stack=0 before 1039: (7b) *(u64 *)(r10 -176) = r5
regs=1 stack=0 before 1038: (05) goto pc+0
parent didn't have regs=1 stack=0 marks: R0_r=P0 R1_rw=P-145407547585598 R2_rw=P-10062687749 R3_r=P-570076017032 R4_w=P-145939460360124 R5_r=scalar() R6=ctx(off=0,imm=0) R7_w=P68 R8=P-559038209 R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0 fp-184=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
last_idx 1037 first_idx 1027
regs=1 stack=0 before 1037: (05) goto pc+0
regs=1 stack=0 before 1036: (af) r1 ^= r4
regs=1 stack=0 before 1035: (1f) r1 -= r3
regs=1 stack=0 before 1034: (0f) r2 += r1
regs=1 stack=0 before 1033: (4f) r4 |= r7
regs=1 stack=0 before 1032: (67) r4 <<= 8
regs=1 stack=0 before 1031: (bf) r4 = r3
regs=1 stack=0 before 1030: (77) r7 >>= 24
regs=1 stack=0 before 1029: (bc) w7 = w3
regs=1 stack=0 before 1028: (05) goto pc+0
regs=1 stack=0 before 1027: (05) goto pc+0
parent didn't have regs=1 stack=0 marks: R0_rw=P0 R1_rw=P-1118076418 R2_r=P-8944611331 R3_r=P-570076017032 R4_w=P0 R5_rw=scalar() R6=ctx(off=0,imm=0) R7_w=scalar() R8=P-559038209 R9_w=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168_w= fp-176=0 fp-184=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
last_idx 1026 first_idx 1009
regs=1 stack=0 before 1026: (05) goto pc+0
regs=1 stack=0 before 1025: (4f) r0 |= r4
regs=11 stack=0 before 1024: (57) r4 &= 255
regs=11 stack=0 before 1023: (79) r4 = *(u64 *)(r10 -184)
regs=1 stack=400000 before 1022: (4f) r0 |= r9
regs=201 stack=400000 before 1021: (67) r9 <<= 8
regs=201 stack=400000 before 1020: (57) r9 &= 255
regs=201 stack=400000 before 1019: (0f) r1 += r8
regs=201 stack=400000 before 1018: (1f) r5 -= r7
regs=201 stack=400000 before 1017: (a7) r5 ^= -525483785
regs=201 stack=400000 before 1016: (4f) r7 |= r4
regs=201 stack=400000 before 1015: (67) r7 <<= 14
regs=201 stack=400000 before 1014: (bf) r7 = r5
regs=201 stack=400000 before 1013: (77) r4 >>= 18
regs=201 stack=400000 before 1012: (bc) w4 = w5
regs=201 stack=400000 before 1011: (05) goto pc+0
regs=201 stack=400000 before 1010: (05) goto pc+0
regs=201 stack=400000 before 1009: (7b) *(u64 *)(r10 -168) = r5
parent didn't have regs=201 stack=0 marks: R0_rw=P0 R1_rw=P-559038209 R2_r=P-8944611331 R3_rw=P-570076017032 R4_w=0 R5_rw=scalar(smin=-525483785,smax=3769483510) R6=ctx(off=0,imm=0) R7_w=P-572455125126 R8_r=P-559038209 R9_r=P0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0 fp-184_r=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
last_idx 1008 first_idx 991
regs=201 stack=0 before 1008: (05) goto pc+0
regs=201 stack=0 before 1007: (07) r5 += -525483785
regs=201 stack=0 before 1006: (61) r5 = *(u32 *)(r10 -48)
regs=201 stack=0 before 1005: (4f) r0 |= r4
regs=211 stack=0 before 1004: (67) r0 <<= 16
regs=211 stack=0 before 1003: (57) r0 &= 255
regs=211 stack=0 before 1002: (67) r4 <<= 24
regs=211 stack=0 before 1001: (af) r3 ^= r7
regs=211 stack=0 before 1000: (1f) r3 -= r2
regs=211 stack=0 before 999: (bf) r3 = r1
regs=211 stack=0 before 998: (07) r1 += -559038209
regs=211 stack=0 before 997: (4f) r7 |= r5
regs=211 stack=0 before 996: (67) r7 <<= 6
regs=211 stack=0 before 995: (bf) r7 = r2
regs=211 stack=0 before 994: (77) r5 >>= 26
regs=211 stack=0 before 993: (bc) w5 = w2
regs=211 stack=0 before 992: (05) goto pc+0
regs=211 stack=0 before 991: (05) goto pc+0
parent didn't have regs=211 stack=0 marks: R0_r=P0 R1_r=P0 R2_rw=P-8944611331 R3=0 R4_r=P0 R5_w=13 R6=ctx(off=0,imm=0) R7=scalar(id=418) R8_r=P-559038209 R9_r=P0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48_r= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0 fp-184_r=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
last_idx 990 first_idx 982
regs=211 stack=0 before 990: (05) goto pc+0
regs=211 stack=0 before 989: (af) r2 ^= r3
regs=211 stack=0 before 988: (4f) r2 |= r5
regs=211 stack=0 before 987: (67) r2 <<= 4
regs=211 stack=0 before 986: (bf) r2 = r8
regs=211 stack=0 before 985: (77) r5 >>= 28
regs=211 stack=0 before 984: (bc) w5 = w8
regs=211 stack=0 before 983: (05) goto pc+0
regs=211 stack=0 before 982: (05) goto pc+0
parent didn't have regs=211 stack=0 marks: R0_rw=P0 R1_rw=P0 R2=scalar(umax=1000000000,var_off=(0x0; 0x3fffffff)) R3_rw=P0 R4_rw=P0 R6=ctx(off=0,imm=0) R7=scalar(id=418) R8_rw=P-559038209 R9_rw=P0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48_r= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72_w=mmmmmmmm fp-80_w=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0 fp-184_rw=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
last_idx 981 first_idx 967
regs=211 stack=0 before 981: (05) goto pc+0
regs=211 stack=0 before 980: (07) r8 += -559038209
regs=211 stack=0 before 979: (1f) r3 -= r8
regs=211 stack=0 before 978: (b7) r4 = 0
regs=201 stack=0 before 977: (b7) r3 = 0
regs=201 stack=0 before 976: (b7) r8 = 0
regs=201 stack=0 before 975: (b7) r0 = 0
regs=200 stack=0 before 974: (b7) r9 = 0
; __jhash_final(a, b, c);
1089: (af) r1 ^= r5                   ; R1_w=P6744523029021125475 R5=P8044009612454092821
1090: (1f) r1 -= r7                   ; R1_w=P-2769304837798919334 R7=P-8932916206889506807
1091: (05) goto pc+0
1092: (05) goto pc+0
1093: (05) goto pc+0
1094: (bc) w3 = w1                    ; R1=P-2769304837798919334 R3_w=P607748954
; return (word << shift) | (word >> ((-shift) & 31));
1095: (77) r3 >>= 21                  ; R3_w=P289
1096: (bf) r4 = r1                    ; R1=P-2769304837798919334 R4_w=P-2769304837798919334
1097: (67) r4 <<= 11                  ; R4_w=P-8385877183354449920
1098: (4f) r4 |= r3                   ; R3_w=P289 R4_w=P-8385877183354449631
; __jhash_final(a, b, c);
1099: (bf) r3 = r1                    ; R1=P-2769304837798919334 R3_w=P-2769304837798919334
1100: (af) r3 ^= r2                   ; R2=P8917032933144140083 R3_w=P-6760226462814594455
1101: (1f) r3 -= r4                   ; R3_w=P1625650720539855176 R4_w=P-8385877183354449631
1102: (05) goto pc+0
1103: (05) goto pc+0
1104: (05) goto pc+0
1105: (bc) w2 = w3                    ; R2_w=P2661468488 R3=P1625650720539855176
; return (word << shift) | (word >> ((-shift) & 31));
1106: (77) r2 >>= 7                   ; R2_w=P20792722
1107: (bf) r4 = r3                    ; R3=P1625650720539855176 R4_w=P1625650720539855176
1108: (67) r4 <<= 25                  ; R4_w=P8015639407572811776
1109: (4f) r4 |= r2                   ; R2_w=P20792722 R4_w=P8015639407593604498
; __jhash_final(a, b, c);
1110: (bf) r7 = r3                    ; R3=P1625650720539855176 R7_w=P1625650720539855176
1111: (af) r7 ^= r5                   ; R5=P8044009612454092821 R7_w=P8731750324354001245
1112: (1f) r7 -= r4                   ; R4_w=P8015639407593604498 R7_w=P716110916760396747
1113: (05) goto pc+0
1114: (05) goto pc+0
1115: (05) goto pc+0
1116: (bc) w2 = w7                    ; R2_w=P2907202507 R7=P716110916760396747
; return (word << shift) | (word >> ((-shift) & 31));
1117: (77) r2 >>= 16                  ; R2_w=P44360
1118: (bf) r4 = r7                    ; R4_w=P716110916760396747 R7=P716110916760396747
1119: (67) r4 <<= 16                  ; R4_w=P2528117292261900288
1120: (4f) r4 |= r2                   ; R2_w=P44360 R4_w=P2528117292261944648
; __jhash_final(a, b, c);
1121: (bf) r2 = r7                    ; R2_w=P716110916760396747 R7=P716110916760396747
1122: (af) r2 ^= r1                   ; R1=P-2769304837798919334 R2_w=P-3431372408396586863
1123: (1f) r2 -= r4                   ; R2_w=P-5959489700658531511 R4_w=P2528117292261944648
1124: (05) goto pc+0
1125: (bc) w1 = w2                    ; R1_w=P631649097 R2=P-5959489700658531511
; return (word << shift) | (word >> ((-shift) & 31));
1126: (77) r1 >>= 28                  ; R1_w=P2
1127: (bf) r4 = r2                    ; R2=P-5959489700658531511 R4_w=P-5959489700658531511
1128: (67) r4 <<= 4                   ; R4_w=P-3118114841988746096
1129: (4f) r4 |= r1                   ; R1_w=P2 R4_w=P-3118114841988746094
; __jhash_final(a, b, c);
1130: (bf) r1 = r2                    ; R1_w=P-5959489700658531511 R2=P-5959489700658531511
1131: (af) r1 ^= r3                   ; R1_w=P-4916564071227786751 R3=P1625650720539855176
1132: (1f) r1 -= r4                   ; R1_w=P-1798449229239040657 R4_w=P-3118114841988746094
1133: (05) goto pc+0
1134: (05) goto pc+0
1135: (05) goto pc+0
1136: (bc) w3 = w1                    ; R1=P-1798449229239040657 R3_w=P1621214575
; return (word << shift) | (word >> ((-shift) & 31));
1137: (77) r3 >>= 18                  ; R3_w=P6184
1138: (bf) r4 = r1                    ; R1=P-1798449229239040657 R4_w=P-1798449229239040657
1139: (67) r4 <<= 14                  ; R4_w=P-6341886138288193536
1140: (4f) r4 |= r3                   ; R3_w=P6184 R4_w=P-6341886138288187352
; __jhash_final(a, b, c);
1141: (af) r1 ^= r7                   ; R1_w=P-1226460270496733532 R7=P716110916760396747
1142: (1f) r1 -= r4                   ; R1_w=P5115425867791453820 R4_w=P-6341886138288187352
1143: (05) goto pc+0
1144: (05) goto pc+0
1145: (05) goto pc+0
1146: (bc) w4 = w1                    ; R1=P5115425867791453820 R4_w=P1552797308
; return (word << shift) | (word >> ((-shift) & 31));
1147: (77) r4 >>= 8                   ; R4_w=P6065614
1148: (bf) r5 = r1                    ; R1=P5115425867791453820 R5_w=P5115425867791453820
1149: (67) r5 <<= 24                  ; R5_w=P-5090037560852348928
1150: (4f) r5 |= r4                   ; R4_w=P6065614 R5_w=P-5090037560846283314
; __jhash_final(a, b, c);
1151: (af) r1 ^= r2                   ; R1_w=P-1461973296061088459 R2=P-5959489700658531511
; a += initval;
1152: (1f) r1 -= r5                   ; R1_w=P3628064264785194855 R5_w=P-5090037560846283314
1153: (07) r1 += -525483785           ; R1_w=P3628064264259711070
1154: (79) r7 = *(u64 *)(r10 -176)    ; R7_w=scalar() R10=fp0
; __jhash_final(a, b, c);
1155: (af) r1 ^= r7
last_idx 1155 first_idx 1144
regs=80 stack=0 before 1154: (79) r7 = *(u64 *)(r10 -176)
regs=0 stack=200000 before 1153: (07) r1 += -525483785
regs=0 stack=200000 before 1152: (1f) r1 -= r5
regs=0 stack=200000 before 1151: (af) r1 ^= r2
regs=0 stack=200000 before 1150: (4f) r5 |= r4
regs=0 stack=200000 before 1149: (67) r5 <<= 24
regs=0 stack=200000 before 1148: (bf) r5 = r1
regs=0 stack=200000 before 1147: (77) r4 >>= 8
regs=0 stack=200000 before 1146: (bc) w4 = w1
regs=0 stack=200000 before 1145: (05) goto pc+0
regs=0 stack=200000 before 1144: (05) goto pc+0
parent already had regs=0 stack=0 marks: R0=P0 R1_rw=P5115425867791453820 R2_r=P-5959489700658531511 R3_w=P6184 R4_w=P-6341886138288187352 R5=P8044009612454092821 R6=ctx(off=0,imm=0) R7=P716110916760396747 R8=scalar() R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176_r=mmmmmmmm fp-184=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
1156: (1f) r1 -= r8                   ; R1_w=scalar() R8=scalar()
1157: (05) goto pc+0
1158: (bc) w2 = w1                    ; R1=scalar() R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1159: (77) r2 >>= 7                   ; R2_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff))
1160: (bf) r4 = r1                    ; R1=scalar(id=538) R4_w=scalar(id=538)
1161: (67) r4 <<= 25                  ; R4_w=scalar(smax=9223372036821221376,umax=18446744073675997184,var_off=(0x0; 0xfffffffffe000000),s32_max=2113929216,u32_max=-33554432)
1162: (4f) r4 |= r2                   ; R2_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff)) R4_w=scalar()
; __jhash_final(a, b, c);
1163: (bf) r0 = r1                    ; R0_w=scalar(id=538) R1=scalar(id=538)
1164: (79) r2 = *(u64 *)(r10 -168)    ; R2_w=scalar(smin=-525483785,smax=3769483510) R10=fp0
1165: (af) r0 ^= r2                   ; R0_w=scalar() R2_w=scalar(smin=-525483785,smax=3769483510)
1166: (1f) r0 -= r4                   ; R0_w=scalar() R4_w=scalar()
1167: (05) goto pc+0
1168: (05) goto pc+0
1169: (05) goto pc+0
1170: (bc) w2 = w0                    ; R0=scalar() R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1171: (77) r2 >>= 16                  ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff))
1172: (bf) r5 = r0                    ; R0=scalar(id=539) R5_w=scalar(id=539)
1173: (67) r5 <<= 16                  ; R5_w=scalar(smax=9223372036854710272,umax=18446744073709486080,var_off=(0x0; 0xffffffffffff0000),s32_max=2147418112,u32_max=-65536)
1174: (4f) r5 |= r2                   ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R5_w=scalar()
; __jhash_final(a, b, c);
1175: (bf) r4 = r0                    ; R0=scalar(id=539) R4_w=scalar(id=539)
1176: (af) r4 ^= r7                   ; R4_w=scalar() R7=Pscalar()
1177: (1f) r4 -= r5                   ; R4_w=scalar() R5_w=scalar()
1178: (05) goto pc+0
1179: (bc) w2 = w4                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R4=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1180: (77) r2 >>= 28                  ; R2_w=scalar(umax=15,var_off=(0x0; 0xf))
1181: (bf) r5 = r4                    ; R4=scalar(id=540) R5_w=scalar(id=540)
1182: (67) r5 <<= 4                   ; R5_w=scalar(smax=9223372036854775792,umax=18446744073709551600,var_off=(0x0; 0xfffffffffffffff0),s32_max=2147483632,u32_max=-16)
1183: (4f) r5 |= r2                   ; R2_w=scalar(umax=15,var_off=(0x0; 0xf)) R5_w=scalar()
; __jhash_final(a, b, c);
1184: (bf) r2 = r4                    ; R2_w=scalar(id=540) R4=scalar(id=540)
1185: (af) r2 ^= r1                   ; R1=scalar(id=538) R2_w=scalar()
1186: (1f) r2 -= r5                   ; R2_w=scalar() R5_w=scalar()
1187: (05) goto pc+0
1188: (05) goto pc+0
1189: (05) goto pc+0
1190: (bc) w1 = w2                    ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R2=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1191: (77) r1 >>= 18                  ; R1_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1192: (bf) r5 = r2                    ; R2=scalar(id=541) R5_w=scalar(id=541)
1193: (67) r5 <<= 14                  ; R5_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1194: (4f) r5 |= r1                   ; R1_w=scalar(umax=16383,var_off=(0x0; 0x3fff)) R5_w=scalar()
; __jhash_final(a, b, c);
1195: (af) r2 ^= r0                   ; R0=scalar(id=539) R2_w=scalar()
1196: (1f) r2 -= r5                   ; R2_w=scalar() R5_w=scalar()
1197: (05) goto pc+0
1198: (bc) w1 = w2                    ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R2=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1199: (77) r1 >>= 8                   ; R1_w=scalar(umax=16777215,var_off=(0x0; 0xffffff))
1200: (bf) r3 = r2                    ; R2=scalar(id=542) R3_w=scalar(id=542)
1201: (67) r3 <<= 24                  ; R3_w=scalar(smax=9223372036837998592,umax=18446744073692774400,var_off=(0x0; 0xffffffffff000000),s32_max=2130706432,u32_max=-16777216)
1202: (4f) r3 |= r1                   ; R1_w=scalar(umax=16777215,var_off=(0x0; 0xffffff)) R3_w=scalar()
; __jhash_final(a, b, c);
1203: (af) r2 ^= r4                   ; R2_w=scalar() R4=scalar(id=540)
1204: (1f) r2 -= r3                   ; R2_w=scalar() R3_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1205: (79) r1 = *(u64 *)(r10 -144)    ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
1206: (61) r1 = *(u32 *)(r1 +4)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; key = RING_SIZE * (vip_info->vip_num) + hash;
1207: (27) r1 *= 65537                ; R1_w=scalar(umax=281479271612415,var_off=(0x0; 0x1ffffffffffff))
; __jhash_final(a, b, c);
1208: (bc) w2 = w2                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
1209: (05) goto pc+0
; hash = get_packet_hash(pckt, hash_16bytes) % RING_SIZE;
1210: (97) r2 %= 65537                ; R2_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1211: (0f) r2 += r1                   ; R1_w=scalar(umax=281479271612415,var_off=(0x0; 0x1ffffffffffff)) R2_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1212: (63) *(u32 *)(r10 -20) = r2     ; R2_w=scalar() R10=fp0 fp-24=mmmm????
1213: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1214: (07) r2 += -20                  ; R2_w=fp-20
; real_pos = bpf_map_lookup_elem(&ch_rings, &key);
1215: (18) r1 = 0xffffaebaa0631000    ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
1217: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=543,off=0,ks=4,vs=4,imm=0)
; if (!real_pos) {
1218: (15) if r0 == 0x0 goto pc+638   ; R0=map_value(off=0,ks=4,vs=4,imm=0)
; key = *real_pos;
1219: (61) r1 = *(u32 *)(r0 +0)       ; R0=map_value(off=0,ks=4,vs=4,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; key = *real_pos;
1220: (63) *(u32 *)(r10 -20) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-24=mmmm????
1221: (79) r8 = *(u64 *)(r10 -192)    ; R8_w=1 R10=fp0
; if (key == 0) {
1222: (55) if r1 != 0x0 goto pc+12    ; R1_w=0
1223: (05) goto pc+0
; __u32 ch_drop_stats_key = MAX_VIPS + CH_DROP_STATS;
1224: (62) *(u32 *)(r10 -28) = 521    ; R10=fp0 fp-32=mmmm????
1225: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1226: (07) r2 += -28                  ; R2_w=fp-28
; bpf_map_lookup_elem(&stats, &ch_drop_stats_key);
1227: (18) r1 = 0xffffa03499be8000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
1229: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=544,off=0,ks=4,vs=16,imm=0)
; if (!ch_drop_stats) {
1230: (15) if r0 == 0x0 goto pc+3     ; R0=map_value(off=0,ks=4,vs=16,imm=0)
; ch_drop_stats->v2 += 1;
1231: (79) r1 = *(u64 *)(r0 +8)       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1232: (07) r1 += 1                    ; R1_w=scalar()
1233: (7b) *(u64 *)(r0 +8) = r1       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
; pckt->real_index = key;
1234: (61) r1 = *(u32 *)(r10 -20)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; pckt->real_index = key;
1235: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1236: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1237: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1238: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1240: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=545,off=0,ks=4,vs=20,imm=0)
1241: (bf) r7 = r0                    ; R0=map_value_or_null(id=545,off=0,ks=4,vs=20,imm=0) R7_w=map_value_or_null(id=545,off=0,ks=4,vs=20,imm=0)
; if (!(*real)) {
1242: (55) if r7 != 0x0 goto pc+9     ; R7_w=0
1243: (05) goto pc+0
; __u32 ch_drop_stats_key = MAX_VIPS + CH_DROP_STATS;
1244: (62) *(u32 *)(r10 -28) = 521    ; R10=fp0 fp-32=mmmm????
1245: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1246: (07) r2 += -28                  ; R2_w=fp-28
; bpf_map_lookup_elem(&stats, &ch_drop_stats_key);
1247: (18) r1 = 0xffffa03499be8000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
1249: (85) call bpf_map_lookup_elem#1
1250: safe

from 1242 to 1252: R0=map_value(off=0,ks=4,vs=20,imm=0) R6=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=20,imm=0) R8=1 R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
; if (lru_map && !(vip_info->flags & F_LRU_BYPASS) && !under_flood) {
1252: (79) r1 = *(u64 *)(r10 -152)    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0
1253: (15) if r1 == 0x0 goto pc+19    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0)
; if (lru_map && !(vip_info->flags & F_LRU_BYPASS) && !under_flood) {
1254: (79) r1 = *(u64 *)(r10 -144)    ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
1255: (61) r1 = *(u32 *)(r1 +0)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (lru_map && !(vip_info->flags & F_LRU_BYPASS) && !under_flood) {
1256: (57) r1 &= 2                    ; R1_w=scalar(umax=2,var_off=(0x0; 0x2))
1257: (77) r1 >>= 1                   ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
; if (lru_map && !(vip_info->flags & F_LRU_BYPASS) && !under_flood) {
1258: (4f) r8 |= r1                   ; R1_w=scalar(umax=1,var_off=(0x0; 0x1)) R8_w=scalar()
1259: (55) if r8 != 0x0 goto pc+13    ; R8_w=0
; if (pckt->flow.proto == IPPROTO_UDP) {
1260: (71) r1 = *(u8 *)(r10 -44)
1261: safe

from 1259 to 1273: R0=map_value(off=0,ks=4,vs=20,imm=0) R1=scalar(umax=1,var_off=(0x0; 0x1)) R6=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=20,imm=0) R8=scalar() R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
; bpf_map_update_elem(lru_map, &pckt->flow, &new_dst_lru, BPF_ANY);
1273: (05) goto pc+0
1274: safe

from 1253 to 1273: safe

from 1230 to 1234: R0=0 R6=ctx(off=0,imm=0) R7=Pscalar() R8=1 R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
; pckt->real_index = key;
1234: (61) r1 = *(u32 *)(r10 -20)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; pckt->real_index = key;
1235: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1236: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1237: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1238: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1240: (85) call bpf_map_lookup_elem#1
1241: safe

from 1222 to 1235: R0=map_value(off=0,ks=4,vs=4,imm=0) R1=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6=ctx(off=0,imm=0) R7=Pscalar() R8=1 R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
; pckt->real_index = key;
1235: (63) *(u32 *)(r10 -40) = r1     ; R1=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1236: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1237: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1238: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1240: (85) call bpf_map_lookup_elem#1
1241: safe

from 1218 to 1857: safe

from 935 to 952: R0=0 R6=ctx(off=0,imm=0) R7=P0 R8_w=1 R9_w=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0 fp-200=
; if (conn_rate_stats->v1 > MAX_CONN_RATE) {
952: (7b) *(u64 *)(r10 -192) = r8     ; R8_w=1 R10=fp0 fp-192_w=1
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
953: (79) r1 = *(u64 *)(r10 -144)     ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
954: (61) r1 = *(u32 *)(r1 +0)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
955: (57) r1 &= 8                     ; R1_w=scalar(umax=8,var_off=(0x0; 0x8))
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
956: (7b) *(u64 *)(r10 -208) = r7     ; R7=P0 R10=fp0 fp-208_w=00000000
957: (55) if r1 != 0x0 goto pc+9      ; R1_w=0
; a += k[0];
958: (71) r1 = *(u8 *)(r10 -68)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; a += (u32)k[1] << 8;
959: (7b) *(u64 *)(r10 -184) = r1     ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0 fp-184_w=
960: (71) r9 = *(u8 *)(r10 -67)       ; R9_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; a += (u32)k[2] << 16;
961: (71) r0 = *(u8 *)(r10 -66)       ; R0_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; b += *(u32*)(k + 4);
962: (61) r1 = *(u32 *)(r10 -76)      ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; c += *(u32*)(k + 8);
963: (61) r8 = *(u32 *)(r10 -72)      ; R8_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; a += *(u32*)(k);
964: (61) r3 = *(u32 *)(r10 -80)      ; R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; a += (u32)k[3] << 24;
965: (71) r4 = *(u8 *)(r10 -65)       ; R4_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
966: (05) goto pc+12
979: safe

from 957 to 967: safe

from 916 to 918: R0=map_value(off=0,ks=4,vs=16,imm=0) R1=1 R2=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=40,vs=16,imm=0) R10=fp0 fp-16=????mmmm fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0 fp-200=
; if (pckt.flags & F_SYN_SET) {
918: (67) r1 <<= 3                    ; R1_w=8
; 
919: (0f) r0 += r1
last_idx 919 first_idx 918
regs=2 stack=0 before 918: (67) r1 <<= 3
parent didn't have regs=2 stack=0 marks: R0_r=map_value(off=0,ks=4,vs=16,imm=0) R1_rw=P1 R2_w=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=40,vs=16,imm=0) R10=fp0 fp-16=????mmmm fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0 fp-200=
last_idx 916 first_idx 912
regs=2 stack=0 before 916: (15) if r2 == 0x0 goto pc+1
regs=2 stack=0 before 915: (b7) r1 = 1
920: (79) r1 = *(u64 *)(r0 +0)        ; R0_w=map_value(off=8,ks=4,vs=16,imm=0) R1_w=scalar()
921: (07) r1 += 1                     ; R1_w=scalar()
922: (7b) *(u64 *)(r0 +0) = r1
923: safe

from 912 to 1857: safe

from 904 to 923: safe

from 902 to 1320: R0=map_value(off=0,ks=4,vs=20,imm=0) R6=ctx(off=0,imm=0) R7=pkt(off=0,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=40,vs=16,imm=0) R10=fp0 fp-16=????mmmm fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176_w=map_value fp-200=
; data_stats->v2 += 1;
1320: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1321: (07) r2 += -112                 ; R2_w=fp-112
; cval = bpf_map_lookup_elem(&ctl_array, &mac_addr_pos);
1322: (18) r1 = 0xffffa03553eeca00    ; R1_w=map_ptr(off=0,ks=4,vs=8,imm=0)
1324: (85) call bpf_map_lookup_elem#1
1325: safe

from 891 to 903: R0=scalar(id=414) R1=30000000000 R2=scalar(umin=30000000001) R6=ctx(off=0,imm=0) R7=pkt(off=0,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=40,vs=16,imm=0) R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-200=
; if (pckt.flow.proto == IPPROTO_TCP) {
903: (71) r1 = *(u8 *)(r10 -44)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (pckt.flow.proto == IPPROTO_TCP) {
904: (55) if r1 != 0x6 goto pc+18     ; R1_w=6
905: (05) goto pc+0
; __u32 lru_stats_key = MAX_VIPS + LRU_MISS_CNTR;
906: (62) *(u32 *)(r10 -16) = 513     ; R10=fp0 fp-16=????mmmm
907: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
908: (07) r2 += -16                   ; R2_w=fp-16
; bpf_map_lookup_elem(&stats, &lru_stats_key);
909: (18) r1 = 0xffffa03499be8000     ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
911: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=550,off=0,ks=4,vs=16,imm=0)
; if (!lru_stats) {
912: (15) if r0 == 0x0 goto pc+944    ; R0_w=map_value(off=0,ks=4,vs=16,imm=0)
; if (pckt.flags & F_SYN_SET) {
913: (71) r2 = *(u8 *)(r10 -36)       ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (pckt.flags & F_SYN_SET) {
914: (57) r2 &= 2                     ; R2_w=scalar(umax=2,var_off=(0x0; 0x2))
915: (b7) r1 = 1                      ; R1=1
916: (15) if r2 == 0x0 goto pc+1      ; R2=scalar(umax=2,var_off=(0x0; 0x2))
917: (b7) r1 = 0                      ; R1_w=0
; if (pckt.flags & F_SYN_SET) {
918: (67) r1 <<= 3                    ; R1_w=0
; 
919: (0f) r0 += r1
last_idx 919 first_idx 916
regs=2 stack=0 before 918: (67) r1 <<= 3
regs=2 stack=0 before 917: (b7) r1 = 0
920: R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=P0
920: (79) r1 = *(u64 *)(r0 +0)        ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
921: (07) r1 += 1                     ; R1_w=scalar()
922: (7b) *(u64 *)(r0 +0) = r1        ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
923: (b7) r7 = 0                      ; R7_w=0
; struct real_pos_lru new_dst_lru = {};
924: (7b) *(u64 *)(r10 -8) = r7
last_idx 924 first_idx 916
regs=80 stack=0 before 923: (b7) r7 = 0
925: R7_w=P0 R10=fp0 fp-8_w=00000000
925: (7b) *(u64 *)(r10 -16) = r7      ; R7_w=P0 R10=fp0 fp-16_w=00000000
926: (05) goto pc+0
; __u32 conn_rate_key = MAX_VIPS + NEW_CONN_RATE_CNTR;
927: (62) *(u32 *)(r10 -28) = 514     ; R10=fp0 fp-32=mmmm????
928: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; 
929: (07) r2 += -28                   ; R2_w=fp-28
; bpf_map_lookup_elem(&stats, &conn_rate_key);
930: (18) r1 = 0xffffa03499be8000     ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
932: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=551,off=0,ks=4,vs=16,imm=0)
933: (bf) r9 = r0                     ; R0_w=map_value_or_null(id=551,off=0,ks=4,vs=16,imm=0) R9_w=map_value_or_null(id=551,off=0,ks=4,vs=16,imm=0)
934: (b7) r8 = 1                      ; R8_w=1
; if (!conn_rate_stats) {
935: (15) if r9 == 0x0 goto pc+16     ; R9_w=map_value(off=0,ks=4,vs=16,imm=0)
; *cur_time = bpf_ktime_get_ns();
936: (85) call bpf_ktime_get_ns#5     ; R0=scalar()
937: (bf) r7 = r0                     ; R0=scalar(id=552) R7_w=scalar(id=552)
; if ((*cur_time - conn_rate_stats->v2) > ONE_SEC) {
938: (79) r1 = *(u64 *)(r9 +8)        ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=16,imm=0)
; if ((*cur_time - conn_rate_stats->v2) > ONE_SEC) {
939: (bf) r2 = r7                     ; R2_w=scalar(id=552) R7_w=scalar(id=552)
940: (1f) r2 -= r1                    ; R1_w=scalar() R2_w=scalar()
941: (b7) r1 = 1000000001             ; R1_w=1000000001
; if ((*cur_time - conn_rate_stats->v2) > ONE_SEC) {
942: (2d) if r1 > r2 goto pc+4        ; R1_w=1000000001 R2_w=scalar(umin=1000000001)
; conn_rate_stats->v2 = *cur_time;
943: (7b) *(u64 *)(r9 +8) = r7        ; R7_w=scalar(id=552) R9=map_value(off=0,ks=4,vs=16,imm=0)
944: (05) goto pc+0
; conn_rate_stats->v1 = 1;
945: (7a) *(u64 *)(r9 +0) = 1         ; R9=map_value(off=0,ks=4,vs=16,imm=0)
946: (05) goto pc+4
; if (conn_rate_stats->v1 > MAX_CONN_RATE) {
951: (b7) r8 = 0                      ; R8_w=0
952: (7b) *(u64 *)(r10 -192) = r8
last_idx 952 first_idx 945
regs=100 stack=0 before 951: (b7) r8 = 0
953: R8_w=P0 R10=fp0 fp-192_w=00000000
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
953: (79) r1 = *(u64 *)(r10 -144)     ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
954: (61) r1 = *(u32 *)(r1 +0)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
955: (57) r1 &= 8                     ; R1_w=scalar(umax=8,var_off=(0x0; 0x8))
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
956: (7b) *(u64 *)(r10 -208) = r7     ; R7=scalar(id=552) R10=fp0 fp-208_w=mmmmmmmm
957: (55) if r1 != 0x0 goto pc+9      ; R1_w=0
; a += k[0];
958: (71) r1 = *(u8 *)(r10 -68)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; a += (u32)k[1] << 8;
959: (7b) *(u64 *)(r10 -184) = r1     ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0 fp-184_w=
960: (71) r9 = *(u8 *)(r10 -67)       ; R9_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; a += (u32)k[2] << 16;
961: (71) r0 = *(u8 *)(r10 -66)       ; R0_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; b += *(u32*)(k + 4);
962: (61) r1 = *(u32 *)(r10 -76)      ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; c += *(u32*)(k + 8);
963: (61) r8 = *(u32 *)(r10 -72)      ; R8_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; a += *(u32*)(k);
964: (61) r3 = *(u32 *)(r10 -80)      ; R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; a += (u32)k[3] << 24;
965: (71) r4 = *(u8 *)(r10 -65)       ; R4_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
966: (05) goto pc+12
; __jhash_mix(a, b, c);
979: (1f) r3 -= r8                    ; R3_w=scalar(smin=-4294967295,smax=4294967295) R8=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; c += *(u32*)(k + 8);
980: (07) r8 += -559038209            ; R8_w=scalar(smin=-559038209,smax=3735929086)
981: (05) goto pc+0
982: (05) goto pc+0
983: (05) goto pc+0
984: (bc) w5 = w8                     ; R5_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R8_w=scalar(smin=-559038209,smax=3735929086)
; return (word << shift) | (word >> ((-shift) & 31));
985: (77) r5 >>= 28                   ; R5_w=scalar(umax=15,var_off=(0x0; 0xf))
986: (bf) r2 = r8                     ; R2_w=scalar(id=553,smin=-559038209,smax=3735929086) R8_w=scalar(id=553,smin=-559038209,smax=3735929086)
987: (67) r2 <<= 4                    ; R2_w=scalar(smax=9223372036854775792,umax=18446744073709551600,var_off=(0x0; 0xfffffffffffffff0),s32_max=2147483632,u32_max=-16)
988: (4f) r2 |= r5                    ; R2_w=scalar() R5_w=scalar(umax=15,var_off=(0x0; 0xf))
; __jhash_mix(a, b, c);
989: (af) r2 ^= r3                    ; R2_w=scalar() R3_w=scalar(smin=-4294967295,smax=4294967295)
990: (05) goto pc+0
991: (05) goto pc+0
992: (05) goto pc+0
993: (bc) w5 = w2                     ; R2=scalar() R5_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
994: (77) r5 >>= 26                   ; R5_w=scalar(umax=63,var_off=(0x0; 0x3f))
995: (bf) r7 = r2                     ; R2=scalar(id=554) R7_w=scalar(id=554)
996: (67) r7 <<= 6                    ; R7_w=scalar(smax=9223372036854775744,umax=18446744073709551552,var_off=(0x0; 0xffffffffffffffc0),s32_max=2147483584,u32_max=-64)
997: (4f) r7 |= r5                    ; R5_w=scalar(umax=63,var_off=(0x0; 0x3f)) R7_w=scalar()
; b += *(u32*)(k + 4);
998: (07) r1 += -559038209            ; R1_w=scalar(smin=-559038209,smax=3735929086)
; __jhash_mix(a, b, c);
999: (bf) r3 = r1                     ; R1_w=scalar(id=555,smin=-559038209,smax=3735929086) R3_w=scalar(id=555,smin=-559038209,smax=3735929086)
1000: (1f) r3 -= r2                   ; R2=scalar(id=554) R3_w=scalar()
1001: (af) r3 ^= r7                   ; R3_w=scalar() R7_w=scalar()
; a += (u32)k[3] << 24;
1002: (67) r4 <<= 24                  ; R4_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; a += (u32)k[2] << 16;
1003: (57) r0 &= 255                  ; R0_w=scalar(umax=255,var_off=(0x0; 0xff))
; a += (u32)k[2] << 16;
1004: (67) r0 <<= 16                  ; R0_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; a += (u32)k[3] << 24;
1005: (4f) r0 |= r4                   ; R0_w=scalar() R4_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; pckt->flow.ports,
1006: (61) r5 = *(u32 *)(r10 -48)     ; R5_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; b += initval;
1007: (07) r5 += -525483785           ; R5_w=scalar(smin=-525483785,smax=3769483510)
1008: (05) goto pc+0
1009: (7b) *(u64 *)(r10 -168) = r5    ; R5=scalar(smin=-525483785,smax=3769483510) R10=fp0 fp-168_w=
1010: (05) goto pc+0
1011: (05) goto pc+0
1012: (bc) w4 = w5                    ; R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R5=scalar(smin=-525483785,smax=3769483510)
; return (word << shift) | (word >> ((-shift) & 31));
1013: (77) r4 >>= 18                  ; R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1014: (bf) r7 = r5                    ; R5=scalar(id=556,smin=-525483785,smax=3769483510) R7_w=scalar(id=556,smin=-525483785,smax=3769483510)
1015: (67) r7 <<= 14                  ; R7_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1016: (4f) r7 |= r4                   ; R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff)) R7_w=scalar()
; __jhash_final(a, b, c);
1017: (a7) r5 ^= -525483785           ; R5_w=scalar()
1018: (1f) r5 -= r7                   ; R5_w=scalar() R7_w=scalar()
; __jhash_mix(a, b, c);
1019: (0f) r1 += r8                   ; R1_w=scalar(smin=-1118076418,smax=7471858172) R8=scalar(id=553,smin=-559038209,smax=3735929086)
; a += (u32)k[1] << 8;
1020: (57) r9 &= 255                  ; R9_w=scalar(umax=255,var_off=(0x0; 0xff))
; a += (u32)k[1] << 8;
1021: (67) r9 <<= 8                   ; R9_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; a += (u32)k[2] << 16;
1022: (4f) r0 |= r9                   ; R0_w=scalar() R9_w=scalar(umax=65280,var_off=(0x0; 0xff00))
1023: (79) r4 = *(u64 *)(r10 -184)    ; R4_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; a += k[0];
1024: (57) r4 &= 255                  ; R4_w=scalar(umax=255,var_off=(0x0; 0xff))
; a += (u32)k[1] << 8;
1025: (4f) r0 |= r4                   ; R0_w=scalar() R4_w=scalar(umax=255,var_off=(0x0; 0xff))
1026: (05) goto pc+0
1027: (05) goto pc+0
; __jhash_mix(a, b, c);
1028: (05) goto pc+0
1029: (bc) w7 = w3                    ; R3=scalar() R7_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1030: (77) r7 >>= 24                  ; R7_w=scalar(umax=255,var_off=(0x0; 0xff))
1031: (bf) r4 = r3                    ; R3=scalar(id=557) R4_w=scalar(id=557)
1032: (67) r4 <<= 8                   ; R4_w=scalar(smax=9223372036854775552,umax=18446744073709551360,var_off=(0x0; 0xffffffffffffff00),s32_max=2147483392,u32_max=-256)
1033: (4f) r4 |= r7                   ; R4_w=scalar() R7_w=scalar(umax=255,var_off=(0x0; 0xff))
; __jhash_mix(a, b, c);
1034: (0f) r2 += r1                   ; R1=scalar(smin=-1118076418,smax=7471858172) R2_w=scalar()
1035: (1f) r1 -= r3                   ; R1_w=scalar() R3=scalar(id=557)
1036: (af) r1 ^= r4                   ; R1_w=scalar() R4_w=scalar()
1037: (05) goto pc+0
1038: (05) goto pc+0
; __jhash_final(a, b, c);
1039: (7b) *(u64 *)(r10 -176) = r5    ; R5=scalar() R10=fp0 fp-176_w=mmmmmmmm
1040: (05) goto pc+0
1041: (bc) w4 = w5                    ; R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R5=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1042: (77) r4 >>= 21                  ; R4_w=scalar(umax=2047,var_off=(0x0; 0x7ff))
1043: (bf) r8 = r5                    ; R5=scalar(id=558) R8_w=scalar(id=558)
1044: (67) r8 <<= 11                  ; R8_w=scalar(smax=9223372036854773760,umax=18446744073709549568,var_off=(0x0; 0xfffffffffffff800),s32_max=2147481600,u32_max=-2048)
1045: (4f) r8 |= r4                   ; R4_w=scalar(umax=2047,var_off=(0x0; 0x7ff)) R8_w=scalar()
1046: (05) goto pc+0
1047: (05) goto pc+0
; __jhash_mix(a, b, c);
1048: (05) goto pc+0
1049: (bc) w4 = w1                    ; R1=scalar() R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1050: (77) r4 >>= 16                  ; R4_w=scalar(umax=65535,var_off=(0x0; 0xffff))
1051: (bf) r7 = r1                    ; R1=scalar(id=559) R7_w=scalar(id=559)
1052: (67) r7 <<= 16                  ; R7_w=scalar(smax=9223372036854710272,umax=18446744073709486080,var_off=(0x0; 0xffffffffffff0000),s32_max=2147418112,u32_max=-65536)
1053: (4f) r7 |= r4                   ; R4_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R7_w=scalar()
; __jhash_mix(a, b, c);
1054: (0f) r3 += r2                   ; R2=scalar() R3_w=scalar()
1055: (1f) r2 -= r1                   ; R1=scalar(id=559) R2_w=scalar()
1056: (af) r2 ^= r7                   ; R2_w=scalar() R7_w=scalar()
1057: (05) goto pc+0
1058: (05) goto pc+0
1059: (05) goto pc+0
1060: (bc) w7 = w2                    ; R2=scalar() R7_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1061: (77) r7 >>= 13                  ; R7_w=scalar(umax=524287,var_off=(0x0; 0x7ffff))
1062: (bf) r4 = r2                    ; R2=scalar(id=560) R4_w=scalar(id=560)
1063: (67) r4 <<= 19                  ; R4_w=scalar(smax=9223372036854251520,umax=18446744073709027328,var_off=(0x0; 0xfffffffffff80000),s32_max=2146959360,u32_max=-524288)
1064: (4f) r4 |= r7                   ; R4_w=scalar() R7_w=scalar(umax=524287,var_off=(0x0; 0x7ffff))
; __jhash_mix(a, b, c);
1065: (0f) r1 += r3                   ; R1_w=scalar() R3=scalar()
1066: (1f) r3 -= r2                   ; R2=scalar(id=560) R3_w=scalar()
1067: (af) r3 ^= r4                   ; R3_w=scalar() R4_w=scalar()
1068: (0f) r2 += r1                   ; R1_w=scalar() R2_w=scalar()
1069: (bf) r5 = r3                    ; R3_w=scalar(id=561) R5_w=scalar(id=561)
1070: (0f) r5 += r2                   ; R2_w=scalar() R5_w=scalar()
1071: (05) goto pc+0
1072: (05) goto pc+0
1073: (05) goto pc+0
1074: (bc) w4 = w5                    ; R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R5=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1075: (77) r4 >>= 18                  ; R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1076: (bf) r7 = r5                    ; R5=scalar(id=562) R7_w=scalar(id=562)
1077: (67) r7 <<= 14                  ; R7_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1078: (4f) r7 |= r4                   ; R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff)) R7_w=scalar()
; __jhash_mix(a, b, c);
1079: (05) goto pc+0
1080: (05) goto pc+0
1081: (05) goto pc+0
1082: (bc) w4 = w3                    ; R3=scalar(id=561) R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1083: (77) r4 >>= 28                  ; R4_w=scalar(umax=15,var_off=(0x0; 0xf))
; __jhash_mix(a, b, c);
1084: (1f) r1 -= r3                   ; R1_w=scalar() R3=scalar(id=561)
; return (word << shift) | (word >> ((-shift) & 31));
1085: (67) r3 <<= 4                   ; R3_w=scalar(smax=9223372036854775792,umax=18446744073709551600,var_off=(0x0; 0xfffffffffffffff0),s32_max=2147483632,u32_max=-16)
1086: (4f) r3 |= r4                   ; R3_w=scalar() R4_w=scalar(umax=15,var_off=(0x0; 0xf))
; __jhash_mix(a, b, c);
1087: (af) r1 ^= r3                   ; R1_w=scalar() R3_w=scalar()
; a += k[0];
1088: (0f) r2 += r0                   ; R0=scalar() R2_w=scalar()
; __jhash_final(a, b, c);
1089: (af) r1 ^= r5                   ; R1_w=scalar() R5=scalar(id=562)
1090: (1f) r1 -= r7                   ; R1_w=scalar() R7=scalar()
1091: (05) goto pc+0
1092: (05) goto pc+0
1093: (05) goto pc+0
1094: (bc) w3 = w1                    ; R1=scalar() R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1095: (77) r3 >>= 21                  ; R3_w=scalar(umax=2047,var_off=(0x0; 0x7ff))
1096: (bf) r4 = r1                    ; R1=scalar(id=563) R4_w=scalar(id=563)
1097: (67) r4 <<= 11                  ; R4_w=scalar(smax=9223372036854773760,umax=18446744073709549568,var_off=(0x0; 0xfffffffffffff800),s32_max=2147481600,u32_max=-2048)
1098: (4f) r4 |= r3                   ; R3_w=scalar(umax=2047,var_off=(0x0; 0x7ff)) R4_w=scalar()
; __jhash_final(a, b, c);
1099: (bf) r3 = r1                    ; R1=scalar(id=563) R3_w=scalar(id=563)
1100: (af) r3 ^= r2                   ; R2=scalar() R3_w=scalar()
1101: (1f) r3 -= r4                   ; R3_w=scalar() R4_w=scalar()
1102: (05) goto pc+0
1103: (05) goto pc+0
1104: (05) goto pc+0
1105: (bc) w2 = w3                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1106: (77) r2 >>= 7                   ; R2_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff))
1107: (bf) r4 = r3                    ; R3=scalar(id=564) R4_w=scalar(id=564)
1108: (67) r4 <<= 25                  ; R4_w=scalar(smax=9223372036821221376,umax=18446744073675997184,var_off=(0x0; 0xfffffffffe000000),s32_max=2113929216,u32_max=-33554432)
1109: (4f) r4 |= r2                   ; R2_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff)) R4_w=scalar()
; __jhash_final(a, b, c);
1110: (bf) r7 = r3                    ; R3=scalar(id=564) R7_w=scalar(id=564)
1111: (af) r7 ^= r5                   ; R5=scalar(id=562) R7_w=scalar()
1112: (1f) r7 -= r4                   ; R4_w=scalar() R7_w=scalar()
1113: (05) goto pc+0
1114: (05) goto pc+0
1115: (05) goto pc+0
1116: (bc) w2 = w7                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R7=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1117: (77) r2 >>= 16                  ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff))
1118: (bf) r4 = r7                    ; R4_w=scalar(id=565) R7=scalar(id=565)
1119: (67) r4 <<= 16                  ; R4_w=scalar(smax=9223372036854710272,umax=18446744073709486080,var_off=(0x0; 0xffffffffffff0000),s32_max=2147418112,u32_max=-65536)
1120: (4f) r4 |= r2                   ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R4_w=scalar()
; __jhash_final(a, b, c);
1121: (bf) r2 = r7                    ; R2_w=scalar(id=565) R7=scalar(id=565)
1122: (af) r2 ^= r1                   ; R1=scalar(id=563) R2_w=scalar()
1123: (1f) r2 -= r4                   ; R2_w=scalar() R4_w=scalar()
1124: (05) goto pc+0
1125: (bc) w1 = w2                    ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R2=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1126: (77) r1 >>= 28                  ; R1_w=scalar(umax=15,var_off=(0x0; 0xf))
1127: (bf) r4 = r2                    ; R2=scalar(id=566) R4_w=scalar(id=566)
1128: (67) r4 <<= 4                   ; R4_w=scalar(smax=9223372036854775792,umax=18446744073709551600,var_off=(0x0; 0xfffffffffffffff0),s32_max=2147483632,u32_max=-16)
1129: (4f) r4 |= r1                   ; R1_w=scalar(umax=15,var_off=(0x0; 0xf)) R4_w=scalar()
; __jhash_final(a, b, c);
1130: (bf) r1 = r2                    ; R1_w=scalar(id=566) R2=scalar(id=566)
1131: (af) r1 ^= r3                   ; R1_w=scalar() R3=scalar(id=564)
1132: (1f) r1 -= r4                   ; R1_w=scalar() R4_w=scalar()
1133: (05) goto pc+0
1134: (05) goto pc+0
1135: (05) goto pc+0
1136: (bc) w3 = w1                    ; R1=scalar() R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1137: (77) r3 >>= 18                  ; R3_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1138: (bf) r4 = r1                    ; R1=scalar(id=567) R4_w=scalar(id=567)
1139: (67) r4 <<= 14                  ; R4_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1140: (4f) r4 |= r3                   ; R3_w=scalar(umax=16383,var_off=(0x0; 0x3fff)) R4_w=scalar()
; __jhash_final(a, b, c);
1141: (af) r1 ^= r7                   ; R1_w=scalar() R7=scalar(id=565)
1142: (1f) r1 -= r4                   ; R1_w=scalar() R4_w=scalar()
1143: (05) goto pc+0
1144: (05) goto pc+0
1145: (05) goto pc+0
1146: (bc) w4 = w1                    ; R1=scalar() R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1147: (77) r4 >>= 8                   ; R4_w=scalar(umax=16777215,var_off=(0x0; 0xffffff))
1148: (bf) r5 = r1                    ; R1=scalar(id=568) R5_w=scalar(id=568)
1149: (67) r5 <<= 24                  ; R5_w=scalar(smax=9223372036837998592,umax=18446744073692774400,var_off=(0x0; 0xffffffffff000000),s32_max=2130706432,u32_max=-16777216)
1150: (4f) r5 |= r4                   ; R4_w=scalar(umax=16777215,var_off=(0x0; 0xffffff)) R5_w=scalar()
; __jhash_final(a, b, c);
1151: (af) r1 ^= r2                   ; R1_w=scalar() R2=scalar(id=566)
; a += initval;
1152: (1f) r1 -= r5                   ; R1_w=scalar() R5_w=scalar()
1153: (07) r1 += -525483785           ; R1_w=scalar()
1154: (79) r7 = *(u64 *)(r10 -176)    ; R7_w=scalar() R10=fp0
; __jhash_final(a, b, c);
1155: (af) r1 ^= r7                   ; R1_w=scalar() R7_w=scalar()
1156: (1f) r1 -= r8                   ; R1_w=scalar() R8=scalar()
1157: (05) goto pc+0
1158: (bc) w2 = w1                    ; R1=scalar() R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1159: (77) r2 >>= 7                   ; R2_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff))
1160: (bf) r4 = r1                    ; R1=scalar(id=569) R4_w=scalar(id=569)
1161: (67) r4 <<= 25                  ; R4_w=scalar(smax=9223372036821221376,umax=18446744073675997184,var_off=(0x0; 0xfffffffffe000000),s32_max=2113929216,u32_max=-33554432)
1162: (4f) r4 |= r2                   ; R2_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff)) R4_w=scalar()
; __jhash_final(a, b, c);
1163: (bf) r0 = r1                    ; R0_w=scalar(id=569) R1=scalar(id=569)
1164: (79) r2 = *(u64 *)(r10 -168)    ; R2_w=scalar(smin=-525483785,smax=3769483510) R10=fp0
1165: (af) r0 ^= r2                   ; R0_w=scalar() R2_w=scalar(smin=-525483785,smax=3769483510)
1166: (1f) r0 -= r4                   ; R0_w=scalar() R4_w=scalar()
1167: (05) goto pc+0
1168: (05) goto pc+0
1169: (05) goto pc+0
1170: (bc) w2 = w0                    ; R0=scalar() R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1171: (77) r2 >>= 16                  ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff))
1172: (bf) r5 = r0                    ; R0=scalar(id=570) R5_w=scalar(id=570)
1173: (67) r5 <<= 16                  ; R5_w=scalar(smax=9223372036854710272,umax=18446744073709486080,var_off=(0x0; 0xffffffffffff0000),s32_max=2147418112,u32_max=-65536)
1174: (4f) r5 |= r2                   ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R5_w=scalar()
; __jhash_final(a, b, c);
1175: (bf) r4 = r0                    ; R0=scalar(id=570) R4_w=scalar(id=570)
1176: (af) r4 ^= r7                   ; R4_w=scalar() R7=scalar()
1177: (1f) r4 -= r5                   ; R4_w=scalar() R5_w=scalar()
1178: (05) goto pc+0
1179: (bc) w2 = w4                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R4=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1180: (77) r2 >>= 28                  ; R2_w=scalar(umax=15,var_off=(0x0; 0xf))
1181: (bf) r5 = r4                    ; R4=scalar(id=571) R5_w=scalar(id=571)
1182: (67) r5 <<= 4                   ; R5_w=scalar(smax=9223372036854775792,umax=18446744073709551600,var_off=(0x0; 0xfffffffffffffff0),s32_max=2147483632,u32_max=-16)
1183: (4f) r5 |= r2                   ; R2_w=scalar(umax=15,var_off=(0x0; 0xf)) R5_w=scalar()
; __jhash_final(a, b, c);
1184: (bf) r2 = r4                    ; R2_w=scalar(id=571) R4=scalar(id=571)
1185: (af) r2 ^= r1                   ; R1=scalar(id=569) R2_w=scalar()
1186: (1f) r2 -= r5                   ; R2_w=scalar() R5_w=scalar()
1187: (05) goto pc+0
1188: (05) goto pc+0
1189: (05) goto pc+0
1190: (bc) w1 = w2                    ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R2=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1191: (77) r1 >>= 18                  ; R1_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1192: (bf) r5 = r2                    ; R2=scalar(id=572) R5_w=scalar(id=572)
1193: (67) r5 <<= 14                  ; R5_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1194: (4f) r5 |= r1                   ; R1_w=scalar(umax=16383,var_off=(0x0; 0x3fff)) R5_w=scalar()
; __jhash_final(a, b, c);
1195: (af) r2 ^= r0                   ; R0=scalar(id=570) R2_w=scalar()
1196: (1f) r2 -= r5                   ; R2_w=scalar() R5_w=scalar()
1197: (05) goto pc+0
1198: (bc) w1 = w2                    ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R2=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1199: (77) r1 >>= 8                   ; R1_w=scalar(umax=16777215,var_off=(0x0; 0xffffff))
1200: (bf) r3 = r2                    ; R2=scalar(id=573) R3_w=scalar(id=573)
1201: (67) r3 <<= 24                  ; R3_w=scalar(smax=9223372036837998592,umax=18446744073692774400,var_off=(0x0; 0xffffffffff000000),s32_max=2130706432,u32_max=-16777216)
1202: (4f) r3 |= r1                   ; R1_w=scalar(umax=16777215,var_off=(0x0; 0xffffff)) R3_w=scalar()
; __jhash_final(a, b, c);
1203: (af) r2 ^= r4                   ; R2_w=scalar() R4=scalar(id=571)
1204: (1f) r2 -= r3                   ; R2_w=scalar() R3_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1205: (79) r1 = *(u64 *)(r10 -144)    ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
1206: (61) r1 = *(u32 *)(r1 +4)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; key = RING_SIZE * (vip_info->vip_num) + hash;
1207: (27) r1 *= 65537                ; R1_w=scalar(umax=281479271612415,var_off=(0x0; 0x1ffffffffffff))
; __jhash_final(a, b, c);
1208: (bc) w2 = w2                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
1209: (05) goto pc+0
; hash = get_packet_hash(pckt, hash_16bytes) % RING_SIZE;
1210: (97) r2 %= 65537                ; R2_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1211: (0f) r2 += r1                   ; R1_w=scalar(umax=281479271612415,var_off=(0x0; 0x1ffffffffffff)) R2_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1212: (63) *(u32 *)(r10 -20) = r2     ; R2_w=scalar() R10=fp0 fp-24=mmmm????
1213: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1214: (07) r2 += -20                  ; R2_w=fp-20
; real_pos = bpf_map_lookup_elem(&ch_rings, &key);
1215: (18) r1 = 0xffffaebaa0631000    ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
1217: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=574,off=0,ks=4,vs=4,imm=0)
; if (!real_pos) {
1218: (15) if r0 == 0x0 goto pc+638   ; R0=map_value(off=0,ks=4,vs=4,imm=0)
; key = *real_pos;
1219: (61) r1 = *(u32 *)(r0 +0)       ; R0=map_value(off=0,ks=4,vs=4,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; key = *real_pos;
1220: (63) *(u32 *)(r10 -20) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-24=mmmm????
1221: (79) r8 = *(u64 *)(r10 -192)    ; R8_w=P0 R10=fp0
; if (key == 0) {
1222: (55) if r1 != 0x0 goto pc+12    ; R1_w=0
1223: (05) goto pc+0
; __u32 ch_drop_stats_key = MAX_VIPS + CH_DROP_STATS;
1224: (62) *(u32 *)(r10 -28) = 521    ; R10=fp0 fp-32=mmmm????
1225: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1226: (07) r2 += -28                  ; R2_w=fp-28
; bpf_map_lookup_elem(&stats, &ch_drop_stats_key);
1227: (18) r1 = 0xffffa03499be8000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
1229: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=575,off=0,ks=4,vs=16,imm=0)
; if (!ch_drop_stats) {
1230: (15) if r0 == 0x0 goto pc+3     ; R0=map_value(off=0,ks=4,vs=16,imm=0)
; ch_drop_stats->v2 += 1;
1231: (79) r1 = *(u64 *)(r0 +8)       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1232: (07) r1 += 1                    ; R1_w=scalar()
1233: (7b) *(u64 *)(r0 +8) = r1       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
; pckt->real_index = key;
1234: (61) r1 = *(u32 *)(r10 -20)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; pckt->real_index = key;
1235: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1236: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1237: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1238: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1240: (85) call bpf_map_lookup_elem#1
frame 8: propagating r0
1241: safe

from 1230 to 1234: R0=0 R6=ctx(off=0,imm=0) R7=scalar() R8=P0 R9=scalar(umax=65280,var_off=(0x0; 0xff00)) R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184= fp-192=00000000 fp-200= fp-208=mmmmmmmm
; pckt->real_index = key;
1234: (61) r1 = *(u32 *)(r10 -20)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; pckt->real_index = key;
1235: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1236: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1237: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1238: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1240: (85) call bpf_map_lookup_elem#1
frame 8: propagating r0
1241: safe

from 1222 to 1235: R0=map_value(off=0,ks=4,vs=4,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6=ctx(off=0,imm=0) R7=scalar() R8_w=P0 R9=scalar(umax=65280,var_off=(0x0; 0xff00)) R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184= fp-192=00000000 fp-200= fp-208=mmmmmmmm
; pckt->real_index = key;
1235: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1236: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1237: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1238: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1240: (85) call bpf_map_lookup_elem#1
frame 8: propagating r0
1241: safe

from 1218 to 1857: safe

from 957 to 967: R0=scalar(id=552) R1=scalar(umax=8,var_off=(0x0; 0x8)) R2=scalar(umin=1000000001) R6=ctx(off=0,imm=0) R7=scalar(id=552) R8=P0 R9=map_value(off=0,ks=4,vs=16,imm=0) R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-192=00000000 fp-200= fp-208=mmmmmmmm
; pckt->flow.port16[0] = pckt->flow.port16[1];
967: (69) r1 = *(u16 *)(r10 -46)      ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; pckt->flow.port16[0] = pckt->flow.port16[1];
968: (6b) *(u16 *)(r10 -48) = r1      ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-48=
969: (05) goto pc+0
; memset(pckt->flow.srcv6, 0, 16);
970: (7a) *(u64 *)(r10 -80) = 0       ; R10=fp0 fp-80_w=mmmmmmmm
971: (b7) r1 = 0                      ; R1_w=0
972: (7b) *(u64 *)(r10 -184) = r1
last_idx 972 first_idx 967
regs=2 stack=0 before 971: (b7) r1 = 0
973: R1_w=P0 R10=fp0 fp-184_w=00000000
973: (7a) *(u64 *)(r10 -72) = 0       ; R10=fp0 fp-72_w=mmmmmmmm
974: (b7) r9 = 0                      ; R9_w=0
975: (b7) r0 = 0                      ; R0_w=0
976: (b7) r8 = 0                      ; R8_w=0
977: (b7) r3 = 0                      ; R3_w=0
978: (b7) r4 = 0                      ; R4_w=0
; __jhash_mix(a, b, c);
979: (1f) r3 -= r8                    ; R3_w=0 R8_w=0
; c += *(u32*)(k + 8);
980: (07) r8 += -559038209            ; R8_w=-559038209
981: (05) goto pc+0
982: (05) goto pc+0
983: (05) goto pc+0
984: (bc) w5 = w8                     ; R5_w=3735929087 R8=-559038209
; return (word << shift) | (word >> ((-shift) & 31));
985: (77) r5 >>= 28                   ; R5_w=13
986: (bf) r2 = r8                     ; R2_w=-559038209 R8=-559038209
987: (67) r2 <<= 4                    ; R2_w=-8944611344
988: (4f) r2 |= r5                    ; R2_w=-8944611331 R5_w=13
; __jhash_mix(a, b, c);
989: (af) r2 ^= r3                    ; R2_w=-8944611331 R3=0
990: (05) goto pc+0
991: (05) goto pc+0
992: (05) goto pc+0
993: (bc) w5 = w2                     ; R2=-8944611331 R5_w=3940290557
; return (word << shift) | (word >> ((-shift) & 31));
994: (77) r5 >>= 26                   ; R5_w=58
995: (bf) r7 = r2                     ; R2=-8944611331 R7_w=-8944611331
996: (67) r7 <<= 6                    ; R7_w=-572455125184
997: (4f) r7 |= r5                    ; R5_w=58 R7_w=-572455125126
; b += *(u32*)(k + 4);
998: (07) r1 += -559038209            ; R1_w=P-559038209
; __jhash_mix(a, b, c);
999: (bf) r3 = r1                     ; R1_w=P-559038209 R3_w=P-559038209
1000: (1f) r3 -= r2
last_idx 1000 first_idx 991
regs=4 stack=0 before 999: (bf) r3 = r1
regs=4 stack=0 before 998: (07) r1 += -559038209
regs=4 stack=0 before 997: (4f) r7 |= r5
regs=4 stack=0 before 996: (67) r7 <<= 6
regs=4 stack=0 before 995: (bf) r7 = r2
regs=4 stack=0 before 994: (77) r5 >>= 26
regs=4 stack=0 before 993: (bc) w5 = w2
regs=4 stack=0 before 992: (05) goto pc+0
regs=4 stack=0 before 991: (05) goto pc+0
parent didn't have regs=4 stack=0 marks: R0=0 R1_r=P0 R2_rw=P-8944611331 R3=0 R4=0 R5_w=13 R6=ctx(off=0,imm=0) R7=scalar(id=552) R8=-559038209 R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-184=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
last_idx 990 first_idx 982
regs=4 stack=0 before 990: (05) goto pc+0
regs=4 stack=0 before 989: (af) r2 ^= r3
regs=c stack=0 before 988: (4f) r2 |= r5
regs=2c stack=0 before 987: (67) r2 <<= 4
regs=2c stack=0 before 986: (bf) r2 = r8
regs=128 stack=0 before 985: (77) r5 >>= 28
regs=128 stack=0 before 984: (bc) w5 = w8
regs=108 stack=0 before 983: (05) goto pc+0
regs=108 stack=0 before 982: (05) goto pc+0
parent didn't have regs=108 stack=0 marks: R0_w=0 R1_rw=P0 R2=scalar(umin=1000000001) R3_rw=P0 R4_w=0 R6=ctx(off=0,imm=0) R7=scalar(id=552) R8_rw=P-559038209 R9_w=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72_w=mmmmmmmm fp-80_w=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-184_w=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
last_idx 981 first_idx 967
regs=108 stack=0 before 981: (05) goto pc+0
regs=108 stack=0 before 980: (07) r8 += -559038209
regs=108 stack=0 before 979: (1f) r3 -= r8
regs=108 stack=0 before 978: (b7) r4 = 0
regs=108 stack=0 before 977: (b7) r3 = 0
regs=100 stack=0 before 976: (b7) r8 = 0
1001: (af) r3 ^= r7
last_idx 1001 first_idx 991
regs=80 stack=0 before 1000: (1f) r3 -= r2
regs=80 stack=0 before 999: (bf) r3 = r1
regs=80 stack=0 before 998: (07) r1 += -559038209
regs=80 stack=0 before 997: (4f) r7 |= r5
regs=a0 stack=0 before 996: (67) r7 <<= 6
regs=a0 stack=0 before 995: (bf) r7 = r2
regs=24 stack=0 before 994: (77) r5 >>= 26
regs=24 stack=0 before 993: (bc) w5 = w2
regs=4 stack=0 before 992: (05) goto pc+0
regs=4 stack=0 before 991: (05) goto pc+0
parent already had regs=4 stack=0 marks: R0=0 R1_r=P0 R2_rw=P-8944611331 R3=0 R4=0 R5_w=13 R6=ctx(off=0,imm=0) R7=scalar(id=552) R8=-559038209 R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-184=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
; a += (u32)k[3] << 24;
1002: (67) r4 <<= 24                  ; R4_w=0
; a += (u32)k[2] << 16;
1003: (57) r0 &= 255                  ; R0_w=0
; a += (u32)k[2] << 16;
1004: (67) r0 <<= 16                  ; R0_w=0
; a += (u32)k[3] << 24;
1005: (4f) r0 |= r4                   ; R0_w=0 R4_w=0
; pckt->flow.ports,
1006: (61) r5 = *(u32 *)(r10 -48)     ; R5_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; b += initval;
1007: (07) r5 += -525483785           ; R5_w=scalar(smin=-525483785,smax=3769483510)
1008: (05) goto pc+0
1009: (7b) *(u64 *)(r10 -168) = r5    ; R5=scalar(smin=-525483785,smax=3769483510) R10=fp0 fp-168_w=
1010: (05) goto pc+0
1011: (05) goto pc+0
1012: (bc) w4 = w5                    ; R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R5=scalar(smin=-525483785,smax=3769483510)
; return (word << shift) | (word >> ((-shift) & 31));
1013: (77) r4 >>= 18                  ; R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1014: (bf) r7 = r5                    ; R5=scalar(id=582,smin=-525483785,smax=3769483510) R7_w=scalar(id=582,smin=-525483785,smax=3769483510)
1015: (67) r7 <<= 14                  ; R7_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1016: (4f) r7 |= r4                   ; R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff)) R7_w=scalar()
; __jhash_final(a, b, c);
1017: (a7) r5 ^= -525483785           ; R5_w=scalar()
1018: (1f) r5 -= r7                   ; R5_w=scalar() R7_w=scalar()
; __jhash_mix(a, b, c);
1019: (0f) r1 += r8
last_idx 1019 first_idx 1009
regs=100 stack=0 before 1018: (1f) r5 -= r7
regs=100 stack=0 before 1017: (a7) r5 ^= -525483785
regs=100 stack=0 before 1016: (4f) r7 |= r4
regs=100 stack=0 before 1015: (67) r7 <<= 14
regs=100 stack=0 before 1014: (bf) r7 = r5
regs=100 stack=0 before 1013: (77) r4 >>= 18
regs=100 stack=0 before 1012: (bc) w4 = w5
regs=100 stack=0 before 1011: (05) goto pc+0
regs=100 stack=0 before 1010: (05) goto pc+0
regs=100 stack=0 before 1009: (7b) *(u64 *)(r10 -168) = r5
parent didn't have regs=100 stack=0 marks: R0_w=0 R1_rw=P-559038209 R2=P-8944611331 R3_w=P-570076017032 R4_w=0 R5_rw=scalar(smin=-525483785,smax=3769483510) R6=ctx(off=0,imm=0) R7_w=P-572455125126 R8_r=P-559038209 R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-184=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
last_idx 1008 first_idx 991
regs=100 stack=0 before 1008: (05) goto pc+0
regs=100 stack=0 before 1007: (07) r5 += -525483785
regs=100 stack=0 before 1006: (61) r5 = *(u32 *)(r10 -48)
regs=100 stack=0 before 1005: (4f) r0 |= r4
regs=100 stack=0 before 1004: (67) r0 <<= 16
regs=100 stack=0 before 1003: (57) r0 &= 255
regs=100 stack=0 before 1002: (67) r4 <<= 24
regs=100 stack=0 before 1001: (af) r3 ^= r7
regs=100 stack=0 before 1000: (1f) r3 -= r2
regs=100 stack=0 before 999: (bf) r3 = r1
regs=100 stack=0 before 998: (07) r1 += -559038209
regs=100 stack=0 before 997: (4f) r7 |= r5
regs=100 stack=0 before 996: (67) r7 <<= 6
regs=100 stack=0 before 995: (bf) r7 = r2
regs=100 stack=0 before 994: (77) r5 >>= 26
regs=100 stack=0 before 993: (bc) w5 = w2
regs=100 stack=0 before 992: (05) goto pc+0
regs=100 stack=0 before 991: (05) goto pc+0
parent didn't have regs=100 stack=0 marks: R0_r=0 R1_r=P0 R2_rw=P-8944611331 R3=0 R4_r=0 R5_w=13 R6=ctx(off=0,imm=0) R7=scalar(id=552) R8_r=P-559038209 R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48_r= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-184=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
last_idx 990 first_idx 982
regs=100 stack=0 before 990: (05) goto pc+0
regs=100 stack=0 before 989: (af) r2 ^= r3
regs=100 stack=0 before 988: (4f) r2 |= r5
regs=100 stack=0 before 987: (67) r2 <<= 4
regs=100 stack=0 before 986: (bf) r2 = r8
regs=100 stack=0 before 985: (77) r5 >>= 28
regs=100 stack=0 before 984: (bc) w5 = w8
regs=100 stack=0 before 983: (05) goto pc+0
regs=100 stack=0 before 982: (05) goto pc+0
parent already had regs=100 stack=0 marks: R0_rw=0 R1_rw=P0 R2=scalar(umin=1000000001) R3_rw=P0 R4_rw=0 R6=ctx(off=0,imm=0) R7=scalar(id=552) R8_rw=P-559038209 R9_w=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48_r= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72_w=mmmmmmmm fp-80_w=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-184_w=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
; a += (u32)k[1] << 8;
1020: (57) r9 &= 255                  ; R9_w=0
; a += (u32)k[1] << 8;
1021: (67) r9 <<= 8                   ; R9_w=0
; a += (u32)k[2] << 16;
1022: (4f) r0 |= r9                   ; R0_w=0 R9_w=0
1023: (79) r4 = *(u64 *)(r10 -184)    ; R4_w=P0 R10=fp0
; a += k[0];
1024: (57) r4 &= 255                  ; R4_w=P0
; a += (u32)k[1] << 8;
1025: (4f) r0 |= r4                   ; R0_w=0 R4_w=P0
1026: (05) goto pc+0
1027: (05) goto pc+0
; __jhash_mix(a, b, c);
1028: (05) goto pc+0
1029: (bc) w7 = w3                    ; R3=P-570076017032 R7_w=P1154633336
; return (word << shift) | (word >> ((-shift) & 31));
1030: (77) r7 >>= 24                  ; R7_w=P68
1031: (bf) r4 = r3                    ; R3=P-570076017032 R4_w=P-570076017032
1032: (67) r4 <<= 8                   ; R4_w=P-145939460360192
1033: (4f) r4 |= r7                   ; R4_w=P-145939460360124 R7_w=P68
; __jhash_mix(a, b, c);
1034: (0f) r2 += r1                   ; R1=P-1118076418 R2_w=P-10062687749
1035: (1f) r1 -= r3                   ; R1_w=P568957940614 R3=P-570076017032
1036: (af) r1 ^= r4                   ; R1_w=P-145407547585598 R4_w=P-145939460360124
1037: (05) goto pc+0
1038: (05) goto pc+0
; __jhash_final(a, b, c);
1039: (7b) *(u64 *)(r10 -176) = r5    ; R5=scalar() R10=fp0 fp-176_w=mmmmmmmm
1040: (05) goto pc+0
1041: (bc) w4 = w5                    ; R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R5=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1042: (77) r4 >>= 21                  ; R4_w=scalar(umax=2047,var_off=(0x0; 0x7ff))
1043: (bf) r8 = r5                    ; R5=scalar(id=584) R8_w=scalar(id=584)
1044: (67) r8 <<= 11                  ; R8_w=scalar(smax=9223372036854773760,umax=18446744073709549568,var_off=(0x0; 0xfffffffffffff800),s32_max=2147481600,u32_max=-2048)
1045: (4f) r8 |= r4                   ; R4_w=scalar(umax=2047,var_off=(0x0; 0x7ff)) R8_w=scalar()
1046: (05) goto pc+0
1047: (05) goto pc+0
; __jhash_mix(a, b, c);
1048: (05) goto pc+0
1049: (bc) w4 = w1                    ; R1=P-145407547585598 R4_w=P2865187778
; return (word << shift) | (word >> ((-shift) & 31));
1050: (77) r4 >>= 16                  ; R4_w=P43719
1051: (bf) r7 = r1                    ; R1=P-145407547585598 R7_w=P-145407547585598
1052: (67) r7 <<= 16                  ; R7_w=P8917315035139801088
1053: (4f) r7 |= r4                   ; R4_w=P43719 R7_w=P8917315035139844807
; __jhash_mix(a, b, c);
1054: (0f) r3 += r2                   ; R2=P-10062687749 R3_w=P-580138704781
1055: (1f) r2 -= r1                   ; R1=P-145407547585598 R2_w=P145397484897849
1056: (af) r2 ^= r7                   ; R2_w=P8917178920830430462 R7_w=P8917315035139844807
1057: (05) goto pc+0
1058: (05) goto pc+0
1059: (05) goto pc+0
1060: (bc) w7 = w2                    ; R2=P8917178920830430462 R7_w=P3065179390
; return (word << shift) | (word >> ((-shift) & 31));
1061: (77) r7 >>= 13                  ; R7_w=P374167
1062: (bf) r4 = r2                    ; R2=P8917178920830430462 R4_w=P8917178920830430462
1063: (67) r4 <<= 19                  ; R4_w=P8637259322254950400
1064: (4f) r4 |= r7                   ; R4_w=P8637259322255324567 R7_w=P374167
; __jhash_mix(a, b, c);
1065: (0f) r1 += r3                   ; R1_w=P-145987686290379 R3=P-580138704781
1066: (1f) r3 -= r2                   ; R2=P8917178920830430462 R3_w=P-8917179500969135243
1067: (af) r3 ^= r4                   ; R3_w=P-873023320690047262 R4_w=P8637259322255324567
1068: (0f) r2 += r1                   ; R1_w=P-145987686290379 R2_w=P8917032933144140083
1069: (bf) r5 = r3                    ; R3_w=P-873023320690047262 R5_w=P-873023320690047262
1070: (0f) r5 += r2                   ; R2_w=P8917032933144140083 R5_w=P8044009612454092821
1071: (05) goto pc+0
1072: (05) goto pc+0
1073: (05) goto pc+0
1074: (bc) w4 = w5                    ; R4_w=P2686935061 R5=P8044009612454092821
; return (word << shift) | (word >> ((-shift) & 31));
1075: (77) r4 >>= 18                  ; R4_w=P10249
1076: (bf) r7 = r5                    ; R5=P8044009612454092821 R7_w=P8044009612454092821
1077: (67) r7 <<= 14                  ; R7_w=P-8932916206889517056
1078: (4f) r7 |= r4                   ; R4_w=P10249 R7_w=P-8932916206889506807
; __jhash_mix(a, b, c);
1079: (05) goto pc+0
1080: (05) goto pc+0
1081: (05) goto pc+0
1082: (bc) w4 = w3                    ; R3=P-873023320690047262 R4_w=P1369655010
; return (word << shift) | (word >> ((-shift) & 31));
1083: (77) r4 >>= 28                  ; R4_w=P5
; __jhash_mix(a, b, c);
1084: (1f) r1 -= r3                   ; R1_w=P872877333003756883 R3=P-873023320690047262
; return (word << shift) | (word >> ((-shift) & 31));
1085: (67) r3 <<= 4                   ; R3_w=P4478370942668795424
1086: (4f) r3 |= r4                   ; R3_w=P4478370942668795429 R4_w=P5
; __jhash_mix(a, b, c);
1087: (af) r1 ^= r3                   ; R1_w=P3619570195461933942 R3_w=P4478370942668795429
; a += k[0];
1088: (0f) r2 += r0
last_idx 1088 first_idx 1080
regs=1 stack=0 before 1087: (af) r1 ^= r3
regs=1 stack=0 before 1086: (4f) r3 |= r4
regs=1 stack=0 before 1085: (67) r3 <<= 4
regs=1 stack=0 before 1084: (1f) r1 -= r3
regs=1 stack=0 before 1083: (77) r4 >>= 28
regs=1 stack=0 before 1082: (bc) w4 = w3
regs=1 stack=0 before 1081: (05) goto pc+0
regs=1 stack=0 before 1080: (05) goto pc+0
parent didn't have regs=1 stack=0 marks: R0_r=P0 R1_r=P-145987686290379 R2_r=P8917032933144140083 R3_r=P-873023320690047262 R4_w=P10249 R5=P8044009612454092821 R6=ctx(off=0,imm=0) R7_w=P-8932916206889506807 R8=scalar() R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
last_idx 1079 first_idx 1072
regs=1 stack=0 before 1079: (05) goto pc+0
regs=1 stack=0 before 1078: (4f) r7 |= r4
regs=1 stack=0 before 1077: (67) r7 <<= 14
regs=1 stack=0 before 1076: (bf) r7 = r5
regs=1 stack=0 before 1075: (77) r4 >>= 18
regs=1 stack=0 before 1074: (bc) w4 = w5
regs=1 stack=0 before 1073: (05) goto pc+0
regs=1 stack=0 before 1072: (05) goto pc+0
parent didn't have regs=1 stack=0 marks: R0_r=P0 R1_rw=P-145987686290379 R2_rw=P8917032933144140083 R3_rw=P-873023320690047262 R4_w=P8637259322255324567 R5_rw=P8044009612454092821 R6=ctx(off=0,imm=0) R7_w=P374167 R8=scalar() R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
last_idx 1071 first_idx 1058
regs=1 stack=0 before 1071: (05) goto pc+0
regs=1 stack=0 before 1070: (0f) r5 += r2
regs=1 stack=0 before 1069: (bf) r5 = r3
regs=1 stack=0 before 1068: (0f) r2 += r1
regs=1 stack=0 before 1067: (af) r3 ^= r4
regs=1 stack=0 before 1066: (1f) r3 -= r2
regs=1 stack=0 before 1065: (0f) r1 += r3
regs=1 stack=0 before 1064: (4f) r4 |= r7
regs=1 stack=0 before 1063: (67) r4 <<= 19
regs=1 stack=0 before 1062: (bf) r4 = r2
regs=1 stack=0 before 1061: (77) r7 >>= 13
regs=1 stack=0 before 1060: (bc) w7 = w2
regs=1 stack=0 before 1059: (05) goto pc+0
regs=1 stack=0 before 1058: (05) goto pc+0
parent didn't have regs=1 stack=0 marks: R0_r=P0 R1_r=P-145407547585598 R2_rw=P8917178920830430462 R3_rw=P-580138704781 R4_w=P43719 R5=scalar(id=584) R6=ctx(off=0,imm=0) R7_w=P8917315035139844807 R8=scalar() R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
last_idx 1057 first_idx 1047
regs=1 stack=0 before 1057: (05) goto pc+0
regs=1 stack=0 before 1056: (af) r2 ^= r7
regs=1 stack=0 before 1055: (1f) r2 -= r1
regs=1 stack=0 before 1054: (0f) r3 += r2
regs=1 stack=0 before 1053: (4f) r7 |= r4
regs=1 stack=0 before 1052: (67) r7 <<= 16
regs=1 stack=0 before 1051: (bf) r7 = r1
regs=1 stack=0 before 1050: (77) r4 >>= 16
regs=1 stack=0 before 1049: (bc) w4 = w1
regs=1 stack=0 before 1048: (05) goto pc+0
regs=1 stack=0 before 1047: (05) goto pc+0
parent didn't have regs=1 stack=0 marks: R0_r=P0 R1_r=P-145407547585598 R2_r=P-10062687749 R3_r=P-570076017032 R4_w=scalar(umax=2047,var_off=(0x0; 0x7ff)) R5=scalar(id=584) R6=ctx(off=0,imm=0) R7=P68 R8_w=scalar() R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176_w=mmmmmmmm fp-184=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
last_idx 1046 first_idx 1038
regs=1 stack=0 before 1046: (05) goto pc+0
regs=1 stack=0 before 1045: (4f) r8 |= r4
regs=1 stack=0 before 1044: (67) r8 <<= 11
regs=1 stack=0 before 1043: (bf) r8 = r5
regs=1 stack=0 before 1042: (77) r4 >>= 21
regs=1 stack=0 before 1041: (bc) w4 = w5
regs=1 stack=0 before 1040: (05) goto pc+0
regs=1 stack=0 before 1039: (7b) *(u64 *)(r10 -176) = r5
regs=1 stack=0 before 1038: (05) goto pc+0
parent didn't have regs=1 stack=0 marks: R0_r=P0 R1_rw=P-145407547585598 R2_rw=P-10062687749 R3_r=P-570076017032 R4_w=P-145939460360124 R5_r=scalar() R6=ctx(off=0,imm=0) R7_w=P68 R8=P-559038209 R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-184=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
last_idx 1037 first_idx 1027
regs=1 stack=0 before 1037: (05) goto pc+0
regs=1 stack=0 before 1036: (af) r1 ^= r4
regs=1 stack=0 before 1035: (1f) r1 -= r3
regs=1 stack=0 before 1034: (0f) r2 += r1
regs=1 stack=0 before 1033: (4f) r4 |= r7
regs=1 stack=0 before 1032: (67) r4 <<= 8
regs=1 stack=0 before 1031: (bf) r4 = r3
regs=1 stack=0 before 1030: (77) r7 >>= 24
regs=1 stack=0 before 1029: (bc) w7 = w3
regs=1 stack=0 before 1028: (05) goto pc+0
regs=1 stack=0 before 1027: (05) goto pc+0
parent didn't have regs=1 stack=0 marks: R0_rw=P0 R1_rw=P-1118076418 R2_r=P-8944611331 R3_r=P-570076017032 R4_w=P0 R5_rw=scalar() R6=ctx(off=0,imm=0) R7_w=scalar() R8=P-559038209 R9_w=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168_w= fp-184=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
last_idx 1026 first_idx 1009
regs=1 stack=0 before 1026: (05) goto pc+0
regs=1 stack=0 before 1025: (4f) r0 |= r4
regs=11 stack=0 before 1024: (57) r4 &= 255
regs=11 stack=0 before 1023: (79) r4 = *(u64 *)(r10 -184)
regs=1 stack=400000 before 1022: (4f) r0 |= r9
regs=201 stack=400000 before 1021: (67) r9 <<= 8
regs=201 stack=400000 before 1020: (57) r9 &= 255
regs=201 stack=400000 before 1019: (0f) r1 += r8
regs=201 stack=400000 before 1018: (1f) r5 -= r7
regs=201 stack=400000 before 1017: (a7) r5 ^= -525483785
regs=201 stack=400000 before 1016: (4f) r7 |= r4
regs=201 stack=400000 before 1015: (67) r7 <<= 14
regs=201 stack=400000 before 1014: (bf) r7 = r5
regs=201 stack=400000 before 1013: (77) r4 >>= 18
regs=201 stack=400000 before 1012: (bc) w4 = w5
regs=201 stack=400000 before 1011: (05) goto pc+0
regs=201 stack=400000 before 1010: (05) goto pc+0
regs=201 stack=400000 before 1009: (7b) *(u64 *)(r10 -168) = r5
parent didn't have regs=201 stack=0 marks: R0_rw=P0 R1_rw=P-559038209 R2_r=P-8944611331 R3_rw=P-570076017032 R4_w=0 R5_rw=scalar(smin=-525483785,smax=3769483510) R6=ctx(off=0,imm=0) R7_w=P-572455125126 R8_r=P-559038209 R9_r=P0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-184_r=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
last_idx 1008 first_idx 991
regs=201 stack=0 before 1008: (05) goto pc+0
regs=201 stack=0 before 1007: (07) r5 += -525483785
regs=201 stack=0 before 1006: (61) r5 = *(u32 *)(r10 -48)
regs=201 stack=0 before 1005: (4f) r0 |= r4
regs=211 stack=0 before 1004: (67) r0 <<= 16
regs=211 stack=0 before 1003: (57) r0 &= 255
regs=211 stack=0 before 1002: (67) r4 <<= 24
regs=211 stack=0 before 1001: (af) r3 ^= r7
regs=211 stack=0 before 1000: (1f) r3 -= r2
regs=211 stack=0 before 999: (bf) r3 = r1
regs=211 stack=0 before 998: (07) r1 += -559038209
regs=211 stack=0 before 997: (4f) r7 |= r5
regs=211 stack=0 before 996: (67) r7 <<= 6
regs=211 stack=0 before 995: (bf) r7 = r2
regs=211 stack=0 before 994: (77) r5 >>= 26
regs=211 stack=0 before 993: (bc) w5 = w2
regs=211 stack=0 before 992: (05) goto pc+0
regs=211 stack=0 before 991: (05) goto pc+0
parent didn't have regs=211 stack=0 marks: R0_r=P0 R1_r=P0 R2_rw=P-8944611331 R3=0 R4_r=P0 R5_w=13 R6=ctx(off=0,imm=0) R7=scalar(id=552) R8_r=P-559038209 R9_r=P0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48_r= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-184_r=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
last_idx 990 first_idx 982
regs=211 stack=0 before 990: (05) goto pc+0
regs=211 stack=0 before 989: (af) r2 ^= r3
regs=211 stack=0 before 988: (4f) r2 |= r5
regs=211 stack=0 before 987: (67) r2 <<= 4
regs=211 stack=0 before 986: (bf) r2 = r8
regs=211 stack=0 before 985: (77) r5 >>= 28
regs=211 stack=0 before 984: (bc) w5 = w8
regs=211 stack=0 before 983: (05) goto pc+0
regs=211 stack=0 before 982: (05) goto pc+0
parent didn't have regs=211 stack=0 marks: R0_rw=P0 R1_rw=P0 R2=scalar(umin=1000000001) R3_rw=P0 R4_rw=P0 R6=ctx(off=0,imm=0) R7=scalar(id=552) R8_rw=P-559038209 R9_rw=P0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48_r= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72_w=mmmmmmmm fp-80_w=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-184_rw=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
last_idx 981 first_idx 967
regs=211 stack=0 before 981: (05) goto pc+0
regs=211 stack=0 before 980: (07) r8 += -559038209
regs=211 stack=0 before 979: (1f) r3 -= r8
regs=211 stack=0 before 978: (b7) r4 = 0
regs=201 stack=0 before 977: (b7) r3 = 0
regs=201 stack=0 before 976: (b7) r8 = 0
regs=201 stack=0 before 975: (b7) r0 = 0
regs=200 stack=0 before 974: (b7) r9 = 0
; __jhash_final(a, b, c);
1089: (af) r1 ^= r5                   ; R1_w=P6744523029021125475 R5=P8044009612454092821
1090: (1f) r1 -= r7                   ; R1_w=P-2769304837798919334 R7=P-8932916206889506807
1091: (05) goto pc+0
1092: (05) goto pc+0
1093: (05) goto pc+0
1094: (bc) w3 = w1                    ; R1=P-2769304837798919334 R3_w=P607748954
; return (word << shift) | (word >> ((-shift) & 31));
1095: (77) r3 >>= 21                  ; R3_w=P289
1096: (bf) r4 = r1                    ; R1=P-2769304837798919334 R4_w=P-2769304837798919334
1097: (67) r4 <<= 11                  ; R4_w=P-8385877183354449920
1098: (4f) r4 |= r3                   ; R3_w=P289 R4_w=P-8385877183354449631
; __jhash_final(a, b, c);
1099: (bf) r3 = r1                    ; R1=P-2769304837798919334 R3_w=P-2769304837798919334
1100: (af) r3 ^= r2                   ; R2=P8917032933144140083 R3_w=P-6760226462814594455
1101: (1f) r3 -= r4                   ; R3_w=P1625650720539855176 R4_w=P-8385877183354449631
1102: (05) goto pc+0
1103: (05) goto pc+0
1104: (05) goto pc+0
1105: (bc) w2 = w3                    ; R2_w=P2661468488 R3=P1625650720539855176
; return (word << shift) | (word >> ((-shift) & 31));
1106: (77) r2 >>= 7                   ; R2_w=P20792722
1107: (bf) r4 = r3                    ; R3=P1625650720539855176 R4_w=P1625650720539855176
1108: (67) r4 <<= 25                  ; R4_w=P8015639407572811776
1109: (4f) r4 |= r2                   ; R2_w=P20792722 R4_w=P8015639407593604498
; __jhash_final(a, b, c);
1110: (bf) r7 = r3                    ; R3=P1625650720539855176 R7_w=P1625650720539855176
1111: (af) r7 ^= r5                   ; R5=P8044009612454092821 R7_w=P8731750324354001245
1112: (1f) r7 -= r4                   ; R4_w=P8015639407593604498 R7_w=P716110916760396747
1113: (05) goto pc+0
1114: (05) goto pc+0
1115: (05) goto pc+0
1116: (bc) w2 = w7                    ; R2_w=P2907202507 R7=P716110916760396747
; return (word << shift) | (word >> ((-shift) & 31));
1117: (77) r2 >>= 16                  ; R2_w=P44360
1118: (bf) r4 = r7                    ; R4_w=P716110916760396747 R7=P716110916760396747
1119: (67) r4 <<= 16                  ; R4_w=P2528117292261900288
1120: (4f) r4 |= r2                   ; R2_w=P44360 R4_w=P2528117292261944648
; __jhash_final(a, b, c);
1121: (bf) r2 = r7                    ; R2_w=P716110916760396747 R7=P716110916760396747
1122: (af) r2 ^= r1                   ; R1=P-2769304837798919334 R2_w=P-3431372408396586863
1123: (1f) r2 -= r4                   ; R2_w=P-5959489700658531511 R4_w=P2528117292261944648
1124: (05) goto pc+0
1125: (bc) w1 = w2                    ; R1_w=P631649097 R2=P-5959489700658531511
; return (word << shift) | (word >> ((-shift) & 31));
1126: (77) r1 >>= 28                  ; R1_w=P2
1127: (bf) r4 = r2                    ; R2=P-5959489700658531511 R4_w=P-5959489700658531511
1128: (67) r4 <<= 4                   ; R4_w=P-3118114841988746096
1129: (4f) r4 |= r1                   ; R1_w=P2 R4_w=P-3118114841988746094
; __jhash_final(a, b, c);
1130: (bf) r1 = r2                    ; R1_w=P-5959489700658531511 R2=P-5959489700658531511
1131: (af) r1 ^= r3                   ; R1_w=P-4916564071227786751 R3=P1625650720539855176
1132: (1f) r1 -= r4                   ; R1_w=P-1798449229239040657 R4_w=P-3118114841988746094
1133: (05) goto pc+0
1134: (05) goto pc+0
1135: (05) goto pc+0
1136: (bc) w3 = w1                    ; R1=P-1798449229239040657 R3_w=P1621214575
; return (word << shift) | (word >> ((-shift) & 31));
1137: (77) r3 >>= 18                  ; R3_w=P6184
1138: (bf) r4 = r1                    ; R1=P-1798449229239040657 R4_w=P-1798449229239040657
1139: (67) r4 <<= 14                  ; R4_w=P-6341886138288193536
1140: (4f) r4 |= r3                   ; R3_w=P6184 R4_w=P-6341886138288187352
; __jhash_final(a, b, c);
1141: (af) r1 ^= r7                   ; R1_w=P-1226460270496733532 R7=P716110916760396747
1142: (1f) r1 -= r4                   ; R1_w=P5115425867791453820 R4_w=P-6341886138288187352
1143: (05) goto pc+0
1144: (05) goto pc+0
1145: (05) goto pc+0
1146: (bc) w4 = w1                    ; R1=P5115425867791453820 R4_w=P1552797308
; return (word << shift) | (word >> ((-shift) & 31));
1147: (77) r4 >>= 8                   ; R4_w=P6065614
1148: (bf) r5 = r1                    ; R1=P5115425867791453820 R5_w=P5115425867791453820
1149: (67) r5 <<= 24                  ; R5_w=P-5090037560852348928
1150: (4f) r5 |= r4                   ; R4_w=P6065614 R5_w=P-5090037560846283314
; __jhash_final(a, b, c);
1151: (af) r1 ^= r2                   ; R1_w=P-1461973296061088459 R2=P-5959489700658531511
; a += initval;
1152: (1f) r1 -= r5                   ; R1_w=P3628064264785194855 R5_w=P-5090037560846283314
1153: (07) r1 += -525483785           ; R1_w=P3628064264259711070
1154: (79) r7 = *(u64 *)(r10 -176)    ; R7_w=scalar() R10=fp0
; __jhash_final(a, b, c);
1155: (af) r1 ^= r7
last_idx 1155 first_idx 1144
regs=80 stack=0 before 1154: (79) r7 = *(u64 *)(r10 -176)
regs=0 stack=200000 before 1153: (07) r1 += -525483785
regs=0 stack=200000 before 1152: (1f) r1 -= r5
regs=0 stack=200000 before 1151: (af) r1 ^= r2
regs=0 stack=200000 before 1150: (4f) r5 |= r4
regs=0 stack=200000 before 1149: (67) r5 <<= 24
regs=0 stack=200000 before 1148: (bf) r5 = r1
regs=0 stack=200000 before 1147: (77) r4 >>= 8
regs=0 stack=200000 before 1146: (bc) w4 = w1
regs=0 stack=200000 before 1145: (05) goto pc+0
regs=0 stack=200000 before 1144: (05) goto pc+0
parent already had regs=0 stack=0 marks: R0=P0 R1_rw=P5115425867791453820 R2_r=P-5959489700658531511 R3_w=P6184 R4_w=P-6341886138288187352 R5=P8044009612454092821 R6=ctx(off=0,imm=0) R7=P716110916760396747 R8=scalar() R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176_r=mmmmmmmm fp-184=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
1156: (1f) r1 -= r8                   ; R1_w=scalar() R8=scalar()
1157: (05) goto pc+0
1158: (bc) w2 = w1                    ; R1=scalar() R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1159: (77) r2 >>= 7                   ; R2_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff))
1160: (bf) r4 = r1                    ; R1=scalar(id=595) R4_w=scalar(id=595)
1161: (67) r4 <<= 25                  ; R4_w=scalar(smax=9223372036821221376,umax=18446744073675997184,var_off=(0x0; 0xfffffffffe000000),s32_max=2113929216,u32_max=-33554432)
1162: (4f) r4 |= r2                   ; R2_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff)) R4_w=scalar()
; __jhash_final(a, b, c);
1163: (bf) r0 = r1                    ; R0_w=scalar(id=595) R1=scalar(id=595)
1164: (79) r2 = *(u64 *)(r10 -168)    ; R2_w=scalar(smin=-525483785,smax=3769483510) R10=fp0
1165: (af) r0 ^= r2                   ; R0_w=scalar() R2_w=scalar(smin=-525483785,smax=3769483510)
1166: (1f) r0 -= r4                   ; R0_w=scalar() R4_w=scalar()
1167: (05) goto pc+0
1168: (05) goto pc+0
1169: (05) goto pc+0
1170: (bc) w2 = w0                    ; R0=scalar() R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1171: (77) r2 >>= 16                  ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff))
1172: (bf) r5 = r0                    ; R0=scalar(id=596) R5_w=scalar(id=596)
1173: (67) r5 <<= 16                  ; R5_w=scalar(smax=9223372036854710272,umax=18446744073709486080,var_off=(0x0; 0xffffffffffff0000),s32_max=2147418112,u32_max=-65536)
1174: (4f) r5 |= r2                   ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R5_w=scalar()
; __jhash_final(a, b, c);
1175: (bf) r4 = r0                    ; R0=scalar(id=596) R4_w=scalar(id=596)
1176: (af) r4 ^= r7                   ; R4_w=scalar() R7=Pscalar()
1177: (1f) r4 -= r5                   ; R4_w=scalar() R5_w=scalar()
1178: (05) goto pc+0
1179: (bc) w2 = w4                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R4=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1180: (77) r2 >>= 28                  ; R2_w=scalar(umax=15,var_off=(0x0; 0xf))
1181: (bf) r5 = r4                    ; R4=scalar(id=597) R5_w=scalar(id=597)
1182: (67) r5 <<= 4                   ; R5_w=scalar(smax=9223372036854775792,umax=18446744073709551600,var_off=(0x0; 0xfffffffffffffff0),s32_max=2147483632,u32_max=-16)
1183: (4f) r5 |= r2                   ; R2_w=scalar(umax=15,var_off=(0x0; 0xf)) R5_w=scalar()
; __jhash_final(a, b, c);
1184: (bf) r2 = r4                    ; R2_w=scalar(id=597) R4=scalar(id=597)
1185: (af) r2 ^= r1                   ; R1=scalar(id=595) R2_w=scalar()
1186: (1f) r2 -= r5                   ; R2_w=scalar() R5_w=scalar()
1187: (05) goto pc+0
1188: (05) goto pc+0
1189: (05) goto pc+0
1190: (bc) w1 = w2                    ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R2=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1191: (77) r1 >>= 18                  ; R1_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1192: (bf) r5 = r2                    ; R2=scalar(id=598) R5_w=scalar(id=598)
1193: (67) r5 <<= 14                  ; R5_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1194: (4f) r5 |= r1                   ; R1_w=scalar(umax=16383,var_off=(0x0; 0x3fff)) R5_w=scalar()
; __jhash_final(a, b, c);
1195: (af) r2 ^= r0                   ; R0=scalar(id=596) R2_w=scalar()
1196: (1f) r2 -= r5                   ; R2_w=scalar() R5_w=scalar()
1197: (05) goto pc+0
1198: (bc) w1 = w2                    ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R2=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1199: (77) r1 >>= 8                   ; R1_w=scalar(umax=16777215,var_off=(0x0; 0xffffff))
1200: (bf) r3 = r2                    ; R2=scalar(id=599) R3_w=scalar(id=599)
1201: (67) r3 <<= 24                  ; R3_w=scalar(smax=9223372036837998592,umax=18446744073692774400,var_off=(0x0; 0xffffffffff000000),s32_max=2130706432,u32_max=-16777216)
1202: (4f) r3 |= r1                   ; R1_w=scalar(umax=16777215,var_off=(0x0; 0xffffff)) R3_w=scalar()
; __jhash_final(a, b, c);
1203: (af) r2 ^= r4                   ; R2_w=scalar() R4=scalar(id=597)
1204: (1f) r2 -= r3                   ; R2_w=scalar() R3_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1205: (79) r1 = *(u64 *)(r10 -144)    ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
1206: (61) r1 = *(u32 *)(r1 +4)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; key = RING_SIZE * (vip_info->vip_num) + hash;
1207: (27) r1 *= 65537                ; R1_w=scalar(umax=281479271612415,var_off=(0x0; 0x1ffffffffffff))
; __jhash_final(a, b, c);
1208: (bc) w2 = w2                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
1209: (05) goto pc+0
; hash = get_packet_hash(pckt, hash_16bytes) % RING_SIZE;
1210: (97) r2 %= 65537                ; R2_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1211: (0f) r2 += r1                   ; R1_w=scalar(umax=281479271612415,var_off=(0x0; 0x1ffffffffffff)) R2_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1212: (63) *(u32 *)(r10 -20) = r2     ; R2_w=scalar() R10=fp0 fp-24=mmmm????
1213: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1214: (07) r2 += -20                  ; R2_w=fp-20
; real_pos = bpf_map_lookup_elem(&ch_rings, &key);
1215: (18) r1 = 0xffffaebaa0631000    ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
1217: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=600,off=0,ks=4,vs=4,imm=0)
; if (!real_pos) {
1218: (15) if r0 == 0x0 goto pc+638   ; R0=map_value(off=0,ks=4,vs=4,imm=0)
; key = *real_pos;
1219: (61) r1 = *(u32 *)(r0 +0)       ; R0=map_value(off=0,ks=4,vs=4,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; key = *real_pos;
1220: (63) *(u32 *)(r10 -20) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-24=mmmm????
1221: (79) r8 = *(u64 *)(r10 -192)    ; R8_w=P0 R10=fp0
; if (key == 0) {
1222: (55) if r1 != 0x0 goto pc+12    ; R1_w=0
1223: (05) goto pc+0
; __u32 ch_drop_stats_key = MAX_VIPS + CH_DROP_STATS;
1224: (62) *(u32 *)(r10 -28) = 521    ; R10=fp0 fp-32=mmmm????
1225: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1226: (07) r2 += -28                  ; R2_w=fp-28
; bpf_map_lookup_elem(&stats, &ch_drop_stats_key);
1227: (18) r1 = 0xffffa03499be8000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
1229: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=601,off=0,ks=4,vs=16,imm=0)
; if (!ch_drop_stats) {
1230: (15) if r0 == 0x0 goto pc+3     ; R0=map_value(off=0,ks=4,vs=16,imm=0)
; ch_drop_stats->v2 += 1;
1231: (79) r1 = *(u64 *)(r0 +8)       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1232: (07) r1 += 1                    ; R1_w=scalar()
1233: (7b) *(u64 *)(r0 +8) = r1       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
; pckt->real_index = key;
1234: (61) r1 = *(u32 *)(r10 -20)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; pckt->real_index = key;
1235: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1236: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1237: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1238: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1240: (85) call bpf_map_lookup_elem#1
frame 8: propagating r0
1241: safe

from 1230 to 1234: R0=0 R6=ctx(off=0,imm=0) R7=Pscalar() R8=P0 R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40=mmmmmmmm fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
; pckt->real_index = key;
1234: (61) r1 = *(u32 *)(r10 -20)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; pckt->real_index = key;
1235: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1236: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1237: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1238: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1240: (85) call bpf_map_lookup_elem#1
frame 8: propagating r0
1241: safe

from 1222 to 1235: R0=map_value(off=0,ks=4,vs=4,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6=ctx(off=0,imm=0) R7=Pscalar() R8_w=P0 R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40=mmmmmmmm fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
; pckt->real_index = key;
1235: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1236: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1237: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1238: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1240: (85) call bpf_map_lookup_elem#1
frame 8: propagating r0
1241: safe

from 1218 to 1857: safe

from 942 to 947: R0=scalar(id=552) R1=1000000001 R2=scalar(umax=1000000000,var_off=(0x0; 0x3fffffff)) R6=ctx(off=0,imm=0) R7=scalar(id=552) R8=1 R9=map_value(off=0,ks=4,vs=16,imm=0) R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-200=
; conn_rate_stats->v1 += 1;
947: (79) r1 = *(u64 *)(r9 +0)        ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=16,imm=0)
948: (07) r1 += 1                     ; R1_w=scalar()
949: (7b) *(u64 *)(r9 +0) = r1        ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=16,imm=0)
; if (conn_rate_stats->v1 > MAX_CONN_RATE) {
950: (25) if r1 > 0x1e848 goto pc+1   ; R1_w=scalar(umax=125000,var_off=(0x0; 0x1ffff))
951: (b7) r8 = 0                      ; R8_w=0
952: (7b) *(u64 *)(r10 -192) = r8
last_idx 952 first_idx 947
regs=100 stack=0 before 951: (b7) r8 = 0
953: R8_w=P0 R10=fp0 fp-192_w=00000000
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
953: (79) r1 = *(u64 *)(r10 -144)     ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
954: (61) r1 = *(u32 *)(r1 +0)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
955: (57) r1 &= 8                     ; R1_w=scalar(umax=8,var_off=(0x0; 0x8))
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
956: (7b) *(u64 *)(r10 -208) = r7     ; R7=scalar(id=552) R10=fp0 fp-208_w=mmmmmmmm
957: (55) if r1 != 0x0 goto pc+9      ; R1_w=0
; a += k[0];
958: (71) r1 = *(u8 *)(r10 -68)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; a += (u32)k[1] << 8;
959: (7b) *(u64 *)(r10 -184) = r1     ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0 fp-184_w=
960: (71) r9 = *(u8 *)(r10 -67)       ; R9_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; a += (u32)k[2] << 16;
961: (71) r0 = *(u8 *)(r10 -66)       ; R0_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; b += *(u32*)(k + 4);
962: (61) r1 = *(u32 *)(r10 -76)      ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; c += *(u32*)(k + 8);
963: (61) r8 = *(u32 *)(r10 -72)      ; R8_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; a += *(u32*)(k);
964: (61) r3 = *(u32 *)(r10 -80)      ; R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; a += (u32)k[3] << 24;
965: (71) r4 = *(u8 *)(r10 -65)       ; R4_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
966: (05) goto pc+12
979: safe

from 957 to 967: safe

from 950 to 952: R0=scalar(id=552) R1=scalar(umin=125001) R2=scalar(umax=1000000000,var_off=(0x0; 0x3fffffff)) R6=ctx(off=0,imm=0) R7=scalar(id=552) R8=1 R9=map_value(off=0,ks=4,vs=16,imm=0) R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-200=
; if (conn_rate_stats->v1 > MAX_CONN_RATE) {
952: (7b) *(u64 *)(r10 -192) = r8     ; R8=1 R10=fp0 fp-192_w=1
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
953: (79) r1 = *(u64 *)(r10 -144)     ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
954: (61) r1 = *(u32 *)(r1 +0)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
955: (57) r1 &= 8                     ; R1_w=scalar(umax=8,var_off=(0x0; 0x8))
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
956: (7b) *(u64 *)(r10 -208) = r7     ; R7=scalar(id=552) R10=fp0 fp-208_w=mmmmmmmm
957: (55) if r1 != 0x0 goto pc+9      ; R1_w=0
; a += k[0];
958: (71) r1 = *(u8 *)(r10 -68)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; a += (u32)k[1] << 8;
959: (7b) *(u64 *)(r10 -184) = r1     ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0 fp-184_w=
960: (71) r9 = *(u8 *)(r10 -67)       ; R9_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; a += (u32)k[2] << 16;
961: (71) r0 = *(u8 *)(r10 -66)       ; R0_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; b += *(u32*)(k + 4);
962: (61) r1 = *(u32 *)(r10 -76)      ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; c += *(u32*)(k + 8);
963: (61) r8 = *(u32 *)(r10 -72)      ; R8_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; a += *(u32*)(k);
964: (61) r3 = *(u32 *)(r10 -80)      ; R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; a += (u32)k[3] << 24;
965: (71) r4 = *(u8 *)(r10 -65)       ; R4_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
966: (05) goto pc+12
; __jhash_mix(a, b, c);
979: (1f) r3 -= r8                    ; R3_w=scalar(smin=-4294967295,smax=4294967295) R8=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; c += *(u32*)(k + 8);
980: (07) r8 += -559038209            ; R8_w=scalar(smin=-559038209,smax=3735929086)
981: (05) goto pc+0
982: (05) goto pc+0
983: (05) goto pc+0
984: (bc) w5 = w8                     ; R5_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R8_w=scalar(smin=-559038209,smax=3735929086)
; return (word << shift) | (word >> ((-shift) & 31));
985: (77) r5 >>= 28                   ; R5_w=scalar(umax=15,var_off=(0x0; 0xf))
986: (bf) r2 = r8                     ; R2_w=scalar(id=605,smin=-559038209,smax=3735929086) R8_w=scalar(id=605,smin=-559038209,smax=3735929086)
987: (67) r2 <<= 4                    ; R2_w=scalar(smax=9223372036854775792,umax=18446744073709551600,var_off=(0x0; 0xfffffffffffffff0),s32_max=2147483632,u32_max=-16)
988: (4f) r2 |= r5                    ; R2_w=scalar() R5_w=scalar(umax=15,var_off=(0x0; 0xf))
; __jhash_mix(a, b, c);
989: (af) r2 ^= r3                    ; R2_w=scalar() R3_w=scalar(smin=-4294967295,smax=4294967295)
990: (05) goto pc+0
991: (05) goto pc+0
992: (05) goto pc+0
993: (bc) w5 = w2                     ; R2=scalar() R5_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
994: (77) r5 >>= 26                   ; R5_w=scalar(umax=63,var_off=(0x0; 0x3f))
995: (bf) r7 = r2                     ; R2=scalar(id=606) R7_w=scalar(id=606)
996: (67) r7 <<= 6                    ; R7_w=scalar(smax=9223372036854775744,umax=18446744073709551552,var_off=(0x0; 0xffffffffffffffc0),s32_max=2147483584,u32_max=-64)
997: (4f) r7 |= r5                    ; R5_w=scalar(umax=63,var_off=(0x0; 0x3f)) R7_w=scalar()
; b += *(u32*)(k + 4);
998: (07) r1 += -559038209            ; R1_w=scalar(smin=-559038209,smax=3735929086)
; __jhash_mix(a, b, c);
999: (bf) r3 = r1                     ; R1_w=scalar(id=607,smin=-559038209,smax=3735929086) R3_w=scalar(id=607,smin=-559038209,smax=3735929086)
1000: (1f) r3 -= r2                   ; R2=scalar(id=606) R3_w=scalar()
1001: (af) r3 ^= r7                   ; R3_w=scalar() R7_w=scalar()
; a += (u32)k[3] << 24;
1002: (67) r4 <<= 24                  ; R4_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; a += (u32)k[2] << 16;
1003: (57) r0 &= 255                  ; R0_w=scalar(umax=255,var_off=(0x0; 0xff))
; a += (u32)k[2] << 16;
1004: (67) r0 <<= 16                  ; R0_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; a += (u32)k[3] << 24;
1005: (4f) r0 |= r4                   ; R0_w=scalar() R4_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; pckt->flow.ports,
1006: (61) r5 = *(u32 *)(r10 -48)     ; R5_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; b += initval;
1007: (07) r5 += -525483785           ; R5_w=scalar(smin=-525483785,smax=3769483510)
1008: (05) goto pc+0
1009: (7b) *(u64 *)(r10 -168) = r5    ; R5=scalar(smin=-525483785,smax=3769483510) R10=fp0 fp-168_w=
1010: (05) goto pc+0
1011: (05) goto pc+0
1012: (bc) w4 = w5                    ; R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R5=scalar(smin=-525483785,smax=3769483510)
; return (word << shift) | (word >> ((-shift) & 31));
1013: (77) r4 >>= 18                  ; R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1014: (bf) r7 = r5                    ; R5=scalar(id=608,smin=-525483785,smax=3769483510) R7_w=scalar(id=608,smin=-525483785,smax=3769483510)
1015: (67) r7 <<= 14                  ; R7_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1016: (4f) r7 |= r4                   ; R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff)) R7_w=scalar()
; __jhash_final(a, b, c);
1017: (a7) r5 ^= -525483785           ; R5_w=scalar()
1018: (1f) r5 -= r7                   ; R5_w=scalar() R7_w=scalar()
; __jhash_mix(a, b, c);
1019: (0f) r1 += r8                   ; R1_w=scalar(smin=-1118076418,smax=7471858172) R8=scalar(id=605,smin=-559038209,smax=3735929086)
; a += (u32)k[1] << 8;
1020: (57) r9 &= 255                  ; R9_w=scalar(umax=255,var_off=(0x0; 0xff))
; a += (u32)k[1] << 8;
1021: (67) r9 <<= 8                   ; R9_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; a += (u32)k[2] << 16;
1022: (4f) r0 |= r9                   ; R0_w=scalar() R9_w=scalar(umax=65280,var_off=(0x0; 0xff00))
1023: (79) r4 = *(u64 *)(r10 -184)    ; R4_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; a += k[0];
1024: (57) r4 &= 255                  ; R4_w=scalar(umax=255,var_off=(0x0; 0xff))
; a += (u32)k[1] << 8;
1025: (4f) r0 |= r4                   ; R0_w=scalar() R4_w=scalar(umax=255,var_off=(0x0; 0xff))
1026: (05) goto pc+0
1027: (05) goto pc+0
; __jhash_mix(a, b, c);
1028: (05) goto pc+0
1029: (bc) w7 = w3                    ; R3=scalar() R7_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1030: (77) r7 >>= 24                  ; R7_w=scalar(umax=255,var_off=(0x0; 0xff))
1031: (bf) r4 = r3                    ; R3=scalar(id=609) R4_w=scalar(id=609)
1032: (67) r4 <<= 8                   ; R4_w=scalar(smax=9223372036854775552,umax=18446744073709551360,var_off=(0x0; 0xffffffffffffff00),s32_max=2147483392,u32_max=-256)
1033: (4f) r4 |= r7                   ; R4_w=scalar() R7_w=scalar(umax=255,var_off=(0x0; 0xff))
; __jhash_mix(a, b, c);
1034: (0f) r2 += r1                   ; R1=scalar(smin=-1118076418,smax=7471858172) R2_w=scalar()
1035: (1f) r1 -= r3                   ; R1_w=scalar() R3=scalar(id=609)
1036: (af) r1 ^= r4                   ; R1_w=scalar() R4_w=scalar()
1037: (05) goto pc+0
1038: (05) goto pc+0
; __jhash_final(a, b, c);
1039: (7b) *(u64 *)(r10 -176) = r5    ; R5=scalar() R10=fp0 fp-176_w=mmmmmmmm
1040: (05) goto pc+0
1041: (bc) w4 = w5                    ; R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R5=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1042: (77) r4 >>= 21                  ; R4_w=scalar(umax=2047,var_off=(0x0; 0x7ff))
1043: (bf) r8 = r5                    ; R5=scalar(id=610) R8_w=scalar(id=610)
1044: (67) r8 <<= 11                  ; R8_w=scalar(smax=9223372036854773760,umax=18446744073709549568,var_off=(0x0; 0xfffffffffffff800),s32_max=2147481600,u32_max=-2048)
1045: (4f) r8 |= r4                   ; R4_w=scalar(umax=2047,var_off=(0x0; 0x7ff)) R8_w=scalar()
1046: (05) goto pc+0
1047: (05) goto pc+0
; __jhash_mix(a, b, c);
1048: (05) goto pc+0
1049: (bc) w4 = w1                    ; R1=scalar() R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1050: (77) r4 >>= 16                  ; R4_w=scalar(umax=65535,var_off=(0x0; 0xffff))
1051: (bf) r7 = r1                    ; R1=scalar(id=611) R7_w=scalar(id=611)
1052: (67) r7 <<= 16                  ; R7_w=scalar(smax=9223372036854710272,umax=18446744073709486080,var_off=(0x0; 0xffffffffffff0000),s32_max=2147418112,u32_max=-65536)
1053: (4f) r7 |= r4                   ; R4_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R7_w=scalar()
; __jhash_mix(a, b, c);
1054: (0f) r3 += r2                   ; R2=scalar() R3_w=scalar()
1055: (1f) r2 -= r1                   ; R1=scalar(id=611) R2_w=scalar()
1056: (af) r2 ^= r7                   ; R2_w=scalar() R7_w=scalar()
1057: (05) goto pc+0
1058: (05) goto pc+0
1059: (05) goto pc+0
1060: (bc) w7 = w2                    ; R2=scalar() R7_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1061: (77) r7 >>= 13                  ; R7_w=scalar(umax=524287,var_off=(0x0; 0x7ffff))
1062: (bf) r4 = r2                    ; R2=scalar(id=612) R4_w=scalar(id=612)
1063: (67) r4 <<= 19                  ; R4_w=scalar(smax=9223372036854251520,umax=18446744073709027328,var_off=(0x0; 0xfffffffffff80000),s32_max=2146959360,u32_max=-524288)
1064: (4f) r4 |= r7                   ; R4_w=scalar() R7_w=scalar(umax=524287,var_off=(0x0; 0x7ffff))
; __jhash_mix(a, b, c);
1065: (0f) r1 += r3                   ; R1_w=scalar() R3=scalar()
1066: (1f) r3 -= r2                   ; R2=scalar(id=612) R3_w=scalar()
1067: (af) r3 ^= r4                   ; R3_w=scalar() R4_w=scalar()
1068: (0f) r2 += r1                   ; R1_w=scalar() R2_w=scalar()
1069: (bf) r5 = r3                    ; R3_w=scalar(id=613) R5_w=scalar(id=613)
1070: (0f) r5 += r2                   ; R2_w=scalar() R5_w=scalar()
1071: (05) goto pc+0
1072: (05) goto pc+0
1073: (05) goto pc+0
1074: (bc) w4 = w5                    ; R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R5=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1075: (77) r4 >>= 18                  ; R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1076: (bf) r7 = r5                    ; R5=scalar(id=614) R7_w=scalar(id=614)
1077: (67) r7 <<= 14                  ; R7_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1078: (4f) r7 |= r4                   ; R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff)) R7_w=scalar()
; __jhash_mix(a, b, c);
1079: (05) goto pc+0
1080: (05) goto pc+0
1081: (05) goto pc+0
1082: (bc) w4 = w3                    ; R3=scalar(id=613) R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1083: (77) r4 >>= 28                  ; R4_w=scalar(umax=15,var_off=(0x0; 0xf))
; __jhash_mix(a, b, c);
1084: (1f) r1 -= r3                   ; R1_w=scalar() R3=scalar(id=613)
; return (word << shift) | (word >> ((-shift) & 31));
1085: (67) r3 <<= 4                   ; R3_w=scalar(smax=9223372036854775792,umax=18446744073709551600,var_off=(0x0; 0xfffffffffffffff0),s32_max=2147483632,u32_max=-16)
1086: (4f) r3 |= r4                   ; R3_w=scalar() R4_w=scalar(umax=15,var_off=(0x0; 0xf))
; __jhash_mix(a, b, c);
1087: (af) r1 ^= r3                   ; R1_w=scalar() R3_w=scalar()
; a += k[0];
1088: (0f) r2 += r0                   ; R0=scalar() R2_w=scalar()
; __jhash_final(a, b, c);
1089: (af) r1 ^= r5                   ; R1_w=scalar() R5=scalar(id=614)
1090: (1f) r1 -= r7                   ; R1_w=scalar() R7=scalar()
1091: (05) goto pc+0
1092: (05) goto pc+0
1093: (05) goto pc+0
1094: (bc) w3 = w1                    ; R1=scalar() R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1095: (77) r3 >>= 21                  ; R3_w=scalar(umax=2047,var_off=(0x0; 0x7ff))
1096: (bf) r4 = r1                    ; R1=scalar(id=615) R4_w=scalar(id=615)
1097: (67) r4 <<= 11                  ; R4_w=scalar(smax=9223372036854773760,umax=18446744073709549568,var_off=(0x0; 0xfffffffffffff800),s32_max=2147481600,u32_max=-2048)
1098: (4f) r4 |= r3                   ; R3_w=scalar(umax=2047,var_off=(0x0; 0x7ff)) R4_w=scalar()
; __jhash_final(a, b, c);
1099: (bf) r3 = r1                    ; R1=scalar(id=615) R3_w=scalar(id=615)
1100: (af) r3 ^= r2                   ; R2=scalar() R3_w=scalar()
1101: (1f) r3 -= r4                   ; R3_w=scalar() R4_w=scalar()
1102: (05) goto pc+0
1103: (05) goto pc+0
1104: (05) goto pc+0
1105: (bc) w2 = w3                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1106: (77) r2 >>= 7                   ; R2_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff))
1107: (bf) r4 = r3                    ; R3=scalar(id=616) R4_w=scalar(id=616)
1108: (67) r4 <<= 25                  ; R4_w=scalar(smax=9223372036821221376,umax=18446744073675997184,var_off=(0x0; 0xfffffffffe000000),s32_max=2113929216,u32_max=-33554432)
1109: (4f) r4 |= r2                   ; R2_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff)) R4_w=scalar()
; __jhash_final(a, b, c);
1110: (bf) r7 = r3                    ; R3=scalar(id=616) R7_w=scalar(id=616)
1111: (af) r7 ^= r5                   ; R5=scalar(id=614) R7_w=scalar()
1112: (1f) r7 -= r4                   ; R4_w=scalar() R7_w=scalar()
1113: (05) goto pc+0
1114: (05) goto pc+0
1115: (05) goto pc+0
1116: (bc) w2 = w7                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R7=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1117: (77) r2 >>= 16                  ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff))
1118: (bf) r4 = r7                    ; R4_w=scalar(id=617) R7=scalar(id=617)
1119: (67) r4 <<= 16                  ; R4_w=scalar(smax=9223372036854710272,umax=18446744073709486080,var_off=(0x0; 0xffffffffffff0000),s32_max=2147418112,u32_max=-65536)
1120: (4f) r4 |= r2                   ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R4_w=scalar()
; __jhash_final(a, b, c);
1121: (bf) r2 = r7                    ; R2_w=scalar(id=617) R7=scalar(id=617)
1122: (af) r2 ^= r1                   ; R1=scalar(id=615) R2_w=scalar()
1123: (1f) r2 -= r4                   ; R2_w=scalar() R4_w=scalar()
1124: (05) goto pc+0
1125: (bc) w1 = w2                    ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R2=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1126: (77) r1 >>= 28                  ; R1_w=scalar(umax=15,var_off=(0x0; 0xf))
1127: (bf) r4 = r2                    ; R2=scalar(id=618) R4_w=scalar(id=618)
1128: (67) r4 <<= 4                   ; R4_w=scalar(smax=9223372036854775792,umax=18446744073709551600,var_off=(0x0; 0xfffffffffffffff0),s32_max=2147483632,u32_max=-16)
1129: (4f) r4 |= r1                   ; R1_w=scalar(umax=15,var_off=(0x0; 0xf)) R4_w=scalar()
; __jhash_final(a, b, c);
1130: (bf) r1 = r2                    ; R1_w=scalar(id=618) R2=scalar(id=618)
1131: (af) r1 ^= r3                   ; R1_w=scalar() R3=scalar(id=616)
1132: (1f) r1 -= r4                   ; R1_w=scalar() R4_w=scalar()
1133: (05) goto pc+0
1134: (05) goto pc+0
1135: (05) goto pc+0
1136: (bc) w3 = w1                    ; R1=scalar() R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1137: (77) r3 >>= 18                  ; R3_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1138: (bf) r4 = r1                    ; R1=scalar(id=619) R4_w=scalar(id=619)
1139: (67) r4 <<= 14                  ; R4_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1140: (4f) r4 |= r3                   ; R3_w=scalar(umax=16383,var_off=(0x0; 0x3fff)) R4_w=scalar()
; __jhash_final(a, b, c);
1141: (af) r1 ^= r7                   ; R1_w=scalar() R7=scalar(id=617)
1142: (1f) r1 -= r4                   ; R1_w=scalar() R4_w=scalar()
1143: (05) goto pc+0
1144: (05) goto pc+0
1145: (05) goto pc+0
1146: (bc) w4 = w1                    ; R1=scalar() R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1147: (77) r4 >>= 8                   ; R4_w=scalar(umax=16777215,var_off=(0x0; 0xffffff))
1148: (bf) r5 = r1                    ; R1=scalar(id=620) R5_w=scalar(id=620)
1149: (67) r5 <<= 24                  ; R5_w=scalar(smax=9223372036837998592,umax=18446744073692774400,var_off=(0x0; 0xffffffffff000000),s32_max=2130706432,u32_max=-16777216)
1150: (4f) r5 |= r4                   ; R4_w=scalar(umax=16777215,var_off=(0x0; 0xffffff)) R5_w=scalar()
; __jhash_final(a, b, c);
1151: (af) r1 ^= r2                   ; R1_w=scalar() R2=scalar(id=618)
; a += initval;
1152: (1f) r1 -= r5                   ; R1_w=scalar() R5_w=scalar()
1153: (07) r1 += -525483785           ; R1_w=scalar()
1154: (79) r7 = *(u64 *)(r10 -176)    ; R7_w=scalar() R10=fp0
; __jhash_final(a, b, c);
1155: (af) r1 ^= r7                   ; R1_w=scalar() R7_w=scalar()
1156: (1f) r1 -= r8                   ; R1_w=scalar() R8=scalar()
1157: (05) goto pc+0
1158: (bc) w2 = w1                    ; R1=scalar() R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1159: (77) r2 >>= 7                   ; R2_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff))
1160: (bf) r4 = r1                    ; R1=scalar(id=621) R4_w=scalar(id=621)
1161: (67) r4 <<= 25                  ; R4_w=scalar(smax=9223372036821221376,umax=18446744073675997184,var_off=(0x0; 0xfffffffffe000000),s32_max=2113929216,u32_max=-33554432)
1162: (4f) r4 |= r2                   ; R2_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff)) R4_w=scalar()
; __jhash_final(a, b, c);
1163: (bf) r0 = r1                    ; R0_w=scalar(id=621) R1=scalar(id=621)
1164: (79) r2 = *(u64 *)(r10 -168)    ; R2_w=scalar(smin=-525483785,smax=3769483510) R10=fp0
1165: (af) r0 ^= r2                   ; R0_w=scalar() R2_w=scalar(smin=-525483785,smax=3769483510)
1166: (1f) r0 -= r4                   ; R0_w=scalar() R4_w=scalar()
1167: (05) goto pc+0
1168: (05) goto pc+0
1169: (05) goto pc+0
1170: (bc) w2 = w0                    ; R0=scalar() R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1171: (77) r2 >>= 16                  ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff))
1172: (bf) r5 = r0                    ; R0=scalar(id=622) R5_w=scalar(id=622)
1173: (67) r5 <<= 16                  ; R5_w=scalar(smax=9223372036854710272,umax=18446744073709486080,var_off=(0x0; 0xffffffffffff0000),s32_max=2147418112,u32_max=-65536)
1174: (4f) r5 |= r2                   ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R5_w=scalar()
; __jhash_final(a, b, c);
1175: (bf) r4 = r0                    ; R0=scalar(id=622) R4_w=scalar(id=622)
1176: (af) r4 ^= r7                   ; R4_w=scalar() R7=scalar()
1177: (1f) r4 -= r5                   ; R4_w=scalar() R5_w=scalar()
1178: (05) goto pc+0
1179: (bc) w2 = w4                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R4=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1180: (77) r2 >>= 28                  ; R2_w=scalar(umax=15,var_off=(0x0; 0xf))
1181: (bf) r5 = r4                    ; R4=scalar(id=623) R5_w=scalar(id=623)
1182: (67) r5 <<= 4                   ; R5_w=scalar(smax=9223372036854775792,umax=18446744073709551600,var_off=(0x0; 0xfffffffffffffff0),s32_max=2147483632,u32_max=-16)
1183: (4f) r5 |= r2                   ; R2_w=scalar(umax=15,var_off=(0x0; 0xf)) R5_w=scalar()
; __jhash_final(a, b, c);
1184: (bf) r2 = r4                    ; R2_w=scalar(id=623) R4=scalar(id=623)
1185: (af) r2 ^= r1                   ; R1=scalar(id=621) R2_w=scalar()
1186: (1f) r2 -= r5                   ; R2_w=scalar() R5_w=scalar()
1187: (05) goto pc+0
1188: (05) goto pc+0
1189: (05) goto pc+0
1190: (bc) w1 = w2                    ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R2=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1191: (77) r1 >>= 18                  ; R1_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1192: (bf) r5 = r2                    ; R2=scalar(id=624) R5_w=scalar(id=624)
1193: (67) r5 <<= 14                  ; R5_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1194: (4f) r5 |= r1                   ; R1_w=scalar(umax=16383,var_off=(0x0; 0x3fff)) R5_w=scalar()
; __jhash_final(a, b, c);
1195: (af) r2 ^= r0                   ; R0=scalar(id=622) R2_w=scalar()
1196: (1f) r2 -= r5                   ; R2_w=scalar() R5_w=scalar()
1197: (05) goto pc+0
1198: (bc) w1 = w2                    ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R2=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1199: (77) r1 >>= 8                   ; R1_w=scalar(umax=16777215,var_off=(0x0; 0xffffff))
1200: (bf) r3 = r2                    ; R2=scalar(id=625) R3_w=scalar(id=625)
1201: (67) r3 <<= 24                  ; R3_w=scalar(smax=9223372036837998592,umax=18446744073692774400,var_off=(0x0; 0xffffffffff000000),s32_max=2130706432,u32_max=-16777216)
1202: (4f) r3 |= r1                   ; R1_w=scalar(umax=16777215,var_off=(0x0; 0xffffff)) R3_w=scalar()
; __jhash_final(a, b, c);
1203: (af) r2 ^= r4                   ; R2_w=scalar() R4=scalar(id=623)
1204: (1f) r2 -= r3                   ; R2_w=scalar() R3_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1205: (79) r1 = *(u64 *)(r10 -144)    ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
1206: (61) r1 = *(u32 *)(r1 +4)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; key = RING_SIZE * (vip_info->vip_num) + hash;
1207: (27) r1 *= 65537                ; R1_w=scalar(umax=281479271612415,var_off=(0x0; 0x1ffffffffffff))
; __jhash_final(a, b, c);
1208: (bc) w2 = w2                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
1209: (05) goto pc+0
; hash = get_packet_hash(pckt, hash_16bytes) % RING_SIZE;
1210: (97) r2 %= 65537                ; R2_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1211: (0f) r2 += r1                   ; R1_w=scalar(umax=281479271612415,var_off=(0x0; 0x1ffffffffffff)) R2_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1212: (63) *(u32 *)(r10 -20) = r2     ; R2_w=scalar() R10=fp0 fp-24=mmmm????
1213: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1214: (07) r2 += -20                  ; R2_w=fp-20
; real_pos = bpf_map_lookup_elem(&ch_rings, &key);
1215: (18) r1 = 0xffffaebaa0631000    ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
1217: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=626,off=0,ks=4,vs=4,imm=0)
; if (!real_pos) {
1218: (15) if r0 == 0x0 goto pc+638   ; R0=map_value(off=0,ks=4,vs=4,imm=0)
; key = *real_pos;
1219: (61) r1 = *(u32 *)(r0 +0)       ; R0=map_value(off=0,ks=4,vs=4,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; key = *real_pos;
1220: (63) *(u32 *)(r10 -20) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-24=mmmm????
1221: (79) r8 = *(u64 *)(r10 -192)    ; R8_w=1 R10=fp0
; if (key == 0) {
1222: (55) if r1 != 0x0 goto pc+12    ; R1_w=0
1223: (05) goto pc+0
; __u32 ch_drop_stats_key = MAX_VIPS + CH_DROP_STATS;
1224: (62) *(u32 *)(r10 -28) = 521    ; R10=fp0 fp-32=mmmm????
1225: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1226: (07) r2 += -28                  ; R2_w=fp-28
; bpf_map_lookup_elem(&stats, &ch_drop_stats_key);
1227: (18) r1 = 0xffffa03499be8000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
1229: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=627,off=0,ks=4,vs=16,imm=0)
; if (!ch_drop_stats) {
1230: (15) if r0 == 0x0 goto pc+3     ; R0=map_value(off=0,ks=4,vs=16,imm=0)
; ch_drop_stats->v2 += 1;
1231: (79) r1 = *(u64 *)(r0 +8)       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1232: (07) r1 += 1                    ; R1_w=scalar()
1233: (7b) *(u64 *)(r0 +8) = r1       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
; pckt->real_index = key;
1234: (61) r1 = *(u32 *)(r10 -20)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; pckt->real_index = key;
1235: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1236: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1237: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1238: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1240: (85) call bpf_map_lookup_elem#1
1241: safe

from 1230 to 1234: R0=0 R6=ctx(off=0,imm=0) R7=scalar() R8=1 R9=scalar(umax=65280,var_off=(0x0; 0xff00)) R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184= fp-192=1 fp-200= fp-208=mmmmmmmm
; pckt->real_index = key;
1234: (61) r1 = *(u32 *)(r10 -20)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; pckt->real_index = key;
1235: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1236: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1237: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1238: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1240: (85) call bpf_map_lookup_elem#1
1241: safe

from 1222 to 1235: R0=map_value(off=0,ks=4,vs=4,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6=ctx(off=0,imm=0) R7=scalar() R8_w=1 R9=scalar(umax=65280,var_off=(0x0; 0xff00)) R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184= fp-192=1 fp-200= fp-208=mmmmmmmm
; pckt->real_index = key;
1235: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1236: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1237: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1238: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1240: (85) call bpf_map_lookup_elem#1
1241: safe

from 1218 to 1857: safe

from 957 to 967: R0=scalar(id=552) R1=scalar(umax=8,var_off=(0x0; 0x8)) R2=scalar(umax=1000000000,var_off=(0x0; 0x3fffffff)) R6=ctx(off=0,imm=0) R7=scalar(id=552) R8=1 R9=map_value(off=0,ks=4,vs=16,imm=0) R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-192=1 fp-200= fp-208=mmmmmmmm
; pckt->flow.port16[0] = pckt->flow.port16[1];
967: (69) r1 = *(u16 *)(r10 -46)      ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; pckt->flow.port16[0] = pckt->flow.port16[1];
968: (6b) *(u16 *)(r10 -48) = r1      ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-48=
969: (05) goto pc+0
; memset(pckt->flow.srcv6, 0, 16);
970: (7a) *(u64 *)(r10 -80) = 0       ; R10=fp0 fp-80_w=mmmmmmmm
971: (b7) r1 = 0                      ; R1_w=0
972: (7b) *(u64 *)(r10 -184) = r1
last_idx 972 first_idx 967
regs=2 stack=0 before 971: (b7) r1 = 0
973: R1_w=P0 R10=fp0 fp-184_w=00000000
973: (7a) *(u64 *)(r10 -72) = 0       ; R10=fp0 fp-72_w=mmmmmmmm
974: (b7) r9 = 0                      ; R9_w=0
975: (b7) r0 = 0                      ; R0_w=0
976: (b7) r8 = 0                      ; R8_w=0
977: (b7) r3 = 0                      ; R3_w=0
978: (b7) r4 = 0                      ; R4_w=0
; __jhash_mix(a, b, c);
979: (1f) r3 -= r8                    ; R3_w=0 R8_w=0
; c += *(u32*)(k + 8);
980: (07) r8 += -559038209            ; R8_w=-559038209
981: (05) goto pc+0
982: (05) goto pc+0
983: (05) goto pc+0
984: (bc) w5 = w8                     ; R5_w=3735929087 R8=-559038209
; return (word << shift) | (word >> ((-shift) & 31));
985: (77) r5 >>= 28                   ; R5_w=13
986: (bf) r2 = r8                     ; R2_w=-559038209 R8=-559038209
987: (67) r2 <<= 4                    ; R2_w=-8944611344
988: (4f) r2 |= r5                    ; R2_w=-8944611331 R5_w=13
; __jhash_mix(a, b, c);
989: (af) r2 ^= r3                    ; R2_w=-8944611331 R3=0
990: (05) goto pc+0
991: (05) goto pc+0
992: (05) goto pc+0
993: (bc) w5 = w2                     ; R2=-8944611331 R5_w=3940290557
; return (word << shift) | (word >> ((-shift) & 31));
994: (77) r5 >>= 26                   ; R5_w=58
995: (bf) r7 = r2                     ; R2=-8944611331 R7_w=-8944611331
996: (67) r7 <<= 6                    ; R7_w=-572455125184
997: (4f) r7 |= r5                    ; R5_w=58 R7_w=-572455125126
; b += *(u32*)(k + 4);
998: (07) r1 += -559038209            ; R1_w=P-559038209
; __jhash_mix(a, b, c);
999: (bf) r3 = r1                     ; R1_w=P-559038209 R3_w=P-559038209
1000: (1f) r3 -= r2
last_idx 1000 first_idx 991
regs=4 stack=0 before 999: (bf) r3 = r1
regs=4 stack=0 before 998: (07) r1 += -559038209
regs=4 stack=0 before 997: (4f) r7 |= r5
regs=4 stack=0 before 996: (67) r7 <<= 6
regs=4 stack=0 before 995: (bf) r7 = r2
regs=4 stack=0 before 994: (77) r5 >>= 26
regs=4 stack=0 before 993: (bc) w5 = w2
regs=4 stack=0 before 992: (05) goto pc+0
regs=4 stack=0 before 991: (05) goto pc+0
parent didn't have regs=4 stack=0 marks: R0=0 R1_r=P0 R2_rw=P-8944611331 R3=0 R4=0 R5_w=13 R6=ctx(off=0,imm=0) R7=scalar(id=552) R8=-559038209 R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-184=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
last_idx 990 first_idx 982
regs=4 stack=0 before 990: (05) goto pc+0
regs=4 stack=0 before 989: (af) r2 ^= r3
regs=c stack=0 before 988: (4f) r2 |= r5
regs=2c stack=0 before 987: (67) r2 <<= 4
regs=2c stack=0 before 986: (bf) r2 = r8
regs=128 stack=0 before 985: (77) r5 >>= 28
regs=128 stack=0 before 984: (bc) w5 = w8
regs=108 stack=0 before 983: (05) goto pc+0
regs=108 stack=0 before 982: (05) goto pc+0
parent didn't have regs=108 stack=0 marks: R0_w=0 R1_rw=P0 R2=scalar(umax=1000000000,var_off=(0x0; 0x3fffffff)) R3_rw=P0 R4_w=0 R6=ctx(off=0,imm=0) R7=scalar(id=552) R8_rw=P-559038209 R9_w=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72_w=mmmmmmmm fp-80_w=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-184_w=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
last_idx 981 first_idx 967
regs=108 stack=0 before 981: (05) goto pc+0
regs=108 stack=0 before 980: (07) r8 += -559038209
regs=108 stack=0 before 979: (1f) r3 -= r8
regs=108 stack=0 before 978: (b7) r4 = 0
regs=108 stack=0 before 977: (b7) r3 = 0
regs=100 stack=0 before 976: (b7) r8 = 0
1001: (af) r3 ^= r7
last_idx 1001 first_idx 991
regs=80 stack=0 before 1000: (1f) r3 -= r2
regs=80 stack=0 before 999: (bf) r3 = r1
regs=80 stack=0 before 998: (07) r1 += -559038209
regs=80 stack=0 before 997: (4f) r7 |= r5
regs=a0 stack=0 before 996: (67) r7 <<= 6
regs=a0 stack=0 before 995: (bf) r7 = r2
regs=24 stack=0 before 994: (77) r5 >>= 26
regs=24 stack=0 before 993: (bc) w5 = w2
regs=4 stack=0 before 992: (05) goto pc+0
regs=4 stack=0 before 991: (05) goto pc+0
parent already had regs=4 stack=0 marks: R0=0 R1_r=P0 R2_rw=P-8944611331 R3=0 R4=0 R5_w=13 R6=ctx(off=0,imm=0) R7=scalar(id=552) R8=-559038209 R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-184=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
; a += (u32)k[3] << 24;
1002: (67) r4 <<= 24                  ; R4_w=0
; a += (u32)k[2] << 16;
1003: (57) r0 &= 255                  ; R0_w=0
; a += (u32)k[2] << 16;
1004: (67) r0 <<= 16                  ; R0_w=0
; a += (u32)k[3] << 24;
1005: (4f) r0 |= r4                   ; R0_w=0 R4_w=0
; pckt->flow.ports,
1006: (61) r5 = *(u32 *)(r10 -48)     ; R5_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; b += initval;
1007: (07) r5 += -525483785           ; R5_w=scalar(smin=-525483785,smax=3769483510)
1008: (05) goto pc+0
1009: (7b) *(u64 *)(r10 -168) = r5    ; R5=scalar(smin=-525483785,smax=3769483510) R10=fp0 fp-168_w=
1010: (05) goto pc+0
1011: (05) goto pc+0
1012: (bc) w4 = w5                    ; R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R5=scalar(smin=-525483785,smax=3769483510)
; return (word << shift) | (word >> ((-shift) & 31));
1013: (77) r4 >>= 18                  ; R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1014: (bf) r7 = r5                    ; R5=scalar(id=634,smin=-525483785,smax=3769483510) R7_w=scalar(id=634,smin=-525483785,smax=3769483510)
1015: (67) r7 <<= 14                  ; R7_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1016: (4f) r7 |= r4                   ; R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff)) R7_w=scalar()
; __jhash_final(a, b, c);
1017: (a7) r5 ^= -525483785           ; R5_w=scalar()
1018: (1f) r5 -= r7                   ; R5_w=scalar() R7_w=scalar()
; __jhash_mix(a, b, c);
1019: (0f) r1 += r8
last_idx 1019 first_idx 1009
regs=100 stack=0 before 1018: (1f) r5 -= r7
regs=100 stack=0 before 1017: (a7) r5 ^= -525483785
regs=100 stack=0 before 1016: (4f) r7 |= r4
regs=100 stack=0 before 1015: (67) r7 <<= 14
regs=100 stack=0 before 1014: (bf) r7 = r5
regs=100 stack=0 before 1013: (77) r4 >>= 18
regs=100 stack=0 before 1012: (bc) w4 = w5
regs=100 stack=0 before 1011: (05) goto pc+0
regs=100 stack=0 before 1010: (05) goto pc+0
regs=100 stack=0 before 1009: (7b) *(u64 *)(r10 -168) = r5
parent didn't have regs=100 stack=0 marks: R0_w=0 R1_rw=P-559038209 R2=P-8944611331 R3_w=P-570076017032 R4_w=0 R5_rw=scalar(smin=-525483785,smax=3769483510) R6=ctx(off=0,imm=0) R7_w=P-572455125126 R8_r=P-559038209 R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-184=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
last_idx 1008 first_idx 991
regs=100 stack=0 before 1008: (05) goto pc+0
regs=100 stack=0 before 1007: (07) r5 += -525483785
regs=100 stack=0 before 1006: (61) r5 = *(u32 *)(r10 -48)
regs=100 stack=0 before 1005: (4f) r0 |= r4
regs=100 stack=0 before 1004: (67) r0 <<= 16
regs=100 stack=0 before 1003: (57) r0 &= 255
regs=100 stack=0 before 1002: (67) r4 <<= 24
regs=100 stack=0 before 1001: (af) r3 ^= r7
regs=100 stack=0 before 1000: (1f) r3 -= r2
regs=100 stack=0 before 999: (bf) r3 = r1
regs=100 stack=0 before 998: (07) r1 += -559038209
regs=100 stack=0 before 997: (4f) r7 |= r5
regs=100 stack=0 before 996: (67) r7 <<= 6
regs=100 stack=0 before 995: (bf) r7 = r2
regs=100 stack=0 before 994: (77) r5 >>= 26
regs=100 stack=0 before 993: (bc) w5 = w2
regs=100 stack=0 before 992: (05) goto pc+0
regs=100 stack=0 before 991: (05) goto pc+0
parent didn't have regs=100 stack=0 marks: R0_r=0 R1_r=P0 R2_rw=P-8944611331 R3=0 R4_r=0 R5_w=13 R6=ctx(off=0,imm=0) R7=scalar(id=552) R8_r=P-559038209 R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48_r= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-184=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
last_idx 990 first_idx 982
regs=100 stack=0 before 990: (05) goto pc+0
regs=100 stack=0 before 989: (af) r2 ^= r3
regs=100 stack=0 before 988: (4f) r2 |= r5
regs=100 stack=0 before 987: (67) r2 <<= 4
regs=100 stack=0 before 986: (bf) r2 = r8
regs=100 stack=0 before 985: (77) r5 >>= 28
regs=100 stack=0 before 984: (bc) w5 = w8
regs=100 stack=0 before 983: (05) goto pc+0
regs=100 stack=0 before 982: (05) goto pc+0
parent already had regs=100 stack=0 marks: R0_rw=0 R1_rw=P0 R2=scalar(umax=1000000000,var_off=(0x0; 0x3fffffff)) R3_rw=P0 R4_rw=0 R6=ctx(off=0,imm=0) R7=scalar(id=552) R8_rw=P-559038209 R9_w=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48_r= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72_w=mmmmmmmm fp-80_w=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-184_w=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
; a += (u32)k[1] << 8;
1020: (57) r9 &= 255                  ; R9_w=0
; a += (u32)k[1] << 8;
1021: (67) r9 <<= 8                   ; R9_w=0
; a += (u32)k[2] << 16;
1022: (4f) r0 |= r9                   ; R0_w=0 R9_w=0
1023: (79) r4 = *(u64 *)(r10 -184)    ; R4_w=P0 R10=fp0
; a += k[0];
1024: (57) r4 &= 255                  ; R4_w=P0
; a += (u32)k[1] << 8;
1025: (4f) r0 |= r4                   ; R0_w=0 R4_w=P0
1026: (05) goto pc+0
1027: (05) goto pc+0
; __jhash_mix(a, b, c);
1028: (05) goto pc+0
1029: (bc) w7 = w3                    ; R3=P-570076017032 R7_w=P1154633336
; return (word << shift) | (word >> ((-shift) & 31));
1030: (77) r7 >>= 24                  ; R7_w=P68
1031: (bf) r4 = r3                    ; R3=P-570076017032 R4_w=P-570076017032
1032: (67) r4 <<= 8                   ; R4_w=P-145939460360192
1033: (4f) r4 |= r7                   ; R4_w=P-145939460360124 R7_w=P68
; __jhash_mix(a, b, c);
1034: (0f) r2 += r1                   ; R1=P-1118076418 R2_w=P-10062687749
1035: (1f) r1 -= r3                   ; R1_w=P568957940614 R3=P-570076017032
1036: (af) r1 ^= r4                   ; R1_w=P-145407547585598 R4_w=P-145939460360124
1037: (05) goto pc+0
1038: (05) goto pc+0
; __jhash_final(a, b, c);
1039: (7b) *(u64 *)(r10 -176) = r5    ; R5=scalar() R10=fp0 fp-176_w=mmmmmmmm
1040: (05) goto pc+0
1041: (bc) w4 = w5                    ; R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R5=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1042: (77) r4 >>= 21                  ; R4_w=scalar(umax=2047,var_off=(0x0; 0x7ff))
1043: (bf) r8 = r5                    ; R5=scalar(id=636) R8_w=scalar(id=636)
1044: (67) r8 <<= 11                  ; R8_w=scalar(smax=9223372036854773760,umax=18446744073709549568,var_off=(0x0; 0xfffffffffffff800),s32_max=2147481600,u32_max=-2048)
1045: (4f) r8 |= r4                   ; R4_w=scalar(umax=2047,var_off=(0x0; 0x7ff)) R8_w=scalar()
1046: (05) goto pc+0
1047: (05) goto pc+0
; __jhash_mix(a, b, c);
1048: (05) goto pc+0
1049: (bc) w4 = w1                    ; R1=P-145407547585598 R4_w=P2865187778
; return (word << shift) | (word >> ((-shift) & 31));
1050: (77) r4 >>= 16                  ; R4_w=P43719
1051: (bf) r7 = r1                    ; R1=P-145407547585598 R7_w=P-145407547585598
1052: (67) r7 <<= 16                  ; R7_w=P8917315035139801088
1053: (4f) r7 |= r4                   ; R4_w=P43719 R7_w=P8917315035139844807
; __jhash_mix(a, b, c);
1054: (0f) r3 += r2                   ; R2=P-10062687749 R3_w=P-580138704781
1055: (1f) r2 -= r1                   ; R1=P-145407547585598 R2_w=P145397484897849
1056: (af) r2 ^= r7                   ; R2_w=P8917178920830430462 R7_w=P8917315035139844807
1057: (05) goto pc+0
1058: (05) goto pc+0
1059: (05) goto pc+0
1060: (bc) w7 = w2                    ; R2=P8917178920830430462 R7_w=P3065179390
; return (word << shift) | (word >> ((-shift) & 31));
1061: (77) r7 >>= 13                  ; R7_w=P374167
1062: (bf) r4 = r2                    ; R2=P8917178920830430462 R4_w=P8917178920830430462
1063: (67) r4 <<= 19                  ; R4_w=P8637259322254950400
1064: (4f) r4 |= r7                   ; R4_w=P8637259322255324567 R7_w=P374167
; __jhash_mix(a, b, c);
1065: (0f) r1 += r3                   ; R1_w=P-145987686290379 R3=P-580138704781
1066: (1f) r3 -= r2                   ; R2=P8917178920830430462 R3_w=P-8917179500969135243
1067: (af) r3 ^= r4                   ; R3_w=P-873023320690047262 R4_w=P8637259322255324567
1068: (0f) r2 += r1                   ; R1_w=P-145987686290379 R2_w=P8917032933144140083
1069: (bf) r5 = r3                    ; R3_w=P-873023320690047262 R5_w=P-873023320690047262
1070: (0f) r5 += r2                   ; R2_w=P8917032933144140083 R5_w=P8044009612454092821
1071: (05) goto pc+0
1072: (05) goto pc+0
1073: (05) goto pc+0
1074: (bc) w4 = w5                    ; R4_w=P2686935061 R5=P8044009612454092821
; return (word << shift) | (word >> ((-shift) & 31));
1075: (77) r4 >>= 18                  ; R4_w=P10249
1076: (bf) r7 = r5                    ; R5=P8044009612454092821 R7_w=P8044009612454092821
1077: (67) r7 <<= 14                  ; R7_w=P-8932916206889517056
1078: (4f) r7 |= r4                   ; R4_w=P10249 R7_w=P-8932916206889506807
; __jhash_mix(a, b, c);
1079: (05) goto pc+0
1080: (05) goto pc+0
1081: (05) goto pc+0
1082: (bc) w4 = w3                    ; R3=P-873023320690047262 R4_w=P1369655010
; return (word << shift) | (word >> ((-shift) & 31));
1083: (77) r4 >>= 28                  ; R4_w=P5
; __jhash_mix(a, b, c);
1084: (1f) r1 -= r3                   ; R1_w=P872877333003756883 R3=P-873023320690047262
; return (word << shift) | (word >> ((-shift) & 31));
1085: (67) r3 <<= 4                   ; R3_w=P4478370942668795424
1086: (4f) r3 |= r4                   ; R3_w=P4478370942668795429 R4_w=P5
; __jhash_mix(a, b, c);
1087: (af) r1 ^= r3                   ; R1_w=P3619570195461933942 R3_w=P4478370942668795429
; a += k[0];
1088: (0f) r2 += r0
last_idx 1088 first_idx 1080
regs=1 stack=0 before 1087: (af) r1 ^= r3
regs=1 stack=0 before 1086: (4f) r3 |= r4
regs=1 stack=0 before 1085: (67) r3 <<= 4
regs=1 stack=0 before 1084: (1f) r1 -= r3
regs=1 stack=0 before 1083: (77) r4 >>= 28
regs=1 stack=0 before 1082: (bc) w4 = w3
regs=1 stack=0 before 1081: (05) goto pc+0
regs=1 stack=0 before 1080: (05) goto pc+0
parent didn't have regs=1 stack=0 marks: R0_r=P0 R1_r=P-145987686290379 R2_r=P8917032933144140083 R3_r=P-873023320690047262 R4_w=P10249 R5=P8044009612454092821 R6=ctx(off=0,imm=0) R7_w=P-8932916206889506807 R8=scalar() R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
last_idx 1079 first_idx 1072
regs=1 stack=0 before 1079: (05) goto pc+0
regs=1 stack=0 before 1078: (4f) r7 |= r4
regs=1 stack=0 before 1077: (67) r7 <<= 14
regs=1 stack=0 before 1076: (bf) r7 = r5
regs=1 stack=0 before 1075: (77) r4 >>= 18
regs=1 stack=0 before 1074: (bc) w4 = w5
regs=1 stack=0 before 1073: (05) goto pc+0
regs=1 stack=0 before 1072: (05) goto pc+0
parent didn't have regs=1 stack=0 marks: R0_r=P0 R1_rw=P-145987686290379 R2_rw=P8917032933144140083 R3_rw=P-873023320690047262 R4_w=P8637259322255324567 R5_rw=P8044009612454092821 R6=ctx(off=0,imm=0) R7_w=P374167 R8=scalar() R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
last_idx 1071 first_idx 1058
regs=1 stack=0 before 1071: (05) goto pc+0
regs=1 stack=0 before 1070: (0f) r5 += r2
regs=1 stack=0 before 1069: (bf) r5 = r3
regs=1 stack=0 before 1068: (0f) r2 += r1
regs=1 stack=0 before 1067: (af) r3 ^= r4
regs=1 stack=0 before 1066: (1f) r3 -= r2
regs=1 stack=0 before 1065: (0f) r1 += r3
regs=1 stack=0 before 1064: (4f) r4 |= r7
regs=1 stack=0 before 1063: (67) r4 <<= 19
regs=1 stack=0 before 1062: (bf) r4 = r2
regs=1 stack=0 before 1061: (77) r7 >>= 13
regs=1 stack=0 before 1060: (bc) w7 = w2
regs=1 stack=0 before 1059: (05) goto pc+0
regs=1 stack=0 before 1058: (05) goto pc+0
parent didn't have regs=1 stack=0 marks: R0_r=P0 R1_r=P-145407547585598 R2_rw=P8917178920830430462 R3_rw=P-580138704781 R4_w=P43719 R5=scalar(id=636) R6=ctx(off=0,imm=0) R7_w=P8917315035139844807 R8=scalar() R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
last_idx 1057 first_idx 1047
regs=1 stack=0 before 1057: (05) goto pc+0
regs=1 stack=0 before 1056: (af) r2 ^= r7
regs=1 stack=0 before 1055: (1f) r2 -= r1
regs=1 stack=0 before 1054: (0f) r3 += r2
regs=1 stack=0 before 1053: (4f) r7 |= r4
regs=1 stack=0 before 1052: (67) r7 <<= 16
regs=1 stack=0 before 1051: (bf) r7 = r1
regs=1 stack=0 before 1050: (77) r4 >>= 16
regs=1 stack=0 before 1049: (bc) w4 = w1
regs=1 stack=0 before 1048: (05) goto pc+0
regs=1 stack=0 before 1047: (05) goto pc+0
parent didn't have regs=1 stack=0 marks: R0_r=P0 R1_r=P-145407547585598 R2_r=P-10062687749 R3_r=P-570076017032 R4_w=scalar(umax=2047,var_off=(0x0; 0x7ff)) R5=scalar(id=636) R6=ctx(off=0,imm=0) R7=P68 R8_w=scalar() R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176_w=mmmmmmmm fp-184=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
last_idx 1046 first_idx 1038
regs=1 stack=0 before 1046: (05) goto pc+0
regs=1 stack=0 before 1045: (4f) r8 |= r4
regs=1 stack=0 before 1044: (67) r8 <<= 11
regs=1 stack=0 before 1043: (bf) r8 = r5
regs=1 stack=0 before 1042: (77) r4 >>= 21
regs=1 stack=0 before 1041: (bc) w4 = w5
regs=1 stack=0 before 1040: (05) goto pc+0
regs=1 stack=0 before 1039: (7b) *(u64 *)(r10 -176) = r5
regs=1 stack=0 before 1038: (05) goto pc+0
parent didn't have regs=1 stack=0 marks: R0_r=P0 R1_rw=P-145407547585598 R2_rw=P-10062687749 R3_r=P-570076017032 R4_w=P-145939460360124 R5_r=scalar() R6=ctx(off=0,imm=0) R7_w=P68 R8=P-559038209 R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-184=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
last_idx 1037 first_idx 1027
regs=1 stack=0 before 1037: (05) goto pc+0
regs=1 stack=0 before 1036: (af) r1 ^= r4
regs=1 stack=0 before 1035: (1f) r1 -= r3
regs=1 stack=0 before 1034: (0f) r2 += r1
regs=1 stack=0 before 1033: (4f) r4 |= r7
regs=1 stack=0 before 1032: (67) r4 <<= 8
regs=1 stack=0 before 1031: (bf) r4 = r3
regs=1 stack=0 before 1030: (77) r7 >>= 24
regs=1 stack=0 before 1029: (bc) w7 = w3
regs=1 stack=0 before 1028: (05) goto pc+0
regs=1 stack=0 before 1027: (05) goto pc+0
parent didn't have regs=1 stack=0 marks: R0_rw=P0 R1_rw=P-1118076418 R2_r=P-8944611331 R3_r=P-570076017032 R4_w=P0 R5_rw=scalar() R6=ctx(off=0,imm=0) R7_w=scalar() R8=P-559038209 R9_w=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168_w= fp-184=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
last_idx 1026 first_idx 1009
regs=1 stack=0 before 1026: (05) goto pc+0
regs=1 stack=0 before 1025: (4f) r0 |= r4
regs=11 stack=0 before 1024: (57) r4 &= 255
regs=11 stack=0 before 1023: (79) r4 = *(u64 *)(r10 -184)
regs=1 stack=400000 before 1022: (4f) r0 |= r9
regs=201 stack=400000 before 1021: (67) r9 <<= 8
regs=201 stack=400000 before 1020: (57) r9 &= 255
regs=201 stack=400000 before 1019: (0f) r1 += r8
regs=201 stack=400000 before 1018: (1f) r5 -= r7
regs=201 stack=400000 before 1017: (a7) r5 ^= -525483785
regs=201 stack=400000 before 1016: (4f) r7 |= r4
regs=201 stack=400000 before 1015: (67) r7 <<= 14
regs=201 stack=400000 before 1014: (bf) r7 = r5
regs=201 stack=400000 before 1013: (77) r4 >>= 18
regs=201 stack=400000 before 1012: (bc) w4 = w5
regs=201 stack=400000 before 1011: (05) goto pc+0
regs=201 stack=400000 before 1010: (05) goto pc+0
regs=201 stack=400000 before 1009: (7b) *(u64 *)(r10 -168) = r5
parent didn't have regs=201 stack=0 marks: R0_rw=P0 R1_rw=P-559038209 R2_r=P-8944611331 R3_rw=P-570076017032 R4_w=0 R5_rw=scalar(smin=-525483785,smax=3769483510) R6=ctx(off=0,imm=0) R7_w=P-572455125126 R8_r=P-559038209 R9_r=P0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-184_r=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
last_idx 1008 first_idx 991
regs=201 stack=0 before 1008: (05) goto pc+0
regs=201 stack=0 before 1007: (07) r5 += -525483785
regs=201 stack=0 before 1006: (61) r5 = *(u32 *)(r10 -48)
regs=201 stack=0 before 1005: (4f) r0 |= r4
regs=211 stack=0 before 1004: (67) r0 <<= 16
regs=211 stack=0 before 1003: (57) r0 &= 255
regs=211 stack=0 before 1002: (67) r4 <<= 24
regs=211 stack=0 before 1001: (af) r3 ^= r7
regs=211 stack=0 before 1000: (1f) r3 -= r2
regs=211 stack=0 before 999: (bf) r3 = r1
regs=211 stack=0 before 998: (07) r1 += -559038209
regs=211 stack=0 before 997: (4f) r7 |= r5
regs=211 stack=0 before 996: (67) r7 <<= 6
regs=211 stack=0 before 995: (bf) r7 = r2
regs=211 stack=0 before 994: (77) r5 >>= 26
regs=211 stack=0 before 993: (bc) w5 = w2
regs=211 stack=0 before 992: (05) goto pc+0
regs=211 stack=0 before 991: (05) goto pc+0
parent didn't have regs=211 stack=0 marks: R0_r=P0 R1_r=P0 R2_rw=P-8944611331 R3=0 R4_r=P0 R5_w=13 R6=ctx(off=0,imm=0) R7=scalar(id=552) R8_r=P-559038209 R9_r=P0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48_r= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-184_r=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
last_idx 990 first_idx 982
regs=211 stack=0 before 990: (05) goto pc+0
regs=211 stack=0 before 989: (af) r2 ^= r3
regs=211 stack=0 before 988: (4f) r2 |= r5
regs=211 stack=0 before 987: (67) r2 <<= 4
regs=211 stack=0 before 986: (bf) r2 = r8
regs=211 stack=0 before 985: (77) r5 >>= 28
regs=211 stack=0 before 984: (bc) w5 = w8
regs=211 stack=0 before 983: (05) goto pc+0
regs=211 stack=0 before 982: (05) goto pc+0
parent didn't have regs=211 stack=0 marks: R0_rw=P0 R1_rw=P0 R2=scalar(umax=1000000000,var_off=(0x0; 0x3fffffff)) R3_rw=P0 R4_rw=P0 R6=ctx(off=0,imm=0) R7=scalar(id=552) R8_rw=P-559038209 R9_rw=P0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48_r= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72_w=mmmmmmmm fp-80_w=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-184_rw=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
last_idx 981 first_idx 967
regs=211 stack=0 before 981: (05) goto pc+0
regs=211 stack=0 before 980: (07) r8 += -559038209
regs=211 stack=0 before 979: (1f) r3 -= r8
regs=211 stack=0 before 978: (b7) r4 = 0
regs=201 stack=0 before 977: (b7) r3 = 0
regs=201 stack=0 before 976: (b7) r8 = 0
regs=201 stack=0 before 975: (b7) r0 = 0
regs=200 stack=0 before 974: (b7) r9 = 0
; __jhash_final(a, b, c);
1089: (af) r1 ^= r5                   ; R1_w=P6744523029021125475 R5=P8044009612454092821
1090: (1f) r1 -= r7                   ; R1_w=P-2769304837798919334 R7=P-8932916206889506807
1091: (05) goto pc+0
1092: (05) goto pc+0
1093: (05) goto pc+0
1094: (bc) w3 = w1                    ; R1=P-2769304837798919334 R3_w=P607748954
; return (word << shift) | (word >> ((-shift) & 31));
1095: (77) r3 >>= 21                  ; R3_w=P289
1096: (bf) r4 = r1                    ; R1=P-2769304837798919334 R4_w=P-2769304837798919334
1097: (67) r4 <<= 11                  ; R4_w=P-8385877183354449920
1098: (4f) r4 |= r3                   ; R3_w=P289 R4_w=P-8385877183354449631
; __jhash_final(a, b, c);
1099: (bf) r3 = r1                    ; R1=P-2769304837798919334 R3_w=P-2769304837798919334
1100: (af) r3 ^= r2                   ; R2=P8917032933144140083 R3_w=P-6760226462814594455
1101: (1f) r3 -= r4                   ; R3_w=P1625650720539855176 R4_w=P-8385877183354449631
1102: (05) goto pc+0
1103: (05) goto pc+0
1104: (05) goto pc+0
1105: (bc) w2 = w3                    ; R2_w=P2661468488 R3=P1625650720539855176
; return (word << shift) | (word >> ((-shift) & 31));
1106: (77) r2 >>= 7                   ; R2_w=P20792722
1107: (bf) r4 = r3                    ; R3=P1625650720539855176 R4_w=P1625650720539855176
1108: (67) r4 <<= 25                  ; R4_w=P8015639407572811776
1109: (4f) r4 |= r2                   ; R2_w=P20792722 R4_w=P8015639407593604498
; __jhash_final(a, b, c);
1110: (bf) r7 = r3                    ; R3=P1625650720539855176 R7_w=P1625650720539855176
1111: (af) r7 ^= r5                   ; R5=P8044009612454092821 R7_w=P8731750324354001245
1112: (1f) r7 -= r4                   ; R4_w=P8015639407593604498 R7_w=P716110916760396747
1113: (05) goto pc+0
1114: (05) goto pc+0
1115: (05) goto pc+0
1116: (bc) w2 = w7                    ; R2_w=P2907202507 R7=P716110916760396747
; return (word << shift) | (word >> ((-shift) & 31));
1117: (77) r2 >>= 16                  ; R2_w=P44360
1118: (bf) r4 = r7                    ; R4_w=P716110916760396747 R7=P716110916760396747
1119: (67) r4 <<= 16                  ; R4_w=P2528117292261900288
1120: (4f) r4 |= r2                   ; R2_w=P44360 R4_w=P2528117292261944648
; __jhash_final(a, b, c);
1121: (bf) r2 = r7                    ; R2_w=P716110916760396747 R7=P716110916760396747
1122: (af) r2 ^= r1                   ; R1=P-2769304837798919334 R2_w=P-3431372408396586863
1123: (1f) r2 -= r4                   ; R2_w=P-5959489700658531511 R4_w=P2528117292261944648
1124: (05) goto pc+0
1125: (bc) w1 = w2                    ; R1_w=P631649097 R2=P-5959489700658531511
; return (word << shift) | (word >> ((-shift) & 31));
1126: (77) r1 >>= 28                  ; R1_w=P2
1127: (bf) r4 = r2                    ; R2=P-5959489700658531511 R4_w=P-5959489700658531511
1128: (67) r4 <<= 4                   ; R4_w=P-3118114841988746096
1129: (4f) r4 |= r1                   ; R1_w=P2 R4_w=P-3118114841988746094
; __jhash_final(a, b, c);
1130: (bf) r1 = r2                    ; R1_w=P-5959489700658531511 R2=P-5959489700658531511
1131: (af) r1 ^= r3                   ; R1_w=P-4916564071227786751 R3=P1625650720539855176
1132: (1f) r1 -= r4                   ; R1_w=P-1798449229239040657 R4_w=P-3118114841988746094
1133: (05) goto pc+0
1134: (05) goto pc+0
1135: (05) goto pc+0
1136: (bc) w3 = w1                    ; R1=P-1798449229239040657 R3_w=P1621214575
; return (word << shift) | (word >> ((-shift) & 31));
1137: (77) r3 >>= 18                  ; R3_w=P6184
1138: (bf) r4 = r1                    ; R1=P-1798449229239040657 R4_w=P-1798449229239040657
1139: (67) r4 <<= 14                  ; R4_w=P-6341886138288193536
1140: (4f) r4 |= r3                   ; R3_w=P6184 R4_w=P-6341886138288187352
; __jhash_final(a, b, c);
1141: (af) r1 ^= r7                   ; R1_w=P-1226460270496733532 R7=P716110916760396747
1142: (1f) r1 -= r4                   ; R1_w=P5115425867791453820 R4_w=P-6341886138288187352
1143: (05) goto pc+0
1144: (05) goto pc+0
1145: (05) goto pc+0
1146: (bc) w4 = w1                    ; R1=P5115425867791453820 R4_w=P1552797308
; return (word << shift) | (word >> ((-shift) & 31));
1147: (77) r4 >>= 8                   ; R4_w=P6065614
1148: (bf) r5 = r1                    ; R1=P5115425867791453820 R5_w=P5115425867791453820
1149: (67) r5 <<= 24                  ; R5_w=P-5090037560852348928
1150: (4f) r5 |= r4                   ; R4_w=P6065614 R5_w=P-5090037560846283314
; __jhash_final(a, b, c);
1151: (af) r1 ^= r2                   ; R1_w=P-1461973296061088459 R2=P-5959489700658531511
; a += initval;
1152: (1f) r1 -= r5                   ; R1_w=P3628064264785194855 R5_w=P-5090037560846283314
1153: (07) r1 += -525483785           ; R1_w=P3628064264259711070
1154: (79) r7 = *(u64 *)(r10 -176)    ; R7_w=scalar() R10=fp0
; __jhash_final(a, b, c);
1155: (af) r1 ^= r7
last_idx 1155 first_idx 1144
regs=80 stack=0 before 1154: (79) r7 = *(u64 *)(r10 -176)
regs=0 stack=200000 before 1153: (07) r1 += -525483785
regs=0 stack=200000 before 1152: (1f) r1 -= r5
regs=0 stack=200000 before 1151: (af) r1 ^= r2
regs=0 stack=200000 before 1150: (4f) r5 |= r4
regs=0 stack=200000 before 1149: (67) r5 <<= 24
regs=0 stack=200000 before 1148: (bf) r5 = r1
regs=0 stack=200000 before 1147: (77) r4 >>= 8
regs=0 stack=200000 before 1146: (bc) w4 = w1
regs=0 stack=200000 before 1145: (05) goto pc+0
regs=0 stack=200000 before 1144: (05) goto pc+0
parent already had regs=0 stack=0 marks: R0=P0 R1_rw=P5115425867791453820 R2_r=P-5959489700658531511 R3_w=P6184 R4_w=P-6341886138288187352 R5=P8044009612454092821 R6=ctx(off=0,imm=0) R7=P716110916760396747 R8=scalar() R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176_r=mmmmmmmm fp-184=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
1156: (1f) r1 -= r8                   ; R1_w=scalar() R8=scalar()
1157: (05) goto pc+0
1158: (bc) w2 = w1                    ; R1=scalar() R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1159: (77) r2 >>= 7                   ; R2_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff))
1160: (bf) r4 = r1                    ; R1=scalar(id=647) R4_w=scalar(id=647)
1161: (67) r4 <<= 25                  ; R4_w=scalar(smax=9223372036821221376,umax=18446744073675997184,var_off=(0x0; 0xfffffffffe000000),s32_max=2113929216,u32_max=-33554432)
1162: (4f) r4 |= r2                   ; R2_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff)) R4_w=scalar()
; __jhash_final(a, b, c);
1163: (bf) r0 = r1                    ; R0_w=scalar(id=647) R1=scalar(id=647)
1164: (79) r2 = *(u64 *)(r10 -168)    ; R2_w=scalar(smin=-525483785,smax=3769483510) R10=fp0
1165: (af) r0 ^= r2                   ; R0_w=scalar() R2_w=scalar(smin=-525483785,smax=3769483510)
1166: (1f) r0 -= r4                   ; R0_w=scalar() R4_w=scalar()
1167: (05) goto pc+0
1168: (05) goto pc+0
1169: (05) goto pc+0
1170: (bc) w2 = w0                    ; R0=scalar() R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1171: (77) r2 >>= 16                  ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff))
1172: (bf) r5 = r0                    ; R0=scalar(id=648) R5_w=scalar(id=648)
1173: (67) r5 <<= 16                  ; R5_w=scalar(smax=9223372036854710272,umax=18446744073709486080,var_off=(0x0; 0xffffffffffff0000),s32_max=2147418112,u32_max=-65536)
1174: (4f) r5 |= r2                   ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R5_w=scalar()
; __jhash_final(a, b, c);
1175: (bf) r4 = r0                    ; R0=scalar(id=648) R4_w=scalar(id=648)
1176: (af) r4 ^= r7                   ; R4_w=scalar() R7=Pscalar()
1177: (1f) r4 -= r5                   ; R4_w=scalar() R5_w=scalar()
1178: (05) goto pc+0
1179: (bc) w2 = w4                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R4=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1180: (77) r2 >>= 28                  ; R2_w=scalar(umax=15,var_off=(0x0; 0xf))
1181: (bf) r5 = r4                    ; R4=scalar(id=649) R5_w=scalar(id=649)
1182: (67) r5 <<= 4                   ; R5_w=scalar(smax=9223372036854775792,umax=18446744073709551600,var_off=(0x0; 0xfffffffffffffff0),s32_max=2147483632,u32_max=-16)
1183: (4f) r5 |= r2                   ; R2_w=scalar(umax=15,var_off=(0x0; 0xf)) R5_w=scalar()
; __jhash_final(a, b, c);
1184: (bf) r2 = r4                    ; R2_w=scalar(id=649) R4=scalar(id=649)
1185: (af) r2 ^= r1                   ; R1=scalar(id=647) R2_w=scalar()
1186: (1f) r2 -= r5                   ; R2_w=scalar() R5_w=scalar()
1187: (05) goto pc+0
1188: (05) goto pc+0
1189: (05) goto pc+0
1190: (bc) w1 = w2                    ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R2=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1191: (77) r1 >>= 18                  ; R1_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1192: (bf) r5 = r2                    ; R2=scalar(id=650) R5_w=scalar(id=650)
1193: (67) r5 <<= 14                  ; R5_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1194: (4f) r5 |= r1                   ; R1_w=scalar(umax=16383,var_off=(0x0; 0x3fff)) R5_w=scalar()
; __jhash_final(a, b, c);
1195: (af) r2 ^= r0                   ; R0=scalar(id=648) R2_w=scalar()
1196: (1f) r2 -= r5                   ; R2_w=scalar() R5_w=scalar()
1197: (05) goto pc+0
1198: (bc) w1 = w2                    ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R2=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1199: (77) r1 >>= 8                   ; R1_w=scalar(umax=16777215,var_off=(0x0; 0xffffff))
1200: (bf) r3 = r2                    ; R2=scalar(id=651) R3_w=scalar(id=651)
1201: (67) r3 <<= 24                  ; R3_w=scalar(smax=9223372036837998592,umax=18446744073692774400,var_off=(0x0; 0xffffffffff000000),s32_max=2130706432,u32_max=-16777216)
1202: (4f) r3 |= r1                   ; R1_w=scalar(umax=16777215,var_off=(0x0; 0xffffff)) R3_w=scalar()
; __jhash_final(a, b, c);
1203: (af) r2 ^= r4                   ; R2_w=scalar() R4=scalar(id=649)
1204: (1f) r2 -= r3                   ; R2_w=scalar() R3_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1205: (79) r1 = *(u64 *)(r10 -144)    ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
1206: (61) r1 = *(u32 *)(r1 +4)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; key = RING_SIZE * (vip_info->vip_num) + hash;
1207: (27) r1 *= 65537                ; R1_w=scalar(umax=281479271612415,var_off=(0x0; 0x1ffffffffffff))
; __jhash_final(a, b, c);
1208: (bc) w2 = w2                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
1209: (05) goto pc+0
; hash = get_packet_hash(pckt, hash_16bytes) % RING_SIZE;
1210: (97) r2 %= 65537                ; R2_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1211: (0f) r2 += r1                   ; R1_w=scalar(umax=281479271612415,var_off=(0x0; 0x1ffffffffffff)) R2_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1212: (63) *(u32 *)(r10 -20) = r2     ; R2_w=scalar() R10=fp0 fp-24=mmmm????
1213: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1214: (07) r2 += -20                  ; R2_w=fp-20
; real_pos = bpf_map_lookup_elem(&ch_rings, &key);
1215: (18) r1 = 0xffffaebaa0631000    ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
1217: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=652,off=0,ks=4,vs=4,imm=0)
; if (!real_pos) {
1218: (15) if r0 == 0x0 goto pc+638   ; R0=map_value(off=0,ks=4,vs=4,imm=0)
; key = *real_pos;
1219: (61) r1 = *(u32 *)(r0 +0)       ; R0=map_value(off=0,ks=4,vs=4,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; key = *real_pos;
1220: (63) *(u32 *)(r10 -20) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-24=mmmm????
1221: (79) r8 = *(u64 *)(r10 -192)    ; R8_w=1 R10=fp0
; if (key == 0) {
1222: (55) if r1 != 0x0 goto pc+12    ; R1_w=0
1223: (05) goto pc+0
; __u32 ch_drop_stats_key = MAX_VIPS + CH_DROP_STATS;
1224: (62) *(u32 *)(r10 -28) = 521    ; R10=fp0 fp-32=mmmm????
1225: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1226: (07) r2 += -28                  ; R2_w=fp-28
; bpf_map_lookup_elem(&stats, &ch_drop_stats_key);
1227: (18) r1 = 0xffffa03499be8000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
1229: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=653,off=0,ks=4,vs=16,imm=0)
; if (!ch_drop_stats) {
1230: (15) if r0 == 0x0 goto pc+3     ; R0=map_value(off=0,ks=4,vs=16,imm=0)
; ch_drop_stats->v2 += 1;
1231: (79) r1 = *(u64 *)(r0 +8)       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1232: (07) r1 += 1                    ; R1_w=scalar()
1233: (7b) *(u64 *)(r0 +8) = r1       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
; pckt->real_index = key;
1234: (61) r1 = *(u32 *)(r10 -20)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; pckt->real_index = key;
1235: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1236: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1237: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1238: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1240: (85) call bpf_map_lookup_elem#1
1241: safe

from 1230 to 1234: R0=0 R6=ctx(off=0,imm=0) R7=Pscalar() R8=1 R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40=mmmmmmmm fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
; pckt->real_index = key;
1234: (61) r1 = *(u32 *)(r10 -20)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; pckt->real_index = key;
1235: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1236: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1237: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1238: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1240: (85) call bpf_map_lookup_elem#1
1241: safe

from 1222 to 1235: R0=map_value(off=0,ks=4,vs=4,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6=ctx(off=0,imm=0) R7=Pscalar() R8_w=1 R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40=mmmmmmmm fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
; pckt->real_index = key;
1235: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1236: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1237: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1238: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1240: (85) call bpf_map_lookup_elem#1
1241: safe

from 1218 to 1857: safe

from 935 to 952: safe

from 916 to 918: R0=map_value(off=0,ks=4,vs=16,imm=0) R1=1 R2=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=40,vs=16,imm=0) R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-200=
; if (pckt.flags & F_SYN_SET) {
918: (67) r1 <<= 3                    ; R1_w=8
; 
919: (0f) r0 += r1
last_idx 919 first_idx 918
regs=2 stack=0 before 918: (67) r1 <<= 3
parent didn't have regs=2 stack=0 marks: R0_r=map_value(off=0,ks=4,vs=16,imm=0) R1_r=P1 R2=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=40,vs=16,imm=0) R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-200=
last_idx 916 first_idx 916
regs=2 stack=0 before 916: (15) if r2 == 0x0 goto pc+1
parent didn't have regs=2 stack=0 marks: R0_rw=map_value(off=0,ks=4,vs=16,imm=0) R1_rw=P1 R2_rw=scalar(umax=2,var_off=(0x0; 0x2)) R6_r=ctx(off=0,imm=0) R7=pkt(off=0,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=40,vs=16,imm=0) R10=fp0 fp-16=????mmmm fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96_r=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168= fp-200_r=
last_idx 915 first_idx 906
regs=2 stack=0 before 915: (b7) r1 = 1
920: (79) r1 = *(u64 *)(r0 +0)        ; R0_w=map_value(off=8,ks=4,vs=16,imm=0) R1_w=scalar()
921: (07) r1 += 1                     ; R1_w=scalar()
922: (7b) *(u64 *)(r0 +0) = r1        ; R0_w=map_value(off=8,ks=4,vs=16,imm=0) R1_w=scalar()
923: (b7) r7 = 0                      ; R7_w=0
; struct real_pos_lru new_dst_lru = {};
924: (7b) *(u64 *)(r10 -8) = r7
last_idx 924 first_idx 918
regs=80 stack=0 before 923: (b7) r7 = 0
925: R7_w=P0 R10=fp0 fp-8_w=00000000
925: (7b) *(u64 *)(r10 -16) = r7      ; R7_w=P0 R10=fp0 fp-16_w=00000000
926: (05) goto pc+0
frame 7: propagating r0
927: safe

from 912 to 1857: safe

from 904 to 923: R0=scalar(id=414) R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R2=scalar(umin=30000000001) R6=ctx(off=0,imm=0) R7=pkt(off=0,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=40,vs=16,imm=0) R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-200=
; 
923: (b7) r7 = 0                      ; R7_w=0
; struct real_pos_lru new_dst_lru = {};
924: (7b) *(u64 *)(r10 -8) = r7
last_idx 924 first_idx 891
regs=80 stack=0 before 923: (b7) r7 = 0
925: R7_w=P0 R10=fp0 fp-8_w=00000000
925: (7b) *(u64 *)(r10 -16) = r7      ; R7_w=P0 R10=fp0 fp-16_w=00000000
926: (05) goto pc+0
frame 7: propagating r0
927: safe

from 884 to 893: R0=map_value(off=0,ks=40,vs=16,imm=0) R1=scalar(umax=255,var_off=(0x0; 0xff)) R6=ctx(off=0,imm=0) R7=pkt(off=0,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=40,vs=16,imm=0) R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-200=
; key = dst_lru->pos;
893: (61) r1 = *(u32 *)(r9 +0)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9=map_value(off=0,ks=40,vs=16,imm=0)
; pckt->real_index = key;
894: (63) *(u32 *)(r10 -40) = r1      ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
; key = dst_lru->pos;
895: (63) *(u32 *)(r10 -16) = r1      ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-16=
896: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; key = dst_lru->pos;
897: (07) r2 += -16                   ; R2_w=fp-16
; *real = bpf_map_lookup_elem(&reals, &key);
898: (18) r1 = 0xffffaeba8c207000     ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
900: (85) call bpf_map_lookup_elem#1
901: safe

from 882 to 903: R0=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9_w=0 R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-200=
; if (pckt.flow.proto == IPPROTO_TCP) {
903: (71) r1 = *(u8 *)(r10 -44)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (pckt.flow.proto == IPPROTO_TCP) {
904: (55) if r1 != 0x6 goto pc+18     ; R1_w=6
905: (05) goto pc+0
906: safe

from 904 to 923: R0=0 R1=scalar(umax=255,var_off=(0x0; 0xff)) R6=ctx(off=0,imm=0) R7=pkt(off=0,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=0 R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-200=
; 
923: (b7) r7 = 0                      ; R7_w=0
; struct real_pos_lru new_dst_lru = {};
924: (7b) *(u64 *)(r10 -8) = r7
last_idx 924 first_idx 923
regs=80 stack=0 before 923: (b7) r7 = 0
925: R7_w=P0 R10=fp0 fp-8_w=00000000
925: (7b) *(u64 *)(r10 -16) = r7      ; R7_w=P0 R10=fp0 fp-16_w=00000000
926: (05) goto pc+0
frame 7: propagating r0
927: safe

from 876 to 903: R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar(umax=2,var_off=(0x0; 0x2)) R6=ctx(off=0,imm=0) R7=pkt(off=0,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-200=
; if (pckt.flow.proto == IPPROTO_TCP) {
903: (71) r1 = *(u8 *)(r10 -44)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (pckt.flow.proto == IPPROTO_TCP) {
904: (55) if r1 != 0x6 goto pc+18     ; R1_w=6
905: (05) goto pc+0
906: safe

from 904 to 923: safe

from 873 to 903: R0=map_value(off=0,ks=4,vs=16,imm=0) R1=scalar(umax=2,var_off=(0x0; 0x2)) R6=ctx(off=0,imm=0) R7=pkt(off=0,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-200=
; if (pckt.flow.proto == IPPROTO_TCP) {
903: (71) r1 = *(u8 *)(r10 -44)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (pckt.flow.proto == IPPROTO_TCP) {
904: (55) if r1 != 0x6 goto pc+18     ; R1_w=6
905: (05) goto pc+0
906: safe

from 904 to 923: safe

from 430 to 869: R0=map_value(off=0,ks=4,vs=16,imm=0) R1=scalar(umin=2,umax=255,var_off=(0x0; 0xff)) R6=ctx(off=0,imm=0) R7=pkt(off=0,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; original_sport = pckt.flow.port16[0];
869: (69) r1 = *(u16 *)(r10 -48)      ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
870: (7b) *(u64 *)(r10 -200) = r1     ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-200_w=
871: (71) r1 = *(u8 *)(r10 -36)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
872: (57) r1 &= 2
873: safe

from 422 to 1857: safe

from 414 to 687: R0=map_ptr(off=0,ks=40,vs=16,imm=0) R1=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; pckt->flow.src = iph->daddr;
687: (05) goto pc+0
; __u32 quic_packets_stats_key = 0;
688: (62) *(u32 *)(r10 -28) = 0       ; R10=fp0 fp-32=mmmm????
689: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
690: (07) r2 += -28                   ; R2_w=fp-28
; bpf_map_lookup_elem(&quic_stats_map, &quic_packets_stats_key);
691: (18) r1 = 0xffffa03587064800     ; R1_w=map_ptr(off=0,ks=4,vs=104,imm=0)
693: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=658,off=0,ks=4,vs=104,imm=0)
694: (bf) r9 = r0                     ; R0_w=map_value_or_null(id=658,off=0,ks=4,vs=104,imm=0) R9_w=map_value_or_null(id=658,off=0,ks=4,vs=104,imm=0)
; if (!quic_packets_stats) {
695: (15) if r9 == 0x0 goto pc+1161   ; R9_w=map_value(off=0,ks=4,vs=104,imm=0)
; bool is_icmp = (pckt->flags & F_ICMP);
696: (71) r2 = *(u8 *)(r10 -36)       ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; bool is_icmp = (pckt->flags & F_ICMP);
697: (57) r2 &= 1                     ; R2_w=scalar(umax=1,var_off=(0x0; 0x1))
698: (b7) r1 = 54                     ; R1=54
; if (is_ipv6) {
699: (15) if r2 == 0x0 goto pc+1      ; R2=scalar(umax=1,var_off=(0x0; 0x1))
700: (b7) r1 = 102                    ; R1_w=102
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
701: (0f) r7 += r1
last_idx 701 first_idx 699
regs=2 stack=0 before 700: (b7) r1 = 102
702: R1_w=P102 R7_w=pkt(off=102,r=122,imm=0)
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
702: (bf) r1 = r7                     ; R1_w=pkt(off=102,r=122,imm=0) R7_w=pkt(off=102,r=122,imm=0)
703: (07) r1 += 9                     ; R1_w=pkt(off=111,r=122,imm=0)
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
704: (2d) if r1 > r8 goto pc+160      ; R1_w=pkt(off=111,r=122,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
705: (71) r2 = *(u8 *)(r7 +8)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=102,r=122,imm=0)
706: (67) r2 <<= 56                   ; R2_w=scalar(smax=9151314442816847872,umax=18374686479671623680,var_off=(0x0; 0xff00000000000000),s32_min=0,s32_max=0,u32_max=0)
707: (c7) r2 s>>= 56                  ; R2=scalar(smin=-128,smax=127)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
708: (65) if r2 s> 0xffffffff goto pc+40      ; R2=scalar(umin=18446744073709551488,var_off=(0xffffffffffffff80; 0x7f),u32_min=-128)
; if (quic_data + sizeof(struct quic_long_header) > data_end) {
709: (bf) r1 = r7                     ; R1_w=pkt(off=102,r=122,imm=0) R7=pkt(off=102,r=122,imm=0)
710: (07) r1 += 22                    ; R1_w=pkt(off=124,r=122,imm=0)
; if (quic_data + sizeof(struct quic_long_header) > data_end) {
711: (2d) if r1 > r8 goto pc+153      ; R1_w=pkt(off=124,r=124,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_PACKET_TYPE_MASK) < QUIC_HANDSHAKE) {
712: (57) r2 &= 32                    ; R2_w=scalar(umax=32,var_off=(0x0; 0x20))
; if ((*pkt_type & QUIC_PACKET_TYPE_MASK) < QUIC_HANDSHAKE) {
713: (15) if r2 == 0x0 goto pc+77     ; R2_w=scalar(umax=32,var_off=(0x0; 0x20))
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
714: (71) r1 = *(u8 *)(r7 +13)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=102,r=124,imm=0)
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
715: (07) r7 += 14                    ; R7=pkt(off=116,r=124,imm=0)
716: (25) if r1 > 0x7 goto pc+36      ; R1=scalar(umax=7,var_off=(0x0; 0x7))
717: (05) goto pc+147
; 
865: (79) r1 = *(u64 *)(r9 +0)        ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
866: (07) r1 += 1                     ; R1_w=scalar()
867: (7b) *(u64 *)(r9 +0) = r1        ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
868: (79) r9 = *(u64 *)(r10 -144)     ; R9_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
; original_sport = pckt.flow.port16[0];
869: (69) r1 = *(u16 *)(r10 -48)      ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
870: (7b) *(u64 *)(r10 -200) = r1     ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-200_w=
871: (71) r1 = *(u8 *)(r10 -36)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
872: (57) r1 &= 2
873: safe

from 716 to 753: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(umin=8,umax=255,var_off=(0x0; 0xff)) R2=scalar(umax=32,var_off=(0x0; 0x20)) R6=ctx(off=0,imm=0) R7=pkt(off=116,r=124,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (!connId) {
753: (15) if r7 == 0x0 goto pc+111    ; R7=pkt(off=116,r=124,imm=0)
; __u8 connIdVersion = (connId[0] >> 6);
754: (71) r1 = *(u8 *)(r7 +0)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=116,r=124,imm=0)
755: (bf) r2 = r1                     ; R1_w=scalar(id=659,umax=255,var_off=(0x0; 0xff)) R2_w=scalar(id=659,umax=255,var_off=(0x0; 0xff))
756: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
; if (connIdVersion == QUIC_CONNID_VERSION_V1) {
757: (15) if r2 == 0x3 goto pc+48     ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
758: (15) if r2 == 0x2 goto pc+59     ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
759: (55) if r2 != 0x1 goto pc+105    ; R2_w=1
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
760: (57) r1 &= 63                    ; R1_w=scalar(umax=63,var_off=(0x0; 0x3f))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
761: (67) r1 <<= 10                   ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
762: (71) r8 = *(u8 *)(r7 +1)         ; R7=pkt(off=116,r=124,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
763: (67) r8 <<= 2                    ; R8_w=scalar(umax=1020,var_off=(0x0; 0x3fc))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
764: (4f) r8 |= r1                    ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00)) R8_w=scalar()
765: (18) r1 = 0x100000000            ; R1_w=4294967296
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
767: (71) r2 = *(u8 *)(r7 +2)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=116,r=124,imm=0)
768: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
769: (05) goto pc+56
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
826: (57) r2 &= 255                   ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
; 
827: (4f) r8 |= r2                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
828: (bf) r2 = r8                     ; R2_w=scalar(id=660) R8_w=scalar(id=660)
829: (67) r2 <<= 32                   ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
830: (c7) r2 s>>= 32                  ; R2_w=scalar(smin=-2147483648,smax=2147483647)
831: (b7) r3 = 1                      ; R3_w=1
; if (qpr.server_id > 0) {
832: (6d) if r3 s> r2 goto pc+32      ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
833: (77) r1 >>= 32                   ; R1_w=1
; if (cid_version == QUIC_CONNID_VERSION_V1) {
834: (15) if r1 == 0x3 goto pc+5
last_idx 834 first_idx 826
regs=2 stack=0 before 833: (77) r1 >>= 32
regs=2 stack=0 before 832: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 831: (b7) r3 = 1
regs=2 stack=0 before 830: (c7) r2 s>>= 32
regs=2 stack=0 before 829: (67) r2 <<= 32
regs=2 stack=0 before 828: (bf) r2 = r8
regs=2 stack=0 before 827: (4f) r8 |= r2
regs=2 stack=0 before 826: (57) r2 &= 255
parent didn't have regs=2 stack=0 marks: R0=map_value(off=0,ks=4,vs=104,imm=0) R1_rw=P4294967296 R2_rw=scalar(umax=3,var_off=(0x0; 0x3)) R6=ctx(off=0,imm=0) R7=pkt(off=116,r=124,imm=0) R8_rw=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
last_idx 769 first_idx 753
regs=2 stack=0 before 769: (05) goto pc+56
regs=2 stack=0 before 768: (77) r2 >>= 6
regs=2 stack=0 before 767: (71) r2 = *(u8 *)(r7 +2)
regs=2 stack=0 before 765: (18) r1 = 0x100000000
835: (15) if r1 == 0x2 goto pc+7      ; R1=P1
836: (55) if r1 != 0x1 goto pc+9      ; R1=P1
; quic_packets_stats->cid_v1 += 1;
837: (bf) r1 = r9                     ; R1_w=map_value(off=0,ks=4,vs=104,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0)
838: (07) r1 += 56                    ; R1_w=map_value(off=56,ks=4,vs=104,imm=0)
839: (05) goto pc+8
; 
848: (79) r2 = *(u64 *)(r1 +0)        ; R1_w=map_value(off=56,ks=4,vs=104,imm=0) R2_w=scalar()
849: (07) r2 += 1                     ; R2_w=scalar()
850: (7b) *(u64 *)(r1 +0) = r2        ; R1_w=map_value(off=56,ks=4,vs=104,imm=0) R2_w=scalar()
; __u32 key = qpr.server_id;
851: (63) *(u32 *)(r10 -20) = r8      ; R8=scalar(id=660) R10=fp0 fp-24=mmmm????
852: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; 
853: (07) r2 += -20                   ; R2_w=fp-20
; __u32* real_pos = bpf_map_lookup_elem(&server_id_map, &key);
854: (18) r1 = 0xffffaebab0634000     ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
856: (85) call bpf_map_lookup_elem#1          ; R0=map_value_or_null(id=661,off=0,ks=4,vs=4,imm=0)
; if (real_pos) {
857: (15) if r0 == 0x0 goto pc+7      ; R0=map_value(off=0,ks=4,vs=4,imm=0)
; key = *real_pos;
858: (61) r1 = *(u32 *)(r0 +0)        ; R0=map_value(off=0,ks=4,vs=4,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; key = *real_pos;
859: (63) *(u32 *)(r10 -20) = r1      ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-24=mmmm????
; if (key == 0) {
860: (55) if r1 != 0x0 goto pc+667    ; R1_w=0
; quic_packets_stats->cid_invalid_server_id_sample = qpr.server_id;
861: (7b) *(u64 *)(r9 +24) = r8       ; R8=scalar(id=660) R9=map_value(off=0,ks=4,vs=104,imm=0)
; quic_packets_stats->cid_invalid_server_id += 1;
862: (79) r1 = *(u64 *)(r9 +16)       ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
863: (07) r1 += 1                     ; R1_w=scalar()
864: (7b) *(u64 *)(r9 +16) = r1       ; R1=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
; 
865: (79) r1 = *(u64 *)(r9 +0)        ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
866: (07) r1 += 1                     ; R1_w=scalar()
867: (7b) *(u64 *)(r9 +0) = r1        ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
868: (79) r9 = *(u64 *)(r10 -144)     ; R9_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
; original_sport = pckt.flow.port16[0];
869: (69) r1 = *(u16 *)(r10 -48)      ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
870: (7b) *(u64 *)(r10 -200) = r1     ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-200_w=
871: (71) r1 = *(u8 *)(r10 -36)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
872: (57) r1 &= 2
873: safe

from 860 to 1528: R0=map_value(off=0,ks=4,vs=4,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6=ctx(off=0,imm=0) R7=pkt(off=116,r=124,imm=0) R8=scalar(id=660) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-24=mmmm???? fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; pckt.real_index = key;
1528: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1529: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1530: (07) r2 += -20                  ; R2_w=fp-20
; dst = bpf_map_lookup_elem(&reals, &key);
1531: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1533: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=662,off=0,ks=4,vs=20,imm=0)
1534: (7b) *(u64 *)(r10 -176) = r0    ; R0_w=map_value_or_null(id=662,off=0,ks=4,vs=20,imm=0) R10=fp0 fp-176_w=map_value_or_null
; if (!dst) {
1535: (55) if r0 != 0x0 goto pc+1     ; R0_w=0
1536: (05) goto pc+599
2136: safe

from 1535 to 1537: R0=map_value(off=0,ks=4,vs=20,imm=0) R6=ctx(off=0,imm=0) R7=pkt(off=116,r=124,imm=0) R8=scalar(id=660) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=map_value
1537: (05) goto pc+0
; __u32 flags_key = 0;
1538: (62) *(u32 *)(r10 -124) = 0     ; R10=fp0 fp-128=mmmm????
1539: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1540: (07) r2 += -124                 ; R2_w=fp-124
; bpf_map_lookup_elem(&server_id_flags, &flags_key);
1541: (18) r1 = 0xffffa03587066800    ; R1_w=map_ptr(off=0,ks=4,vs=1,imm=0)
1543: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=663,off=0,ks=4,vs=1,imm=0)
; flags_value && flags_value->update_quic_sid_based_dst_in_lru;
1544: (15) if r0 == 0x0 goto pc+656   ; R0_w=map_value(off=0,ks=4,vs=1,imm=0)
; flags_value && flags_value->update_quic_sid_based_dst_in_lru;
1545: (71) r7 = *(u8 *)(r0 +0)        ; R0_w=map_value(off=0,ks=4,vs=1,imm=0) R7_w=scalar(umax=255,var_off=(0x0; 0xff))
1546: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1547: (07) r2 += -80                  ; R2_w=fp-80
; struct real_pos_lru* dst_lru = bpf_map_lookup_elem(lru_map, &pckt->flow);
1548: (79) r1 = *(u64 *)(r10 -152)    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0
1549: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=664,off=0,ks=40,vs=16,imm=0)
; if (dst_lru) {
1550: (15) if r0 == 0x0 goto pc+614   ; R0=map_value(off=0,ks=40,vs=16,imm=0)
; if (dst_lru->pos == pckt->real_index) {
1551: (61) r1 = *(u32 *)(r10 -40)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; if (dst_lru->pos == pckt->real_index) {
1552: (61) r2 = *(u32 *)(r0 +0)       ; R0=map_value(off=0,ks=40,vs=16,imm=0) R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; flags_value && flags_value->update_quic_sid_based_dst_in_lru;
1553: (bf) r3 = r7                    ; R3_w=scalar(id=665,umax=255,var_off=(0x0; 0xff)) R7=scalar(id=665,umax=255,var_off=(0x0; 0xff))
; if (dst_lru->pos == pckt->real_index) {
1554: (15) if r3 == 0x0 goto pc+669   ; R3_w=scalar(id=665,umax=255,var_off=(0x0; 0xff))
1555: (bf) r3 = r1                    ; R1_w=scalar(id=666,umax=4294967295,var_off=(0x0; 0xffffffff)) R3_w=scalar(id=666,umax=4294967295,var_off=(0x0; 0xffffffff))
1556: (bf) r4 = r2                    ; R2_w=scalar(id=667,umax=4294967295,var_off=(0x0; 0xffffffff)) R4_w=scalar(id=667,umax=4294967295,var_off=(0x0; 0xffffffff))
1557: (1d) if r4 == r3 goto pc+666    ; R3_w=scalar(id=666,umax=4294967295,var_off=(0x0; 0xffffffff)) R4_w=scalar(id=667,umax=4294967295,var_off=(0x0; 0xffffffff))
; dst_lru->pos = pckt->real_index;
1558: (63) *(u32 *)(r0 +0) = r1       ; R0=map_value(off=0,ks=40,vs=16,imm=0) R1_w=scalar(id=666,umax=4294967295,var_off=(0x0; 0xffffffff))
; vip_num, /* new conn */ false, /* mismatch in lru */ true);
1559: (61) r1 = *(u32 *)(r10 -108)    ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; if (res == DST_MATCH_IN_LRU) {
1560: (7b) *(u64 *)(r10 -168) = r1    ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-168_w=
1561: (05) goto pc+647
; quic_packets_stats->dst_mismatch_in_lru += 1;
2209: (79) r1 = *(u64 *)(r9 +88)      ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
2210: (07) r1 += 1                    ; R1_w=scalar()
2211: (7b) *(u64 *)(r9 +88) = r1      ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
2212: (79) r1 = *(u64 *)(r10 -168)    ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
2213: (63) *(u32 *)(r10 -16) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-16=
2214: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
2215: (07) r2 += -16                  ; R2_w=fp-16
; bpf_map_lookup_elem(&server_id_stats, &vip_num);
2216: (18) r1 = 0xffffa0364c1b2000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
2218: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=668,off=0,ks=4,vs=16,imm=0)
; if (!per_vip_stats) {
2219: (15) if r0 == 0x0 goto pc+8     ; R0_w=map_value(off=0,ks=4,vs=16,imm=0)
; per_vip_stats->v2 += 1;
2220: (79) r1 = *(u64 *)(r0 +8)       ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
2221: (07) r1 += 1                    ; R1_w=scalar()
2222: (7b) *(u64 *)(r0 +8) = r1       ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
2223: (05) goto pc+4
; quic_packets_stats->cid_routed += 1;
2228: (79) r1 = *(u64 *)(r9 +32)      ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
2229: (07) r1 += 1                    ; R1_w=scalar()
2230: (7b) *(u64 *)(r9 +32) = r1      ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
; original_sport = pckt.flow.port16[0];
2231: (69) r1 = *(u16 *)(r10 -48)     ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; if (!dst) {
2232: (7b) *(u64 *)(r10 -200) = r1    ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-200_w=
2233: (05) goto pc-914
; data_stats->v2 += 1;
1320: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1321: (07) r2 += -112                 ; R2_w=fp-112
; cval = bpf_map_lookup_elem(&ctl_array, &mac_addr_pos);
1322: (18) r1 = 0xffffa03553eeca00    ; R1_w=map_ptr(off=0,ks=4,vs=8,imm=0)
1324: (85) call bpf_map_lookup_elem#1
1325: safe

from 2219 to 2228: safe

from 1557 to 2224: R0=map_value(off=0,ks=40,vs=16,imm=0) R1=scalar(id=666,umax=4294967295,var_off=(0x0; 0xffffffff)) R2=scalar(id=667,umax=4294967295,var_off=(0x0; 0xffffffff)) R3=scalar(id=666,umax=4294967295,var_off=(0x0; 0xffffffff)) R4=scalar(id=667,umax=4294967295,var_off=(0x0; 0xffffffff)) R6=ctx(off=0,imm=0) R7=scalar(id=665,umax=255,var_off=(0x0; 0xff)) R8=scalar(id=660) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-128=mmmm???? fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=map_value
; if (res == DST_MATCH_IN_LRU) {
2224: (5d) if r2 != r1 goto pc-16     ; R1=scalar(id=666,umax=4294967295,var_off=(0x0; 0xffffffff)) R2=scalar(id=667,umax=4294967295,var_off=(0x0; 0xffffffff))
; quic_packets_stats->dst_match_in_lru += 1;
2225: (79) r1 = *(u64 *)(r9 +80)      ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
2226: (07) r1 += 1                    ; R1_w=scalar()
2227: (7b) *(u64 *)(r9 +80) = r1
2228: safe

from 2224 to 2209: safe

from 1554 to 2224: safe

from 1550 to 2165: R0=0 R6=ctx(off=0,imm=0) R7=scalar(umax=255,var_off=(0x0; 0xff)) R8=scalar(id=660) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-128=mmmm???? fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=map_value
; flags_value && flags_value->update_quic_sid_based_dst_in_lru;
2165: (bf) r1 = r7                    ; R1_w=scalar(id=670,umax=255,var_off=(0x0; 0xff)) R7=scalar(id=670,umax=255,var_off=(0x0; 0xff))
; if (update_lru) {
2166: (15) if r1 == 0x0 goto pc+12    ; R1_w=scalar(id=670,umax=255,var_off=(0x0; 0xff))
2167: (05) goto pc+0
; struct real_pos_lru new_dst_lru = {};
2168: (7a) *(u64 *)(r10 -16) = 0      ; R10=fp0 fp-16_w=mmmmmmmm
; new_dst_lru.pos = pckt->real_index;
2169: (61) r2 = *(u32 *)(r10 -40)     ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; new_dst_lru.pos = pckt->real_index;
2170: (63) *(u32 *)(r10 -16) = r2     ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-16_w=
; struct real_pos_lru new_dst_lru = {};
2171: (7a) *(u64 *)(r10 -8) = 0       ; R10=fp0 fp-8_w=mmmmmmmm
2172: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
2173: (07) r2 += -80                  ; R2_w=fp-80
2174: (bf) r3 = r10                   ; R3_w=fp0 R10=fp0
2175: (07) r3 += -16                  ; R3_w=fp-16
; bpf_map_update_elem(lru_map, &pckt->flow, &new_dst_lru, BPF_ANY);
2176: (79) r1 = *(u64 *)(r10 -152)    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0
2177: (b7) r4 = 0                     ; R4_w=0
2178: (85) call bpf_map_update_elem#2         ; R0_w=scalar()
; quic_packets_stats->dst_not_found_in_lru += 1;
2179: (79) r1 = *(u64 *)(r9 +96)      ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
2180: (07) r1 += 1                    ; R1_w=scalar()
2181: (7b) *(u64 *)(r9 +96) = r1      ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
2182: (05) goto pc+45
2228: safe

from 2166 to 2179: R0=0 R1=0 R6=ctx(off=0,imm=0) R7=0 R8=scalar(id=660) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-128=mmmm???? fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=map_value
2179: (79) r1 = *(u64 *)(r9 +96)      ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
2180: (07) r1 += 1                    ; R1_w=scalar()
2181: (7b) *(u64 *)(r9 +96) = r1      ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
2182: (05) goto pc+45
2228: safe

from 1544 to 2201: R0_w=0 R6=ctx(off=0,imm=0) R7=pkt(off=116,r=124,imm=0) R8=scalar(id=660) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-128=mmmm???? fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=map_value
; quic_packets_stats->dst_not_found_in_lru += 1;
2201: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
2202: (07) r2 += -80                  ; R2_w=fp-80
; struct real_pos_lru* dst_lru = bpf_map_lookup_elem(lru_map, &pckt->flow);
2203: (79) r1 = *(u64 *)(r10 -152)    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0
2204: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=671,off=0,ks=40,vs=16,imm=0)
; if (dst_lru) {
2205: (15) if r0 == 0x0 goto pc-27    ; R0=map_value(off=0,ks=40,vs=16,imm=0)
; if (dst_lru->pos == pckt->real_index) {
2206: (61) r1 = *(u32 *)(r0 +0)       ; R0=map_value(off=0,ks=40,vs=16,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (dst_lru->pos == pckt->real_index) {
2207: (61) r2 = *(u32 *)(r10 -40)     ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; if (res == DST_MATCH_IN_LRU) {
2208: (1d) if r1 == r2 goto pc+16     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
2209: safe

from 2208 to 2225: R0=map_value(off=0,ks=40,vs=16,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6=ctx(off=0,imm=0) R7=pkt(off=116,r=124,imm=0) R8=scalar(id=660) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-128=mmmm???? fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=map_value
; quic_packets_stats->dst_match_in_lru += 1;
2225: (79) r1 = *(u64 *)(r9 +80)      ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
2226: (07) r1 += 1                    ; R1_w=scalar()
2227: (7b) *(u64 *)(r9 +80) = r1
2228: safe

from 2205 to 2179: safe

from 857 to 865: safe

from 832 to 865: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=4294967296 R2=scalar(smin=-2147483648,smax=0) R3=1 R6=ctx(off=0,imm=0) R7=pkt(off=116,r=124,imm=0) R8=scalar(id=660) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; 
865: (79) r1 = *(u64 *)(r9 +0)        ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
866: (07) r1 += 1                     ; R1_w=scalar()
867: (7b) *(u64 *)(r9 +0) = r1        ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
868: (79) r9 = *(u64 *)(r10 -144)     ; R9_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
; original_sport = pckt.flow.port16[0];
869: (69) r1 = *(u16 *)(r10 -48)      ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
870: (7b) *(u64 *)(r10 -200) = r1     ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-200_w=
871: (71) r1 = *(u8 *)(r10 -36)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
872: (57) r1 &= 2
873: safe

from 759 to 865: safe

from 758 to 818: R0=map_value(off=0,ks=4,vs=104,imm=0) R1_w=scalar(id=659,umax=255,var_off=(0x0; 0xff)) R2_w=2 R6=ctx(off=0,imm=0) R7=pkt(off=116,r=124,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
818: (71) r1 = *(u8 *)(r7 +1)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=116,r=124,imm=0)
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
819: (67) r1 <<= 16                   ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
820: (71) r8 = *(u8 *)(r7 +2)         ; R7=pkt(off=116,r=124,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
821: (67) r8 <<= 8                    ; R8_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
822: (4f) r8 |= r1                    ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000)) R8_w=scalar()
823: (18) r1 = 0x200000000            ; R1_w=8589934592
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
825: (71) r2 = *(u8 *)(r7 +3)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=116,r=124,imm=0)
826: (57) r2 &= 255                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
827: (4f) r8 |= r2                    ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
828: (bf) r2 = r8                     ; R2_w=scalar(id=672) R8_w=scalar(id=672)
829: (67) r2 <<= 32                   ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
830: (c7) r2 s>>= 32                  ; R2_w=scalar(smin=-2147483648,smax=2147483647)
831: (b7) r3 = 1                      ; R3_w=1
; if (qpr.server_id > 0) {
832: (6d) if r3 s> r2 goto pc+32      ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
833: (77) r1 >>= 32                   ; R1_w=2
; if (cid_version == QUIC_CONNID_VERSION_V1) {
834: (15) if r1 == 0x3 goto pc+5
last_idx 834 first_idx 753
regs=2 stack=0 before 833: (77) r1 >>= 32
regs=2 stack=0 before 832: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 831: (b7) r3 = 1
regs=2 stack=0 before 830: (c7) r2 s>>= 32
regs=2 stack=0 before 829: (67) r2 <<= 32
regs=2 stack=0 before 828: (bf) r2 = r8
regs=2 stack=0 before 827: (4f) r8 |= r2
regs=2 stack=0 before 826: (57) r2 &= 255
regs=2 stack=0 before 825: (71) r2 = *(u8 *)(r7 +3)
regs=2 stack=0 before 823: (18) r1 = 0x200000000
835: R1=P2
835: (15) if r1 == 0x2 goto pc+7      ; R1=P2
; quic_packets_stats->cid_v2 += 1;
843: (bf) r1 = r9                     ; R1_w=map_value(off=0,ks=4,vs=104,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0)
844: (07) r1 += 64                    ; R1_w=map_value(off=64,ks=4,vs=104,imm=0)
845: (05) goto pc+2
; 
848: (79) r2 = *(u64 *)(r1 +0)        ; R1_w=map_value(off=64,ks=4,vs=104,imm=0) R2_w=scalar()
849: (07) r2 += 1                     ; R2_w=scalar()
850: (7b) *(u64 *)(r1 +0) = r2        ; R1_w=map_value(off=64,ks=4,vs=104,imm=0) R2_w=scalar()
; __u32 key = qpr.server_id;
851: (63) *(u32 *)(r10 -20) = r8      ; R8=scalar(id=672) R10=fp0 fp-24=mmmm????
852: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; 
853: (07) r2 += -20                   ; R2_w=fp-20
; __u32* real_pos = bpf_map_lookup_elem(&server_id_map, &key);
854: (18) r1 = 0xffffaebab0634000     ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
856: (85) call bpf_map_lookup_elem#1
857: safe

from 832 to 865: safe

from 757 to 806: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=659,umax=255,var_off=(0x0; 0xff)) R2=3 R6=ctx(off=0,imm=0) R7=pkt(off=116,r=124,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
806: (71) r1 = *(u8 *)(r7 +1)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=116,r=124,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
807: (67) r1 <<= 24                   ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
808: (71) r8 = *(u8 *)(r7 +2)         ; R7=pkt(off=116,r=124,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
809: (67) r8 <<= 16                   ; R8_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
810: (4f) r8 |= r1                    ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432) R8_w=scalar()
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
811: (71) r1 = *(u8 *)(r7 +3)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=116,r=124,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
812: (67) r1 <<= 8                    ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
813: (4f) r8 |= r1                    ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00)) R8_w=scalar()
814: (18) r1 = 0x300000000            ; R1_w=12884901888
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
816: (71) r2 = *(u8 *)(r7 +4)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=116,r=124,imm=0)
817: (05) goto pc+8
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
826: (57) r2 &= 255                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
827: (4f) r8 |= r2                    ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
828: (bf) r2 = r8                     ; R2_w=scalar(id=674) R8_w=scalar(id=674)
829: (67) r2 <<= 32                   ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
830: (c7) r2 s>>= 32                  ; R2_w=scalar(smin=-2147483648,smax=2147483647)
831: (b7) r3 = 1                      ; R3_w=1
; if (qpr.server_id > 0) {
832: (6d) if r3 s> r2 goto pc+32      ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
833: (77) r1 >>= 32                   ; R1=3
; if (cid_version == QUIC_CONNID_VERSION_V1) {
834: (15) if r1 == 0x3 goto pc+5
last_idx 834 first_idx 834
parent didn't have regs=2 stack=0 marks: R0=map_value(off=0,ks=4,vs=104,imm=0) R1_rw=P3 R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1 R6=ctx(off=0,imm=0) R7=pkt(off=116,r=124,imm=0) R8_w=scalar(id=674) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
last_idx 833 first_idx 806
regs=2 stack=0 before 833: (77) r1 >>= 32
regs=2 stack=0 before 832: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 831: (b7) r3 = 1
regs=2 stack=0 before 830: (c7) r2 s>>= 32
regs=2 stack=0 before 829: (67) r2 <<= 32
regs=2 stack=0 before 828: (bf) r2 = r8
regs=2 stack=0 before 827: (4f) r8 |= r2
regs=2 stack=0 before 826: (57) r2 &= 255
regs=2 stack=0 before 817: (05) goto pc+8
regs=2 stack=0 before 816: (71) r2 = *(u8 *)(r7 +4)
regs=2 stack=0 before 814: (18) r1 = 0x300000000
; quic_packets_stats->cid_v3 += 1;
840: (bf) r1 = r9                     ; R1_w=map_value(off=0,ks=4,vs=104,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0)
841: (07) r1 += 72                    ; R1_w=map_value(off=72,ks=4,vs=104,imm=0)
842: (05) goto pc+5
; 
848: (79) r2 = *(u64 *)(r1 +0)        ; R1_w=map_value(off=72,ks=4,vs=104,imm=0) R2_w=scalar()
849: (07) r2 += 1                     ; R2_w=scalar()
850: (7b) *(u64 *)(r1 +0) = r2        ; R1_w=map_value(off=72,ks=4,vs=104,imm=0) R2_w=scalar()
; __u32 key = qpr.server_id;
851: (63) *(u32 *)(r10 -20) = r8      ; R8=scalar(id=674) R10=fp0 fp-24=mmmm????
852: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; 
853: (07) r2 += -20                   ; R2_w=fp-20
; __u32* real_pos = bpf_map_lookup_elem(&server_id_map, &key);
854: (18) r1 = 0xffffaebab0634000     ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
856: (85) call bpf_map_lookup_elem#1
857: safe

from 832 to 865: safe

from 753 to 865: safe

from 713 to 791: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=pkt(off=124,r=124,imm=0) R2=0 R6=ctx(off=0,imm=0) R7=pkt(off=102,r=124,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; quic_packets_stats->cid_initial += 1;
791: (79) r1 = *(u64 *)(r9 +8)        ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
792: (07) r1 += 1                     ; R1_w=scalar()
793: (7b) *(u64 *)(r9 +8) = r1        ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
794: (79) r1 = *(u64 *)(r10 -168)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
795: (63) *(u32 *)(r10 -16) = r1      ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-16=
796: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; 
797: (07) r2 += -16                   ; R2_w=fp-16
; bpf_map_lookup_elem(&server_id_stats, &vip_num);
798: (18) r1 = 0xffffa0364c1b2000     ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
800: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=676,off=0,ks=4,vs=16,imm=0)
; if (!per_vip_stats) {
801: (15) if r0 == 0x0 goto pc+66     ; R0_w=map_value(off=0,ks=4,vs=16,imm=0)
; per_vip_stats->v1 += 1;
802: (79) r1 = *(u64 *)(r0 +0)        ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
803: (07) r1 += 1                     ; R1_w=scalar()
804: (7b) *(u64 *)(r0 +0) = r1        ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
805: (05) goto pc+62
; 
868: (79) r9 = *(u64 *)(r10 -144)     ; R9_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
; original_sport = pckt.flow.port16[0];
869: (69) r1 = *(u16 *)(r10 -48)      ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
870: (7b) *(u64 *)(r10 -200) = r1     ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-200_w=
871: (71) r1 = *(u8 *)(r10 -36)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
872: (57) r1 &= 2
873: safe

from 801 to 868: safe

from 711 to 865: safe

from 708 to 749: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=pkt(off=111,r=122,imm=0) R2=scalar(umax=127,var_off=(0x0; 0x7f)) R6=ctx(off=0,imm=0) R7=pkt(off=102,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (quic_data + sizeof(struct quic_short_header) > data_end) {
749: (bf) r2 = r7                     ; R2_w=pkt(off=102,r=122,imm=0) R7=pkt(off=102,r=122,imm=0)
750: (07) r2 += 17                    ; R2_w=pkt(off=119,r=122,imm=0)
751: (bf) r7 = r1                     ; R1=pkt(off=111,r=122,imm=0) R7_w=pkt(off=111,r=122,imm=0)
; if (quic_data + sizeof(struct quic_short_header) > data_end) {
752: (2d) if r2 > r8 goto pc+112      ; R2_w=pkt(off=119,r=122,imm=0) R8=pkt_end(off=0,imm=0)
; if (!connId) {
753: (15) if r7 == 0x0 goto pc+111    ; R7_w=pkt(off=111,r=122,imm=0)
; __u8 connIdVersion = (connId[0] >> 6);
754: (71) r1 = *(u8 *)(r7 +0)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=111,r=122,imm=0)
755: (bf) r2 = r1                     ; R1_w=scalar(id=677,umax=255,var_off=(0x0; 0xff)) R2_w=scalar(id=677,umax=255,var_off=(0x0; 0xff))
756: (77) r2 >>= 6                    ; R2=scalar(umax=3,var_off=(0x0; 0x3))
; if (connIdVersion == QUIC_CONNID_VERSION_V1) {
757: (15) if r2 == 0x3 goto pc+48     ; R2=scalar(umax=3,var_off=(0x0; 0x3))
758: (15) if r2 == 0x2 goto pc+59     ; R2=scalar(umax=3,var_off=(0x0; 0x3))
759: (55) if r2 != 0x1 goto pc+105    ; R2=1
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
760: (57) r1 &= 63                    ; R1_w=scalar(umax=63,var_off=(0x0; 0x3f))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
761: (67) r1 <<= 10                   ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
762: (71) r8 = *(u8 *)(r7 +1)         ; R7=pkt(off=111,r=122,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
763: (67) r8 <<= 2                    ; R8_w=scalar(umax=1020,var_off=(0x0; 0x3fc))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
764: (4f) r8 |= r1                    ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00)) R8_w=scalar()
765: (18) r1 = 0x100000000            ; R1_w=4294967296
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
767: (71) r2 = *(u8 *)(r7 +2)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=111,r=122,imm=0)
768: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
769: (05) goto pc+56
frame 1: propagating r0
last_idx 826 first_idx 757
regs=2 stack=0 before 769: (05) goto pc+56
regs=2 stack=0 before 768: (77) r2 >>= 6
regs=2 stack=0 before 767: (71) r2 = *(u8 *)(r7 +2)
regs=2 stack=0 before 765: (18) r1 = 0x100000000
826: safe

from 759 to 865: safe

from 758 to 818: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=677,umax=255,var_off=(0x0; 0xff)) R2=2 R6=ctx(off=0,imm=0) R7=pkt(off=111,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
818: (71) r1 = *(u8 *)(r7 +1)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=111,r=122,imm=0)
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
819: (67) r1 <<= 16                   ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
820: (71) r8 = *(u8 *)(r7 +2)         ; R7=pkt(off=111,r=122,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
821: (67) r8 <<= 8                    ; R8_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
822: (4f) r8 |= r1                    ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000)) R8_w=scalar()
823: (18) r1 = 0x200000000            ; R1_w=8589934592
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
825: (71) r2 = *(u8 *)(r7 +3)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=111,r=122,imm=0)
826: (57) r2 &= 255                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
827: (4f) r8 |= r2                    ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
828: (bf) r2 = r8                     ; R2_w=scalar(id=678) R8_w=scalar(id=678)
829: (67) r2 <<= 32                   ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
830: (c7) r2 s>>= 32                  ; R2_w=scalar(smin=-2147483648,smax=2147483647)
831: (b7) r3 = 1                      ; R3_w=1
; if (qpr.server_id > 0) {
832: (6d) if r3 s> r2 goto pc+32      ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
833: (77) r1 >>= 32                   ; R1_w=2
; if (cid_version == QUIC_CONNID_VERSION_V1) {
834: (15) if r1 == 0x3 goto pc+5
last_idx 834 first_idx 818
regs=2 stack=0 before 833: (77) r1 >>= 32
regs=2 stack=0 before 832: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 831: (b7) r3 = 1
regs=2 stack=0 before 830: (c7) r2 s>>= 32
regs=2 stack=0 before 829: (67) r2 <<= 32
regs=2 stack=0 before 828: (bf) r2 = r8
regs=2 stack=0 before 827: (4f) r8 |= r2
regs=2 stack=0 before 826: (57) r2 &= 255
regs=2 stack=0 before 825: (71) r2 = *(u8 *)(r7 +3)
regs=2 stack=0 before 823: (18) r1 = 0x200000000
frame 1: propagating r0
835: safe

from 832 to 865: safe

from 757 to 806: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=677,umax=255,var_off=(0x0; 0xff)) R2=3 R6=ctx(off=0,imm=0) R7=pkt(off=111,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
806: (71) r1 = *(u8 *)(r7 +1)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=111,r=122,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
807: (67) r1 <<= 24                   ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
808: (71) r8 = *(u8 *)(r7 +2)         ; R7=pkt(off=111,r=122,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
809: (67) r8 <<= 16                   ; R8_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
810: (4f) r8 |= r1                    ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432) R8_w=scalar()
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
811: (71) r1 = *(u8 *)(r7 +3)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=111,r=122,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
812: (67) r1 <<= 8                    ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
813: (4f) r8 |= r1                    ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00)) R8_w=scalar()
814: (18) r1 = 0x300000000            ; R1_w=12884901888
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
816: (71) r2 = *(u8 *)(r7 +4)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=111,r=122,imm=0)
817: (05) goto pc+8
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
826: (57) r2 &= 255                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
827: (4f) r8 |= r2                    ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
828: (bf) r2 = r8                     ; R2_w=scalar(id=679) R8_w=scalar(id=679)
829: (67) r2 <<= 32                   ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
830: (c7) r2 s>>= 32                  ; R2_w=scalar(smin=-2147483648,smax=2147483647)
831: (b7) r3 = 1                      ; R3_w=1
; if (qpr.server_id > 0) {
832: (6d) if r3 s> r2 goto pc+32      ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
833: (77) r1 >>= 32
frame 1: propagating r0
last_idx 834 first_idx 806
regs=2 stack=0 before 833: (77) r1 >>= 32
regs=2 stack=0 before 832: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 831: (b7) r3 = 1
regs=2 stack=0 before 830: (c7) r2 s>>= 32
regs=2 stack=0 before 829: (67) r2 <<= 32
regs=2 stack=0 before 828: (bf) r2 = r8
regs=2 stack=0 before 827: (4f) r8 |= r2
regs=2 stack=0 before 826: (57) r2 &= 255
regs=2 stack=0 before 817: (05) goto pc+8
regs=2 stack=0 before 816: (71) r2 = *(u8 *)(r7 +4)
regs=2 stack=0 before 814: (18) r1 = 0x300000000
834: safe

from 832 to 865: safe

from 753 to 865: safe

from 752 to 865: safe

from 704 to 865: safe

from 699 to 701: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=54 R2=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
701: (0f) r7 += r1
last_idx 701 first_idx 701
parent didn't have regs=2 stack=0 marks: R0=map_value(off=0,ks=4,vs=104,imm=0) R1_r=P54 R2=0 R6=ctx(off=0,imm=0) R7_r=pkt(off=0,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
last_idx 699 first_idx 699
regs=2 stack=0 before 699: (15) if r2 == 0x0 goto pc+1
parent didn't have regs=2 stack=0 marks: R0_w=map_value(off=0,ks=4,vs=104,imm=0) R1_rw=P54 R2_rw=scalar(umax=1,var_off=(0x0; 0x1)) R6_r=ctx(off=0,imm=0) R7_r=pkt(off=0,r=122,imm=0) R8_r=pkt_end(off=0,imm=0) R9_rw=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16_r=????mmmm fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96_r=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=
last_idx 698 first_idx 687
regs=2 stack=0 before 698: (b7) r1 = 54
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
702: (bf) r1 = r7                     ; R1_w=pkt(off=54,r=122,imm=0) R7_w=pkt(off=54,r=122,imm=0)
703: (07) r1 += 9                     ; R1_w=pkt(off=63,r=122,imm=0)
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
704: (2d) if r1 > r8 goto pc+160      ; R1_w=pkt(off=63,r=122,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
705: (71) r2 = *(u8 *)(r7 +8)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=54,r=122,imm=0)
706: (67) r2 <<= 56                   ; R2_w=scalar(smax=9151314442816847872,umax=18374686479671623680,var_off=(0x0; 0xff00000000000000),s32_min=0,s32_max=0,u32_max=0)
707: (c7) r2 s>>= 56                  ; R2_w=scalar(smin=-128,smax=127)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
708: (65) if r2 s> 0xffffffff goto pc+40      ; R2_w=scalar(umin=18446744073709551488,var_off=(0xffffffffffffff80; 0x7f),u32_min=-128)
; if (quic_data + sizeof(struct quic_long_header) > data_end) {
709: (bf) r1 = r7                     ; R1_w=pkt(off=54,r=122,imm=0) R7_w=pkt(off=54,r=122,imm=0)
710: (07) r1 += 22                    ; R1=pkt(off=76,r=122,imm=0)
; if (quic_data + sizeof(struct quic_long_header) > data_end) {
711: (2d) if r1 > r8 goto pc+153      ; R1=pkt(off=76,r=122,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_PACKET_TYPE_MASK) < QUIC_HANDSHAKE) {
712: (57) r2 &= 32                    ; R2_w=scalar(umax=32,var_off=(0x0; 0x20))
; if ((*pkt_type & QUIC_PACKET_TYPE_MASK) < QUIC_HANDSHAKE) {
713: (15) if r2 == 0x0 goto pc+77     ; R2_w=scalar(umax=32,var_off=(0x0; 0x20))
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
714: (71) r1 = *(u8 *)(r7 +13)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=54,r=122,imm=0)
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
715: (07) r7 += 14                    ; R7_w=pkt(off=68,r=122,imm=0)
716: (25) if r1 > 0x7 goto pc+36      ; R1_w=scalar(umax=7,var_off=(0x0; 0x7))
717: (05) goto pc+147
865: safe

from 716 to 753: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(umin=8,umax=255,var_off=(0x0; 0xff)) R2=scalar(umax=32,var_off=(0x0; 0x20)) R6=ctx(off=0,imm=0) R7=pkt(off=68,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (!connId) {
753: (15) if r7 == 0x0 goto pc+111    ; R7=pkt(off=68,r=122,imm=0)
; __u8 connIdVersion = (connId[0] >> 6);
754: (71) r1 = *(u8 *)(r7 +0)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=68,r=122,imm=0)
755: (bf) r2 = r1                     ; R1_w=scalar(id=680,umax=255,var_off=(0x0; 0xff)) R2_w=scalar(id=680,umax=255,var_off=(0x0; 0xff))
756: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
; if (connIdVersion == QUIC_CONNID_VERSION_V1) {
757: (15) if r2 == 0x3 goto pc+48     ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
758: (15) if r2 == 0x2 goto pc+59     ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
759: (55) if r2 != 0x1 goto pc+105    ; R2_w=1
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
760: (57) r1 &= 63                    ; R1_w=scalar(umax=63,var_off=(0x0; 0x3f))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
761: (67) r1 <<= 10                   ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
762: (71) r8 = *(u8 *)(r7 +1)         ; R7=pkt(off=68,r=122,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
763: (67) r8 <<= 2                    ; R8_w=scalar(umax=1020,var_off=(0x0; 0x3fc))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
764: (4f) r8 |= r1                    ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00)) R8_w=scalar()
765: (18) r1 = 0x100000000            ; R1_w=4294967296
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
767: (71) r2 = *(u8 *)(r7 +2)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=68,r=122,imm=0)
768: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
769: (05) goto pc+56
frame 1: propagating r0
last_idx 826 first_idx 753
regs=2 stack=0 before 769: (05) goto pc+56
regs=2 stack=0 before 768: (77) r2 >>= 6
regs=2 stack=0 before 767: (71) r2 = *(u8 *)(r7 +2)
regs=2 stack=0 before 765: (18) r1 = 0x100000000
826: safe

from 759 to 865: safe

from 758 to 818: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=680,umax=255,var_off=(0x0; 0xff)) R2=2 R6=ctx(off=0,imm=0) R7=pkt(off=68,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
818: (71) r1 = *(u8 *)(r7 +1)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=68,r=122,imm=0)
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
819: (67) r1 <<= 16                   ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
820: (71) r8 = *(u8 *)(r7 +2)         ; R7=pkt(off=68,r=122,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
821: (67) r8 <<= 8                    ; R8_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
822: (4f) r8 |= r1                    ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000)) R8_w=scalar()
823: (18) r1 = 0x200000000            ; R1_w=8589934592
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
825: (71) r2 = *(u8 *)(r7 +3)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=68,r=122,imm=0)
826: (57) r2 &= 255                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
827: (4f) r8 |= r2                    ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
828: (bf) r2 = r8                     ; R2_w=scalar(id=681) R8_w=scalar(id=681)
829: (67) r2 <<= 32                   ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
830: (c7) r2 s>>= 32                  ; R2_w=scalar(smin=-2147483648,smax=2147483647)
831: (b7) r3 = 1                      ; R3_w=1
; if (qpr.server_id > 0) {
832: (6d) if r3 s> r2 goto pc+32      ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
833: (77) r1 >>= 32                   ; R1_w=2
; if (cid_version == QUIC_CONNID_VERSION_V1) {
834: (15) if r1 == 0x3 goto pc+5
last_idx 834 first_idx 818
regs=2 stack=0 before 833: (77) r1 >>= 32
regs=2 stack=0 before 832: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 831: (b7) r3 = 1
regs=2 stack=0 before 830: (c7) r2 s>>= 32
regs=2 stack=0 before 829: (67) r2 <<= 32
regs=2 stack=0 before 828: (bf) r2 = r8
regs=2 stack=0 before 827: (4f) r8 |= r2
regs=2 stack=0 before 826: (57) r2 &= 255
regs=2 stack=0 before 825: (71) r2 = *(u8 *)(r7 +3)
regs=2 stack=0 before 823: (18) r1 = 0x200000000
frame 1: propagating r0
835: safe

from 832 to 865: safe

from 757 to 806: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=680,umax=255,var_off=(0x0; 0xff)) R2=3 R6=ctx(off=0,imm=0) R7=pkt(off=68,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
806: (71) r1 = *(u8 *)(r7 +1)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=68,r=122,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
807: (67) r1 <<= 24                   ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
808: (71) r8 = *(u8 *)(r7 +2)         ; R7=pkt(off=68,r=122,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
809: (67) r8 <<= 16                   ; R8_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
810: (4f) r8 |= r1                    ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432) R8_w=scalar()
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
811: (71) r1 = *(u8 *)(r7 +3)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=68,r=122,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
812: (67) r1 <<= 8                    ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
813: (4f) r8 |= r1                    ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00)) R8_w=scalar()
814: (18) r1 = 0x300000000            ; R1_w=12884901888
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
816: (71) r2 = *(u8 *)(r7 +4)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=68,r=122,imm=0)
817: (05) goto pc+8
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
826: (57) r2 &= 255                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
827: (4f) r8 |= r2                    ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
828: (bf) r2 = r8                     ; R2_w=scalar(id=682) R8_w=scalar(id=682)
829: (67) r2 <<= 32                   ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
830: (c7) r2 s>>= 32                  ; R2_w=scalar(smin=-2147483648,smax=2147483647)
831: (b7) r3 = 1                      ; R3_w=1
; if (qpr.server_id > 0) {
832: (6d) if r3 s> r2 goto pc+32      ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
833: (77) r1 >>= 32
frame 1: propagating r0
last_idx 834 first_idx 806
regs=2 stack=0 before 833: (77) r1 >>= 32
regs=2 stack=0 before 832: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 831: (b7) r3 = 1
regs=2 stack=0 before 830: (c7) r2 s>>= 32
regs=2 stack=0 before 829: (67) r2 <<= 32
regs=2 stack=0 before 828: (bf) r2 = r8
regs=2 stack=0 before 827: (4f) r8 |= r2
regs=2 stack=0 before 826: (57) r2 &= 255
regs=2 stack=0 before 817: (05) goto pc+8
regs=2 stack=0 before 816: (71) r2 = *(u8 *)(r7 +4)
regs=2 stack=0 before 814: (18) r1 = 0x300000000
834: safe

from 832 to 865: safe

from 753 to 865: safe

from 713 to 791: safe

from 711 to 865: safe

from 708 to 749: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=pkt(off=63,r=122,imm=0) R2=scalar(umax=127,var_off=(0x0; 0x7f)) R6=ctx(off=0,imm=0) R7=pkt(off=54,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (quic_data + sizeof(struct quic_short_header) > data_end) {
749: (bf) r2 = r7                     ; R2_w=pkt(off=54,r=122,imm=0) R7=pkt(off=54,r=122,imm=0)
750: (07) r2 += 17                    ; R2_w=pkt(off=71,r=122,imm=0)
751: (bf) r7 = r1                     ; R1=pkt(off=63,r=122,imm=0) R7_w=pkt(off=63,r=122,imm=0)
; if (quic_data + sizeof(struct quic_short_header) > data_end) {
752: (2d) if r2 > r8 goto pc+112      ; R2_w=pkt(off=71,r=122,imm=0) R8=pkt_end(off=0,imm=0)
; if (!connId) {
753: (15) if r7 == 0x0 goto pc+111    ; R7_w=pkt(off=63,r=122,imm=0)
; __u8 connIdVersion = (connId[0] >> 6);
754: (71) r1 = *(u8 *)(r7 +0)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=63,r=122,imm=0)
755: (bf) r2 = r1                     ; R1_w=scalar(id=683,umax=255,var_off=(0x0; 0xff)) R2_w=scalar(id=683,umax=255,var_off=(0x0; 0xff))
756: (77) r2 >>= 6                    ; R2=scalar(umax=3,var_off=(0x0; 0x3))
; if (connIdVersion == QUIC_CONNID_VERSION_V1) {
757: (15) if r2 == 0x3 goto pc+48     ; R2=scalar(umax=3,var_off=(0x0; 0x3))
758: (15) if r2 == 0x2 goto pc+59     ; R2=scalar(umax=3,var_off=(0x0; 0x3))
759: (55) if r2 != 0x1 goto pc+105    ; R2=1
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
760: (57) r1 &= 63                    ; R1_w=scalar(umax=63,var_off=(0x0; 0x3f))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
761: (67) r1 <<= 10                   ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
762: (71) r8 = *(u8 *)(r7 +1)         ; R7=pkt(off=63,r=122,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
763: (67) r8 <<= 2                    ; R8_w=scalar(umax=1020,var_off=(0x0; 0x3fc))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
764: (4f) r8 |= r1                    ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00)) R8_w=scalar()
765: (18) r1 = 0x100000000            ; R1_w=4294967296
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
767: (71) r2 = *(u8 *)(r7 +2)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=63,r=122,imm=0)
768: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
769: (05) goto pc+56
frame 1: propagating r0
last_idx 826 first_idx 757
regs=2 stack=0 before 769: (05) goto pc+56
regs=2 stack=0 before 768: (77) r2 >>= 6
regs=2 stack=0 before 767: (71) r2 = *(u8 *)(r7 +2)
regs=2 stack=0 before 765: (18) r1 = 0x100000000
826: safe

from 759 to 865: safe

from 758 to 818: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=683,umax=255,var_off=(0x0; 0xff)) R2=2 R6=ctx(off=0,imm=0) R7=pkt(off=63,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
818: (71) r1 = *(u8 *)(r7 +1)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=63,r=122,imm=0)
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
819: (67) r1 <<= 16                   ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
820: (71) r8 = *(u8 *)(r7 +2)         ; R7=pkt(off=63,r=122,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
821: (67) r8 <<= 8                    ; R8_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
822: (4f) r8 |= r1                    ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000)) R8_w=scalar()
823: (18) r1 = 0x200000000            ; R1_w=8589934592
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
825: (71) r2 = *(u8 *)(r7 +3)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=63,r=122,imm=0)
826: (57) r2 &= 255                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
827: (4f) r8 |= r2                    ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
828: (bf) r2 = r8                     ; R2_w=scalar(id=684) R8_w=scalar(id=684)
829: (67) r2 <<= 32                   ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
830: (c7) r2 s>>= 32                  ; R2_w=scalar(smin=-2147483648,smax=2147483647)
831: (b7) r3 = 1                      ; R3_w=1
; if (qpr.server_id > 0) {
832: (6d) if r3 s> r2 goto pc+32      ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
833: (77) r1 >>= 32                   ; R1_w=2
; if (cid_version == QUIC_CONNID_VERSION_V1) {
834: (15) if r1 == 0x3 goto pc+5
last_idx 834 first_idx 818
regs=2 stack=0 before 833: (77) r1 >>= 32
regs=2 stack=0 before 832: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 831: (b7) r3 = 1
regs=2 stack=0 before 830: (c7) r2 s>>= 32
regs=2 stack=0 before 829: (67) r2 <<= 32
regs=2 stack=0 before 828: (bf) r2 = r8
regs=2 stack=0 before 827: (4f) r8 |= r2
regs=2 stack=0 before 826: (57) r2 &= 255
regs=2 stack=0 before 825: (71) r2 = *(u8 *)(r7 +3)
regs=2 stack=0 before 823: (18) r1 = 0x200000000
frame 1: propagating r0
835: safe

from 832 to 865: safe

from 757 to 806: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=683,umax=255,var_off=(0x0; 0xff)) R2=3 R6=ctx(off=0,imm=0) R7=pkt(off=63,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
806: (71) r1 = *(u8 *)(r7 +1)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=63,r=122,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
807: (67) r1 <<= 24                   ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
808: (71) r8 = *(u8 *)(r7 +2)         ; R7=pkt(off=63,r=122,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
809: (67) r8 <<= 16                   ; R8_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
810: (4f) r8 |= r1                    ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432) R8_w=scalar()
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
811: (71) r1 = *(u8 *)(r7 +3)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=63,r=122,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
812: (67) r1 <<= 8                    ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
813: (4f) r8 |= r1                    ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00)) R8_w=scalar()
814: (18) r1 = 0x300000000            ; R1_w=12884901888
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
816: (71) r2 = *(u8 *)(r7 +4)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=63,r=122,imm=0)
817: (05) goto pc+8
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
826: (57) r2 &= 255                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
827: (4f) r8 |= r2                    ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
828: (bf) r2 = r8                     ; R2_w=scalar(id=685) R8_w=scalar(id=685)
829: (67) r2 <<= 32                   ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
830: (c7) r2 s>>= 32                  ; R2_w=scalar(smin=-2147483648,smax=2147483647)
831: (b7) r3 = 1                      ; R3_w=1
; if (qpr.server_id > 0) {
832: (6d) if r3 s> r2 goto pc+32      ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
833: (77) r1 >>= 32
frame 1: propagating r0
last_idx 834 first_idx 806
regs=2 stack=0 before 833: (77) r1 >>= 32
regs=2 stack=0 before 832: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 831: (b7) r3 = 1
regs=2 stack=0 before 830: (c7) r2 s>>= 32
regs=2 stack=0 before 829: (67) r2 <<= 32
regs=2 stack=0 before 828: (bf) r2 = r8
regs=2 stack=0 before 827: (4f) r8 |= r2
regs=2 stack=0 before 826: (57) r2 &= 255
regs=2 stack=0 before 817: (05) goto pc+8
regs=2 stack=0 before 816: (71) r2 = *(u8 *)(r7 +4)
regs=2 stack=0 before 814: (18) r1 = 0x300000000
834: safe

from 832 to 865: safe

from 753 to 865: safe

from 752 to 865: safe

from 704 to 865: safe

from 695 to 1857: safe

from 411 to 869: R0=map_ptr(off=0,ks=40,vs=16,imm=0) R1=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; original_sport = pckt.flow.port16[0];
869: (69) r1 = *(u16 *)(r10 -48)      ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
870: (7b) *(u64 *)(r10 -200) = r1     ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-200_w=
871: (71) r1 = *(u8 *)(r10 -36)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
872: (57) r1 &= 2
873: safe

from 401 to 1857: safe

from 393 to 408: R0=map_ptr(off=0,ks=40,vs=16,imm=0) R6=ctx(off=0,imm=0) R7=pkt(off=0,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-160=map_value fp-168=
; lru_stats->v1 += 1;
408: (7b) *(u64 *)(r10 -152) = r0     ; R0=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0 fp-152_w=map_ptr
; if ((vip_info->flags & F_QUIC_VIP)) {
409: (61) r1 = *(u32 *)(r9 +0)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9=map_value(off=0,ks=20,vs=8,imm=0)
; if ((vip_info->flags & F_QUIC_VIP)) {
410: (57) r1 &= 4                     ; R1_w=scalar(umax=4,var_off=(0x0; 0x4))
; if ((vip_info->flags & F_QUIC_VIP)) {
411: (15) if r1 == 0x0 goto pc+457    ; R1_w=scalar(umax=4,var_off=(0x0; 0x4))
; bool is_icmp = (pckt.flags & F_ICMP);
412: (71) r1 = *(u8 *)(r10 -36)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; bool is_icmp = (pckt.flags & F_ICMP);
413: (57) r1 &= 1                     ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
; if (is_icmp) {
414: (15) if r1 == 0x0 goto pc+272    ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
415: (05) goto pc+0
; __u32 stats_key = MAX_VIPS + QUIC_ICMP_STATS;
416: (62) *(u32 *)(r10 -16) = 523     ; R10=fp0 fp-16=????mmmm
417: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
418: (07) r2 += -16                   ; R2_w=fp-16
; struct lb_stats* data_stats = bpf_map_lookup_elem(&stats, &stats_key);
419: (18) r1 = 0xffffa03499be8000     ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
421: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=686,off=0,ks=4,vs=16,imm=0)
; if (!data_stats) {
422: (15) if r0 == 0x0 goto pc+1434   ; R0_w=map_value(off=0,ks=4,vs=16,imm=0)
; data_stats->v1 += 1;
423: (79) r1 = *(u64 *)(r0 +0)        ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
424: (07) r1 += 1                     ; R1_w=scalar()
425: (7b) *(u64 *)(r0 +0) = r1        ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
; (icmp_hdr->icmp6_code == ICMPV6_ADDR_UNREACH) ||
426: (71) r1 = *(u8 *)(r7 +55)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=122,imm=0)
; (icmp_hdr->icmp6_code == ICMPV6_ADDR_UNREACH) ||
427: (07) r1 += -3                    ; R1_w=scalar(smin=-3,smax=252)
428: (57) r1 &= 255                   ; R1_w=scalar(umax=255,var_off=(0x0; 0xff))
429: (79) r9 = *(u64 *)(r10 -144)     ; R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
; if (ignorable_quic_icmp_code(data, data_end, is_ipv6)) {
430: (25) if r1 > 0x1 goto pc+438     ; R1=scalar(umax=1,var_off=(0x0; 0x1))
; data_stats->v2 += 1;
431: (79) r1 = *(u64 *)(r0 +8)        ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
432: (07) r1 += 1                     ; R1_w=scalar()
433: (7b) *(u64 *)(r0 +8) = r1        ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
434: (05) goto pc+434
; original_sport = pckt.flow.port16[0];
869: (69) r1 = *(u16 *)(r10 -48)      ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
870: (7b) *(u64 *)(r10 -200) = r1     ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-200_w=
871: (71) r1 = *(u8 *)(r10 -36)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
872: (57) r1 &= 2                     ; R1=scalar(umax=2,var_off=(0x0; 0x2))
; if (!dst && !(pckt.flags & F_SYN_SET) &&
873: (55) if r1 != 0x0 goto pc+29     ; R1=0
; !(vip_info->flags & F_LRU_BYPASS)) {
874: (61) r1 = *(u32 *)(r9 +0)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9=map_value(off=0,ks=20,vs=8,imm=0)
; !(vip_info->flags & F_LRU_BYPASS)) {
875: (57) r1 &= 2                     ; R1_w=scalar(umax=2,var_off=(0x0; 0x2))
; if (!dst && !(pckt.flags & F_SYN_SET) &&
876: (55) if r1 != 0x0 goto pc+26     ; R1_w=0
877: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; 
878: (07) r2 += -80                   ; R2_w=fp-80
; dst_lru = bpf_map_lookup_elem(lru_map, &pckt->flow);
879: (79) r1 = *(u64 *)(r10 -152)     ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0
880: (85) call bpf_map_lookup_elem#1          ; R0=map_value_or_null(id=687,off=0,ks=40,vs=16,imm=0)
881: (bf) r9 = r0                     ; R0=map_value_or_null(id=687,off=0,ks=40,vs=16,imm=0) R9_w=map_value_or_null(id=687,off=0,ks=40,vs=16,imm=0)
; if (!dst_lru) {
882: (15) if r9 == 0x0 goto pc+20     ; R9_w=map_value(off=0,ks=40,vs=16,imm=0)
; if (!isGlobalLru && pckt->flow.proto == IPPROTO_UDP) {
883: (71) r1 = *(u8 *)(r10 -44)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (!isGlobalLru && pckt->flow.proto == IPPROTO_UDP) {
884: (55) if r1 != 0x11 goto pc+8     ; R1_w=17
; cur_time = bpf_ktime_get_ns();
885: (85) call bpf_ktime_get_ns#5     ; R0_w=scalar()
; if (cur_time - dst_lru->atime > LRU_UDP_TIMEOUT) {
886: (79) r1 = *(u64 *)(r9 +8)        ; R1_w=scalar() R9_w=map_value(off=0,ks=40,vs=16,imm=0)
; if (cur_time - dst_lru->atime > LRU_UDP_TIMEOUT) {
887: (bf) r2 = r0                     ; R0_w=scalar(id=688) R2_w=scalar(id=688)
888: (1f) r2 -= r1                    ; R1_w=scalar() R2_w=scalar()
889: (18) r1 = 0x6fc23ac00            ; R1=30000000000
; if (cur_time - dst_lru->atime > LRU_UDP_TIMEOUT) {
891: (2d) if r2 > r1 goto pc+11       ; R1=30000000000 R2=scalar(umax=30000000000,var_off=(0x0; 0x7ffffffff))
; dst_lru->atime = cur_time;
892: (7b) *(u64 *)(r9 +8) = r0        ; R0=scalar(id=688) R9=map_value(off=0,ks=40,vs=16,imm=0)
; key = dst_lru->pos;
893: (61) r1 = *(u32 *)(r9 +0)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9=map_value(off=0,ks=40,vs=16,imm=0)
; pckt->real_index = key;
894: (63) *(u32 *)(r10 -40) = r1      ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
; key = dst_lru->pos;
895: (63) *(u32 *)(r10 -16) = r1      ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-16=
896: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; key = dst_lru->pos;
897: (07) r2 += -16                   ; R2_w=fp-16
; *real = bpf_map_lookup_elem(&reals, &key);
898: (18) r1 = 0xffffaeba8c207000     ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
900: (85) call bpf_map_lookup_elem#1          ; R0=map_value_or_null(id=689,off=0,ks=4,vs=20,imm=0)
901: (7b) *(u64 *)(r10 -176) = r0     ; R0=map_value_or_null(id=689,off=0,ks=4,vs=20,imm=0) R10=fp0 fp-176_w=map_value_or_null
; if (!dst) {
902: (55) if r0 != 0x0 goto pc+417    ; R0=0
; if (pckt.flow.proto == IPPROTO_TCP) {
903: (71) r1 = *(u8 *)(r10 -44)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (pckt.flow.proto == IPPROTO_TCP) {
904: (55) if r1 != 0x6 goto pc+18     ; R1_w=6
905: (05) goto pc+0
; __u32 lru_stats_key = MAX_VIPS + LRU_MISS_CNTR;
906: (62) *(u32 *)(r10 -16) = 513     ; R10=fp0 fp-16=????mmmm
907: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
908: (07) r2 += -16                   ; R2_w=fp-16
; bpf_map_lookup_elem(&stats, &lru_stats_key);
909: (18) r1 = 0xffffa03499be8000     ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
911: (85) call bpf_map_lookup_elem#1          ; R0=map_value_or_null(id=690,off=0,ks=4,vs=16,imm=0)
; if (!lru_stats) {
912: (15) if r0 == 0x0 goto pc+944    ; R0=map_value(off=0,ks=4,vs=16,imm=0)
; if (pckt.flags & F_SYN_SET) {
913: (71) r2 = *(u8 *)(r10 -36)       ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (pckt.flags & F_SYN_SET) {
914: (57) r2 &= 2                     ; R2_w=scalar(umax=2,var_off=(0x0; 0x2))
915: (b7) r1 = 1                      ; R1_w=1
916: (15) if r2 == 0x0 goto pc+1      ; R2_w=scalar(umax=2,var_off=(0x0; 0x2))
917: (b7) r1 = 0                      ; R1_w=0
; if (pckt.flags & F_SYN_SET) {
918: (67) r1 <<= 3                    ; R1_w=0
; 
919: (0f) r0 += r1
last_idx 919 first_idx 912
regs=2 stack=0 before 918: (67) r1 <<= 3
regs=2 stack=0 before 917: (b7) r1 = 0
920: R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=P0
920: (79) r1 = *(u64 *)(r0 +0)        ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
921: (07) r1 += 1                     ; R1_w=scalar()
922: (7b) *(u64 *)(r0 +0) = r1        ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1=scalar()
923: (b7) r7 = 0                      ; R7_w=0
; struct real_pos_lru new_dst_lru = {};
924: (7b) *(u64 *)(r10 -8) = r7
last_idx 924 first_idx 923
regs=80 stack=0 before 923: (b7) r7 = 0
925: R7_w=P0 R10=fp0 fp-8_w=00000000
925: (7b) *(u64 *)(r10 -16) = r7      ; R7_w=P0 R10=fp0 fp-16_w=00000000
926: (05) goto pc+0
; __u32 conn_rate_key = MAX_VIPS + NEW_CONN_RATE_CNTR;
927: (62) *(u32 *)(r10 -28) = 514     ; R10=fp0 fp-32=mmmm????
928: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; 
929: (07) r2 += -28                   ; R2_w=fp-28
; bpf_map_lookup_elem(&stats, &conn_rate_key);
930: (18) r1 = 0xffffa03499be8000     ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
932: (85) call bpf_map_lookup_elem#1          ; R0=map_value_or_null(id=691,off=0,ks=4,vs=16,imm=0)
933: (bf) r9 = r0                     ; R0=map_value_or_null(id=691,off=0,ks=4,vs=16,imm=0) R9_w=map_value_or_null(id=691,off=0,ks=4,vs=16,imm=0)
934: (b7) r8 = 1                      ; R8_w=1
; if (!conn_rate_stats) {
935: (15) if r9 == 0x0 goto pc+16     ; R9_w=map_value(off=0,ks=4,vs=16,imm=0)
; *cur_time = bpf_ktime_get_ns();
936: (85) call bpf_ktime_get_ns#5     ; R0_w=scalar()
937: (bf) r7 = r0                     ; R0_w=scalar(id=692) R7_w=scalar(id=692)
; if ((*cur_time - conn_rate_stats->v2) > ONE_SEC) {
938: (79) r1 = *(u64 *)(r9 +8)        ; R1_w=scalar() R9_w=map_value(off=0,ks=4,vs=16,imm=0)
; if ((*cur_time - conn_rate_stats->v2) > ONE_SEC) {
939: (bf) r2 = r7                     ; R2_w=scalar(id=692) R7_w=scalar(id=692)
940: (1f) r2 -= r1                    ; R1_w=scalar() R2_w=scalar()
941: (b7) r1 = 1000000001             ; R1=1000000001
; if ((*cur_time - conn_rate_stats->v2) > ONE_SEC) {
942: (2d) if r1 > r2 goto pc+4        ; R1=1000000001 R2=scalar(umin=1000000001)
; conn_rate_stats->v2 = *cur_time;
943: (7b) *(u64 *)(r9 +8) = r7        ; R7=scalar(id=692) R9=map_value(off=0,ks=4,vs=16,imm=0)
944: (05) goto pc+0
; conn_rate_stats->v1 = 1;
945: (7a) *(u64 *)(r9 +0) = 1         ; R9=map_value(off=0,ks=4,vs=16,imm=0)
946: (05) goto pc+4
; if (conn_rate_stats->v1 > MAX_CONN_RATE) {
951: (b7) r8 = 0                      ; R8_w=0
952: (7b) *(u64 *)(r10 -192) = r8
last_idx 952 first_idx 942
regs=100 stack=0 before 951: (b7) r8 = 0
953: R8_w=P0 R10=fp0 fp-192_w=00000000
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
953: (79) r1 = *(u64 *)(r10 -144)     ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
954: (61) r1 = *(u32 *)(r1 +0)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
955: (57) r1 &= 8                     ; R1_w=scalar(umax=8,var_off=(0x0; 0x8))
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
956: (7b) *(u64 *)(r10 -208) = r7     ; R7=scalar(id=692) R10=fp0 fp-208=mmmmmmmm
957: (55) if r1 != 0x0 goto pc+9      ; R1=0
; a += k[0];
958: (71) r1 = *(u8 *)(r10 -68)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; a += (u32)k[1] << 8;
959: (7b) *(u64 *)(r10 -184) = r1     ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0 fp-184_w=
960: (71) r9 = *(u8 *)(r10 -67)       ; R9_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; a += (u32)k[2] << 16;
961: (71) r0 = *(u8 *)(r10 -66)       ; R0_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; b += *(u32*)(k + 4);
962: (61) r1 = *(u32 *)(r10 -76)      ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; c += *(u32*)(k + 8);
963: (61) r8 = *(u32 *)(r10 -72)      ; R8_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; a += *(u32*)(k);
964: (61) r3 = *(u32 *)(r10 -80)      ; R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; a += (u32)k[3] << 24;
965: (71) r4 = *(u8 *)(r10 -65)       ; R4_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
966: (05) goto pc+12
; __jhash_mix(a, b, c);
979: (1f) r3 -= r8                    ; R3_w=scalar(smin=-4294967295,smax=4294967295) R8=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; c += *(u32*)(k + 8);
980: (07) r8 += -559038209            ; R8_w=scalar(smin=-559038209,smax=3735929086)
981: (05) goto pc+0
982: (05) goto pc+0
983: (05) goto pc+0
984: (bc) w5 = w8                     ; R5_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R8_w=scalar(smin=-559038209,smax=3735929086)
; return (word << shift) | (word >> ((-shift) & 31));
985: (77) r5 >>= 28                   ; R5_w=scalar(umax=15,var_off=(0x0; 0xf))
986: (bf) r2 = r8                     ; R2_w=scalar(id=693,smin=-559038209,smax=3735929086) R8_w=scalar(id=693,smin=-559038209,smax=3735929086)
987: (67) r2 <<= 4                    ; R2_w=scalar(smax=9223372036854775792,umax=18446744073709551600,var_off=(0x0; 0xfffffffffffffff0),s32_max=2147483632,u32_max=-16)
988: (4f) r2 |= r5                    ; R2_w=scalar() R5_w=scalar(umax=15,var_off=(0x0; 0xf))
; __jhash_mix(a, b, c);
989: (af) r2 ^= r3                    ; R2_w=scalar() R3_w=scalar(smin=-4294967295,smax=4294967295)
990: (05) goto pc+0
991: (05) goto pc+0
992: (05) goto pc+0
993: (bc) w5 = w2                     ; R2=scalar() R5_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
994: (77) r5 >>= 26                   ; R5_w=scalar(umax=63,var_off=(0x0; 0x3f))
995: (bf) r7 = r2                     ; R2=scalar(id=694) R7_w=scalar(id=694)
996: (67) r7 <<= 6                    ; R7_w=scalar(smax=9223372036854775744,umax=18446744073709551552,var_off=(0x0; 0xffffffffffffffc0),s32_max=2147483584,u32_max=-64)
997: (4f) r7 |= r5                    ; R5_w=scalar(umax=63,var_off=(0x0; 0x3f)) R7_w=scalar()
; b += *(u32*)(k + 4);
998: (07) r1 += -559038209            ; R1_w=scalar(smin=-559038209,smax=3735929086)
; __jhash_mix(a, b, c);
999: (bf) r3 = r1                     ; R1_w=scalar(id=695,smin=-559038209,smax=3735929086) R3_w=scalar(id=695,smin=-559038209,smax=3735929086)
1000: (1f) r3 -= r2                   ; R2=scalar(id=694) R3_w=scalar()
1001: (af) r3 ^= r7                   ; R3_w=scalar() R7_w=scalar()
; a += (u32)k[3] << 24;
1002: (67) r4 <<= 24                  ; R4_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; a += (u32)k[2] << 16;
1003: (57) r0 &= 255                  ; R0_w=scalar(umax=255,var_off=(0x0; 0xff))
; a += (u32)k[2] << 16;
1004: (67) r0 <<= 16                  ; R0_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; a += (u32)k[3] << 24;
1005: (4f) r0 |= r4                   ; R0_w=scalar() R4_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; pckt->flow.ports,
1006: (61) r5 = *(u32 *)(r10 -48)     ; R5_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; b += initval;
1007: (07) r5 += -525483785           ; R5_w=scalar(smin=-525483785,smax=3769483510)
1008: (05) goto pc+0
1009: (7b) *(u64 *)(r10 -168) = r5    ; R5=scalar(smin=-525483785,smax=3769483510) R10=fp0 fp-168_w=
1010: (05) goto pc+0
1011: (05) goto pc+0
1012: (bc) w4 = w5                    ; R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R5=scalar(smin=-525483785,smax=3769483510)
; return (word << shift) | (word >> ((-shift) & 31));
1013: (77) r4 >>= 18                  ; R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1014: (bf) r7 = r5                    ; R5=scalar(id=696,smin=-525483785,smax=3769483510) R7_w=scalar(id=696,smin=-525483785,smax=3769483510)
1015: (67) r7 <<= 14                  ; R7_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1016: (4f) r7 |= r4                   ; R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff)) R7_w=scalar()
; __jhash_final(a, b, c);
1017: (a7) r5 ^= -525483785           ; R5_w=scalar()
1018: (1f) r5 -= r7                   ; R5_w=scalar() R7_w=scalar()
; __jhash_mix(a, b, c);
1019: (0f) r1 += r8                   ; R1_w=scalar(smin=-1118076418,smax=7471858172) R8=scalar(id=693,smin=-559038209,smax=3735929086)
; a += (u32)k[1] << 8;
1020: (57) r9 &= 255                  ; R9_w=scalar(umax=255,var_off=(0x0; 0xff))
; a += (u32)k[1] << 8;
1021: (67) r9 <<= 8                   ; R9_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; a += (u32)k[2] << 16;
1022: (4f) r0 |= r9                   ; R0_w=scalar() R9_w=scalar(umax=65280,var_off=(0x0; 0xff00))
1023: (79) r4 = *(u64 *)(r10 -184)    ; R4_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; a += k[0];
1024: (57) r4 &= 255                  ; R4_w=scalar(umax=255,var_off=(0x0; 0xff))
; a += (u32)k[1] << 8;
1025: (4f) r0 |= r4                   ; R0_w=scalar() R4_w=scalar(umax=255,var_off=(0x0; 0xff))
1026: (05) goto pc+0
1027: (05) goto pc+0
; __jhash_mix(a, b, c);
1028: (05) goto pc+0
1029: (bc) w7 = w3                    ; R3=scalar() R7_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1030: (77) r7 >>= 24                  ; R7_w=scalar(umax=255,var_off=(0x0; 0xff))
1031: (bf) r4 = r3                    ; R3=scalar(id=697) R4_w=scalar(id=697)
1032: (67) r4 <<= 8                   ; R4_w=scalar(smax=9223372036854775552,umax=18446744073709551360,var_off=(0x0; 0xffffffffffffff00),s32_max=2147483392,u32_max=-256)
1033: (4f) r4 |= r7                   ; R4_w=scalar() R7_w=scalar(umax=255,var_off=(0x0; 0xff))
; __jhash_mix(a, b, c);
1034: (0f) r2 += r1                   ; R1=scalar(smin=-1118076418,smax=7471858172) R2_w=scalar()
1035: (1f) r1 -= r3                   ; R1_w=scalar() R3=scalar(id=697)
1036: (af) r1 ^= r4                   ; R1_w=scalar() R4_w=scalar()
1037: (05) goto pc+0
1038: (05) goto pc+0
; __jhash_final(a, b, c);
1039: (7b) *(u64 *)(r10 -176) = r5    ; R5=scalar() R10=fp0 fp-176_w=mmmmmmmm
1040: (05) goto pc+0
1041: (bc) w4 = w5                    ; R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R5=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1042: (77) r4 >>= 21                  ; R4_w=scalar(umax=2047,var_off=(0x0; 0x7ff))
1043: (bf) r8 = r5                    ; R5=scalar(id=698) R8_w=scalar(id=698)
1044: (67) r8 <<= 11                  ; R8_w=scalar(smax=9223372036854773760,umax=18446744073709549568,var_off=(0x0; 0xfffffffffffff800),s32_max=2147481600,u32_max=-2048)
1045: (4f) r8 |= r4                   ; R4_w=scalar(umax=2047,var_off=(0x0; 0x7ff)) R8_w=scalar()
1046: (05) goto pc+0
1047: (05) goto pc+0
; __jhash_mix(a, b, c);
1048: (05) goto pc+0
1049: (bc) w4 = w1                    ; R1=scalar() R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1050: (77) r4 >>= 16                  ; R4_w=scalar(umax=65535,var_off=(0x0; 0xffff))
1051: (bf) r7 = r1                    ; R1=scalar(id=699) R7_w=scalar(id=699)
1052: (67) r7 <<= 16                  ; R7_w=scalar(smax=9223372036854710272,umax=18446744073709486080,var_off=(0x0; 0xffffffffffff0000),s32_max=2147418112,u32_max=-65536)
1053: (4f) r7 |= r4                   ; R4_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R7_w=scalar()
; __jhash_mix(a, b, c);
1054: (0f) r3 += r2                   ; R2=scalar() R3_w=scalar()
1055: (1f) r2 -= r1                   ; R1=scalar(id=699) R2_w=scalar()
1056: (af) r2 ^= r7                   ; R2_w=scalar() R7_w=scalar()
1057: (05) goto pc+0
1058: (05) goto pc+0
1059: (05) goto pc+0
1060: (bc) w7 = w2                    ; R2=scalar() R7_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1061: (77) r7 >>= 13                  ; R7_w=scalar(umax=524287,var_off=(0x0; 0x7ffff))
1062: (bf) r4 = r2                    ; R2=scalar(id=700) R4_w=scalar(id=700)
1063: (67) r4 <<= 19                  ; R4_w=scalar(smax=9223372036854251520,umax=18446744073709027328,var_off=(0x0; 0xfffffffffff80000),s32_max=2146959360,u32_max=-524288)
1064: (4f) r4 |= r7                   ; R4_w=scalar() R7_w=scalar(umax=524287,var_off=(0x0; 0x7ffff))
; __jhash_mix(a, b, c);
1065: (0f) r1 += r3                   ; R1_w=scalar() R3=scalar()
1066: (1f) r3 -= r2                   ; R2=scalar(id=700) R3_w=scalar()
1067: (af) r3 ^= r4                   ; R3_w=scalar() R4_w=scalar()
1068: (0f) r2 += r1                   ; R1_w=scalar() R2_w=scalar()
1069: (bf) r5 = r3                    ; R3_w=scalar(id=701) R5_w=scalar(id=701)
1070: (0f) r5 += r2                   ; R2_w=scalar() R5_w=scalar()
1071: (05) goto pc+0
1072: (05) goto pc+0
1073: (05) goto pc+0
1074: (bc) w4 = w5                    ; R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R5=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1075: (77) r4 >>= 18                  ; R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1076: (bf) r7 = r5                    ; R5=scalar(id=702) R7_w=scalar(id=702)
1077: (67) r7 <<= 14                  ; R7_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1078: (4f) r7 |= r4                   ; R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff)) R7_w=scalar()
; __jhash_mix(a, b, c);
1079: (05) goto pc+0
1080: (05) goto pc+0
1081: (05) goto pc+0
1082: (bc) w4 = w3                    ; R3=scalar(id=701) R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1083: (77) r4 >>= 28                  ; R4_w=scalar(umax=15,var_off=(0x0; 0xf))
; __jhash_mix(a, b, c);
1084: (1f) r1 -= r3                   ; R1_w=scalar() R3=scalar(id=701)
; return (word << shift) | (word >> ((-shift) & 31));
1085: (67) r3 <<= 4                   ; R3_w=scalar(smax=9223372036854775792,umax=18446744073709551600,var_off=(0x0; 0xfffffffffffffff0),s32_max=2147483632,u32_max=-16)
1086: (4f) r3 |= r4                   ; R3_w=scalar() R4_w=scalar(umax=15,var_off=(0x0; 0xf))
; __jhash_mix(a, b, c);
1087: (af) r1 ^= r3                   ; R1_w=scalar() R3_w=scalar()
; a += k[0];
1088: (0f) r2 += r0                   ; R0=scalar() R2_w=scalar()
; __jhash_final(a, b, c);
1089: (af) r1 ^= r5                   ; R1_w=scalar() R5=scalar(id=702)
1090: (1f) r1 -= r7                   ; R1_w=scalar() R7=scalar()
1091: (05) goto pc+0
1092: (05) goto pc+0
1093: (05) goto pc+0
1094: (bc) w3 = w1                    ; R1=scalar() R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1095: (77) r3 >>= 21                  ; R3_w=scalar(umax=2047,var_off=(0x0; 0x7ff))
1096: (bf) r4 = r1                    ; R1=scalar(id=703) R4_w=scalar(id=703)
1097: (67) r4 <<= 11                  ; R4_w=scalar(smax=9223372036854773760,umax=18446744073709549568,var_off=(0x0; 0xfffffffffffff800),s32_max=2147481600,u32_max=-2048)
1098: (4f) r4 |= r3                   ; R3_w=scalar(umax=2047,var_off=(0x0; 0x7ff)) R4_w=scalar()
; __jhash_final(a, b, c);
1099: (bf) r3 = r1                    ; R1=scalar(id=703) R3_w=scalar(id=703)
1100: (af) r3 ^= r2                   ; R2=scalar() R3_w=scalar()
1101: (1f) r3 -= r4                   ; R3_w=scalar() R4_w=scalar()
1102: (05) goto pc+0
1103: (05) goto pc+0
1104: (05) goto pc+0
1105: (bc) w2 = w3                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1106: (77) r2 >>= 7                   ; R2_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff))
1107: (bf) r4 = r3                    ; R3=scalar(id=704) R4_w=scalar(id=704)
1108: (67) r4 <<= 25                  ; R4_w=scalar(smax=9223372036821221376,umax=18446744073675997184,var_off=(0x0; 0xfffffffffe000000),s32_max=2113929216,u32_max=-33554432)
1109: (4f) r4 |= r2                   ; R2_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff)) R4_w=scalar()
; __jhash_final(a, b, c);
1110: (bf) r7 = r3                    ; R3=scalar(id=704) R7_w=scalar(id=704)
1111: (af) r7 ^= r5                   ; R5=scalar(id=702) R7_w=scalar()
1112: (1f) r7 -= r4                   ; R4_w=scalar() R7_w=scalar()
1113: (05) goto pc+0
1114: (05) goto pc+0
1115: (05) goto pc+0
1116: (bc) w2 = w7                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R7=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1117: (77) r2 >>= 16                  ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff))
1118: (bf) r4 = r7                    ; R4_w=scalar(id=705) R7=scalar(id=705)
1119: (67) r4 <<= 16                  ; R4_w=scalar(smax=9223372036854710272,umax=18446744073709486080,var_off=(0x0; 0xffffffffffff0000),s32_max=2147418112,u32_max=-65536)
1120: (4f) r4 |= r2                   ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R4_w=scalar()
; __jhash_final(a, b, c);
1121: (bf) r2 = r7                    ; R2_w=scalar(id=705) R7=scalar(id=705)
1122: (af) r2 ^= r1                   ; R1=scalar(id=703) R2_w=scalar()
1123: (1f) r2 -= r4                   ; R2_w=scalar() R4_w=scalar()
1124: (05) goto pc+0
1125: (bc) w1 = w2                    ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R2=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1126: (77) r1 >>= 28                  ; R1_w=scalar(umax=15,var_off=(0x0; 0xf))
1127: (bf) r4 = r2                    ; R2=scalar(id=706) R4_w=scalar(id=706)
1128: (67) r4 <<= 4                   ; R4_w=scalar(smax=9223372036854775792,umax=18446744073709551600,var_off=(0x0; 0xfffffffffffffff0),s32_max=2147483632,u32_max=-16)
1129: (4f) r4 |= r1                   ; R1_w=scalar(umax=15,var_off=(0x0; 0xf)) R4_w=scalar()
; __jhash_final(a, b, c);
1130: (bf) r1 = r2                    ; R1_w=scalar(id=706) R2=scalar(id=706)
1131: (af) r1 ^= r3                   ; R1_w=scalar() R3=scalar(id=704)
1132: (1f) r1 -= r4                   ; R1_w=scalar() R4_w=scalar()
1133: (05) goto pc+0
1134: (05) goto pc+0
1135: (05) goto pc+0
1136: (bc) w3 = w1                    ; R1=scalar() R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1137: (77) r3 >>= 18                  ; R3_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1138: (bf) r4 = r1                    ; R1=scalar(id=707) R4_w=scalar(id=707)
1139: (67) r4 <<= 14                  ; R4_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1140: (4f) r4 |= r3                   ; R3_w=scalar(umax=16383,var_off=(0x0; 0x3fff)) R4_w=scalar()
; __jhash_final(a, b, c);
1141: (af) r1 ^= r7                   ; R1_w=scalar() R7=scalar(id=705)
1142: (1f) r1 -= r4                   ; R1_w=scalar() R4_w=scalar()
1143: (05) goto pc+0
1144: (05) goto pc+0
1145: (05) goto pc+0
1146: (bc) w4 = w1                    ; R1=scalar() R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1147: (77) r4 >>= 8                   ; R4_w=scalar(umax=16777215,var_off=(0x0; 0xffffff))
1148: (bf) r5 = r1                    ; R1=scalar(id=708) R5_w=scalar(id=708)
1149: (67) r5 <<= 24                  ; R5_w=scalar(smax=9223372036837998592,umax=18446744073692774400,var_off=(0x0; 0xffffffffff000000),s32_max=2130706432,u32_max=-16777216)
1150: (4f) r5 |= r4                   ; R4_w=scalar(umax=16777215,var_off=(0x0; 0xffffff)) R5_w=scalar()
; __jhash_final(a, b, c);
1151: (af) r1 ^= r2                   ; R1_w=scalar() R2=scalar(id=706)
; a += initval;
1152: (1f) r1 -= r5                   ; R1_w=scalar() R5_w=scalar()
1153: (07) r1 += -525483785           ; R1_w=scalar()
1154: (79) r7 = *(u64 *)(r10 -176)    ; R7_w=scalar() R10=fp0
; __jhash_final(a, b, c);
1155: (af) r1 ^= r7                   ; R1_w=scalar() R7_w=scalar()
1156: (1f) r1 -= r8                   ; R1_w=scalar() R8=scalar()
1157: (05) goto pc+0
1158: (bc) w2 = w1                    ; R1=scalar() R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1159: (77) r2 >>= 7                   ; R2_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff))
1160: (bf) r4 = r1                    ; R1=scalar(id=709) R4_w=scalar(id=709)
1161: (67) r4 <<= 25                  ; R4_w=scalar(smax=9223372036821221376,umax=18446744073675997184,var_off=(0x0; 0xfffffffffe000000),s32_max=2113929216,u32_max=-33554432)
1162: (4f) r4 |= r2                   ; R2_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff)) R4_w=scalar()
; __jhash_final(a, b, c);
1163: (bf) r0 = r1                    ; R0_w=scalar(id=709) R1=scalar(id=709)
1164: (79) r2 = *(u64 *)(r10 -168)    ; R2_w=scalar(smin=-525483785,smax=3769483510) R10=fp0
1165: (af) r0 ^= r2                   ; R0_w=scalar() R2_w=scalar(smin=-525483785,smax=3769483510)
1166: (1f) r0 -= r4                   ; R0_w=scalar() R4_w=scalar()
1167: (05) goto pc+0
1168: (05) goto pc+0
1169: (05) goto pc+0
1170: (bc) w2 = w0                    ; R0=scalar() R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1171: (77) r2 >>= 16                  ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff))
1172: (bf) r5 = r0                    ; R0=scalar(id=710) R5_w=scalar(id=710)
1173: (67) r5 <<= 16                  ; R5_w=scalar(smax=9223372036854710272,umax=18446744073709486080,var_off=(0x0; 0xffffffffffff0000),s32_max=2147418112,u32_max=-65536)
1174: (4f) r5 |= r2                   ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R5_w=scalar()
; __jhash_final(a, b, c);
1175: (bf) r4 = r0                    ; R0=scalar(id=710) R4_w=scalar(id=710)
1176: (af) r4 ^= r7                   ; R4_w=scalar() R7=scalar()
1177: (1f) r4 -= r5                   ; R4_w=scalar() R5_w=scalar()
1178: (05) goto pc+0
1179: (bc) w2 = w4                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R4=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1180: (77) r2 >>= 28                  ; R2_w=scalar(umax=15,var_off=(0x0; 0xf))
1181: (bf) r5 = r4                    ; R4=scalar(id=711) R5_w=scalar(id=711)
1182: (67) r5 <<= 4                   ; R5_w=scalar(smax=9223372036854775792,umax=18446744073709551600,var_off=(0x0; 0xfffffffffffffff0),s32_max=2147483632,u32_max=-16)
1183: (4f) r5 |= r2                   ; R2_w=scalar(umax=15,var_off=(0x0; 0xf)) R5_w=scalar()
; __jhash_final(a, b, c);
1184: (bf) r2 = r4                    ; R2_w=scalar(id=711) R4=scalar(id=711)
1185: (af) r2 ^= r1                   ; R1=scalar(id=709) R2_w=scalar()
1186: (1f) r2 -= r5                   ; R2_w=scalar() R5_w=scalar()
1187: (05) goto pc+0
1188: (05) goto pc+0
1189: (05) goto pc+0
1190: (bc) w1 = w2                    ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R2=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1191: (77) r1 >>= 18                  ; R1_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1192: (bf) r5 = r2                    ; R2=scalar(id=712) R5_w=scalar(id=712)
1193: (67) r5 <<= 14                  ; R5_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1194: (4f) r5 |= r1                   ; R1_w=scalar(umax=16383,var_off=(0x0; 0x3fff)) R5_w=scalar()
; __jhash_final(a, b, c);
1195: (af) r2 ^= r0                   ; R0=scalar(id=710) R2_w=scalar()
1196: (1f) r2 -= r5                   ; R2_w=scalar() R5_w=scalar()
1197: (05) goto pc+0
1198: (bc) w1 = w2                    ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R2=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1199: (77) r1 >>= 8                   ; R1_w=scalar(umax=16777215,var_off=(0x0; 0xffffff))
1200: (bf) r3 = r2                    ; R2=scalar(id=713) R3_w=scalar(id=713)
1201: (67) r3 <<= 24                  ; R3_w=scalar(smax=9223372036837998592,umax=18446744073692774400,var_off=(0x0; 0xffffffffff000000),s32_max=2130706432,u32_max=-16777216)
1202: (4f) r3 |= r1                   ; R1_w=scalar(umax=16777215,var_off=(0x0; 0xffffff)) R3_w=scalar()
; __jhash_final(a, b, c);
1203: (af) r2 ^= r4                   ; R2_w=scalar() R4=scalar(id=711)
1204: (1f) r2 -= r3                   ; R2_w=scalar() R3_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1205: (79) r1 = *(u64 *)(r10 -144)    ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
1206: (61) r1 = *(u32 *)(r1 +4)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; key = RING_SIZE * (vip_info->vip_num) + hash;
1207: (27) r1 *= 65537                ; R1_w=scalar(umax=281479271612415,var_off=(0x0; 0x1ffffffffffff))
; __jhash_final(a, b, c);
1208: (bc) w2 = w2                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
1209: (05) goto pc+0
; hash = get_packet_hash(pckt, hash_16bytes) % RING_SIZE;
1210: (97) r2 %= 65537                ; R2_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1211: (0f) r2 += r1                   ; R1_w=scalar(umax=281479271612415,var_off=(0x0; 0x1ffffffffffff)) R2_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1212: (63) *(u32 *)(r10 -20) = r2     ; R2_w=scalar() R10=fp0 fp-24=mmmm????
1213: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1214: (07) r2 += -20                  ; R2_w=fp-20
; real_pos = bpf_map_lookup_elem(&ch_rings, &key);
1215: (18) r1 = 0xffffaebaa0631000    ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
1217: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=714,off=0,ks=4,vs=4,imm=0)
; if (!real_pos) {
1218: (15) if r0 == 0x0 goto pc+638   ; R0=map_value(off=0,ks=4,vs=4,imm=0)
; key = *real_pos;
1219: (61) r1 = *(u32 *)(r0 +0)       ; R0=map_value(off=0,ks=4,vs=4,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; key = *real_pos;
1220: (63) *(u32 *)(r10 -20) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-24=mmmm????
1221: (79) r8 = *(u64 *)(r10 -192)    ; R8_w=P0 R10=fp0
; if (key == 0) {
1222: (55) if r1 != 0x0 goto pc+12    ; R1_w=0
1223: (05) goto pc+0
; __u32 ch_drop_stats_key = MAX_VIPS + CH_DROP_STATS;
1224: (62) *(u32 *)(r10 -28) = 521    ; R10=fp0 fp-32=mmmm????
1225: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1226: (07) r2 += -28                  ; R2_w=fp-28
; bpf_map_lookup_elem(&stats, &ch_drop_stats_key);
1227: (18) r1 = 0xffffa03499be8000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
1229: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=715,off=0,ks=4,vs=16,imm=0)
; if (!ch_drop_stats) {
1230: (15) if r0 == 0x0 goto pc+3     ; R0=map_value(off=0,ks=4,vs=16,imm=0)
; ch_drop_stats->v2 += 1;
1231: (79) r1 = *(u64 *)(r0 +8)       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1232: (07) r1 += 1                    ; R1_w=scalar()
1233: (7b) *(u64 *)(r0 +8) = r1       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
; pckt->real_index = key;
1234: (61) r1 = *(u32 *)(r10 -20)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; pckt->real_index = key;
1235: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1236: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1237: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1238: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1240: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=716,off=0,ks=4,vs=20,imm=0)
1241: (bf) r7 = r0                    ; R0=map_value_or_null(id=716,off=0,ks=4,vs=20,imm=0) R7_w=map_value_or_null(id=716,off=0,ks=4,vs=20,imm=0)
; if (!(*real)) {
1242: (55) if r7 != 0x0 goto pc+9     ; R7_w=0
1243: (05) goto pc+0
; __u32 ch_drop_stats_key = MAX_VIPS + CH_DROP_STATS;
1244: (62) *(u32 *)(r10 -28) = 521    ; R10=fp0 fp-32=mmmm????
1245: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1246: (07) r2 += -28                  ; R2_w=fp-28
; bpf_map_lookup_elem(&stats, &ch_drop_stats_key);
1247: (18) r1 = 0xffffa03499be8000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
1249: (85) call bpf_map_lookup_elem#1
1250: safe

from 1242 to 1252: R0=map_value(off=0,ks=4,vs=20,imm=0) R6=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=20,imm=0) R8=P0 R9=scalar(umax=65280,var_off=(0x0; 0xff00)) R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184= fp-192=00000000 fp-200= fp-208=mmmmmmmm
; if (lru_map && !(vip_info->flags & F_LRU_BYPASS) && !under_flood) {
1252: (79) r1 = *(u64 *)(r10 -152)    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0
1253: (15) if r1 == 0x0 goto pc+19    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0)
; if (lru_map && !(vip_info->flags & F_LRU_BYPASS) && !under_flood) {
1254: (79) r1 = *(u64 *)(r10 -144)    ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
1255: (61) r1 = *(u32 *)(r1 +0)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (lru_map && !(vip_info->flags & F_LRU_BYPASS) && !under_flood) {
1256: (57) r1 &= 2                    ; R1_w=scalar(umax=2,var_off=(0x0; 0x2))
1257: (77) r1 >>= 1                   ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
; if (lru_map && !(vip_info->flags & F_LRU_BYPASS) && !under_flood) {
1258: (4f) r8 |= r1
last_idx 1258 first_idx 1252
regs=2 stack=0 before 1257: (77) r1 >>= 1
regs=2 stack=0 before 1256: (57) r1 &= 2
regs=2 stack=0 before 1255: (61) r1 = *(u32 *)(r1 +0)
1259: R1_w=Pscalar(umax=1,var_off=(0x0; 0x1)) R8_w=scalar()
1259: (55) if r8 != 0x0 goto pc+13    ; R8_w=0
; if (pckt->flow.proto == IPPROTO_UDP) {
1260: (71) r1 = *(u8 *)(r10 -44)      ; R1=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (pckt->flow.proto == IPPROTO_UDP) {
1261: (55) if r1 != 0x11 goto pc+2    ; R1=17
; new_dst_lru.atime = cur_time;
1262: (79) r1 = *(u64 *)(r10 -208)    ; R1_w=scalar() R10=fp0
1263: (7b) *(u64 *)(r10 -8) = r1      ; R1_w=scalar() R10=fp0 fp-8_w=mmmmmmmm
; new_dst_lru.pos = key;
1264: (61) r1 = *(u32 *)(r10 -20)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; new_dst_lru.pos = key;
1265: (63) *(u32 *)(r10 -16) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-16=
1266: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; new_dst_lru.pos = key;
1267: (07) r2 += -80                  ; R2_w=fp-80
1268: (bf) r3 = r10                   ; R3_w=fp0 R10=fp0
1269: (07) r3 += -16                  ; R3_w=fp-16
; bpf_map_update_elem(lru_map, &pckt->flow, &new_dst_lru, BPF_ANY);
1270: (79) r1 = *(u64 *)(r10 -152)    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0
1271: (b7) r4 = 0                     ; R4_w=0
1272: (85) call bpf_map_update_elem#2
1273: safe

from 1261 to 1264: R0=map_value(off=0,ks=4,vs=20,imm=0) R1=scalar(umax=255,var_off=(0x0; 0xff)) R6=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=20,imm=0) R8=0 R9=scalar(umax=65280,var_off=(0x0; 0xff00)) R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184= fp-192=00000000 fp-200= fp-208=mmmmmmmm
; new_dst_lru.pos = key;
1264: (61) r1 = *(u32 *)(r10 -20)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; new_dst_lru.pos = key;
1265: (63) *(u32 *)(r10 -16) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-16=
1266: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; new_dst_lru.pos = key;
1267: (07) r2 += -80                  ; R2_w=fp-80
1268: (bf) r3 = r10                   ; R3_w=fp0 R10=fp0
1269: (07) r3 += -16                  ; R3_w=fp-16
; bpf_map_update_elem(lru_map, &pckt->flow, &new_dst_lru, BPF_ANY);
1270: (79) r1 = *(u64 *)(r10 -152)    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0
1271: (b7) r4 = 0                     ; R4_w=0
1272: (85) call bpf_map_update_elem#2
1273: safe

from 1259 to 1273: safe

from 1253 to 1273: safe

from 1230 to 1234: R0=0 R6=ctx(off=0,imm=0) R7=scalar() R8=P0 R9=scalar(umax=65280,var_off=(0x0; 0xff00)) R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184= fp-192=00000000 fp-200= fp-208=mmmmmmmm
; pckt->real_index = key;
1234: (61) r1 = *(u32 *)(r10 -20)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; pckt->real_index = key;
1235: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1236: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1237: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1238: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1240: (85) call bpf_map_lookup_elem#1
frame 8: propagating r0
1241: safe

from 1222 to 1235: R0=map_value(off=0,ks=4,vs=4,imm=0) R1=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6=ctx(off=0,imm=0) R7=scalar() R8=P0 R9=scalar(umax=65280,var_off=(0x0; 0xff00)) R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184= fp-192=00000000 fp-200= fp-208=mmmmmmmm
; pckt->real_index = key;
1235: (63) *(u32 *)(r10 -40) = r1     ; R1=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1236: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1237: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1238: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1240: (85) call bpf_map_lookup_elem#1
frame 8: propagating r0
1241: safe

from 1218 to 1857: safe

from 957 to 967: R0=scalar(id=692) R1=scalar(umax=8,var_off=(0x0; 0x8)) R2=scalar(umin=1000000001) R6=ctx(off=0,imm=0) R7=scalar(id=692) R8=P0 R9=map_value(off=0,ks=4,vs=16,imm=0) R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0 fp-192=00000000 fp-200= fp-208=mmmmmmmm
; pckt->flow.port16[0] = pckt->flow.port16[1];
967: (69) r1 = *(u16 *)(r10 -46)      ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; pckt->flow.port16[0] = pckt->flow.port16[1];
968: (6b) *(u16 *)(r10 -48) = r1      ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-48=
969: (05) goto pc+0
; memset(pckt->flow.srcv6, 0, 16);
970: (7a) *(u64 *)(r10 -80) = 0       ; R10=fp0 fp-80_w=mmmmmmmm
971: (b7) r1 = 0                      ; R1_w=0
972: (7b) *(u64 *)(r10 -184) = r1
last_idx 972 first_idx 970
regs=2 stack=0 before 971: (b7) r1 = 0
973: R1_w=P0 R10=fp0 fp-184_w=00000000
973: (7a) *(u64 *)(r10 -72) = 0       ; R10=fp0 fp-72_w=mmmmmmmm
974: (b7) r9 = 0                      ; R9_w=0
975: (b7) r0 = 0                      ; R0_w=0
976: (b7) r8 = 0                      ; R8_w=0
977: (b7) r3 = 0                      ; R3_w=0
978: (b7) r4 = 0                      ; R4_w=0
; __jhash_mix(a, b, c);
979: (1f) r3 -= r8                    ; R3_w=0 R8_w=0
; c += *(u32*)(k + 8);
980: (07) r8 += -559038209            ; R8_w=-559038209
981: (05) goto pc+0
982: (05) goto pc+0
983: (05) goto pc+0
984: (bc) w5 = w8                     ; R5_w=3735929087 R8=-559038209
; return (word << shift) | (word >> ((-shift) & 31));
985: (77) r5 >>= 28                   ; R5_w=13
986: (bf) r2 = r8                     ; R2_w=-559038209 R8=-559038209
987: (67) r2 <<= 4                    ; R2_w=-8944611344
988: (4f) r2 |= r5                    ; R2_w=-8944611331 R5_w=13
; __jhash_mix(a, b, c);
989: (af) r2 ^= r3                    ; R2_w=-8944611331 R3=0
990: (05) goto pc+0
991: (05) goto pc+0
992: (05) goto pc+0
993: (bc) w5 = w2                     ; R2=-8944611331 R5_w=3940290557
; return (word << shift) | (word >> ((-shift) & 31));
994: (77) r5 >>= 26                   ; R5_w=58
995: (bf) r7 = r2                     ; R2=-8944611331 R7_w=-8944611331
996: (67) r7 <<= 6                    ; R7_w=-572455125184
997: (4f) r7 |= r5                    ; R5_w=58 R7_w=-572455125126
; b += *(u32*)(k + 4);
998: (07) r1 += -559038209            ; R1_w=P-559038209
; __jhash_mix(a, b, c);
999: (bf) r3 = r1                     ; R1_w=P-559038209 R3_w=P-559038209
1000: (1f) r3 -= r2
last_idx 1000 first_idx 991
regs=4 stack=0 before 999: (bf) r3 = r1
regs=4 stack=0 before 998: (07) r1 += -559038209
regs=4 stack=0 before 997: (4f) r7 |= r5
regs=4 stack=0 before 996: (67) r7 <<= 6
regs=4 stack=0 before 995: (bf) r7 = r2
regs=4 stack=0 before 994: (77) r5 >>= 26
regs=4 stack=0 before 993: (bc) w5 = w2
regs=4 stack=0 before 992: (05) goto pc+0
regs=4 stack=0 before 991: (05) goto pc+0
parent didn't have regs=4 stack=0 marks: R0=0 R1_r=P0 R2_rw=P-8944611331 R3=0 R4=0 R5_w=13 R6=ctx(off=0,imm=0) R7=scalar(id=692) R8=-559038209 R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0 fp-184=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
last_idx 990 first_idx 983
regs=4 stack=0 before 990: (05) goto pc+0
regs=4 stack=0 before 989: (af) r2 ^= r3
regs=c stack=0 before 988: (4f) r2 |= r5
regs=2c stack=0 before 987: (67) r2 <<= 4
regs=2c stack=0 before 986: (bf) r2 = r8
regs=128 stack=0 before 985: (77) r5 >>= 28
regs=128 stack=0 before 984: (bc) w5 = w8
regs=108 stack=0 before 983: (05) goto pc+0
parent didn't have regs=108 stack=0 marks: R0_w=0 R1_rw=P0 R2=scalar(umin=1000000001) R3_rw=P0 R4_w=0 R6=ctx(off=0,imm=0) R7=scalar(id=692) R8_rw=P-559038209 R9_w=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72_w=mmmmmmmm fp-80_w=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0 fp-184_w=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
last_idx 982 first_idx 970
regs=108 stack=0 before 982: (05) goto pc+0
regs=108 stack=0 before 981: (05) goto pc+0
regs=108 stack=0 before 980: (07) r8 += -559038209
regs=108 stack=0 before 979: (1f) r3 -= r8
regs=108 stack=0 before 978: (b7) r4 = 0
regs=108 stack=0 before 977: (b7) r3 = 0
regs=100 stack=0 before 976: (b7) r8 = 0
1001: (af) r3 ^= r7
last_idx 1001 first_idx 991
regs=80 stack=0 before 1000: (1f) r3 -= r2
regs=80 stack=0 before 999: (bf) r3 = r1
regs=80 stack=0 before 998: (07) r1 += -559038209
regs=80 stack=0 before 997: (4f) r7 |= r5
regs=a0 stack=0 before 996: (67) r7 <<= 6
regs=a0 stack=0 before 995: (bf) r7 = r2
regs=24 stack=0 before 994: (77) r5 >>= 26
regs=24 stack=0 before 993: (bc) w5 = w2
regs=4 stack=0 before 992: (05) goto pc+0
regs=4 stack=0 before 991: (05) goto pc+0
parent already had regs=4 stack=0 marks: R0=0 R1_r=P0 R2_rw=P-8944611331 R3=0 R4=0 R5_w=13 R6=ctx(off=0,imm=0) R7=scalar(id=692) R8=-559038209 R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0 fp-184=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
; a += (u32)k[3] << 24;
1002: (67) r4 <<= 24                  ; R4_w=0
; a += (u32)k[2] << 16;
1003: (57) r0 &= 255                  ; R0_w=0
; a += (u32)k[2] << 16;
1004: (67) r0 <<= 16                  ; R0_w=0
; a += (u32)k[3] << 24;
1005: (4f) r0 |= r4                   ; R0_w=0 R4_w=0
; pckt->flow.ports,
1006: (61) r5 = *(u32 *)(r10 -48)     ; R5_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; b += initval;
1007: (07) r5 += -525483785           ; R5_w=scalar(smin=-525483785,smax=3769483510)
1008: (05) goto pc+0
1009: (7b) *(u64 *)(r10 -168) = r5    ; R5=scalar(smin=-525483785,smax=3769483510) R10=fp0 fp-168_w=
1010: (05) goto pc+0
1011: (05) goto pc+0
1012: (bc) w4 = w5                    ; R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R5=scalar(smin=-525483785,smax=3769483510)
; return (word << shift) | (word >> ((-shift) & 31));
1013: (77) r4 >>= 18                  ; R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1014: (bf) r7 = r5                    ; R5=scalar(id=723,smin=-525483785,smax=3769483510) R7_w=scalar(id=723,smin=-525483785,smax=3769483510)
1015: (67) r7 <<= 14                  ; R7_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1016: (4f) r7 |= r4                   ; R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff)) R7_w=scalar()
; __jhash_final(a, b, c);
1017: (a7) r5 ^= -525483785           ; R5_w=scalar()
1018: (1f) r5 -= r7                   ; R5_w=scalar() R7_w=scalar()
; __jhash_mix(a, b, c);
1019: (0f) r1 += r8
last_idx 1019 first_idx 1009
regs=100 stack=0 before 1018: (1f) r5 -= r7
regs=100 stack=0 before 1017: (a7) r5 ^= -525483785
regs=100 stack=0 before 1016: (4f) r7 |= r4
regs=100 stack=0 before 1015: (67) r7 <<= 14
regs=100 stack=0 before 1014: (bf) r7 = r5
regs=100 stack=0 before 1013: (77) r4 >>= 18
regs=100 stack=0 before 1012: (bc) w4 = w5
regs=100 stack=0 before 1011: (05) goto pc+0
regs=100 stack=0 before 1010: (05) goto pc+0
regs=100 stack=0 before 1009: (7b) *(u64 *)(r10 -168) = r5
parent didn't have regs=100 stack=0 marks: R0_w=0 R1_rw=P-559038209 R2=P-8944611331 R3_w=P-570076017032 R4_w=0 R5_rw=scalar(smin=-525483785,smax=3769483510) R6=ctx(off=0,imm=0) R7_w=P-572455125126 R8_r=P-559038209 R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0 fp-184=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
last_idx 1008 first_idx 991
regs=100 stack=0 before 1008: (05) goto pc+0
regs=100 stack=0 before 1007: (07) r5 += -525483785
regs=100 stack=0 before 1006: (61) r5 = *(u32 *)(r10 -48)
regs=100 stack=0 before 1005: (4f) r0 |= r4
regs=100 stack=0 before 1004: (67) r0 <<= 16
regs=100 stack=0 before 1003: (57) r0 &= 255
regs=100 stack=0 before 1002: (67) r4 <<= 24
regs=100 stack=0 before 1001: (af) r3 ^= r7
regs=100 stack=0 before 1000: (1f) r3 -= r2
regs=100 stack=0 before 999: (bf) r3 = r1
regs=100 stack=0 before 998: (07) r1 += -559038209
regs=100 stack=0 before 997: (4f) r7 |= r5
regs=100 stack=0 before 996: (67) r7 <<= 6
regs=100 stack=0 before 995: (bf) r7 = r2
regs=100 stack=0 before 994: (77) r5 >>= 26
regs=100 stack=0 before 993: (bc) w5 = w2
regs=100 stack=0 before 992: (05) goto pc+0
regs=100 stack=0 before 991: (05) goto pc+0
parent didn't have regs=100 stack=0 marks: R0_r=0 R1_r=P0 R2_rw=P-8944611331 R3=0 R4_r=0 R5_w=13 R6=ctx(off=0,imm=0) R7=scalar(id=692) R8_r=P-559038209 R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48_r= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0 fp-184=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
last_idx 990 first_idx 983
regs=100 stack=0 before 990: (05) goto pc+0
regs=100 stack=0 before 989: (af) r2 ^= r3
regs=100 stack=0 before 988: (4f) r2 |= r5
regs=100 stack=0 before 987: (67) r2 <<= 4
regs=100 stack=0 before 986: (bf) r2 = r8
regs=100 stack=0 before 985: (77) r5 >>= 28
regs=100 stack=0 before 984: (bc) w5 = w8
regs=100 stack=0 before 983: (05) goto pc+0
parent already had regs=100 stack=0 marks: R0_rw=0 R1_rw=P0 R2=scalar(umin=1000000001) R3_rw=P0 R4_rw=0 R6=ctx(off=0,imm=0) R7=scalar(id=692) R8_rw=P-559038209 R9_w=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48_r= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72_w=mmmmmmmm fp-80_w=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0 fp-184_w=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
; a += (u32)k[1] << 8;
1020: (57) r9 &= 255                  ; R9_w=0
; a += (u32)k[1] << 8;
1021: (67) r9 <<= 8                   ; R9_w=0
; a += (u32)k[2] << 16;
1022: (4f) r0 |= r9                   ; R0_w=0 R9_w=0
1023: (79) r4 = *(u64 *)(r10 -184)    ; R4_w=P0 R10=fp0
; a += k[0];
1024: (57) r4 &= 255                  ; R4_w=P0
; a += (u32)k[1] << 8;
1025: (4f) r0 |= r4                   ; R0_w=0 R4_w=P0
1026: (05) goto pc+0
1027: (05) goto pc+0
; __jhash_mix(a, b, c);
1028: (05) goto pc+0
1029: (bc) w7 = w3                    ; R3=P-570076017032 R7_w=P1154633336
; return (word << shift) | (word >> ((-shift) & 31));
1030: (77) r7 >>= 24                  ; R7_w=P68
1031: (bf) r4 = r3                    ; R3=P-570076017032 R4_w=P-570076017032
1032: (67) r4 <<= 8                   ; R4_w=P-145939460360192
1033: (4f) r4 |= r7                   ; R4_w=P-145939460360124 R7_w=P68
; __jhash_mix(a, b, c);
1034: (0f) r2 += r1                   ; R1=P-1118076418 R2_w=P-10062687749
1035: (1f) r1 -= r3                   ; R1_w=P568957940614 R3=P-570076017032
1036: (af) r1 ^= r4                   ; R1_w=P-145407547585598 R4_w=P-145939460360124
1037: (05) goto pc+0
1038: (05) goto pc+0
; __jhash_final(a, b, c);
1039: (7b) *(u64 *)(r10 -176) = r5    ; R5=scalar() R10=fp0 fp-176_w=mmmmmmmm
1040: (05) goto pc+0
1041: (bc) w4 = w5                    ; R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R5=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1042: (77) r4 >>= 21                  ; R4_w=scalar(umax=2047,var_off=(0x0; 0x7ff))
1043: (bf) r8 = r5                    ; R5=scalar(id=725) R8_w=scalar(id=725)
1044: (67) r8 <<= 11                  ; R8_w=scalar(smax=9223372036854773760,umax=18446744073709549568,var_off=(0x0; 0xfffffffffffff800),s32_max=2147481600,u32_max=-2048)
1045: (4f) r8 |= r4                   ; R4_w=scalar(umax=2047,var_off=(0x0; 0x7ff)) R8_w=scalar()
1046: (05) goto pc+0
1047: (05) goto pc+0
; __jhash_mix(a, b, c);
1048: (05) goto pc+0
1049: (bc) w4 = w1                    ; R1=P-145407547585598 R4_w=P2865187778
; return (word << shift) | (word >> ((-shift) & 31));
1050: (77) r4 >>= 16                  ; R4_w=P43719
1051: (bf) r7 = r1                    ; R1=P-145407547585598 R7_w=P-145407547585598
1052: (67) r7 <<= 16                  ; R7_w=P8917315035139801088
1053: (4f) r7 |= r4                   ; R4_w=P43719 R7_w=P8917315035139844807
; __jhash_mix(a, b, c);
1054: (0f) r3 += r2                   ; R2=P-10062687749 R3_w=P-580138704781
1055: (1f) r2 -= r1                   ; R1=P-145407547585598 R2_w=P145397484897849
1056: (af) r2 ^= r7                   ; R2_w=P8917178920830430462 R7_w=P8917315035139844807
1057: (05) goto pc+0
1058: (05) goto pc+0
1059: (05) goto pc+0
1060: (bc) w7 = w2                    ; R2=P8917178920830430462 R7_w=P3065179390
; return (word << shift) | (word >> ((-shift) & 31));
1061: (77) r7 >>= 13                  ; R7_w=P374167
1062: (bf) r4 = r2                    ; R2=P8917178920830430462 R4_w=P8917178920830430462
1063: (67) r4 <<= 19                  ; R4_w=P8637259322254950400
1064: (4f) r4 |= r7                   ; R4_w=P8637259322255324567 R7_w=P374167
; __jhash_mix(a, b, c);
1065: (0f) r1 += r3                   ; R1_w=P-145987686290379 R3=P-580138704781
1066: (1f) r3 -= r2                   ; R2=P8917178920830430462 R3_w=P-8917179500969135243
1067: (af) r3 ^= r4                   ; R3_w=P-873023320690047262 R4_w=P8637259322255324567
1068: (0f) r2 += r1                   ; R1_w=P-145987686290379 R2_w=P8917032933144140083
1069: (bf) r5 = r3                    ; R3_w=P-873023320690047262 R5_w=P-873023320690047262
1070: (0f) r5 += r2                   ; R2_w=P8917032933144140083 R5_w=P8044009612454092821
1071: (05) goto pc+0
1072: (05) goto pc+0
1073: (05) goto pc+0
1074: (bc) w4 = w5                    ; R4_w=P2686935061 R5=P8044009612454092821
; return (word << shift) | (word >> ((-shift) & 31));
1075: (77) r4 >>= 18                  ; R4_w=P10249
1076: (bf) r7 = r5                    ; R5=P8044009612454092821 R7_w=P8044009612454092821
1077: (67) r7 <<= 14                  ; R7_w=P-8932916206889517056
1078: (4f) r7 |= r4                   ; R4_w=P10249 R7_w=P-8932916206889506807
; __jhash_mix(a, b, c);
1079: (05) goto pc+0
1080: (05) goto pc+0
1081: (05) goto pc+0
1082: (bc) w4 = w3                    ; R3=P-873023320690047262 R4_w=P1369655010
; return (word << shift) | (word >> ((-shift) & 31));
1083: (77) r4 >>= 28                  ; R4_w=P5
; __jhash_mix(a, b, c);
1084: (1f) r1 -= r3                   ; R1_w=P872877333003756883 R3=P-873023320690047262
; return (word << shift) | (word >> ((-shift) & 31));
1085: (67) r3 <<= 4                   ; R3_w=P4478370942668795424
1086: (4f) r3 |= r4                   ; R3_w=P4478370942668795429 R4_w=P5
; __jhash_mix(a, b, c);
1087: (af) r1 ^= r3                   ; R1_w=P3619570195461933942 R3_w=P4478370942668795429
; a += k[0];
1088: (0f) r2 += r0
last_idx 1088 first_idx 1080
regs=1 stack=0 before 1087: (af) r1 ^= r3
regs=1 stack=0 before 1086: (4f) r3 |= r4
regs=1 stack=0 before 1085: (67) r3 <<= 4
regs=1 stack=0 before 1084: (1f) r1 -= r3
regs=1 stack=0 before 1083: (77) r4 >>= 28
regs=1 stack=0 before 1082: (bc) w4 = w3
regs=1 stack=0 before 1081: (05) goto pc+0
regs=1 stack=0 before 1080: (05) goto pc+0
parent didn't have regs=1 stack=0 marks: R0_r=P0 R1_r=P-145987686290379 R2_r=P8917032933144140083 R3_r=P-873023320690047262 R4_w=P10249 R5=P8044009612454092821 R6=ctx(off=0,imm=0) R7_w=P-8932916206889506807 R8=scalar() R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
last_idx 1079 first_idx 1072
regs=1 stack=0 before 1079: (05) goto pc+0
regs=1 stack=0 before 1078: (4f) r7 |= r4
regs=1 stack=0 before 1077: (67) r7 <<= 14
regs=1 stack=0 before 1076: (bf) r7 = r5
regs=1 stack=0 before 1075: (77) r4 >>= 18
regs=1 stack=0 before 1074: (bc) w4 = w5
regs=1 stack=0 before 1073: (05) goto pc+0
regs=1 stack=0 before 1072: (05) goto pc+0
parent didn't have regs=1 stack=0 marks: R0_r=P0 R1_rw=P-145987686290379 R2_rw=P8917032933144140083 R3_rw=P-873023320690047262 R4_w=P8637259322255324567 R5_rw=P8044009612454092821 R6=ctx(off=0,imm=0) R7_w=P374167 R8=scalar() R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
last_idx 1071 first_idx 1058
regs=1 stack=0 before 1071: (05) goto pc+0
regs=1 stack=0 before 1070: (0f) r5 += r2
regs=1 stack=0 before 1069: (bf) r5 = r3
regs=1 stack=0 before 1068: (0f) r2 += r1
regs=1 stack=0 before 1067: (af) r3 ^= r4
regs=1 stack=0 before 1066: (1f) r3 -= r2
regs=1 stack=0 before 1065: (0f) r1 += r3
regs=1 stack=0 before 1064: (4f) r4 |= r7
regs=1 stack=0 before 1063: (67) r4 <<= 19
regs=1 stack=0 before 1062: (bf) r4 = r2
regs=1 stack=0 before 1061: (77) r7 >>= 13
regs=1 stack=0 before 1060: (bc) w7 = w2
regs=1 stack=0 before 1059: (05) goto pc+0
regs=1 stack=0 before 1058: (05) goto pc+0
parent didn't have regs=1 stack=0 marks: R0_r=P0 R1_r=P-145407547585598 R2_rw=P8917178920830430462 R3_rw=P-580138704781 R4_w=P43719 R5=scalar(id=725) R6=ctx(off=0,imm=0) R7_w=P8917315035139844807 R8=scalar() R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
last_idx 1057 first_idx 1047
regs=1 stack=0 before 1057: (05) goto pc+0
regs=1 stack=0 before 1056: (af) r2 ^= r7
regs=1 stack=0 before 1055: (1f) r2 -= r1
regs=1 stack=0 before 1054: (0f) r3 += r2
regs=1 stack=0 before 1053: (4f) r7 |= r4
regs=1 stack=0 before 1052: (67) r7 <<= 16
regs=1 stack=0 before 1051: (bf) r7 = r1
regs=1 stack=0 before 1050: (77) r4 >>= 16
regs=1 stack=0 before 1049: (bc) w4 = w1
regs=1 stack=0 before 1048: (05) goto pc+0
regs=1 stack=0 before 1047: (05) goto pc+0
parent didn't have regs=1 stack=0 marks: R0_r=P0 R1_r=P-145407547585598 R2_r=P-10062687749 R3_r=P-570076017032 R4_w=scalar(umax=2047,var_off=(0x0; 0x7ff)) R5=scalar(id=725) R6=ctx(off=0,imm=0) R7=P68 R8_w=scalar() R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176_w=mmmmmmmm fp-184=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
last_idx 1046 first_idx 1038
regs=1 stack=0 before 1046: (05) goto pc+0
regs=1 stack=0 before 1045: (4f) r8 |= r4
regs=1 stack=0 before 1044: (67) r8 <<= 11
regs=1 stack=0 before 1043: (bf) r8 = r5
regs=1 stack=0 before 1042: (77) r4 >>= 21
regs=1 stack=0 before 1041: (bc) w4 = w5
regs=1 stack=0 before 1040: (05) goto pc+0
regs=1 stack=0 before 1039: (7b) *(u64 *)(r10 -176) = r5
regs=1 stack=0 before 1038: (05) goto pc+0
parent didn't have regs=1 stack=0 marks: R0_r=P0 R1_rw=P-145407547585598 R2_rw=P-10062687749 R3_r=P-570076017032 R4_w=P-145939460360124 R5_r=scalar() R6=ctx(off=0,imm=0) R7_w=P68 R8=P-559038209 R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0 fp-184=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
last_idx 1037 first_idx 1027
regs=1 stack=0 before 1037: (05) goto pc+0
regs=1 stack=0 before 1036: (af) r1 ^= r4
regs=1 stack=0 before 1035: (1f) r1 -= r3
regs=1 stack=0 before 1034: (0f) r2 += r1
regs=1 stack=0 before 1033: (4f) r4 |= r7
regs=1 stack=0 before 1032: (67) r4 <<= 8
regs=1 stack=0 before 1031: (bf) r4 = r3
regs=1 stack=0 before 1030: (77) r7 >>= 24
regs=1 stack=0 before 1029: (bc) w7 = w3
regs=1 stack=0 before 1028: (05) goto pc+0
regs=1 stack=0 before 1027: (05) goto pc+0
parent didn't have regs=1 stack=0 marks: R0_rw=P0 R1_rw=P-1118076418 R2_r=P-8944611331 R3_r=P-570076017032 R4_w=P0 R5_rw=scalar() R6=ctx(off=0,imm=0) R7_w=scalar() R8=P-559038209 R9_w=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168_w= fp-176=0 fp-184=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
last_idx 1026 first_idx 1009
regs=1 stack=0 before 1026: (05) goto pc+0
regs=1 stack=0 before 1025: (4f) r0 |= r4
regs=11 stack=0 before 1024: (57) r4 &= 255
regs=11 stack=0 before 1023: (79) r4 = *(u64 *)(r10 -184)
regs=1 stack=400000 before 1022: (4f) r0 |= r9
regs=201 stack=400000 before 1021: (67) r9 <<= 8
regs=201 stack=400000 before 1020: (57) r9 &= 255
regs=201 stack=400000 before 1019: (0f) r1 += r8
regs=201 stack=400000 before 1018: (1f) r5 -= r7
regs=201 stack=400000 before 1017: (a7) r5 ^= -525483785
regs=201 stack=400000 before 1016: (4f) r7 |= r4
regs=201 stack=400000 before 1015: (67) r7 <<= 14
regs=201 stack=400000 before 1014: (bf) r7 = r5
regs=201 stack=400000 before 1013: (77) r4 >>= 18
regs=201 stack=400000 before 1012: (bc) w4 = w5
regs=201 stack=400000 before 1011: (05) goto pc+0
regs=201 stack=400000 before 1010: (05) goto pc+0
regs=201 stack=400000 before 1009: (7b) *(u64 *)(r10 -168) = r5
parent didn't have regs=201 stack=0 marks: R0_rw=P0 R1_rw=P-559038209 R2_r=P-8944611331 R3_rw=P-570076017032 R4_w=0 R5_rw=scalar(smin=-525483785,smax=3769483510) R6=ctx(off=0,imm=0) R7_w=P-572455125126 R8_r=P-559038209 R9_r=P0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0 fp-184_r=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
last_idx 1008 first_idx 991
regs=201 stack=0 before 1008: (05) goto pc+0
regs=201 stack=0 before 1007: (07) r5 += -525483785
regs=201 stack=0 before 1006: (61) r5 = *(u32 *)(r10 -48)
regs=201 stack=0 before 1005: (4f) r0 |= r4
regs=211 stack=0 before 1004: (67) r0 <<= 16
regs=211 stack=0 before 1003: (57) r0 &= 255
regs=211 stack=0 before 1002: (67) r4 <<= 24
regs=211 stack=0 before 1001: (af) r3 ^= r7
regs=211 stack=0 before 1000: (1f) r3 -= r2
regs=211 stack=0 before 999: (bf) r3 = r1
regs=211 stack=0 before 998: (07) r1 += -559038209
regs=211 stack=0 before 997: (4f) r7 |= r5
regs=211 stack=0 before 996: (67) r7 <<= 6
regs=211 stack=0 before 995: (bf) r7 = r2
regs=211 stack=0 before 994: (77) r5 >>= 26
regs=211 stack=0 before 993: (bc) w5 = w2
regs=211 stack=0 before 992: (05) goto pc+0
regs=211 stack=0 before 991: (05) goto pc+0
parent didn't have regs=211 stack=0 marks: R0_r=P0 R1_r=P0 R2_rw=P-8944611331 R3=0 R4_r=P0 R5_w=13 R6=ctx(off=0,imm=0) R7=scalar(id=692) R8_r=P-559038209 R9_r=P0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48_r= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0 fp-184_r=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
last_idx 990 first_idx 983
regs=211 stack=0 before 990: (05) goto pc+0
regs=211 stack=0 before 989: (af) r2 ^= r3
regs=211 stack=0 before 988: (4f) r2 |= r5
regs=211 stack=0 before 987: (67) r2 <<= 4
regs=211 stack=0 before 986: (bf) r2 = r8
regs=211 stack=0 before 985: (77) r5 >>= 28
regs=211 stack=0 before 984: (bc) w5 = w8
regs=211 stack=0 before 983: (05) goto pc+0
parent didn't have regs=211 stack=0 marks: R0_rw=P0 R1_rw=P0 R2=scalar(umin=1000000001) R3_rw=P0 R4_rw=P0 R6=ctx(off=0,imm=0) R7=scalar(id=692) R8_rw=P-559038209 R9_rw=P0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48_r= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72_w=mmmmmmmm fp-80_w=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0 fp-184_rw=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
last_idx 982 first_idx 970
regs=211 stack=0 before 982: (05) goto pc+0
regs=211 stack=0 before 981: (05) goto pc+0
regs=211 stack=0 before 980: (07) r8 += -559038209
regs=211 stack=0 before 979: (1f) r3 -= r8
regs=211 stack=0 before 978: (b7) r4 = 0
regs=201 stack=0 before 977: (b7) r3 = 0
regs=201 stack=0 before 976: (b7) r8 = 0
regs=201 stack=0 before 975: (b7) r0 = 0
regs=200 stack=0 before 974: (b7) r9 = 0
; __jhash_final(a, b, c);
1089: (af) r1 ^= r5                   ; R1_w=P6744523029021125475 R5=P8044009612454092821
1090: (1f) r1 -= r7                   ; R1_w=P-2769304837798919334 R7=P-8932916206889506807
1091: (05) goto pc+0
1092: (05) goto pc+0
1093: (05) goto pc+0
1094: (bc) w3 = w1                    ; R1=P-2769304837798919334 R3_w=P607748954
; return (word << shift) | (word >> ((-shift) & 31));
1095: (77) r3 >>= 21                  ; R3_w=P289
1096: (bf) r4 = r1                    ; R1=P-2769304837798919334 R4_w=P-2769304837798919334
1097: (67) r4 <<= 11                  ; R4_w=P-8385877183354449920
1098: (4f) r4 |= r3                   ; R3_w=P289 R4_w=P-8385877183354449631
; __jhash_final(a, b, c);
1099: (bf) r3 = r1                    ; R1=P-2769304837798919334 R3_w=P-2769304837798919334
1100: (af) r3 ^= r2                   ; R2=P8917032933144140083 R3_w=P-6760226462814594455
1101: (1f) r3 -= r4                   ; R3_w=P1625650720539855176 R4_w=P-8385877183354449631
1102: (05) goto pc+0
1103: (05) goto pc+0
1104: (05) goto pc+0
1105: (bc) w2 = w3                    ; R2_w=P2661468488 R3=P1625650720539855176
; return (word << shift) | (word >> ((-shift) & 31));
1106: (77) r2 >>= 7                   ; R2_w=P20792722
1107: (bf) r4 = r3                    ; R3=P1625650720539855176 R4_w=P1625650720539855176
1108: (67) r4 <<= 25                  ; R4_w=P8015639407572811776
1109: (4f) r4 |= r2                   ; R2_w=P20792722 R4_w=P8015639407593604498
; __jhash_final(a, b, c);
1110: (bf) r7 = r3                    ; R3=P1625650720539855176 R7_w=P1625650720539855176
1111: (af) r7 ^= r5                   ; R5=P8044009612454092821 R7_w=P8731750324354001245
1112: (1f) r7 -= r4                   ; R4_w=P8015639407593604498 R7_w=P716110916760396747
1113: (05) goto pc+0
1114: (05) goto pc+0
1115: (05) goto pc+0
1116: (bc) w2 = w7                    ; R2_w=P2907202507 R7=P716110916760396747
; return (word << shift) | (word >> ((-shift) & 31));
1117: (77) r2 >>= 16                  ; R2_w=P44360
1118: (bf) r4 = r7                    ; R4_w=P716110916760396747 R7=P716110916760396747
1119: (67) r4 <<= 16                  ; R4_w=P2528117292261900288
1120: (4f) r4 |= r2                   ; R2_w=P44360 R4_w=P2528117292261944648
; __jhash_final(a, b, c);
1121: (bf) r2 = r7                    ; R2_w=P716110916760396747 R7=P716110916760396747
1122: (af) r2 ^= r1                   ; R1=P-2769304837798919334 R2_w=P-3431372408396586863
1123: (1f) r2 -= r4                   ; R2_w=P-5959489700658531511 R4_w=P2528117292261944648
1124: (05) goto pc+0
1125: (bc) w1 = w2                    ; R1_w=P631649097 R2=P-5959489700658531511
; return (word << shift) | (word >> ((-shift) & 31));
1126: (77) r1 >>= 28                  ; R1_w=P2
1127: (bf) r4 = r2                    ; R2=P-5959489700658531511 R4_w=P-5959489700658531511
1128: (67) r4 <<= 4                   ; R4_w=P-3118114841988746096
1129: (4f) r4 |= r1                   ; R1_w=P2 R4_w=P-3118114841988746094
; __jhash_final(a, b, c);
1130: (bf) r1 = r2                    ; R1_w=P-5959489700658531511 R2=P-5959489700658531511
1131: (af) r1 ^= r3                   ; R1_w=P-4916564071227786751 R3=P1625650720539855176
1132: (1f) r1 -= r4                   ; R1_w=P-1798449229239040657 R4_w=P-3118114841988746094
1133: (05) goto pc+0
1134: (05) goto pc+0
1135: (05) goto pc+0
1136: (bc) w3 = w1                    ; R1=P-1798449229239040657 R3_w=P1621214575
; return (word << shift) | (word >> ((-shift) & 31));
1137: (77) r3 >>= 18                  ; R3_w=P6184
1138: (bf) r4 = r1                    ; R1=P-1798449229239040657 R4_w=P-1798449229239040657
1139: (67) r4 <<= 14                  ; R4_w=P-6341886138288193536
1140: (4f) r4 |= r3                   ; R3_w=P6184 R4_w=P-6341886138288187352
; __jhash_final(a, b, c);
1141: (af) r1 ^= r7                   ; R1_w=P-1226460270496733532 R7=P716110916760396747
1142: (1f) r1 -= r4                   ; R1_w=P5115425867791453820 R4_w=P-6341886138288187352
1143: (05) goto pc+0
1144: (05) goto pc+0
1145: (05) goto pc+0
1146: (bc) w4 = w1                    ; R1=P5115425867791453820 R4_w=P1552797308
; return (word << shift) | (word >> ((-shift) & 31));
1147: (77) r4 >>= 8                   ; R4_w=P6065614
1148: (bf) r5 = r1                    ; R1=P5115425867791453820 R5_w=P5115425867791453820
1149: (67) r5 <<= 24                  ; R5_w=P-5090037560852348928
1150: (4f) r5 |= r4                   ; R4_w=P6065614 R5_w=P-5090037560846283314
; __jhash_final(a, b, c);
1151: (af) r1 ^= r2                   ; R1_w=P-1461973296061088459 R2=P-5959489700658531511
; a += initval;
1152: (1f) r1 -= r5                   ; R1_w=P3628064264785194855 R5_w=P-5090037560846283314
1153: (07) r1 += -525483785           ; R1_w=P3628064264259711070
1154: (79) r7 = *(u64 *)(r10 -176)    ; R7_w=scalar() R10=fp0
; __jhash_final(a, b, c);
1155: (af) r1 ^= r7
last_idx 1155 first_idx 1144
regs=80 stack=0 before 1154: (79) r7 = *(u64 *)(r10 -176)
regs=0 stack=200000 before 1153: (07) r1 += -525483785
regs=0 stack=200000 before 1152: (1f) r1 -= r5
regs=0 stack=200000 before 1151: (af) r1 ^= r2
regs=0 stack=200000 before 1150: (4f) r5 |= r4
regs=0 stack=200000 before 1149: (67) r5 <<= 24
regs=0 stack=200000 before 1148: (bf) r5 = r1
regs=0 stack=200000 before 1147: (77) r4 >>= 8
regs=0 stack=200000 before 1146: (bc) w4 = w1
regs=0 stack=200000 before 1145: (05) goto pc+0
regs=0 stack=200000 before 1144: (05) goto pc+0
parent already had regs=0 stack=0 marks: R0=P0 R1_rw=P5115425867791453820 R2_r=P-5959489700658531511 R3_w=P6184 R4_w=P-6341886138288187352 R5=P8044009612454092821 R6=ctx(off=0,imm=0) R7=P716110916760396747 R8=scalar() R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176_r=mmmmmmmm fp-184=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
1156: (1f) r1 -= r8                   ; R1_w=scalar() R8=scalar()
1157: (05) goto pc+0
1158: (bc) w2 = w1                    ; R1=scalar() R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1159: (77) r2 >>= 7                   ; R2_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff))
1160: (bf) r4 = r1                    ; R1=scalar(id=736) R4_w=scalar(id=736)
1161: (67) r4 <<= 25                  ; R4_w=scalar(smax=9223372036821221376,umax=18446744073675997184,var_off=(0x0; 0xfffffffffe000000),s32_max=2113929216,u32_max=-33554432)
1162: (4f) r4 |= r2                   ; R2_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff)) R4_w=scalar()
; __jhash_final(a, b, c);
1163: (bf) r0 = r1                    ; R0_w=scalar(id=736) R1=scalar(id=736)
1164: (79) r2 = *(u64 *)(r10 -168)    ; R2_w=scalar(smin=-525483785,smax=3769483510) R10=fp0
1165: (af) r0 ^= r2                   ; R0_w=scalar() R2_w=scalar(smin=-525483785,smax=3769483510)
1166: (1f) r0 -= r4                   ; R0_w=scalar() R4_w=scalar()
1167: (05) goto pc+0
1168: (05) goto pc+0
1169: (05) goto pc+0
1170: (bc) w2 = w0                    ; R0=scalar() R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1171: (77) r2 >>= 16                  ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff))
1172: (bf) r5 = r0                    ; R0=scalar(id=737) R5_w=scalar(id=737)
1173: (67) r5 <<= 16                  ; R5_w=scalar(smax=9223372036854710272,umax=18446744073709486080,var_off=(0x0; 0xffffffffffff0000),s32_max=2147418112,u32_max=-65536)
1174: (4f) r5 |= r2                   ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R5_w=scalar()
; __jhash_final(a, b, c);
1175: (bf) r4 = r0                    ; R0=scalar(id=737) R4_w=scalar(id=737)
1176: (af) r4 ^= r7                   ; R4_w=scalar() R7=Pscalar()
1177: (1f) r4 -= r5                   ; R4_w=scalar() R5_w=scalar()
1178: (05) goto pc+0
1179: (bc) w2 = w4                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R4=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1180: (77) r2 >>= 28                  ; R2_w=scalar(umax=15,var_off=(0x0; 0xf))
1181: (bf) r5 = r4                    ; R4=scalar(id=738) R5_w=scalar(id=738)
1182: (67) r5 <<= 4                   ; R5_w=scalar(smax=9223372036854775792,umax=18446744073709551600,var_off=(0x0; 0xfffffffffffffff0),s32_max=2147483632,u32_max=-16)
1183: (4f) r5 |= r2                   ; R2_w=scalar(umax=15,var_off=(0x0; 0xf)) R5_w=scalar()
; __jhash_final(a, b, c);
1184: (bf) r2 = r4                    ; R2_w=scalar(id=738) R4=scalar(id=738)
1185: (af) r2 ^= r1                   ; R1=scalar(id=736) R2_w=scalar()
1186: (1f) r2 -= r5                   ; R2_w=scalar() R5_w=scalar()
1187: (05) goto pc+0
1188: (05) goto pc+0
1189: (05) goto pc+0
1190: (bc) w1 = w2                    ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R2=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1191: (77) r1 >>= 18                  ; R1_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1192: (bf) r5 = r2                    ; R2=scalar(id=739) R5_w=scalar(id=739)
1193: (67) r5 <<= 14                  ; R5_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1194: (4f) r5 |= r1                   ; R1_w=scalar(umax=16383,var_off=(0x0; 0x3fff)) R5_w=scalar()
; __jhash_final(a, b, c);
1195: (af) r2 ^= r0                   ; R0=scalar(id=737) R2_w=scalar()
1196: (1f) r2 -= r5                   ; R2_w=scalar() R5_w=scalar()
1197: (05) goto pc+0
1198: (bc) w1 = w2                    ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R2=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1199: (77) r1 >>= 8                   ; R1_w=scalar(umax=16777215,var_off=(0x0; 0xffffff))
1200: (bf) r3 = r2                    ; R2=scalar(id=740) R3_w=scalar(id=740)
1201: (67) r3 <<= 24                  ; R3_w=scalar(smax=9223372036837998592,umax=18446744073692774400,var_off=(0x0; 0xffffffffff000000),s32_max=2130706432,u32_max=-16777216)
1202: (4f) r3 |= r1                   ; R1_w=scalar(umax=16777215,var_off=(0x0; 0xffffff)) R3_w=scalar()
; __jhash_final(a, b, c);
1203: (af) r2 ^= r4                   ; R2_w=scalar() R4=scalar(id=738)
1204: (1f) r2 -= r3                   ; R2_w=scalar() R3_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1205: (79) r1 = *(u64 *)(r10 -144)    ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
1206: (61) r1 = *(u32 *)(r1 +4)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; key = RING_SIZE * (vip_info->vip_num) + hash;
1207: (27) r1 *= 65537                ; R1_w=scalar(umax=281479271612415,var_off=(0x0; 0x1ffffffffffff))
; __jhash_final(a, b, c);
1208: (bc) w2 = w2                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
1209: (05) goto pc+0
; hash = get_packet_hash(pckt, hash_16bytes) % RING_SIZE;
1210: (97) r2 %= 65537                ; R2_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1211: (0f) r2 += r1                   ; R1_w=scalar(umax=281479271612415,var_off=(0x0; 0x1ffffffffffff)) R2_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1212: (63) *(u32 *)(r10 -20) = r2     ; R2_w=scalar() R10=fp0 fp-24=mmmm????
1213: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1214: (07) r2 += -20                  ; R2_w=fp-20
; real_pos = bpf_map_lookup_elem(&ch_rings, &key);
1215: (18) r1 = 0xffffaebaa0631000    ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
1217: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=741,off=0,ks=4,vs=4,imm=0)
; if (!real_pos) {
1218: (15) if r0 == 0x0 goto pc+638   ; R0=map_value(off=0,ks=4,vs=4,imm=0)
; key = *real_pos;
1219: (61) r1 = *(u32 *)(r0 +0)       ; R0=map_value(off=0,ks=4,vs=4,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; key = *real_pos;
1220: (63) *(u32 *)(r10 -20) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-24=mmmm????
1221: (79) r8 = *(u64 *)(r10 -192)    ; R8_w=P0 R10=fp0
; if (key == 0) {
1222: (55) if r1 != 0x0 goto pc+12    ; R1_w=0
1223: (05) goto pc+0
; __u32 ch_drop_stats_key = MAX_VIPS + CH_DROP_STATS;
1224: (62) *(u32 *)(r10 -28) = 521    ; R10=fp0 fp-32=mmmm????
1225: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1226: (07) r2 += -28                  ; R2_w=fp-28
; bpf_map_lookup_elem(&stats, &ch_drop_stats_key);
1227: (18) r1 = 0xffffa03499be8000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
1229: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=742,off=0,ks=4,vs=16,imm=0)
; if (!ch_drop_stats) {
1230: (15) if r0 == 0x0 goto pc+3     ; R0=map_value(off=0,ks=4,vs=16,imm=0)
; ch_drop_stats->v2 += 1;
1231: (79) r1 = *(u64 *)(r0 +8)       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1232: (07) r1 += 1                    ; R1_w=scalar()
1233: (7b) *(u64 *)(r0 +8) = r1       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
; pckt->real_index = key;
1234: (61) r1 = *(u32 *)(r10 -20)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; pckt->real_index = key;
1235: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1236: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1237: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1238: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1240: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=743,off=0,ks=4,vs=20,imm=0)
1241: (bf) r7 = r0                    ; R0=map_value_or_null(id=743,off=0,ks=4,vs=20,imm=0) R7_w=map_value_or_null(id=743,off=0,ks=4,vs=20,imm=0)
; if (!(*real)) {
1242: (55) if r7 != 0x0 goto pc+9     ; R7_w=0
1243: (05) goto pc+0
; __u32 ch_drop_stats_key = MAX_VIPS + CH_DROP_STATS;
1244: (62) *(u32 *)(r10 -28) = 521    ; R10=fp0 fp-32=mmmm????
1245: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1246: (07) r2 += -28                  ; R2_w=fp-28
; bpf_map_lookup_elem(&stats, &ch_drop_stats_key);
1247: (18) r1 = 0xffffa03499be8000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
1249: (85) call bpf_map_lookup_elem#1
1250: safe

from 1242 to 1252: R0=map_value(off=0,ks=4,vs=20,imm=0) R6=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=20,imm=0) R8=P0 R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
; if (lru_map && !(vip_info->flags & F_LRU_BYPASS) && !under_flood) {
1252: (79) r1 = *(u64 *)(r10 -152)    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0
1253: (15) if r1 == 0x0 goto pc+19    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0)
; if (lru_map && !(vip_info->flags & F_LRU_BYPASS) && !under_flood) {
1254: (79) r1 = *(u64 *)(r10 -144)    ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
1255: (61) r1 = *(u32 *)(r1 +0)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (lru_map && !(vip_info->flags & F_LRU_BYPASS) && !under_flood) {
1256: (57) r1 &= 2                    ; R1_w=scalar(umax=2,var_off=(0x0; 0x2))
1257: (77) r1 >>= 1                   ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
; if (lru_map && !(vip_info->flags & F_LRU_BYPASS) && !under_flood) {
1258: (4f) r8 |= r1
last_idx 1258 first_idx 1252
regs=2 stack=0 before 1257: (77) r1 >>= 1
regs=2 stack=0 before 1256: (57) r1 &= 2
regs=2 stack=0 before 1255: (61) r1 = *(u32 *)(r1 +0)
1259: R1_w=Pscalar(umax=1,var_off=(0x0; 0x1)) R8_w=scalar()
1259: (55) if r8 != 0x0 goto pc+13    ; R8_w=0
; if (pckt->flow.proto == IPPROTO_UDP) {
1260: (71) r1 = *(u8 *)(r10 -44)      ; R1=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (pckt->flow.proto == IPPROTO_UDP) {
1261: (55) if r1 != 0x11 goto pc+2    ; R1=17
; new_dst_lru.atime = cur_time;
1262: (79) r1 = *(u64 *)(r10 -208)    ; R1_w=scalar() R10=fp0
1263: (7b) *(u64 *)(r10 -8) = r1      ; R1_w=scalar() R10=fp0 fp-8_w=mmmmmmmm
; new_dst_lru.pos = key;
1264: (61) r1 = *(u32 *)(r10 -20)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; new_dst_lru.pos = key;
1265: (63) *(u32 *)(r10 -16) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-16=
1266: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; new_dst_lru.pos = key;
1267: (07) r2 += -80                  ; R2_w=fp-80
1268: (bf) r3 = r10                   ; R3_w=fp0 R10=fp0
1269: (07) r3 += -16                  ; R3_w=fp-16
; bpf_map_update_elem(lru_map, &pckt->flow, &new_dst_lru, BPF_ANY);
1270: (79) r1 = *(u64 *)(r10 -152)    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0
1271: (b7) r4 = 0                     ; R4_w=0
1272: (85) call bpf_map_update_elem#2
1273: safe

from 1261 to 1264: R0=map_value(off=0,ks=4,vs=20,imm=0) R1=scalar(umax=255,var_off=(0x0; 0xff)) R6=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=20,imm=0) R8=0 R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
; new_dst_lru.pos = key;
1264: (61) r1 = *(u32 *)(r10 -20)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; new_dst_lru.pos = key;
1265: (63) *(u32 *)(r10 -16) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-16=
1266: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; new_dst_lru.pos = key;
1267: (07) r2 += -80                  ; R2_w=fp-80
1268: (bf) r3 = r10                   ; R3_w=fp0 R10=fp0
1269: (07) r3 += -16                  ; R3_w=fp-16
; bpf_map_update_elem(lru_map, &pckt->flow, &new_dst_lru, BPF_ANY);
1270: (79) r1 = *(u64 *)(r10 -152)    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0
1271: (b7) r4 = 0                     ; R4_w=0
1272: (85) call bpf_map_update_elem#2
1273: safe

from 1259 to 1273: safe

from 1253 to 1273: safe

from 1230 to 1234: R0=0 R6=ctx(off=0,imm=0) R7=Pscalar() R8=P0 R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
; pckt->real_index = key;
1234: (61) r1 = *(u32 *)(r10 -20)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; pckt->real_index = key;
1235: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1236: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1237: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1238: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1240: (85) call bpf_map_lookup_elem#1
frame 8: propagating r0
1241: safe

from 1222 to 1235: R0=map_value(off=0,ks=4,vs=4,imm=0) R1=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6=ctx(off=0,imm=0) R7=Pscalar() R8=P0 R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
; pckt->real_index = key;
1235: (63) *(u32 *)(r10 -40) = r1     ; R1=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1236: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1237: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1238: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1240: (85) call bpf_map_lookup_elem#1
frame 8: propagating r0
1241: safe

from 1218 to 1857: safe

from 942 to 947: R0=scalar(id=692) R1=1000000001 R2=scalar(umax=1000000000,var_off=(0x0; 0x3fffffff)) R6=ctx(off=0,imm=0) R7=scalar(id=692) R8=1 R9=map_value(off=0,ks=4,vs=16,imm=0) R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0 fp-200=
; conn_rate_stats->v1 += 1;
947: (79) r1 = *(u64 *)(r9 +0)        ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=16,imm=0)
948: (07) r1 += 1                     ; R1_w=scalar()
949: (7b) *(u64 *)(r9 +0) = r1        ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=16,imm=0)
; if (conn_rate_stats->v1 > MAX_CONN_RATE) {
950: (25) if r1 > 0x1e848 goto pc+1   ; R1_w=scalar(umax=125000,var_off=(0x0; 0x1ffff))
951: (b7) r8 = 0                      ; R8_w=0
952: (7b) *(u64 *)(r10 -192) = r8
last_idx 952 first_idx 951
regs=100 stack=0 before 951: (b7) r8 = 0
953: R8_w=P0 R10=fp0 fp-192_w=00000000
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
953: (79) r1 = *(u64 *)(r10 -144)     ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
954: (61) r1 = *(u32 *)(r1 +0)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
955: (57) r1 &= 8                     ; R1_w=scalar(umax=8,var_off=(0x0; 0x8))
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
956: (7b) *(u64 *)(r10 -208) = r7
957: safe

from 950 to 952: R0=scalar(id=692) R1_w=scalar(umin=125001) R2=scalar(umax=1000000000,var_off=(0x0; 0x3fffffff)) R6=ctx(off=0,imm=0) R7=scalar(id=692) R8=1 R9=map_value(off=0,ks=4,vs=16,imm=0) R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0 fp-200=
; if (conn_rate_stats->v1 > MAX_CONN_RATE) {
952: (7b) *(u64 *)(r10 -192) = r8     ; R8=1 R10=fp0 fp-192_w=1
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
953: (79) r1 = *(u64 *)(r10 -144)     ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
954: (61) r1 = *(u32 *)(r1 +0)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
955: (57) r1 &= 8                     ; R1_w=scalar(umax=8,var_off=(0x0; 0x8))
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
956: (7b) *(u64 *)(r10 -208) = r7     ; R7=scalar(id=692) R10=fp0 fp-208_w=mmmmmmmm
957: (55) if r1 != 0x0 goto pc+9      ; R1_w=0
; a += k[0];
958: (71) r1 = *(u8 *)(r10 -68)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; a += (u32)k[1] << 8;
959: (7b) *(u64 *)(r10 -184) = r1     ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0 fp-184_w=
960: (71) r9 = *(u8 *)(r10 -67)       ; R9_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; a += (u32)k[2] << 16;
961: (71) r0 = *(u8 *)(r10 -66)       ; R0_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; b += *(u32*)(k + 4);
962: (61) r1 = *(u32 *)(r10 -76)      ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; c += *(u32*)(k + 8);
963: (61) r8 = *(u32 *)(r10 -72)      ; R8_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; a += *(u32*)(k);
964: (61) r3 = *(u32 *)(r10 -80)      ; R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; a += (u32)k[3] << 24;
965: (71) r4 = *(u8 *)(r10 -65)       ; R4_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
966: (05) goto pc+12
; __jhash_mix(a, b, c);
979: (1f) r3 -= r8                    ; R3_w=scalar(smin=-4294967295,smax=4294967295) R8=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; c += *(u32*)(k + 8);
980: (07) r8 += -559038209            ; R8_w=scalar(smin=-559038209,smax=3735929086)
981: (05) goto pc+0
982: (05) goto pc+0
983: (05) goto pc+0
984: (bc) w5 = w8                     ; R5_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R8_w=scalar(smin=-559038209,smax=3735929086)
; return (word << shift) | (word >> ((-shift) & 31));
985: (77) r5 >>= 28                   ; R5_w=scalar(umax=15,var_off=(0x0; 0xf))
986: (bf) r2 = r8                     ; R2_w=scalar(id=747,smin=-559038209,smax=3735929086) R8_w=scalar(id=747,smin=-559038209,smax=3735929086)
987: (67) r2 <<= 4                    ; R2_w=scalar(smax=9223372036854775792,umax=18446744073709551600,var_off=(0x0; 0xfffffffffffffff0),s32_max=2147483632,u32_max=-16)
988: (4f) r2 |= r5                    ; R2_w=scalar() R5_w=scalar(umax=15,var_off=(0x0; 0xf))
; __jhash_mix(a, b, c);
989: (af) r2 ^= r3                    ; R2_w=scalar() R3_w=scalar(smin=-4294967295,smax=4294967295)
990: (05) goto pc+0
991: (05) goto pc+0
992: (05) goto pc+0
993: (bc) w5 = w2                     ; R2=scalar() R5_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
994: (77) r5 >>= 26                   ; R5_w=scalar(umax=63,var_off=(0x0; 0x3f))
995: (bf) r7 = r2                     ; R2=scalar(id=748) R7_w=scalar(id=748)
996: (67) r7 <<= 6                    ; R7_w=scalar(smax=9223372036854775744,umax=18446744073709551552,var_off=(0x0; 0xffffffffffffffc0),s32_max=2147483584,u32_max=-64)
997: (4f) r7 |= r5                    ; R5_w=scalar(umax=63,var_off=(0x0; 0x3f)) R7_w=scalar()
; b += *(u32*)(k + 4);
998: (07) r1 += -559038209            ; R1_w=scalar(smin=-559038209,smax=3735929086)
; __jhash_mix(a, b, c);
999: (bf) r3 = r1                     ; R1_w=scalar(id=749,smin=-559038209,smax=3735929086) R3_w=scalar(id=749,smin=-559038209,smax=3735929086)
1000: (1f) r3 -= r2                   ; R2=scalar(id=748) R3_w=scalar()
1001: (af) r3 ^= r7                   ; R3_w=scalar() R7_w=scalar()
; a += (u32)k[3] << 24;
1002: (67) r4 <<= 24                  ; R4_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; a += (u32)k[2] << 16;
1003: (57) r0 &= 255                  ; R0_w=scalar(umax=255,var_off=(0x0; 0xff))
; a += (u32)k[2] << 16;
1004: (67) r0 <<= 16                  ; R0_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; a += (u32)k[3] << 24;
1005: (4f) r0 |= r4                   ; R0_w=scalar() R4_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; pckt->flow.ports,
1006: (61) r5 = *(u32 *)(r10 -48)     ; R5_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; b += initval;
1007: (07) r5 += -525483785           ; R5_w=scalar(smin=-525483785,smax=3769483510)
1008: (05) goto pc+0
1009: (7b) *(u64 *)(r10 -168) = r5    ; R5=scalar(smin=-525483785,smax=3769483510) R10=fp0 fp-168_w=
1010: (05) goto pc+0
1011: (05) goto pc+0
1012: (bc) w4 = w5                    ; R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R5=scalar(smin=-525483785,smax=3769483510)
; return (word << shift) | (word >> ((-shift) & 31));
1013: (77) r4 >>= 18                  ; R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1014: (bf) r7 = r5                    ; R5=scalar(id=750,smin=-525483785,smax=3769483510) R7_w=scalar(id=750,smin=-525483785,smax=3769483510)
1015: (67) r7 <<= 14                  ; R7_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1016: (4f) r7 |= r4                   ; R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff)) R7_w=scalar()
; __jhash_final(a, b, c);
1017: (a7) r5 ^= -525483785           ; R5_w=scalar()
1018: (1f) r5 -= r7                   ; R5_w=scalar() R7_w=scalar()
; __jhash_mix(a, b, c);
1019: (0f) r1 += r8                   ; R1_w=scalar(smin=-1118076418,smax=7471858172) R8=scalar(id=747,smin=-559038209,smax=3735929086)
; a += (u32)k[1] << 8;
1020: (57) r9 &= 255                  ; R9_w=scalar(umax=255,var_off=(0x0; 0xff))
; a += (u32)k[1] << 8;
1021: (67) r9 <<= 8                   ; R9_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; a += (u32)k[2] << 16;
1022: (4f) r0 |= r9                   ; R0_w=scalar() R9_w=scalar(umax=65280,var_off=(0x0; 0xff00))
1023: (79) r4 = *(u64 *)(r10 -184)    ; R4_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; a += k[0];
1024: (57) r4 &= 255                  ; R4_w=scalar(umax=255,var_off=(0x0; 0xff))
; a += (u32)k[1] << 8;
1025: (4f) r0 |= r4                   ; R0_w=scalar() R4_w=scalar(umax=255,var_off=(0x0; 0xff))
1026: (05) goto pc+0
1027: (05) goto pc+0
; __jhash_mix(a, b, c);
1028: (05) goto pc+0
1029: (bc) w7 = w3                    ; R3=scalar() R7_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1030: (77) r7 >>= 24                  ; R7_w=scalar(umax=255,var_off=(0x0; 0xff))
1031: (bf) r4 = r3                    ; R3=scalar(id=751) R4_w=scalar(id=751)
1032: (67) r4 <<= 8                   ; R4_w=scalar(smax=9223372036854775552,umax=18446744073709551360,var_off=(0x0; 0xffffffffffffff00),s32_max=2147483392,u32_max=-256)
1033: (4f) r4 |= r7                   ; R4_w=scalar() R7_w=scalar(umax=255,var_off=(0x0; 0xff))
; __jhash_mix(a, b, c);
1034: (0f) r2 += r1                   ; R1=scalar(smin=-1118076418,smax=7471858172) R2_w=scalar()
1035: (1f) r1 -= r3                   ; R1_w=scalar() R3=scalar(id=751)
1036: (af) r1 ^= r4                   ; R1_w=scalar() R4_w=scalar()
1037: (05) goto pc+0
1038: (05) goto pc+0
; __jhash_final(a, b, c);
1039: (7b) *(u64 *)(r10 -176) = r5    ; R5=scalar() R10=fp0 fp-176_w=mmmmmmmm
1040: (05) goto pc+0
1041: (bc) w4 = w5                    ; R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R5=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1042: (77) r4 >>= 21                  ; R4_w=scalar(umax=2047,var_off=(0x0; 0x7ff))
1043: (bf) r8 = r5                    ; R5=scalar(id=752) R8_w=scalar(id=752)
1044: (67) r8 <<= 11                  ; R8_w=scalar(smax=9223372036854773760,umax=18446744073709549568,var_off=(0x0; 0xfffffffffffff800),s32_max=2147481600,u32_max=-2048)
1045: (4f) r8 |= r4                   ; R4_w=scalar(umax=2047,var_off=(0x0; 0x7ff)) R8_w=scalar()
1046: (05) goto pc+0
1047: (05) goto pc+0
; __jhash_mix(a, b, c);
1048: (05) goto pc+0
1049: (bc) w4 = w1                    ; R1=scalar() R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1050: (77) r4 >>= 16                  ; R4_w=scalar(umax=65535,var_off=(0x0; 0xffff))
1051: (bf) r7 = r1                    ; R1=scalar(id=753) R7_w=scalar(id=753)
1052: (67) r7 <<= 16                  ; R7_w=scalar(smax=9223372036854710272,umax=18446744073709486080,var_off=(0x0; 0xffffffffffff0000),s32_max=2147418112,u32_max=-65536)
1053: (4f) r7 |= r4                   ; R4_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R7_w=scalar()
; __jhash_mix(a, b, c);
1054: (0f) r3 += r2                   ; R2=scalar() R3_w=scalar()
1055: (1f) r2 -= r1                   ; R1=scalar(id=753) R2_w=scalar()
1056: (af) r2 ^= r7                   ; R2_w=scalar() R7_w=scalar()
1057: (05) goto pc+0
1058: (05) goto pc+0
1059: (05) goto pc+0
1060: (bc) w7 = w2                    ; R2=scalar() R7_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1061: (77) r7 >>= 13                  ; R7_w=scalar(umax=524287,var_off=(0x0; 0x7ffff))
1062: (bf) r4 = r2                    ; R2=scalar(id=754) R4_w=scalar(id=754)
1063: (67) r4 <<= 19                  ; R4_w=scalar(smax=9223372036854251520,umax=18446744073709027328,var_off=(0x0; 0xfffffffffff80000),s32_max=2146959360,u32_max=-524288)
1064: (4f) r4 |= r7                   ; R4_w=scalar() R7_w=scalar(umax=524287,var_off=(0x0; 0x7ffff))
; __jhash_mix(a, b, c);
1065: (0f) r1 += r3                   ; R1_w=scalar() R3=scalar()
1066: (1f) r3 -= r2                   ; R2=scalar(id=754) R3_w=scalar()
1067: (af) r3 ^= r4                   ; R3_w=scalar() R4_w=scalar()
1068: (0f) r2 += r1                   ; R1_w=scalar() R2_w=scalar()
1069: (bf) r5 = r3                    ; R3_w=scalar(id=755) R5_w=scalar(id=755)
1070: (0f) r5 += r2                   ; R2_w=scalar() R5_w=scalar()
1071: (05) goto pc+0
1072: (05) goto pc+0
1073: (05) goto pc+0
1074: (bc) w4 = w5                    ; R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R5=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1075: (77) r4 >>= 18                  ; R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1076: (bf) r7 = r5                    ; R5=scalar(id=756) R7_w=scalar(id=756)
1077: (67) r7 <<= 14                  ; R7_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1078: (4f) r7 |= r4                   ; R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff)) R7_w=scalar()
; __jhash_mix(a, b, c);
1079: (05) goto pc+0
1080: (05) goto pc+0
1081: (05) goto pc+0
1082: (bc) w4 = w3                    ; R3=scalar(id=755) R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1083: (77) r4 >>= 28                  ; R4_w=scalar(umax=15,var_off=(0x0; 0xf))
; __jhash_mix(a, b, c);
1084: (1f) r1 -= r3                   ; R1_w=scalar() R3=scalar(id=755)
; return (word << shift) | (word >> ((-shift) & 31));
1085: (67) r3 <<= 4                   ; R3_w=scalar(smax=9223372036854775792,umax=18446744073709551600,var_off=(0x0; 0xfffffffffffffff0),s32_max=2147483632,u32_max=-16)
1086: (4f) r3 |= r4                   ; R3_w=scalar() R4_w=scalar(umax=15,var_off=(0x0; 0xf))
; __jhash_mix(a, b, c);
1087: (af) r1 ^= r3                   ; R1_w=scalar() R3_w=scalar()
; a += k[0];
1088: (0f) r2 += r0                   ; R0=scalar() R2_w=scalar()
; __jhash_final(a, b, c);
1089: (af) r1 ^= r5                   ; R1_w=scalar() R5=scalar(id=756)
1090: (1f) r1 -= r7                   ; R1_w=scalar() R7=scalar()
1091: (05) goto pc+0
1092: (05) goto pc+0
1093: (05) goto pc+0
1094: (bc) w3 = w1                    ; R1=scalar() R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1095: (77) r3 >>= 21                  ; R3_w=scalar(umax=2047,var_off=(0x0; 0x7ff))
1096: (bf) r4 = r1                    ; R1=scalar(id=757) R4_w=scalar(id=757)
1097: (67) r4 <<= 11                  ; R4_w=scalar(smax=9223372036854773760,umax=18446744073709549568,var_off=(0x0; 0xfffffffffffff800),s32_max=2147481600,u32_max=-2048)
1098: (4f) r4 |= r3                   ; R3_w=scalar(umax=2047,var_off=(0x0; 0x7ff)) R4_w=scalar()
; __jhash_final(a, b, c);
1099: (bf) r3 = r1                    ; R1=scalar(id=757) R3_w=scalar(id=757)
1100: (af) r3 ^= r2                   ; R2=scalar() R3_w=scalar()
1101: (1f) r3 -= r4                   ; R3_w=scalar() R4_w=scalar()
1102: (05) goto pc+0
1103: (05) goto pc+0
1104: (05) goto pc+0
1105: (bc) w2 = w3                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1106: (77) r2 >>= 7                   ; R2_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff))
1107: (bf) r4 = r3                    ; R3=scalar(id=758) R4_w=scalar(id=758)
1108: (67) r4 <<= 25                  ; R4_w=scalar(smax=9223372036821221376,umax=18446744073675997184,var_off=(0x0; 0xfffffffffe000000),s32_max=2113929216,u32_max=-33554432)
1109: (4f) r4 |= r2                   ; R2_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff)) R4_w=scalar()
; __jhash_final(a, b, c);
1110: (bf) r7 = r3                    ; R3=scalar(id=758) R7_w=scalar(id=758)
1111: (af) r7 ^= r5                   ; R5=scalar(id=756) R7_w=scalar()
1112: (1f) r7 -= r4                   ; R4_w=scalar() R7_w=scalar()
1113: (05) goto pc+0
1114: (05) goto pc+0
1115: (05) goto pc+0
1116: (bc) w2 = w7                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R7=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1117: (77) r2 >>= 16                  ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff))
1118: (bf) r4 = r7                    ; R4_w=scalar(id=759) R7=scalar(id=759)
1119: (67) r4 <<= 16                  ; R4_w=scalar(smax=9223372036854710272,umax=18446744073709486080,var_off=(0x0; 0xffffffffffff0000),s32_max=2147418112,u32_max=-65536)
1120: (4f) r4 |= r2                   ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R4_w=scalar()
; __jhash_final(a, b, c);
1121: (bf) r2 = r7                    ; R2_w=scalar(id=759) R7=scalar(id=759)
1122: (af) r2 ^= r1                   ; R1=scalar(id=757) R2_w=scalar()
1123: (1f) r2 -= r4                   ; R2_w=scalar() R4_w=scalar()
1124: (05) goto pc+0
1125: (bc) w1 = w2                    ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R2=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1126: (77) r1 >>= 28                  ; R1_w=scalar(umax=15,var_off=(0x0; 0xf))
1127: (bf) r4 = r2                    ; R2=scalar(id=760) R4_w=scalar(id=760)
1128: (67) r4 <<= 4                   ; R4_w=scalar(smax=9223372036854775792,umax=18446744073709551600,var_off=(0x0; 0xfffffffffffffff0),s32_max=2147483632,u32_max=-16)
1129: (4f) r4 |= r1                   ; R1_w=scalar(umax=15,var_off=(0x0; 0xf)) R4_w=scalar()
; __jhash_final(a, b, c);
1130: (bf) r1 = r2                    ; R1_w=scalar(id=760) R2=scalar(id=760)
1131: (af) r1 ^= r3                   ; R1_w=scalar() R3=scalar(id=758)
1132: (1f) r1 -= r4                   ; R1_w=scalar() R4_w=scalar()
1133: (05) goto pc+0
1134: (05) goto pc+0
1135: (05) goto pc+0
1136: (bc) w3 = w1                    ; R1=scalar() R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1137: (77) r3 >>= 18                  ; R3_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1138: (bf) r4 = r1                    ; R1=scalar(id=761) R4_w=scalar(id=761)
1139: (67) r4 <<= 14                  ; R4_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1140: (4f) r4 |= r3                   ; R3_w=scalar(umax=16383,var_off=(0x0; 0x3fff)) R4_w=scalar()
; __jhash_final(a, b, c);
1141: (af) r1 ^= r7                   ; R1_w=scalar() R7=scalar(id=759)
1142: (1f) r1 -= r4                   ; R1_w=scalar() R4_w=scalar()
1143: (05) goto pc+0
1144: (05) goto pc+0
1145: (05) goto pc+0
1146: (bc) w4 = w1                    ; R1=scalar() R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1147: (77) r4 >>= 8                   ; R4_w=scalar(umax=16777215,var_off=(0x0; 0xffffff))
1148: (bf) r5 = r1                    ; R1=scalar(id=762) R5_w=scalar(id=762)
1149: (67) r5 <<= 24                  ; R5_w=scalar(smax=9223372036837998592,umax=18446744073692774400,var_off=(0x0; 0xffffffffff000000),s32_max=2130706432,u32_max=-16777216)
1150: (4f) r5 |= r4                   ; R4_w=scalar(umax=16777215,var_off=(0x0; 0xffffff)) R5_w=scalar()
; __jhash_final(a, b, c);
1151: (af) r1 ^= r2                   ; R1_w=scalar() R2=scalar(id=760)
; a += initval;
1152: (1f) r1 -= r5                   ; R1_w=scalar() R5_w=scalar()
1153: (07) r1 += -525483785           ; R1_w=scalar()
1154: (79) r7 = *(u64 *)(r10 -176)    ; R7_w=scalar() R10=fp0
; __jhash_final(a, b, c);
1155: (af) r1 ^= r7                   ; R1_w=scalar() R7_w=scalar()
1156: (1f) r1 -= r8                   ; R1_w=scalar() R8=scalar()
1157: (05) goto pc+0
1158: (bc) w2 = w1                    ; R1=scalar() R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1159: (77) r2 >>= 7                   ; R2_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff))
1160: (bf) r4 = r1                    ; R1=scalar(id=763) R4_w=scalar(id=763)
1161: (67) r4 <<= 25                  ; R4_w=scalar(smax=9223372036821221376,umax=18446744073675997184,var_off=(0x0; 0xfffffffffe000000),s32_max=2113929216,u32_max=-33554432)
1162: (4f) r4 |= r2                   ; R2_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff)) R4_w=scalar()
; __jhash_final(a, b, c);
1163: (bf) r0 = r1                    ; R0_w=scalar(id=763) R1=scalar(id=763)
1164: (79) r2 = *(u64 *)(r10 -168)    ; R2_w=scalar(smin=-525483785,smax=3769483510) R10=fp0
1165: (af) r0 ^= r2                   ; R0_w=scalar() R2_w=scalar(smin=-525483785,smax=3769483510)
1166: (1f) r0 -= r4                   ; R0_w=scalar() R4_w=scalar()
1167: (05) goto pc+0
1168: (05) goto pc+0
1169: (05) goto pc+0
1170: (bc) w2 = w0                    ; R0=scalar() R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1171: (77) r2 >>= 16                  ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff))
1172: (bf) r5 = r0                    ; R0=scalar(id=764) R5_w=scalar(id=764)
1173: (67) r5 <<= 16                  ; R5_w=scalar(smax=9223372036854710272,umax=18446744073709486080,var_off=(0x0; 0xffffffffffff0000),s32_max=2147418112,u32_max=-65536)
1174: (4f) r5 |= r2                   ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R5_w=scalar()
; __jhash_final(a, b, c);
1175: (bf) r4 = r0                    ; R0=scalar(id=764) R4_w=scalar(id=764)
1176: (af) r4 ^= r7                   ; R4_w=scalar() R7=scalar()
1177: (1f) r4 -= r5                   ; R4_w=scalar() R5_w=scalar()
1178: (05) goto pc+0
1179: (bc) w2 = w4                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R4=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1180: (77) r2 >>= 28                  ; R2_w=scalar(umax=15,var_off=(0x0; 0xf))
1181: (bf) r5 = r4                    ; R4=scalar(id=765) R5_w=scalar(id=765)
1182: (67) r5 <<= 4                   ; R5_w=scalar(smax=9223372036854775792,umax=18446744073709551600,var_off=(0x0; 0xfffffffffffffff0),s32_max=2147483632,u32_max=-16)
1183: (4f) r5 |= r2                   ; R2_w=scalar(umax=15,var_off=(0x0; 0xf)) R5_w=scalar()
; __jhash_final(a, b, c);
1184: (bf) r2 = r4                    ; R2_w=scalar(id=765) R4=scalar(id=765)
1185: (af) r2 ^= r1                   ; R1=scalar(id=763) R2_w=scalar()
1186: (1f) r2 -= r5                   ; R2_w=scalar() R5_w=scalar()
1187: (05) goto pc+0
1188: (05) goto pc+0
1189: (05) goto pc+0
1190: (bc) w1 = w2                    ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R2=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1191: (77) r1 >>= 18                  ; R1_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1192: (bf) r5 = r2                    ; R2=scalar(id=766) R5_w=scalar(id=766)
1193: (67) r5 <<= 14                  ; R5_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1194: (4f) r5 |= r1                   ; R1_w=scalar(umax=16383,var_off=(0x0; 0x3fff)) R5_w=scalar()
; __jhash_final(a, b, c);
1195: (af) r2 ^= r0                   ; R0=scalar(id=764) R2_w=scalar()
1196: (1f) r2 -= r5                   ; R2_w=scalar() R5_w=scalar()
1197: (05) goto pc+0
1198: (bc) w1 = w2                    ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R2=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1199: (77) r1 >>= 8                   ; R1_w=scalar(umax=16777215,var_off=(0x0; 0xffffff))
1200: (bf) r3 = r2                    ; R2=scalar(id=767) R3_w=scalar(id=767)
1201: (67) r3 <<= 24                  ; R3_w=scalar(smax=9223372036837998592,umax=18446744073692774400,var_off=(0x0; 0xffffffffff000000),s32_max=2130706432,u32_max=-16777216)
1202: (4f) r3 |= r1                   ; R1_w=scalar(umax=16777215,var_off=(0x0; 0xffffff)) R3_w=scalar()
; __jhash_final(a, b, c);
1203: (af) r2 ^= r4                   ; R2_w=scalar() R4=scalar(id=765)
1204: (1f) r2 -= r3                   ; R2_w=scalar() R3_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1205: (79) r1 = *(u64 *)(r10 -144)    ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
1206: (61) r1 = *(u32 *)(r1 +4)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; key = RING_SIZE * (vip_info->vip_num) + hash;
1207: (27) r1 *= 65537                ; R1_w=scalar(umax=281479271612415,var_off=(0x0; 0x1ffffffffffff))
; __jhash_final(a, b, c);
1208: (bc) w2 = w2                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
1209: (05) goto pc+0
; hash = get_packet_hash(pckt, hash_16bytes) % RING_SIZE;
1210: (97) r2 %= 65537                ; R2_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1211: (0f) r2 += r1                   ; R1_w=scalar(umax=281479271612415,var_off=(0x0; 0x1ffffffffffff)) R2_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1212: (63) *(u32 *)(r10 -20) = r2     ; R2_w=scalar() R10=fp0 fp-24=mmmm????
1213: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1214: (07) r2 += -20                  ; R2_w=fp-20
; real_pos = bpf_map_lookup_elem(&ch_rings, &key);
1215: (18) r1 = 0xffffaebaa0631000    ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
1217: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=768,off=0,ks=4,vs=4,imm=0)
; if (!real_pos) {
1218: (15) if r0 == 0x0 goto pc+638   ; R0=map_value(off=0,ks=4,vs=4,imm=0)
; key = *real_pos;
1219: (61) r1 = *(u32 *)(r0 +0)       ; R0=map_value(off=0,ks=4,vs=4,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; key = *real_pos;
1220: (63) *(u32 *)(r10 -20) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-24=mmmm????
1221: (79) r8 = *(u64 *)(r10 -192)    ; R8_w=1 R10=fp0
; if (key == 0) {
1222: (55) if r1 != 0x0 goto pc+12    ; R1_w=0
1223: (05) goto pc+0
; __u32 ch_drop_stats_key = MAX_VIPS + CH_DROP_STATS;
1224: (62) *(u32 *)(r10 -28) = 521    ; R10=fp0 fp-32=mmmm????
1225: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1226: (07) r2 += -28                  ; R2_w=fp-28
; bpf_map_lookup_elem(&stats, &ch_drop_stats_key);
1227: (18) r1 = 0xffffa03499be8000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
1229: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=769,off=0,ks=4,vs=16,imm=0)
; if (!ch_drop_stats) {
1230: (15) if r0 == 0x0 goto pc+3     ; R0=map_value(off=0,ks=4,vs=16,imm=0)
; ch_drop_stats->v2 += 1;
1231: (79) r1 = *(u64 *)(r0 +8)       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1232: (07) r1 += 1                    ; R1_w=scalar()
1233: (7b) *(u64 *)(r0 +8) = r1       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
; pckt->real_index = key;
1234: (61) r1 = *(u32 *)(r10 -20)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; pckt->real_index = key;
1235: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1236: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1237: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1238: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1240: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=770,off=0,ks=4,vs=20,imm=0)
1241: (bf) r7 = r0                    ; R0=map_value_or_null(id=770,off=0,ks=4,vs=20,imm=0) R7_w=map_value_or_null(id=770,off=0,ks=4,vs=20,imm=0)
; if (!(*real)) {
1242: (55) if r7 != 0x0 goto pc+9     ; R7_w=0
1243: (05) goto pc+0
; __u32 ch_drop_stats_key = MAX_VIPS + CH_DROP_STATS;
1244: (62) *(u32 *)(r10 -28) = 521    ; R10=fp0 fp-32=mmmm????
1245: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1246: (07) r2 += -28                  ; R2_w=fp-28
; bpf_map_lookup_elem(&stats, &ch_drop_stats_key);
1247: (18) r1 = 0xffffa03499be8000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
1249: (85) call bpf_map_lookup_elem#1
1250: safe

from 1242 to 1252: R0=map_value(off=0,ks=4,vs=20,imm=0) R6=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=20,imm=0) R8=1 R9=scalar(umax=65280,var_off=(0x0; 0xff00)) R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184= fp-192=1 fp-200= fp-208=mmmmmmmm
; if (lru_map && !(vip_info->flags & F_LRU_BYPASS) && !under_flood) {
1252: (79) r1 = *(u64 *)(r10 -152)    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0
1253: (15) if r1 == 0x0 goto pc+19    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0)
; if (lru_map && !(vip_info->flags & F_LRU_BYPASS) && !under_flood) {
1254: (79) r1 = *(u64 *)(r10 -144)    ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
1255: (61) r1 = *(u32 *)(r1 +0)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (lru_map && !(vip_info->flags & F_LRU_BYPASS) && !under_flood) {
1256: (57) r1 &= 2                    ; R1_w=scalar(umax=2,var_off=(0x0; 0x2))
1257: (77) r1 >>= 1                   ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
; if (lru_map && !(vip_info->flags & F_LRU_BYPASS) && !under_flood) {
1258: (4f) r8 |= r1                   ; R1_w=scalar(umax=1,var_off=(0x0; 0x1)) R8_w=scalar()
1259: (55) if r8 != 0x0 goto pc+13    ; R8_w=0
; if (pckt->flow.proto == IPPROTO_UDP) {
1260: (71) r1 = *(u8 *)(r10 -44)
1261: safe

from 1259 to 1273: safe

from 1253 to 1273: safe

from 1230 to 1234: R0=0 R6=ctx(off=0,imm=0) R7=scalar() R8=1 R9=scalar(umax=65280,var_off=(0x0; 0xff00)) R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184= fp-192=1 fp-200= fp-208=mmmmmmmm
; pckt->real_index = key;
1234: (61) r1 = *(u32 *)(r10 -20)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; pckt->real_index = key;
1235: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1236: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1237: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1238: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1240: (85) call bpf_map_lookup_elem#1
1241: safe

from 1222 to 1235: R0=map_value(off=0,ks=4,vs=4,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6=ctx(off=0,imm=0) R7=scalar() R8_w=1 R9=scalar(umax=65280,var_off=(0x0; 0xff00)) R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184= fp-192=1 fp-200= fp-208=mmmmmmmm
; pckt->real_index = key;
1235: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1236: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1237: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1238: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1240: (85) call bpf_map_lookup_elem#1
1241: safe

from 1218 to 1857: safe

from 957 to 967: R0=scalar(id=692) R1=scalar(umax=8,var_off=(0x0; 0x8)) R2=scalar(umax=1000000000,var_off=(0x0; 0x3fffffff)) R6=ctx(off=0,imm=0) R7=scalar(id=692) R8=1 R9=map_value(off=0,ks=4,vs=16,imm=0) R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0 fp-192=1 fp-200= fp-208=mmmmmmmm
; pckt->flow.port16[0] = pckt->flow.port16[1];
967: (69) r1 = *(u16 *)(r10 -46)      ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; pckt->flow.port16[0] = pckt->flow.port16[1];
968: (6b) *(u16 *)(r10 -48) = r1      ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-48=
969: (05) goto pc+0
; memset(pckt->flow.srcv6, 0, 16);
970: (7a) *(u64 *)(r10 -80) = 0       ; R10=fp0 fp-80_w=mmmmmmmm
971: (b7) r1 = 0                      ; R1_w=0
972: (7b) *(u64 *)(r10 -184) = r1
last_idx 972 first_idx 967
regs=2 stack=0 before 971: (b7) r1 = 0
973: R1_w=P0 R10=fp0 fp-184_w=00000000
973: (7a) *(u64 *)(r10 -72) = 0       ; R10=fp0 fp-72_w=mmmmmmmm
974: (b7) r9 = 0                      ; R9_w=0
975: (b7) r0 = 0                      ; R0_w=0
976: (b7) r8 = 0                      ; R8_w=0
977: (b7) r3 = 0                      ; R3_w=0
978: (b7) r4 = 0                      ; R4_w=0
; __jhash_mix(a, b, c);
979: (1f) r3 -= r8                    ; R3_w=0 R8_w=0
; c += *(u32*)(k + 8);
980: (07) r8 += -559038209            ; R8_w=-559038209
981: (05) goto pc+0
982: (05) goto pc+0
983: (05) goto pc+0
984: (bc) w5 = w8                     ; R5_w=3735929087 R8=-559038209
; return (word << shift) | (word >> ((-shift) & 31));
985: (77) r5 >>= 28                   ; R5_w=13
986: (bf) r2 = r8                     ; R2_w=-559038209 R8=-559038209
987: (67) r2 <<= 4                    ; R2_w=-8944611344
988: (4f) r2 |= r5                    ; R2_w=-8944611331 R5_w=13
; __jhash_mix(a, b, c);
989: (af) r2 ^= r3                    ; R2_w=-8944611331 R3=0
990: (05) goto pc+0
991: (05) goto pc+0
992: (05) goto pc+0
993: (bc) w5 = w2                     ; R2=-8944611331 R5_w=3940290557
; return (word << shift) | (word >> ((-shift) & 31));
994: (77) r5 >>= 26                   ; R5_w=58
995: (bf) r7 = r2                     ; R2=-8944611331 R7_w=-8944611331
996: (67) r7 <<= 6                    ; R7_w=-572455125184
997: (4f) r7 |= r5                    ; R5_w=58 R7_w=-572455125126
; b += *(u32*)(k + 4);
998: (07) r1 += -559038209            ; R1_w=P-559038209
; __jhash_mix(a, b, c);
999: (bf) r3 = r1                     ; R1_w=P-559038209 R3_w=P-559038209
1000: (1f) r3 -= r2
last_idx 1000 first_idx 991
regs=4 stack=0 before 999: (bf) r3 = r1
regs=4 stack=0 before 998: (07) r1 += -559038209
regs=4 stack=0 before 997: (4f) r7 |= r5
regs=4 stack=0 before 996: (67) r7 <<= 6
regs=4 stack=0 before 995: (bf) r7 = r2
regs=4 stack=0 before 994: (77) r5 >>= 26
regs=4 stack=0 before 993: (bc) w5 = w2
regs=4 stack=0 before 992: (05) goto pc+0
regs=4 stack=0 before 991: (05) goto pc+0
parent didn't have regs=4 stack=0 marks: R0=0 R1_r=P0 R2_rw=P-8944611331 R3=0 R4=0 R5_w=13 R6=ctx(off=0,imm=0) R7=scalar(id=692) R8=-559038209 R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0 fp-184=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
last_idx 990 first_idx 982
regs=4 stack=0 before 990: (05) goto pc+0
regs=4 stack=0 before 989: (af) r2 ^= r3
regs=c stack=0 before 988: (4f) r2 |= r5
regs=2c stack=0 before 987: (67) r2 <<= 4
regs=2c stack=0 before 986: (bf) r2 = r8
regs=128 stack=0 before 985: (77) r5 >>= 28
regs=128 stack=0 before 984: (bc) w5 = w8
regs=108 stack=0 before 983: (05) goto pc+0
regs=108 stack=0 before 982: (05) goto pc+0
parent didn't have regs=108 stack=0 marks: R0_w=0 R1_rw=P0 R2=scalar(umax=1000000000,var_off=(0x0; 0x3fffffff)) R3_rw=P0 R4_w=0 R6=ctx(off=0,imm=0) R7=scalar(id=692) R8_rw=P-559038209 R9_w=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72_w=mmmmmmmm fp-80_w=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0 fp-184_w=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
last_idx 981 first_idx 967
regs=108 stack=0 before 981: (05) goto pc+0
regs=108 stack=0 before 980: (07) r8 += -559038209
regs=108 stack=0 before 979: (1f) r3 -= r8
regs=108 stack=0 before 978: (b7) r4 = 0
regs=108 stack=0 before 977: (b7) r3 = 0
regs=100 stack=0 before 976: (b7) r8 = 0
1001: (af) r3 ^= r7
last_idx 1001 first_idx 991
regs=80 stack=0 before 1000: (1f) r3 -= r2
regs=80 stack=0 before 999: (bf) r3 = r1
regs=80 stack=0 before 998: (07) r1 += -559038209
regs=80 stack=0 before 997: (4f) r7 |= r5
regs=a0 stack=0 before 996: (67) r7 <<= 6
regs=a0 stack=0 before 995: (bf) r7 = r2
regs=24 stack=0 before 994: (77) r5 >>= 26
regs=24 stack=0 before 993: (bc) w5 = w2
regs=4 stack=0 before 992: (05) goto pc+0
regs=4 stack=0 before 991: (05) goto pc+0
parent already had regs=4 stack=0 marks: R0=0 R1_r=P0 R2_rw=P-8944611331 R3=0 R4=0 R5_w=13 R6=ctx(off=0,imm=0) R7=scalar(id=692) R8=-559038209 R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0 fp-184=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
; a += (u32)k[3] << 24;
1002: (67) r4 <<= 24                  ; R4_w=0
; a += (u32)k[2] << 16;
1003: (57) r0 &= 255                  ; R0_w=0
; a += (u32)k[2] << 16;
1004: (67) r0 <<= 16                  ; R0_w=0
; a += (u32)k[3] << 24;
1005: (4f) r0 |= r4                   ; R0_w=0 R4_w=0
; pckt->flow.ports,
1006: (61) r5 = *(u32 *)(r10 -48)     ; R5_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; b += initval;
1007: (07) r5 += -525483785           ; R5_w=scalar(smin=-525483785,smax=3769483510)
1008: (05) goto pc+0
1009: (7b) *(u64 *)(r10 -168) = r5    ; R5=scalar(smin=-525483785,smax=3769483510) R10=fp0 fp-168_w=
1010: (05) goto pc+0
1011: (05) goto pc+0
1012: (bc) w4 = w5                    ; R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R5=scalar(smin=-525483785,smax=3769483510)
; return (word << shift) | (word >> ((-shift) & 31));
1013: (77) r4 >>= 18                  ; R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1014: (bf) r7 = r5                    ; R5=scalar(id=777,smin=-525483785,smax=3769483510) R7_w=scalar(id=777,smin=-525483785,smax=3769483510)
1015: (67) r7 <<= 14                  ; R7_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1016: (4f) r7 |= r4                   ; R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff)) R7_w=scalar()
; __jhash_final(a, b, c);
1017: (a7) r5 ^= -525483785           ; R5_w=scalar()
1018: (1f) r5 -= r7                   ; R5_w=scalar() R7_w=scalar()
; __jhash_mix(a, b, c);
1019: (0f) r1 += r8
last_idx 1019 first_idx 1009
regs=100 stack=0 before 1018: (1f) r5 -= r7
regs=100 stack=0 before 1017: (a7) r5 ^= -525483785
regs=100 stack=0 before 1016: (4f) r7 |= r4
regs=100 stack=0 before 1015: (67) r7 <<= 14
regs=100 stack=0 before 1014: (bf) r7 = r5
regs=100 stack=0 before 1013: (77) r4 >>= 18
regs=100 stack=0 before 1012: (bc) w4 = w5
regs=100 stack=0 before 1011: (05) goto pc+0
regs=100 stack=0 before 1010: (05) goto pc+0
regs=100 stack=0 before 1009: (7b) *(u64 *)(r10 -168) = r5
parent didn't have regs=100 stack=0 marks: R0_w=0 R1_rw=P-559038209 R2=P-8944611331 R3_w=P-570076017032 R4_w=0 R5_rw=scalar(smin=-525483785,smax=3769483510) R6=ctx(off=0,imm=0) R7_w=P-572455125126 R8_r=P-559038209 R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0 fp-184=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
last_idx 1008 first_idx 991
regs=100 stack=0 before 1008: (05) goto pc+0
regs=100 stack=0 before 1007: (07) r5 += -525483785
regs=100 stack=0 before 1006: (61) r5 = *(u32 *)(r10 -48)
regs=100 stack=0 before 1005: (4f) r0 |= r4
regs=100 stack=0 before 1004: (67) r0 <<= 16
regs=100 stack=0 before 1003: (57) r0 &= 255
regs=100 stack=0 before 1002: (67) r4 <<= 24
regs=100 stack=0 before 1001: (af) r3 ^= r7
regs=100 stack=0 before 1000: (1f) r3 -= r2
regs=100 stack=0 before 999: (bf) r3 = r1
regs=100 stack=0 before 998: (07) r1 += -559038209
regs=100 stack=0 before 997: (4f) r7 |= r5
regs=100 stack=0 before 996: (67) r7 <<= 6
regs=100 stack=0 before 995: (bf) r7 = r2
regs=100 stack=0 before 994: (77) r5 >>= 26
regs=100 stack=0 before 993: (bc) w5 = w2
regs=100 stack=0 before 992: (05) goto pc+0
regs=100 stack=0 before 991: (05) goto pc+0
parent didn't have regs=100 stack=0 marks: R0_r=0 R1_r=P0 R2_rw=P-8944611331 R3=0 R4_r=0 R5_w=13 R6=ctx(off=0,imm=0) R7=scalar(id=692) R8_r=P-559038209 R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48_r= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0 fp-184=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
last_idx 990 first_idx 982
regs=100 stack=0 before 990: (05) goto pc+0
regs=100 stack=0 before 989: (af) r2 ^= r3
regs=100 stack=0 before 988: (4f) r2 |= r5
regs=100 stack=0 before 987: (67) r2 <<= 4
regs=100 stack=0 before 986: (bf) r2 = r8
regs=100 stack=0 before 985: (77) r5 >>= 28
regs=100 stack=0 before 984: (bc) w5 = w8
regs=100 stack=0 before 983: (05) goto pc+0
regs=100 stack=0 before 982: (05) goto pc+0
parent already had regs=100 stack=0 marks: R0_rw=0 R1_rw=P0 R2=scalar(umax=1000000000,var_off=(0x0; 0x3fffffff)) R3_rw=P0 R4_rw=0 R6=ctx(off=0,imm=0) R7=scalar(id=692) R8_rw=P-559038209 R9_w=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48_r= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72_w=mmmmmmmm fp-80_w=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0 fp-184_w=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
; a += (u32)k[1] << 8;
1020: (57) r9 &= 255                  ; R9_w=0
; a += (u32)k[1] << 8;
1021: (67) r9 <<= 8                   ; R9_w=0
; a += (u32)k[2] << 16;
1022: (4f) r0 |= r9                   ; R0_w=0 R9_w=0
1023: (79) r4 = *(u64 *)(r10 -184)    ; R4_w=P0 R10=fp0
; a += k[0];
1024: (57) r4 &= 255                  ; R4_w=P0
; a += (u32)k[1] << 8;
1025: (4f) r0 |= r4                   ; R0_w=0 R4_w=P0
1026: (05) goto pc+0
1027: (05) goto pc+0
; __jhash_mix(a, b, c);
1028: (05) goto pc+0
1029: (bc) w7 = w3                    ; R3=P-570076017032 R7_w=P1154633336
; return (word << shift) | (word >> ((-shift) & 31));
1030: (77) r7 >>= 24                  ; R7_w=P68
1031: (bf) r4 = r3                    ; R3=P-570076017032 R4_w=P-570076017032
1032: (67) r4 <<= 8                   ; R4_w=P-145939460360192
1033: (4f) r4 |= r7                   ; R4_w=P-145939460360124 R7_w=P68
; __jhash_mix(a, b, c);
1034: (0f) r2 += r1                   ; R1=P-1118076418 R2_w=P-10062687749
1035: (1f) r1 -= r3                   ; R1_w=P568957940614 R3=P-570076017032
1036: (af) r1 ^= r4                   ; R1_w=P-145407547585598 R4_w=P-145939460360124
1037: (05) goto pc+0
1038: (05) goto pc+0
; __jhash_final(a, b, c);
1039: (7b) *(u64 *)(r10 -176) = r5    ; R5=scalar() R10=fp0 fp-176_w=mmmmmmmm
1040: (05) goto pc+0
1041: (bc) w4 = w5                    ; R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R5=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1042: (77) r4 >>= 21                  ; R4_w=scalar(umax=2047,var_off=(0x0; 0x7ff))
1043: (bf) r8 = r5                    ; R5=scalar(id=779) R8_w=scalar(id=779)
1044: (67) r8 <<= 11                  ; R8_w=scalar(smax=9223372036854773760,umax=18446744073709549568,var_off=(0x0; 0xfffffffffffff800),s32_max=2147481600,u32_max=-2048)
1045: (4f) r8 |= r4                   ; R4_w=scalar(umax=2047,var_off=(0x0; 0x7ff)) R8_w=scalar()
1046: (05) goto pc+0
1047: (05) goto pc+0
; __jhash_mix(a, b, c);
1048: (05) goto pc+0
1049: (bc) w4 = w1                    ; R1=P-145407547585598 R4_w=P2865187778
; return (word << shift) | (word >> ((-shift) & 31));
1050: (77) r4 >>= 16                  ; R4_w=P43719
1051: (bf) r7 = r1                    ; R1=P-145407547585598 R7_w=P-145407547585598
1052: (67) r7 <<= 16                  ; R7_w=P8917315035139801088
1053: (4f) r7 |= r4                   ; R4_w=P43719 R7_w=P8917315035139844807
; __jhash_mix(a, b, c);
1054: (0f) r3 += r2                   ; R2=P-10062687749 R3_w=P-580138704781
1055: (1f) r2 -= r1                   ; R1=P-145407547585598 R2_w=P145397484897849
1056: (af) r2 ^= r7                   ; R2_w=P8917178920830430462 R7_w=P8917315035139844807
1057: (05) goto pc+0
1058: (05) goto pc+0
1059: (05) goto pc+0
1060: (bc) w7 = w2                    ; R2=P8917178920830430462 R7_w=P3065179390
; return (word << shift) | (word >> ((-shift) & 31));
1061: (77) r7 >>= 13                  ; R7_w=P374167
1062: (bf) r4 = r2                    ; R2=P8917178920830430462 R4_w=P8917178920830430462
1063: (67) r4 <<= 19                  ; R4_w=P8637259322254950400
1064: (4f) r4 |= r7                   ; R4_w=P8637259322255324567 R7_w=P374167
; __jhash_mix(a, b, c);
1065: (0f) r1 += r3                   ; R1_w=P-145987686290379 R3=P-580138704781
1066: (1f) r3 -= r2                   ; R2=P8917178920830430462 R3_w=P-8917179500969135243
1067: (af) r3 ^= r4                   ; R3_w=P-873023320690047262 R4_w=P8637259322255324567
1068: (0f) r2 += r1                   ; R1_w=P-145987686290379 R2_w=P8917032933144140083
1069: (bf) r5 = r3                    ; R3_w=P-873023320690047262 R5_w=P-873023320690047262
1070: (0f) r5 += r2                   ; R2_w=P8917032933144140083 R5_w=P8044009612454092821
1071: (05) goto pc+0
1072: (05) goto pc+0
1073: (05) goto pc+0
1074: (bc) w4 = w5                    ; R4_w=P2686935061 R5=P8044009612454092821
; return (word << shift) | (word >> ((-shift) & 31));
1075: (77) r4 >>= 18                  ; R4_w=P10249
1076: (bf) r7 = r5                    ; R5=P8044009612454092821 R7_w=P8044009612454092821
1077: (67) r7 <<= 14                  ; R7_w=P-8932916206889517056
1078: (4f) r7 |= r4                   ; R4_w=P10249 R7_w=P-8932916206889506807
; __jhash_mix(a, b, c);
1079: (05) goto pc+0
1080: (05) goto pc+0
1081: (05) goto pc+0
1082: (bc) w4 = w3                    ; R3=P-873023320690047262 R4_w=P1369655010
; return (word << shift) | (word >> ((-shift) & 31));
1083: (77) r4 >>= 28                  ; R4_w=P5
; __jhash_mix(a, b, c);
1084: (1f) r1 -= r3                   ; R1_w=P872877333003756883 R3=P-873023320690047262
; return (word << shift) | (word >> ((-shift) & 31));
1085: (67) r3 <<= 4                   ; R3_w=P4478370942668795424
1086: (4f) r3 |= r4                   ; R3_w=P4478370942668795429 R4_w=P5
; __jhash_mix(a, b, c);
1087: (af) r1 ^= r3                   ; R1_w=P3619570195461933942 R3_w=P4478370942668795429
; a += k[0];
1088: (0f) r2 += r0
last_idx 1088 first_idx 1080
regs=1 stack=0 before 1087: (af) r1 ^= r3
regs=1 stack=0 before 1086: (4f) r3 |= r4
regs=1 stack=0 before 1085: (67) r3 <<= 4
regs=1 stack=0 before 1084: (1f) r1 -= r3
regs=1 stack=0 before 1083: (77) r4 >>= 28
regs=1 stack=0 before 1082: (bc) w4 = w3
regs=1 stack=0 before 1081: (05) goto pc+0
regs=1 stack=0 before 1080: (05) goto pc+0
parent didn't have regs=1 stack=0 marks: R0_r=P0 R1_r=P-145987686290379 R2_r=P8917032933144140083 R3_r=P-873023320690047262 R4_w=P10249 R5=P8044009612454092821 R6=ctx(off=0,imm=0) R7_w=P-8932916206889506807 R8=scalar() R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
last_idx 1079 first_idx 1072
regs=1 stack=0 before 1079: (05) goto pc+0
regs=1 stack=0 before 1078: (4f) r7 |= r4
regs=1 stack=0 before 1077: (67) r7 <<= 14
regs=1 stack=0 before 1076: (bf) r7 = r5
regs=1 stack=0 before 1075: (77) r4 >>= 18
regs=1 stack=0 before 1074: (bc) w4 = w5
regs=1 stack=0 before 1073: (05) goto pc+0
regs=1 stack=0 before 1072: (05) goto pc+0
parent didn't have regs=1 stack=0 marks: R0_r=P0 R1_rw=P-145987686290379 R2_rw=P8917032933144140083 R3_rw=P-873023320690047262 R4_w=P8637259322255324567 R5_rw=P8044009612454092821 R6=ctx(off=0,imm=0) R7_w=P374167 R8=scalar() R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
last_idx 1071 first_idx 1058
regs=1 stack=0 before 1071: (05) goto pc+0
regs=1 stack=0 before 1070: (0f) r5 += r2
regs=1 stack=0 before 1069: (bf) r5 = r3
regs=1 stack=0 before 1068: (0f) r2 += r1
regs=1 stack=0 before 1067: (af) r3 ^= r4
regs=1 stack=0 before 1066: (1f) r3 -= r2
regs=1 stack=0 before 1065: (0f) r1 += r3
regs=1 stack=0 before 1064: (4f) r4 |= r7
regs=1 stack=0 before 1063: (67) r4 <<= 19
regs=1 stack=0 before 1062: (bf) r4 = r2
regs=1 stack=0 before 1061: (77) r7 >>= 13
regs=1 stack=0 before 1060: (bc) w7 = w2
regs=1 stack=0 before 1059: (05) goto pc+0
regs=1 stack=0 before 1058: (05) goto pc+0
parent didn't have regs=1 stack=0 marks: R0_r=P0 R1_r=P-145407547585598 R2_rw=P8917178920830430462 R3_rw=P-580138704781 R4_w=P43719 R5=scalar(id=779) R6=ctx(off=0,imm=0) R7_w=P8917315035139844807 R8=scalar() R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
last_idx 1057 first_idx 1047
regs=1 stack=0 before 1057: (05) goto pc+0
regs=1 stack=0 before 1056: (af) r2 ^= r7
regs=1 stack=0 before 1055: (1f) r2 -= r1
regs=1 stack=0 before 1054: (0f) r3 += r2
regs=1 stack=0 before 1053: (4f) r7 |= r4
regs=1 stack=0 before 1052: (67) r7 <<= 16
regs=1 stack=0 before 1051: (bf) r7 = r1
regs=1 stack=0 before 1050: (77) r4 >>= 16
regs=1 stack=0 before 1049: (bc) w4 = w1
regs=1 stack=0 before 1048: (05) goto pc+0
regs=1 stack=0 before 1047: (05) goto pc+0
parent didn't have regs=1 stack=0 marks: R0_r=P0 R1_r=P-145407547585598 R2_r=P-10062687749 R3_r=P-570076017032 R4_w=scalar(umax=2047,var_off=(0x0; 0x7ff)) R5=scalar(id=779) R6=ctx(off=0,imm=0) R7=P68 R8_w=scalar() R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176_w=mmmmmmmm fp-184=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
last_idx 1046 first_idx 1038
regs=1 stack=0 before 1046: (05) goto pc+0
regs=1 stack=0 before 1045: (4f) r8 |= r4
regs=1 stack=0 before 1044: (67) r8 <<= 11
regs=1 stack=0 before 1043: (bf) r8 = r5
regs=1 stack=0 before 1042: (77) r4 >>= 21
regs=1 stack=0 before 1041: (bc) w4 = w5
regs=1 stack=0 before 1040: (05) goto pc+0
regs=1 stack=0 before 1039: (7b) *(u64 *)(r10 -176) = r5
regs=1 stack=0 before 1038: (05) goto pc+0
parent didn't have regs=1 stack=0 marks: R0_r=P0 R1_rw=P-145407547585598 R2_rw=P-10062687749 R3_r=P-570076017032 R4_w=P-145939460360124 R5_r=scalar() R6=ctx(off=0,imm=0) R7_w=P68 R8=P-559038209 R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0 fp-184=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
last_idx 1037 first_idx 1027
regs=1 stack=0 before 1037: (05) goto pc+0
regs=1 stack=0 before 1036: (af) r1 ^= r4
regs=1 stack=0 before 1035: (1f) r1 -= r3
regs=1 stack=0 before 1034: (0f) r2 += r1
regs=1 stack=0 before 1033: (4f) r4 |= r7
regs=1 stack=0 before 1032: (67) r4 <<= 8
regs=1 stack=0 before 1031: (bf) r4 = r3
regs=1 stack=0 before 1030: (77) r7 >>= 24
regs=1 stack=0 before 1029: (bc) w7 = w3
regs=1 stack=0 before 1028: (05) goto pc+0
regs=1 stack=0 before 1027: (05) goto pc+0
parent didn't have regs=1 stack=0 marks: R0_rw=P0 R1_rw=P-1118076418 R2_r=P-8944611331 R3_r=P-570076017032 R4_w=P0 R5_rw=scalar() R6=ctx(off=0,imm=0) R7_w=scalar() R8=P-559038209 R9_w=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168_w= fp-176=0 fp-184=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
last_idx 1026 first_idx 1009
regs=1 stack=0 before 1026: (05) goto pc+0
regs=1 stack=0 before 1025: (4f) r0 |= r4
regs=11 stack=0 before 1024: (57) r4 &= 255
regs=11 stack=0 before 1023: (79) r4 = *(u64 *)(r10 -184)
regs=1 stack=400000 before 1022: (4f) r0 |= r9
regs=201 stack=400000 before 1021: (67) r9 <<= 8
regs=201 stack=400000 before 1020: (57) r9 &= 255
regs=201 stack=400000 before 1019: (0f) r1 += r8
regs=201 stack=400000 before 1018: (1f) r5 -= r7
regs=201 stack=400000 before 1017: (a7) r5 ^= -525483785
regs=201 stack=400000 before 1016: (4f) r7 |= r4
regs=201 stack=400000 before 1015: (67) r7 <<= 14
regs=201 stack=400000 before 1014: (bf) r7 = r5
regs=201 stack=400000 before 1013: (77) r4 >>= 18
regs=201 stack=400000 before 1012: (bc) w4 = w5
regs=201 stack=400000 before 1011: (05) goto pc+0
regs=201 stack=400000 before 1010: (05) goto pc+0
regs=201 stack=400000 before 1009: (7b) *(u64 *)(r10 -168) = r5
parent didn't have regs=201 stack=0 marks: R0_rw=P0 R1_rw=P-559038209 R2_r=P-8944611331 R3_rw=P-570076017032 R4_w=0 R5_rw=scalar(smin=-525483785,smax=3769483510) R6=ctx(off=0,imm=0) R7_w=P-572455125126 R8_r=P-559038209 R9_r=P0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0 fp-184_r=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
last_idx 1008 first_idx 991
regs=201 stack=0 before 1008: (05) goto pc+0
regs=201 stack=0 before 1007: (07) r5 += -525483785
regs=201 stack=0 before 1006: (61) r5 = *(u32 *)(r10 -48)
regs=201 stack=0 before 1005: (4f) r0 |= r4
regs=211 stack=0 before 1004: (67) r0 <<= 16
regs=211 stack=0 before 1003: (57) r0 &= 255
regs=211 stack=0 before 1002: (67) r4 <<= 24
regs=211 stack=0 before 1001: (af) r3 ^= r7
regs=211 stack=0 before 1000: (1f) r3 -= r2
regs=211 stack=0 before 999: (bf) r3 = r1
regs=211 stack=0 before 998: (07) r1 += -559038209
regs=211 stack=0 before 997: (4f) r7 |= r5
regs=211 stack=0 before 996: (67) r7 <<= 6
regs=211 stack=0 before 995: (bf) r7 = r2
regs=211 stack=0 before 994: (77) r5 >>= 26
regs=211 stack=0 before 993: (bc) w5 = w2
regs=211 stack=0 before 992: (05) goto pc+0
regs=211 stack=0 before 991: (05) goto pc+0
parent didn't have regs=211 stack=0 marks: R0_r=P0 R1_r=P0 R2_rw=P-8944611331 R3=0 R4_r=P0 R5_w=13 R6=ctx(off=0,imm=0) R7=scalar(id=692) R8_r=P-559038209 R9_r=P0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48_r= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0 fp-184_r=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
last_idx 990 first_idx 982
regs=211 stack=0 before 990: (05) goto pc+0
regs=211 stack=0 before 989: (af) r2 ^= r3
regs=211 stack=0 before 988: (4f) r2 |= r5
regs=211 stack=0 before 987: (67) r2 <<= 4
regs=211 stack=0 before 986: (bf) r2 = r8
regs=211 stack=0 before 985: (77) r5 >>= 28
regs=211 stack=0 before 984: (bc) w5 = w8
regs=211 stack=0 before 983: (05) goto pc+0
regs=211 stack=0 before 982: (05) goto pc+0
parent didn't have regs=211 stack=0 marks: R0_rw=P0 R1_rw=P0 R2=scalar(umax=1000000000,var_off=(0x0; 0x3fffffff)) R3_rw=P0 R4_rw=P0 R6=ctx(off=0,imm=0) R7=scalar(id=692) R8_rw=P-559038209 R9_rw=P0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48_r= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72_w=mmmmmmmm fp-80_w=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0 fp-184_rw=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
last_idx 981 first_idx 967
regs=211 stack=0 before 981: (05) goto pc+0
regs=211 stack=0 before 980: (07) r8 += -559038209
regs=211 stack=0 before 979: (1f) r3 -= r8
regs=211 stack=0 before 978: (b7) r4 = 0
regs=201 stack=0 before 977: (b7) r3 = 0
regs=201 stack=0 before 976: (b7) r8 = 0
regs=201 stack=0 before 975: (b7) r0 = 0
regs=200 stack=0 before 974: (b7) r9 = 0
; __jhash_final(a, b, c);
1089: (af) r1 ^= r5                   ; R1_w=P6744523029021125475 R5=P8044009612454092821
1090: (1f) r1 -= r7                   ; R1_w=P-2769304837798919334 R7=P-8932916206889506807
1091: (05) goto pc+0
1092: (05) goto pc+0
1093: (05) goto pc+0
1094: (bc) w3 = w1                    ; R1=P-2769304837798919334 R3_w=P607748954
; return (word << shift) | (word >> ((-shift) & 31));
1095: (77) r3 >>= 21                  ; R3_w=P289
1096: (bf) r4 = r1                    ; R1=P-2769304837798919334 R4_w=P-2769304837798919334
1097: (67) r4 <<= 11                  ; R4_w=P-8385877183354449920
1098: (4f) r4 |= r3                   ; R3_w=P289 R4_w=P-8385877183354449631
; __jhash_final(a, b, c);
1099: (bf) r3 = r1                    ; R1=P-2769304837798919334 R3_w=P-2769304837798919334
1100: (af) r3 ^= r2                   ; R2=P8917032933144140083 R3_w=P-6760226462814594455
1101: (1f) r3 -= r4                   ; R3_w=P1625650720539855176 R4_w=P-8385877183354449631
1102: (05) goto pc+0
1103: (05) goto pc+0
1104: (05) goto pc+0
1105: (bc) w2 = w3                    ; R2_w=P2661468488 R3=P1625650720539855176
; return (word << shift) | (word >> ((-shift) & 31));
1106: (77) r2 >>= 7                   ; R2_w=P20792722
1107: (bf) r4 = r3                    ; R3=P1625650720539855176 R4_w=P1625650720539855176
1108: (67) r4 <<= 25                  ; R4_w=P8015639407572811776
1109: (4f) r4 |= r2                   ; R2_w=P20792722 R4_w=P8015639407593604498
; __jhash_final(a, b, c);
1110: (bf) r7 = r3                    ; R3=P1625650720539855176 R7_w=P1625650720539855176
1111: (af) r7 ^= r5                   ; R5=P8044009612454092821 R7_w=P8731750324354001245
1112: (1f) r7 -= r4                   ; R4_w=P8015639407593604498 R7_w=P716110916760396747
1113: (05) goto pc+0
1114: (05) goto pc+0
1115: (05) goto pc+0
1116: (bc) w2 = w7                    ; R2_w=P2907202507 R7=P716110916760396747
; return (word << shift) | (word >> ((-shift) & 31));
1117: (77) r2 >>= 16                  ; R2_w=P44360
1118: (bf) r4 = r7                    ; R4_w=P716110916760396747 R7=P716110916760396747
1119: (67) r4 <<= 16                  ; R4_w=P2528117292261900288
1120: (4f) r4 |= r2                   ; R2_w=P44360 R4_w=P2528117292261944648
; __jhash_final(a, b, c);
1121: (bf) r2 = r7                    ; R2_w=P716110916760396747 R7=P716110916760396747
1122: (af) r2 ^= r1                   ; R1=P-2769304837798919334 R2_w=P-3431372408396586863
1123: (1f) r2 -= r4                   ; R2_w=P-5959489700658531511 R4_w=P2528117292261944648
1124: (05) goto pc+0
1125: (bc) w1 = w2                    ; R1_w=P631649097 R2=P-5959489700658531511
; return (word << shift) | (word >> ((-shift) & 31));
1126: (77) r1 >>= 28                  ; R1_w=P2
1127: (bf) r4 = r2                    ; R2=P-5959489700658531511 R4_w=P-5959489700658531511
1128: (67) r4 <<= 4                   ; R4_w=P-3118114841988746096
1129: (4f) r4 |= r1                   ; R1_w=P2 R4_w=P-3118114841988746094
; __jhash_final(a, b, c);
1130: (bf) r1 = r2                    ; R1_w=P-5959489700658531511 R2=P-5959489700658531511
1131: (af) r1 ^= r3                   ; R1_w=P-4916564071227786751 R3=P1625650720539855176
1132: (1f) r1 -= r4                   ; R1_w=P-1798449229239040657 R4_w=P-3118114841988746094
1133: (05) goto pc+0
1134: (05) goto pc+0
1135: (05) goto pc+0
1136: (bc) w3 = w1                    ; R1=P-1798449229239040657 R3_w=P1621214575
; return (word << shift) | (word >> ((-shift) & 31));
1137: (77) r3 >>= 18                  ; R3_w=P6184
1138: (bf) r4 = r1                    ; R1=P-1798449229239040657 R4_w=P-1798449229239040657
1139: (67) r4 <<= 14                  ; R4_w=P-6341886138288193536
1140: (4f) r4 |= r3                   ; R3_w=P6184 R4_w=P-6341886138288187352
; __jhash_final(a, b, c);
1141: (af) r1 ^= r7                   ; R1_w=P-1226460270496733532 R7=P716110916760396747
1142: (1f) r1 -= r4                   ; R1_w=P5115425867791453820 R4_w=P-6341886138288187352
1143: (05) goto pc+0
1144: (05) goto pc+0
1145: (05) goto pc+0
1146: (bc) w4 = w1                    ; R1=P5115425867791453820 R4_w=P1552797308
; return (word << shift) | (word >> ((-shift) & 31));
1147: (77) r4 >>= 8                   ; R4_w=P6065614
1148: (bf) r5 = r1                    ; R1=P5115425867791453820 R5_w=P5115425867791453820
1149: (67) r5 <<= 24                  ; R5_w=P-5090037560852348928
1150: (4f) r5 |= r4                   ; R4_w=P6065614 R5_w=P-5090037560846283314
; __jhash_final(a, b, c);
1151: (af) r1 ^= r2                   ; R1_w=P-1461973296061088459 R2=P-5959489700658531511
; a += initval;
1152: (1f) r1 -= r5                   ; R1_w=P3628064264785194855 R5_w=P-5090037560846283314
1153: (07) r1 += -525483785           ; R1_w=P3628064264259711070
1154: (79) r7 = *(u64 *)(r10 -176)    ; R7_w=scalar() R10=fp0
; __jhash_final(a, b, c);
1155: (af) r1 ^= r7
last_idx 1155 first_idx 1144
regs=80 stack=0 before 1154: (79) r7 = *(u64 *)(r10 -176)
regs=0 stack=200000 before 1153: (07) r1 += -525483785
regs=0 stack=200000 before 1152: (1f) r1 -= r5
regs=0 stack=200000 before 1151: (af) r1 ^= r2
regs=0 stack=200000 before 1150: (4f) r5 |= r4
regs=0 stack=200000 before 1149: (67) r5 <<= 24
regs=0 stack=200000 before 1148: (bf) r5 = r1
regs=0 stack=200000 before 1147: (77) r4 >>= 8
regs=0 stack=200000 before 1146: (bc) w4 = w1
regs=0 stack=200000 before 1145: (05) goto pc+0
regs=0 stack=200000 before 1144: (05) goto pc+0
parent already had regs=0 stack=0 marks: R0=P0 R1_rw=P5115425867791453820 R2_r=P-5959489700658531511 R3_w=P6184 R4_w=P-6341886138288187352 R5=P8044009612454092821 R6=ctx(off=0,imm=0) R7=P716110916760396747 R8=scalar() R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176_r=mmmmmmmm fp-184=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
1156: (1f) r1 -= r8                   ; R1_w=scalar() R8=scalar()
1157: (05) goto pc+0
1158: (bc) w2 = w1                    ; R1=scalar() R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1159: (77) r2 >>= 7                   ; R2_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff))
1160: (bf) r4 = r1                    ; R1=scalar(id=790) R4_w=scalar(id=790)
1161: (67) r4 <<= 25                  ; R4_w=scalar(smax=9223372036821221376,umax=18446744073675997184,var_off=(0x0; 0xfffffffffe000000),s32_max=2113929216,u32_max=-33554432)
1162: (4f) r4 |= r2                   ; R2_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff)) R4_w=scalar()
; __jhash_final(a, b, c);
1163: (bf) r0 = r1                    ; R0_w=scalar(id=790) R1=scalar(id=790)
1164: (79) r2 = *(u64 *)(r10 -168)    ; R2_w=scalar(smin=-525483785,smax=3769483510) R10=fp0
1165: (af) r0 ^= r2                   ; R0_w=scalar() R2_w=scalar(smin=-525483785,smax=3769483510)
1166: (1f) r0 -= r4                   ; R0_w=scalar() R4_w=scalar()
1167: (05) goto pc+0
1168: (05) goto pc+0
1169: (05) goto pc+0
1170: (bc) w2 = w0                    ; R0=scalar() R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1171: (77) r2 >>= 16                  ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff))
1172: (bf) r5 = r0                    ; R0=scalar(id=791) R5_w=scalar(id=791)
1173: (67) r5 <<= 16                  ; R5_w=scalar(smax=9223372036854710272,umax=18446744073709486080,var_off=(0x0; 0xffffffffffff0000),s32_max=2147418112,u32_max=-65536)
1174: (4f) r5 |= r2                   ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R5_w=scalar()
; __jhash_final(a, b, c);
1175: (bf) r4 = r0                    ; R0=scalar(id=791) R4_w=scalar(id=791)
1176: (af) r4 ^= r7                   ; R4_w=scalar() R7=Pscalar()
1177: (1f) r4 -= r5                   ; R4_w=scalar() R5_w=scalar()
1178: (05) goto pc+0
1179: (bc) w2 = w4                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R4=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1180: (77) r2 >>= 28                  ; R2_w=scalar(umax=15,var_off=(0x0; 0xf))
1181: (bf) r5 = r4                    ; R4=scalar(id=792) R5_w=scalar(id=792)
1182: (67) r5 <<= 4                   ; R5_w=scalar(smax=9223372036854775792,umax=18446744073709551600,var_off=(0x0; 0xfffffffffffffff0),s32_max=2147483632,u32_max=-16)
1183: (4f) r5 |= r2                   ; R2_w=scalar(umax=15,var_off=(0x0; 0xf)) R5_w=scalar()
; __jhash_final(a, b, c);
1184: (bf) r2 = r4                    ; R2_w=scalar(id=792) R4=scalar(id=792)
1185: (af) r2 ^= r1                   ; R1=scalar(id=790) R2_w=scalar()
1186: (1f) r2 -= r5                   ; R2_w=scalar() R5_w=scalar()
1187: (05) goto pc+0
1188: (05) goto pc+0
1189: (05) goto pc+0
1190: (bc) w1 = w2                    ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R2=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1191: (77) r1 >>= 18                  ; R1_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1192: (bf) r5 = r2                    ; R2=scalar(id=793) R5_w=scalar(id=793)
1193: (67) r5 <<= 14                  ; R5_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1194: (4f) r5 |= r1                   ; R1_w=scalar(umax=16383,var_off=(0x0; 0x3fff)) R5_w=scalar()
; __jhash_final(a, b, c);
1195: (af) r2 ^= r0                   ; R0=scalar(id=791) R2_w=scalar()
1196: (1f) r2 -= r5                   ; R2_w=scalar() R5_w=scalar()
1197: (05) goto pc+0
1198: (bc) w1 = w2                    ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R2=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1199: (77) r1 >>= 8                   ; R1_w=scalar(umax=16777215,var_off=(0x0; 0xffffff))
1200: (bf) r3 = r2                    ; R2=scalar(id=794) R3_w=scalar(id=794)
1201: (67) r3 <<= 24                  ; R3_w=scalar(smax=9223372036837998592,umax=18446744073692774400,var_off=(0x0; 0xffffffffff000000),s32_max=2130706432,u32_max=-16777216)
1202: (4f) r3 |= r1                   ; R1_w=scalar(umax=16777215,var_off=(0x0; 0xffffff)) R3_w=scalar()
; __jhash_final(a, b, c);
1203: (af) r2 ^= r4                   ; R2_w=scalar() R4=scalar(id=792)
1204: (1f) r2 -= r3                   ; R2_w=scalar() R3_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1205: (79) r1 = *(u64 *)(r10 -144)    ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
1206: (61) r1 = *(u32 *)(r1 +4)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; key = RING_SIZE * (vip_info->vip_num) + hash;
1207: (27) r1 *= 65537                ; R1_w=scalar(umax=281479271612415,var_off=(0x0; 0x1ffffffffffff))
; __jhash_final(a, b, c);
1208: (bc) w2 = w2                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
1209: (05) goto pc+0
; hash = get_packet_hash(pckt, hash_16bytes) % RING_SIZE;
1210: (97) r2 %= 65537                ; R2_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1211: (0f) r2 += r1                   ; R1_w=scalar(umax=281479271612415,var_off=(0x0; 0x1ffffffffffff)) R2_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1212: (63) *(u32 *)(r10 -20) = r2     ; R2_w=scalar() R10=fp0 fp-24=mmmm????
1213: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1214: (07) r2 += -20                  ; R2_w=fp-20
; real_pos = bpf_map_lookup_elem(&ch_rings, &key);
1215: (18) r1 = 0xffffaebaa0631000    ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
1217: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=795,off=0,ks=4,vs=4,imm=0)
; if (!real_pos) {
1218: (15) if r0 == 0x0 goto pc+638   ; R0=map_value(off=0,ks=4,vs=4,imm=0)
; key = *real_pos;
1219: (61) r1 = *(u32 *)(r0 +0)       ; R0=map_value(off=0,ks=4,vs=4,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; key = *real_pos;
1220: (63) *(u32 *)(r10 -20) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-24=mmmm????
1221: (79) r8 = *(u64 *)(r10 -192)    ; R8_w=1 R10=fp0
; if (key == 0) {
1222: (55) if r1 != 0x0 goto pc+12    ; R1_w=0
1223: (05) goto pc+0
; __u32 ch_drop_stats_key = MAX_VIPS + CH_DROP_STATS;
1224: (62) *(u32 *)(r10 -28) = 521    ; R10=fp0 fp-32=mmmm????
1225: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1226: (07) r2 += -28                  ; R2_w=fp-28
; bpf_map_lookup_elem(&stats, &ch_drop_stats_key);
1227: (18) r1 = 0xffffa03499be8000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
1229: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=796,off=0,ks=4,vs=16,imm=0)
; if (!ch_drop_stats) {
1230: (15) if r0 == 0x0 goto pc+3     ; R0=map_value(off=0,ks=4,vs=16,imm=0)
; ch_drop_stats->v2 += 1;
1231: (79) r1 = *(u64 *)(r0 +8)       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1232: (07) r1 += 1                    ; R1_w=scalar()
1233: (7b) *(u64 *)(r0 +8) = r1       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
; pckt->real_index = key;
1234: (61) r1 = *(u32 *)(r10 -20)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; pckt->real_index = key;
1235: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1236: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1237: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1238: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1240: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=797,off=0,ks=4,vs=20,imm=0)
1241: (bf) r7 = r0                    ; R0=map_value_or_null(id=797,off=0,ks=4,vs=20,imm=0) R7_w=map_value_or_null(id=797,off=0,ks=4,vs=20,imm=0)
; if (!(*real)) {
1242: (55) if r7 != 0x0 goto pc+9     ; R7_w=0
1243: (05) goto pc+0
; __u32 ch_drop_stats_key = MAX_VIPS + CH_DROP_STATS;
1244: (62) *(u32 *)(r10 -28) = 521    ; R10=fp0 fp-32=mmmm????
1245: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1246: (07) r2 += -28                  ; R2_w=fp-28
; bpf_map_lookup_elem(&stats, &ch_drop_stats_key);
1247: (18) r1 = 0xffffa03499be8000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
1249: (85) call bpf_map_lookup_elem#1
1250: safe

from 1242 to 1252: R0=map_value(off=0,ks=4,vs=20,imm=0) R6=ctx(off=0,imm=0) R7=map_value(off=0,ks=4,vs=20,imm=0) R8=1 R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
; if (lru_map && !(vip_info->flags & F_LRU_BYPASS) && !under_flood) {
1252: (79) r1 = *(u64 *)(r10 -152)    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0
1253: (15) if r1 == 0x0 goto pc+19    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0)
; if (lru_map && !(vip_info->flags & F_LRU_BYPASS) && !under_flood) {
1254: (79) r1 = *(u64 *)(r10 -144)    ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
1255: (61) r1 = *(u32 *)(r1 +0)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (lru_map && !(vip_info->flags & F_LRU_BYPASS) && !under_flood) {
1256: (57) r1 &= 2                    ; R1_w=scalar(umax=2,var_off=(0x0; 0x2))
1257: (77) r1 >>= 1                   ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
; if (lru_map && !(vip_info->flags & F_LRU_BYPASS) && !under_flood) {
1258: (4f) r8 |= r1                   ; R1_w=scalar(umax=1,var_off=(0x0; 0x1)) R8_w=scalar()
1259: (55) if r8 != 0x0 goto pc+13    ; R8_w=0
; if (pckt->flow.proto == IPPROTO_UDP) {
1260: (71) r1 = *(u8 *)(r10 -44)
1261: safe

from 1259 to 1273: safe

from 1253 to 1273: safe

from 1230 to 1234: R0=0 R6=ctx(off=0,imm=0) R7=Pscalar() R8=1 R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
; pckt->real_index = key;
1234: (61) r1 = *(u32 *)(r10 -20)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; pckt->real_index = key;
1235: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1236: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1237: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1238: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1240: (85) call bpf_map_lookup_elem#1
1241: safe

from 1222 to 1235: R0=map_value(off=0,ks=4,vs=4,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6=ctx(off=0,imm=0) R7=Pscalar() R8_w=1 R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
; pckt->real_index = key;
1235: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1236: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1237: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1238: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1240: (85) call bpf_map_lookup_elem#1
1241: safe

from 1218 to 1857: safe

from 935 to 952: R0=0 R6=ctx(off=0,imm=0) R7=P0 R8=1 R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0 fp-200=
; if (conn_rate_stats->v1 > MAX_CONN_RATE) {
952: (7b) *(u64 *)(r10 -192) = r8     ; R8=1 R10=fp0 fp-192_w=1
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
953: (79) r1 = *(u64 *)(r10 -144)     ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
954: (61) r1 = *(u32 *)(r1 +0)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
955: (57) r1 &= 8                     ; R1_w=scalar(umax=8,var_off=(0x0; 0x8))
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
956: (7b) *(u64 *)(r10 -208) = r7     ; R7=P0 R10=fp0 fp-208_w=00000000
957: (55) if r1 != 0x0 goto pc+9      ; R1_w=0
; a += k[0];
958: (71) r1 = *(u8 *)(r10 -68)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; a += (u32)k[1] << 8;
959: (7b) *(u64 *)(r10 -184) = r1     ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0 fp-184_w=
960: (71) r9 = *(u8 *)(r10 -67)       ; R9_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; a += (u32)k[2] << 16;
961: (71) r0 = *(u8 *)(r10 -66)       ; R0_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; b += *(u32*)(k + 4);
962: (61) r1 = *(u32 *)(r10 -76)      ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; c += *(u32*)(k + 8);
963: (61) r8 = *(u32 *)(r10 -72)      ; R8_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; a += *(u32*)(k);
964: (61) r3 = *(u32 *)(r10 -80)      ; R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; a += (u32)k[3] << 24;
965: (71) r4 = *(u8 *)(r10 -65)       ; R4_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
966: (05) goto pc+12
979: safe

from 957 to 967: safe

from 916 to 918: R0=map_value(off=0,ks=4,vs=16,imm=0) R1=1 R2=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=40,vs=16,imm=0) R10=fp0 fp-16=????mmmm fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0 fp-200=
; if (pckt.flags & F_SYN_SET) {
918: (67) r1 <<= 3                    ; R1_w=8
; 
919: (0f) r0 += r1
last_idx 919 first_idx 918
regs=2 stack=0 before 918: (67) r1 <<= 3
parent didn't have regs=2 stack=0 marks: R0_r=map_value(off=0,ks=4,vs=16,imm=0) R1_rw=P1 R2_w=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=40,vs=16,imm=0) R10=fp0 fp-16=????mmmm fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=0 fp-200=
last_idx 916 first_idx 912
regs=2 stack=0 before 916: (15) if r2 == 0x0 goto pc+1
regs=2 stack=0 before 915: (b7) r1 = 1
920: (79) r1 = *(u64 *)(r0 +0)        ; R0_w=map_value(off=8,ks=4,vs=16,imm=0) R1_w=scalar()
921: (07) r1 += 1                     ; R1_w=scalar()
922: (7b) *(u64 *)(r0 +0) = r1
923: safe

from 912 to 1857: safe

from 904 to 923: safe

from 902 to 1320: R0=map_value(off=0,ks=4,vs=20,imm=0) R6=ctx(off=0,imm=0) R7=pkt(off=0,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=40,vs=16,imm=0) R10=fp0 fp-16=????mmmm fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176_w=map_value fp-200=
; data_stats->v2 += 1;
1320: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1321: (07) r2 += -112                 ; R2_w=fp-112
; cval = bpf_map_lookup_elem(&ctl_array, &mac_addr_pos);
1322: (18) r1 = 0xffffa03553eeca00    ; R1_w=map_ptr(off=0,ks=4,vs=8,imm=0)
1324: (85) call bpf_map_lookup_elem#1
1325: safe

from 891 to 903: R0=scalar(id=688) R1=30000000000 R2=scalar(umin=30000000001) R6=ctx(off=0,imm=0) R7=pkt(off=0,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=40,vs=16,imm=0) R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-200=
; if (pckt.flow.proto == IPPROTO_TCP) {
903: (71) r1 = *(u8 *)(r10 -44)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (pckt.flow.proto == IPPROTO_TCP) {
904: (55) if r1 != 0x6 goto pc+18     ; R1_w=6
905: (05) goto pc+0
; __u32 lru_stats_key = MAX_VIPS + LRU_MISS_CNTR;
906: (62) *(u32 *)(r10 -16) = 513     ; R10=fp0 fp-16=????mmmm
907: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
908: (07) r2 += -16                   ; R2_w=fp-16
; bpf_map_lookup_elem(&stats, &lru_stats_key);
909: (18) r1 = 0xffffa03499be8000     ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
911: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=802,off=0,ks=4,vs=16,imm=0)
; if (!lru_stats) {
912: (15) if r0 == 0x0 goto pc+944    ; R0_w=map_value(off=0,ks=4,vs=16,imm=0)
; if (pckt.flags & F_SYN_SET) {
913: (71) r2 = *(u8 *)(r10 -36)       ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (pckt.flags & F_SYN_SET) {
914: (57) r2 &= 2                     ; R2_w=scalar(umax=2,var_off=(0x0; 0x2))
915: (b7) r1 = 1                      ; R1=1
916: (15) if r2 == 0x0 goto pc+1      ; R2=scalar(umax=2,var_off=(0x0; 0x2))
917: (b7) r1 = 0                      ; R1_w=0
; if (pckt.flags & F_SYN_SET) {
918: (67) r1 <<= 3                    ; R1_w=0
; 
919: (0f) r0 += r1
last_idx 919 first_idx 916
regs=2 stack=0 before 918: (67) r1 <<= 3
regs=2 stack=0 before 917: (b7) r1 = 0
920: R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=P0
920: (79) r1 = *(u64 *)(r0 +0)        ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
921: (07) r1 += 1                     ; R1_w=scalar()
922: (7b) *(u64 *)(r0 +0) = r1        ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
923: (b7) r7 = 0                      ; R7_w=0
; struct real_pos_lru new_dst_lru = {};
924: (7b) *(u64 *)(r10 -8) = r7
last_idx 924 first_idx 916
regs=80 stack=0 before 923: (b7) r7 = 0
925: R7_w=P0 R10=fp0 fp-8_w=00000000
925: (7b) *(u64 *)(r10 -16) = r7      ; R7_w=P0 R10=fp0 fp-16_w=00000000
926: (05) goto pc+0
; __u32 conn_rate_key = MAX_VIPS + NEW_CONN_RATE_CNTR;
927: (62) *(u32 *)(r10 -28) = 514     ; R10=fp0 fp-32=mmmm????
928: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; 
929: (07) r2 += -28                   ; R2_w=fp-28
; bpf_map_lookup_elem(&stats, &conn_rate_key);
930: (18) r1 = 0xffffa03499be8000     ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
932: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=803,off=0,ks=4,vs=16,imm=0)
933: (bf) r9 = r0                     ; R0_w=map_value_or_null(id=803,off=0,ks=4,vs=16,imm=0) R9_w=map_value_or_null(id=803,off=0,ks=4,vs=16,imm=0)
934: (b7) r8 = 1                      ; R8_w=1
; if (!conn_rate_stats) {
935: (15) if r9 == 0x0 goto pc+16     ; R9_w=map_value(off=0,ks=4,vs=16,imm=0)
; *cur_time = bpf_ktime_get_ns();
936: (85) call bpf_ktime_get_ns#5     ; R0=scalar()
937: (bf) r7 = r0                     ; R0=scalar(id=804) R7_w=scalar(id=804)
; if ((*cur_time - conn_rate_stats->v2) > ONE_SEC) {
938: (79) r1 = *(u64 *)(r9 +8)        ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=16,imm=0)
; if ((*cur_time - conn_rate_stats->v2) > ONE_SEC) {
939: (bf) r2 = r7                     ; R2_w=scalar(id=804) R7_w=scalar(id=804)
940: (1f) r2 -= r1                    ; R1_w=scalar() R2_w=scalar()
941: (b7) r1 = 1000000001             ; R1_w=1000000001
; if ((*cur_time - conn_rate_stats->v2) > ONE_SEC) {
942: (2d) if r1 > r2 goto pc+4        ; R1_w=1000000001 R2_w=scalar(umin=1000000001)
; conn_rate_stats->v2 = *cur_time;
943: (7b) *(u64 *)(r9 +8) = r7        ; R7_w=scalar(id=804) R9=map_value(off=0,ks=4,vs=16,imm=0)
944: (05) goto pc+0
; conn_rate_stats->v1 = 1;
945: (7a) *(u64 *)(r9 +0) = 1         ; R9=map_value(off=0,ks=4,vs=16,imm=0)
946: (05) goto pc+4
; if (conn_rate_stats->v1 > MAX_CONN_RATE) {
951: (b7) r8 = 0                      ; R8_w=0
952: (7b) *(u64 *)(r10 -192) = r8
last_idx 952 first_idx 945
regs=100 stack=0 before 951: (b7) r8 = 0
953: R8_w=P0 R10=fp0 fp-192_w=00000000
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
953: (79) r1 = *(u64 *)(r10 -144)     ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
954: (61) r1 = *(u32 *)(r1 +0)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
955: (57) r1 &= 8                     ; R1_w=scalar(umax=8,var_off=(0x0; 0x8))
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
956: (7b) *(u64 *)(r10 -208) = r7     ; R7=scalar(id=804) R10=fp0 fp-208_w=mmmmmmmm
957: (55) if r1 != 0x0 goto pc+9      ; R1_w=0
; a += k[0];
958: (71) r1 = *(u8 *)(r10 -68)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; a += (u32)k[1] << 8;
959: (7b) *(u64 *)(r10 -184) = r1     ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0 fp-184_w=
960: (71) r9 = *(u8 *)(r10 -67)       ; R9_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; a += (u32)k[2] << 16;
961: (71) r0 = *(u8 *)(r10 -66)       ; R0_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; b += *(u32*)(k + 4);
962: (61) r1 = *(u32 *)(r10 -76)      ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; c += *(u32*)(k + 8);
963: (61) r8 = *(u32 *)(r10 -72)      ; R8_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; a += *(u32*)(k);
964: (61) r3 = *(u32 *)(r10 -80)      ; R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; a += (u32)k[3] << 24;
965: (71) r4 = *(u8 *)(r10 -65)       ; R4_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
966: (05) goto pc+12
; __jhash_mix(a, b, c);
979: (1f) r3 -= r8                    ; R3_w=scalar(smin=-4294967295,smax=4294967295) R8=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; c += *(u32*)(k + 8);
980: (07) r8 += -559038209            ; R8_w=scalar(smin=-559038209,smax=3735929086)
981: (05) goto pc+0
982: (05) goto pc+0
983: (05) goto pc+0
984: (bc) w5 = w8                     ; R5_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R8_w=scalar(smin=-559038209,smax=3735929086)
; return (word << shift) | (word >> ((-shift) & 31));
985: (77) r5 >>= 28                   ; R5_w=scalar(umax=15,var_off=(0x0; 0xf))
986: (bf) r2 = r8                     ; R2_w=scalar(id=805,smin=-559038209,smax=3735929086) R8_w=scalar(id=805,smin=-559038209,smax=3735929086)
987: (67) r2 <<= 4                    ; R2_w=scalar(smax=9223372036854775792,umax=18446744073709551600,var_off=(0x0; 0xfffffffffffffff0),s32_max=2147483632,u32_max=-16)
988: (4f) r2 |= r5                    ; R2_w=scalar() R5_w=scalar(umax=15,var_off=(0x0; 0xf))
; __jhash_mix(a, b, c);
989: (af) r2 ^= r3                    ; R2_w=scalar() R3_w=scalar(smin=-4294967295,smax=4294967295)
990: (05) goto pc+0
991: (05) goto pc+0
992: (05) goto pc+0
993: (bc) w5 = w2                     ; R2=scalar() R5_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
994: (77) r5 >>= 26                   ; R5_w=scalar(umax=63,var_off=(0x0; 0x3f))
995: (bf) r7 = r2                     ; R2=scalar(id=806) R7_w=scalar(id=806)
996: (67) r7 <<= 6                    ; R7_w=scalar(smax=9223372036854775744,umax=18446744073709551552,var_off=(0x0; 0xffffffffffffffc0),s32_max=2147483584,u32_max=-64)
997: (4f) r7 |= r5                    ; R5_w=scalar(umax=63,var_off=(0x0; 0x3f)) R7_w=scalar()
; b += *(u32*)(k + 4);
998: (07) r1 += -559038209            ; R1_w=scalar(smin=-559038209,smax=3735929086)
; __jhash_mix(a, b, c);
999: (bf) r3 = r1                     ; R1_w=scalar(id=807,smin=-559038209,smax=3735929086) R3_w=scalar(id=807,smin=-559038209,smax=3735929086)
1000: (1f) r3 -= r2                   ; R2=scalar(id=806) R3_w=scalar()
1001: (af) r3 ^= r7                   ; R3_w=scalar() R7_w=scalar()
; a += (u32)k[3] << 24;
1002: (67) r4 <<= 24                  ; R4_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; a += (u32)k[2] << 16;
1003: (57) r0 &= 255                  ; R0_w=scalar(umax=255,var_off=(0x0; 0xff))
; a += (u32)k[2] << 16;
1004: (67) r0 <<= 16                  ; R0_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; a += (u32)k[3] << 24;
1005: (4f) r0 |= r4                   ; R0_w=scalar() R4_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; pckt->flow.ports,
1006: (61) r5 = *(u32 *)(r10 -48)     ; R5_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; b += initval;
1007: (07) r5 += -525483785           ; R5_w=scalar(smin=-525483785,smax=3769483510)
1008: (05) goto pc+0
1009: (7b) *(u64 *)(r10 -168) = r5    ; R5=scalar(smin=-525483785,smax=3769483510) R10=fp0 fp-168_w=
1010: (05) goto pc+0
1011: (05) goto pc+0
1012: (bc) w4 = w5                    ; R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R5=scalar(smin=-525483785,smax=3769483510)
; return (word << shift) | (word >> ((-shift) & 31));
1013: (77) r4 >>= 18                  ; R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1014: (bf) r7 = r5                    ; R5=scalar(id=808,smin=-525483785,smax=3769483510) R7_w=scalar(id=808,smin=-525483785,smax=3769483510)
1015: (67) r7 <<= 14                  ; R7_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1016: (4f) r7 |= r4                   ; R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff)) R7_w=scalar()
; __jhash_final(a, b, c);
1017: (a7) r5 ^= -525483785           ; R5_w=scalar()
1018: (1f) r5 -= r7                   ; R5_w=scalar() R7_w=scalar()
; __jhash_mix(a, b, c);
1019: (0f) r1 += r8                   ; R1_w=scalar(smin=-1118076418,smax=7471858172) R8=scalar(id=805,smin=-559038209,smax=3735929086)
; a += (u32)k[1] << 8;
1020: (57) r9 &= 255                  ; R9_w=scalar(umax=255,var_off=(0x0; 0xff))
; a += (u32)k[1] << 8;
1021: (67) r9 <<= 8                   ; R9_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; a += (u32)k[2] << 16;
1022: (4f) r0 |= r9                   ; R0_w=scalar() R9_w=scalar(umax=65280,var_off=(0x0; 0xff00))
1023: (79) r4 = *(u64 *)(r10 -184)    ; R4_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; a += k[0];
1024: (57) r4 &= 255                  ; R4_w=scalar(umax=255,var_off=(0x0; 0xff))
; a += (u32)k[1] << 8;
1025: (4f) r0 |= r4                   ; R0_w=scalar() R4_w=scalar(umax=255,var_off=(0x0; 0xff))
1026: (05) goto pc+0
1027: (05) goto pc+0
; __jhash_mix(a, b, c);
1028: (05) goto pc+0
1029: (bc) w7 = w3                    ; R3=scalar() R7_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1030: (77) r7 >>= 24                  ; R7_w=scalar(umax=255,var_off=(0x0; 0xff))
1031: (bf) r4 = r3                    ; R3=scalar(id=809) R4_w=scalar(id=809)
1032: (67) r4 <<= 8                   ; R4_w=scalar(smax=9223372036854775552,umax=18446744073709551360,var_off=(0x0; 0xffffffffffffff00),s32_max=2147483392,u32_max=-256)
1033: (4f) r4 |= r7                   ; R4_w=scalar() R7_w=scalar(umax=255,var_off=(0x0; 0xff))
; __jhash_mix(a, b, c);
1034: (0f) r2 += r1                   ; R1=scalar(smin=-1118076418,smax=7471858172) R2_w=scalar()
1035: (1f) r1 -= r3                   ; R1_w=scalar() R3=scalar(id=809)
1036: (af) r1 ^= r4                   ; R1_w=scalar() R4_w=scalar()
1037: (05) goto pc+0
1038: (05) goto pc+0
; __jhash_final(a, b, c);
1039: (7b) *(u64 *)(r10 -176) = r5    ; R5=scalar() R10=fp0 fp-176_w=mmmmmmmm
1040: (05) goto pc+0
1041: (bc) w4 = w5                    ; R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R5=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1042: (77) r4 >>= 21                  ; R4_w=scalar(umax=2047,var_off=(0x0; 0x7ff))
1043: (bf) r8 = r5                    ; R5=scalar(id=810) R8_w=scalar(id=810)
1044: (67) r8 <<= 11                  ; R8_w=scalar(smax=9223372036854773760,umax=18446744073709549568,var_off=(0x0; 0xfffffffffffff800),s32_max=2147481600,u32_max=-2048)
1045: (4f) r8 |= r4                   ; R4_w=scalar(umax=2047,var_off=(0x0; 0x7ff)) R8_w=scalar()
1046: (05) goto pc+0
1047: (05) goto pc+0
; __jhash_mix(a, b, c);
1048: (05) goto pc+0
1049: (bc) w4 = w1                    ; R1=scalar() R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1050: (77) r4 >>= 16                  ; R4_w=scalar(umax=65535,var_off=(0x0; 0xffff))
1051: (bf) r7 = r1                    ; R1=scalar(id=811) R7_w=scalar(id=811)
1052: (67) r7 <<= 16                  ; R7_w=scalar(smax=9223372036854710272,umax=18446744073709486080,var_off=(0x0; 0xffffffffffff0000),s32_max=2147418112,u32_max=-65536)
1053: (4f) r7 |= r4                   ; R4_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R7_w=scalar()
; __jhash_mix(a, b, c);
1054: (0f) r3 += r2                   ; R2=scalar() R3_w=scalar()
1055: (1f) r2 -= r1                   ; R1=scalar(id=811) R2_w=scalar()
1056: (af) r2 ^= r7                   ; R2_w=scalar() R7_w=scalar()
1057: (05) goto pc+0
1058: (05) goto pc+0
1059: (05) goto pc+0
1060: (bc) w7 = w2                    ; R2=scalar() R7_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1061: (77) r7 >>= 13                  ; R7_w=scalar(umax=524287,var_off=(0x0; 0x7ffff))
1062: (bf) r4 = r2                    ; R2=scalar(id=812) R4_w=scalar(id=812)
1063: (67) r4 <<= 19                  ; R4_w=scalar(smax=9223372036854251520,umax=18446744073709027328,var_off=(0x0; 0xfffffffffff80000),s32_max=2146959360,u32_max=-524288)
1064: (4f) r4 |= r7                   ; R4_w=scalar() R7_w=scalar(umax=524287,var_off=(0x0; 0x7ffff))
; __jhash_mix(a, b, c);
1065: (0f) r1 += r3                   ; R1_w=scalar() R3=scalar()
1066: (1f) r3 -= r2                   ; R2=scalar(id=812) R3_w=scalar()
1067: (af) r3 ^= r4                   ; R3_w=scalar() R4_w=scalar()
1068: (0f) r2 += r1                   ; R1_w=scalar() R2_w=scalar()
1069: (bf) r5 = r3                    ; R3_w=scalar(id=813) R5_w=scalar(id=813)
1070: (0f) r5 += r2                   ; R2_w=scalar() R5_w=scalar()
1071: (05) goto pc+0
1072: (05) goto pc+0
1073: (05) goto pc+0
1074: (bc) w4 = w5                    ; R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R5=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1075: (77) r4 >>= 18                  ; R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1076: (bf) r7 = r5                    ; R5=scalar(id=814) R7_w=scalar(id=814)
1077: (67) r7 <<= 14                  ; R7_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1078: (4f) r7 |= r4                   ; R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff)) R7_w=scalar()
; __jhash_mix(a, b, c);
1079: (05) goto pc+0
1080: (05) goto pc+0
1081: (05) goto pc+0
1082: (bc) w4 = w3                    ; R3=scalar(id=813) R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1083: (77) r4 >>= 28                  ; R4_w=scalar(umax=15,var_off=(0x0; 0xf))
; __jhash_mix(a, b, c);
1084: (1f) r1 -= r3                   ; R1_w=scalar() R3=scalar(id=813)
; return (word << shift) | (word >> ((-shift) & 31));
1085: (67) r3 <<= 4                   ; R3_w=scalar(smax=9223372036854775792,umax=18446744073709551600,var_off=(0x0; 0xfffffffffffffff0),s32_max=2147483632,u32_max=-16)
1086: (4f) r3 |= r4                   ; R3_w=scalar() R4_w=scalar(umax=15,var_off=(0x0; 0xf))
; __jhash_mix(a, b, c);
1087: (af) r1 ^= r3                   ; R1_w=scalar() R3_w=scalar()
; a += k[0];
1088: (0f) r2 += r0                   ; R0=scalar() R2_w=scalar()
; __jhash_final(a, b, c);
1089: (af) r1 ^= r5                   ; R1_w=scalar() R5=scalar(id=814)
1090: (1f) r1 -= r7                   ; R1_w=scalar() R7=scalar()
1091: (05) goto pc+0
1092: (05) goto pc+0
1093: (05) goto pc+0
1094: (bc) w3 = w1                    ; R1=scalar() R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1095: (77) r3 >>= 21                  ; R3_w=scalar(umax=2047,var_off=(0x0; 0x7ff))
1096: (bf) r4 = r1                    ; R1=scalar(id=815) R4_w=scalar(id=815)
1097: (67) r4 <<= 11                  ; R4_w=scalar(smax=9223372036854773760,umax=18446744073709549568,var_off=(0x0; 0xfffffffffffff800),s32_max=2147481600,u32_max=-2048)
1098: (4f) r4 |= r3                   ; R3_w=scalar(umax=2047,var_off=(0x0; 0x7ff)) R4_w=scalar()
; __jhash_final(a, b, c);
1099: (bf) r3 = r1                    ; R1=scalar(id=815) R3_w=scalar(id=815)
1100: (af) r3 ^= r2                   ; R2=scalar() R3_w=scalar()
1101: (1f) r3 -= r4                   ; R3_w=scalar() R4_w=scalar()
1102: (05) goto pc+0
1103: (05) goto pc+0
1104: (05) goto pc+0
1105: (bc) w2 = w3                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1106: (77) r2 >>= 7                   ; R2_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff))
1107: (bf) r4 = r3                    ; R3=scalar(id=816) R4_w=scalar(id=816)
1108: (67) r4 <<= 25                  ; R4_w=scalar(smax=9223372036821221376,umax=18446744073675997184,var_off=(0x0; 0xfffffffffe000000),s32_max=2113929216,u32_max=-33554432)
1109: (4f) r4 |= r2                   ; R2_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff)) R4_w=scalar()
; __jhash_final(a, b, c);
1110: (bf) r7 = r3                    ; R3=scalar(id=816) R7_w=scalar(id=816)
1111: (af) r7 ^= r5                   ; R5=scalar(id=814) R7_w=scalar()
1112: (1f) r7 -= r4                   ; R4_w=scalar() R7_w=scalar()
1113: (05) goto pc+0
1114: (05) goto pc+0
1115: (05) goto pc+0
1116: (bc) w2 = w7                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R7=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1117: (77) r2 >>= 16                  ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff))
1118: (bf) r4 = r7                    ; R4_w=scalar(id=817) R7=scalar(id=817)
1119: (67) r4 <<= 16                  ; R4_w=scalar(smax=9223372036854710272,umax=18446744073709486080,var_off=(0x0; 0xffffffffffff0000),s32_max=2147418112,u32_max=-65536)
1120: (4f) r4 |= r2                   ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R4_w=scalar()
; __jhash_final(a, b, c);
1121: (bf) r2 = r7                    ; R2_w=scalar(id=817) R7=scalar(id=817)
1122: (af) r2 ^= r1                   ; R1=scalar(id=815) R2_w=scalar()
1123: (1f) r2 -= r4                   ; R2_w=scalar() R4_w=scalar()
1124: (05) goto pc+0
1125: (bc) w1 = w2                    ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R2=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1126: (77) r1 >>= 28                  ; R1_w=scalar(umax=15,var_off=(0x0; 0xf))
1127: (bf) r4 = r2                    ; R2=scalar(id=818) R4_w=scalar(id=818)
1128: (67) r4 <<= 4                   ; R4_w=scalar(smax=9223372036854775792,umax=18446744073709551600,var_off=(0x0; 0xfffffffffffffff0),s32_max=2147483632,u32_max=-16)
1129: (4f) r4 |= r1                   ; R1_w=scalar(umax=15,var_off=(0x0; 0xf)) R4_w=scalar()
; __jhash_final(a, b, c);
1130: (bf) r1 = r2                    ; R1_w=scalar(id=818) R2=scalar(id=818)
1131: (af) r1 ^= r3                   ; R1_w=scalar() R3=scalar(id=816)
1132: (1f) r1 -= r4                   ; R1_w=scalar() R4_w=scalar()
1133: (05) goto pc+0
1134: (05) goto pc+0
1135: (05) goto pc+0
1136: (bc) w3 = w1                    ; R1=scalar() R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1137: (77) r3 >>= 18                  ; R3_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1138: (bf) r4 = r1                    ; R1=scalar(id=819) R4_w=scalar(id=819)
1139: (67) r4 <<= 14                  ; R4_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1140: (4f) r4 |= r3                   ; R3_w=scalar(umax=16383,var_off=(0x0; 0x3fff)) R4_w=scalar()
; __jhash_final(a, b, c);
1141: (af) r1 ^= r7                   ; R1_w=scalar() R7=scalar(id=817)
1142: (1f) r1 -= r4                   ; R1_w=scalar() R4_w=scalar()
1143: (05) goto pc+0
1144: (05) goto pc+0
1145: (05) goto pc+0
1146: (bc) w4 = w1                    ; R1=scalar() R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1147: (77) r4 >>= 8                   ; R4_w=scalar(umax=16777215,var_off=(0x0; 0xffffff))
1148: (bf) r5 = r1                    ; R1=scalar(id=820) R5_w=scalar(id=820)
1149: (67) r5 <<= 24                  ; R5_w=scalar(smax=9223372036837998592,umax=18446744073692774400,var_off=(0x0; 0xffffffffff000000),s32_max=2130706432,u32_max=-16777216)
1150: (4f) r5 |= r4                   ; R4_w=scalar(umax=16777215,var_off=(0x0; 0xffffff)) R5_w=scalar()
; __jhash_final(a, b, c);
1151: (af) r1 ^= r2                   ; R1_w=scalar() R2=scalar(id=818)
; a += initval;
1152: (1f) r1 -= r5                   ; R1_w=scalar() R5_w=scalar()
1153: (07) r1 += -525483785           ; R1_w=scalar()
1154: (79) r7 = *(u64 *)(r10 -176)    ; R7_w=scalar() R10=fp0
; __jhash_final(a, b, c);
1155: (af) r1 ^= r7                   ; R1_w=scalar() R7_w=scalar()
1156: (1f) r1 -= r8                   ; R1_w=scalar() R8=scalar()
1157: (05) goto pc+0
1158: (bc) w2 = w1                    ; R1=scalar() R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1159: (77) r2 >>= 7                   ; R2_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff))
1160: (bf) r4 = r1                    ; R1=scalar(id=821) R4_w=scalar(id=821)
1161: (67) r4 <<= 25                  ; R4_w=scalar(smax=9223372036821221376,umax=18446744073675997184,var_off=(0x0; 0xfffffffffe000000),s32_max=2113929216,u32_max=-33554432)
1162: (4f) r4 |= r2                   ; R2_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff)) R4_w=scalar()
; __jhash_final(a, b, c);
1163: (bf) r0 = r1                    ; R0_w=scalar(id=821) R1=scalar(id=821)
1164: (79) r2 = *(u64 *)(r10 -168)    ; R2_w=scalar(smin=-525483785,smax=3769483510) R10=fp0
1165: (af) r0 ^= r2                   ; R0_w=scalar() R2_w=scalar(smin=-525483785,smax=3769483510)
1166: (1f) r0 -= r4                   ; R0_w=scalar() R4_w=scalar()
1167: (05) goto pc+0
1168: (05) goto pc+0
1169: (05) goto pc+0
1170: (bc) w2 = w0                    ; R0=scalar() R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1171: (77) r2 >>= 16                  ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff))
1172: (bf) r5 = r0                    ; R0=scalar(id=822) R5_w=scalar(id=822)
1173: (67) r5 <<= 16                  ; R5_w=scalar(smax=9223372036854710272,umax=18446744073709486080,var_off=(0x0; 0xffffffffffff0000),s32_max=2147418112,u32_max=-65536)
1174: (4f) r5 |= r2                   ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R5_w=scalar()
; __jhash_final(a, b, c);
1175: (bf) r4 = r0                    ; R0=scalar(id=822) R4_w=scalar(id=822)
1176: (af) r4 ^= r7                   ; R4_w=scalar() R7=scalar()
1177: (1f) r4 -= r5                   ; R4_w=scalar() R5_w=scalar()
1178: (05) goto pc+0
1179: (bc) w2 = w4                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R4=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1180: (77) r2 >>= 28                  ; R2_w=scalar(umax=15,var_off=(0x0; 0xf))
1181: (bf) r5 = r4                    ; R4=scalar(id=823) R5_w=scalar(id=823)
1182: (67) r5 <<= 4                   ; R5_w=scalar(smax=9223372036854775792,umax=18446744073709551600,var_off=(0x0; 0xfffffffffffffff0),s32_max=2147483632,u32_max=-16)
1183: (4f) r5 |= r2                   ; R2_w=scalar(umax=15,var_off=(0x0; 0xf)) R5_w=scalar()
; __jhash_final(a, b, c);
1184: (bf) r2 = r4                    ; R2_w=scalar(id=823) R4=scalar(id=823)
1185: (af) r2 ^= r1                   ; R1=scalar(id=821) R2_w=scalar()
1186: (1f) r2 -= r5                   ; R2_w=scalar() R5_w=scalar()
1187: (05) goto pc+0
1188: (05) goto pc+0
1189: (05) goto pc+0
1190: (bc) w1 = w2                    ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R2=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1191: (77) r1 >>= 18                  ; R1_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1192: (bf) r5 = r2                    ; R2=scalar(id=824) R5_w=scalar(id=824)
1193: (67) r5 <<= 14                  ; R5_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1194: (4f) r5 |= r1                   ; R1_w=scalar(umax=16383,var_off=(0x0; 0x3fff)) R5_w=scalar()
; __jhash_final(a, b, c);
1195: (af) r2 ^= r0                   ; R0=scalar(id=822) R2_w=scalar()
1196: (1f) r2 -= r5                   ; R2_w=scalar() R5_w=scalar()
1197: (05) goto pc+0
1198: (bc) w1 = w2                    ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R2=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1199: (77) r1 >>= 8                   ; R1_w=scalar(umax=16777215,var_off=(0x0; 0xffffff))
1200: (bf) r3 = r2                    ; R2=scalar(id=825) R3_w=scalar(id=825)
1201: (67) r3 <<= 24                  ; R3_w=scalar(smax=9223372036837998592,umax=18446744073692774400,var_off=(0x0; 0xffffffffff000000),s32_max=2130706432,u32_max=-16777216)
1202: (4f) r3 |= r1                   ; R1_w=scalar(umax=16777215,var_off=(0x0; 0xffffff)) R3_w=scalar()
; __jhash_final(a, b, c);
1203: (af) r2 ^= r4                   ; R2_w=scalar() R4=scalar(id=823)
1204: (1f) r2 -= r3                   ; R2_w=scalar() R3_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1205: (79) r1 = *(u64 *)(r10 -144)    ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
1206: (61) r1 = *(u32 *)(r1 +4)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; key = RING_SIZE * (vip_info->vip_num) + hash;
1207: (27) r1 *= 65537                ; R1_w=scalar(umax=281479271612415,var_off=(0x0; 0x1ffffffffffff))
; __jhash_final(a, b, c);
1208: (bc) w2 = w2                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
1209: (05) goto pc+0
; hash = get_packet_hash(pckt, hash_16bytes) % RING_SIZE;
1210: (97) r2 %= 65537                ; R2_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1211: (0f) r2 += r1                   ; R1_w=scalar(umax=281479271612415,var_off=(0x0; 0x1ffffffffffff)) R2_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1212: (63) *(u32 *)(r10 -20) = r2     ; R2_w=scalar() R10=fp0 fp-24=mmmm????
1213: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1214: (07) r2 += -20                  ; R2_w=fp-20
; real_pos = bpf_map_lookup_elem(&ch_rings, &key);
1215: (18) r1 = 0xffffaebaa0631000    ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
1217: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=826,off=0,ks=4,vs=4,imm=0)
; if (!real_pos) {
1218: (15) if r0 == 0x0 goto pc+638   ; R0=map_value(off=0,ks=4,vs=4,imm=0)
; key = *real_pos;
1219: (61) r1 = *(u32 *)(r0 +0)       ; R0=map_value(off=0,ks=4,vs=4,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; key = *real_pos;
1220: (63) *(u32 *)(r10 -20) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-24=mmmm????
1221: (79) r8 = *(u64 *)(r10 -192)    ; R8_w=P0 R10=fp0
; if (key == 0) {
1222: (55) if r1 != 0x0 goto pc+12    ; R1_w=0
1223: (05) goto pc+0
; __u32 ch_drop_stats_key = MAX_VIPS + CH_DROP_STATS;
1224: (62) *(u32 *)(r10 -28) = 521    ; R10=fp0 fp-32=mmmm????
1225: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1226: (07) r2 += -28                  ; R2_w=fp-28
; bpf_map_lookup_elem(&stats, &ch_drop_stats_key);
1227: (18) r1 = 0xffffa03499be8000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
1229: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=827,off=0,ks=4,vs=16,imm=0)
; if (!ch_drop_stats) {
1230: (15) if r0 == 0x0 goto pc+3     ; R0=map_value(off=0,ks=4,vs=16,imm=0)
; ch_drop_stats->v2 += 1;
1231: (79) r1 = *(u64 *)(r0 +8)       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1232: (07) r1 += 1                    ; R1_w=scalar()
1233: (7b) *(u64 *)(r0 +8) = r1       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
; pckt->real_index = key;
1234: (61) r1 = *(u32 *)(r10 -20)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; pckt->real_index = key;
1235: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1236: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1237: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1238: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1240: (85) call bpf_map_lookup_elem#1
frame 8: propagating r0
1241: safe

from 1230 to 1234: R0=0 R6=ctx(off=0,imm=0) R7=scalar() R8=P0 R9=scalar(umax=65280,var_off=(0x0; 0xff00)) R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184= fp-192=00000000 fp-200= fp-208=mmmmmmmm
; pckt->real_index = key;
1234: (61) r1 = *(u32 *)(r10 -20)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; pckt->real_index = key;
1235: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1236: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1237: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1238: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1240: (85) call bpf_map_lookup_elem#1
frame 8: propagating r0
1241: safe

from 1222 to 1235: R0=map_value(off=0,ks=4,vs=4,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6=ctx(off=0,imm=0) R7=scalar() R8_w=P0 R9=scalar(umax=65280,var_off=(0x0; 0xff00)) R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184= fp-192=00000000 fp-200= fp-208=mmmmmmmm
; pckt->real_index = key;
1235: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1236: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1237: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1238: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1240: (85) call bpf_map_lookup_elem#1
frame 8: propagating r0
1241: safe

from 1218 to 1857: safe

from 957 to 967: R0=scalar(id=804) R1=scalar(umax=8,var_off=(0x0; 0x8)) R2=scalar(umin=1000000001) R6=ctx(off=0,imm=0) R7=scalar(id=804) R8=P0 R9=map_value(off=0,ks=4,vs=16,imm=0) R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-192=00000000 fp-200= fp-208=mmmmmmmm
; pckt->flow.port16[0] = pckt->flow.port16[1];
967: (69) r1 = *(u16 *)(r10 -46)      ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; pckt->flow.port16[0] = pckt->flow.port16[1];
968: (6b) *(u16 *)(r10 -48) = r1      ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-48=
969: (05) goto pc+0
; memset(pckt->flow.srcv6, 0, 16);
970: (7a) *(u64 *)(r10 -80) = 0       ; R10=fp0 fp-80_w=mmmmmmmm
971: (b7) r1 = 0                      ; R1_w=0
972: (7b) *(u64 *)(r10 -184) = r1
last_idx 972 first_idx 967
regs=2 stack=0 before 971: (b7) r1 = 0
973: R1_w=P0 R10=fp0 fp-184_w=00000000
973: (7a) *(u64 *)(r10 -72) = 0       ; R10=fp0 fp-72_w=mmmmmmmm
974: (b7) r9 = 0                      ; R9_w=0
975: (b7) r0 = 0                      ; R0_w=0
976: (b7) r8 = 0                      ; R8_w=0
977: (b7) r3 = 0                      ; R3_w=0
978: (b7) r4 = 0                      ; R4_w=0
; __jhash_mix(a, b, c);
979: (1f) r3 -= r8                    ; R3_w=0 R8_w=0
; c += *(u32*)(k + 8);
980: (07) r8 += -559038209            ; R8_w=-559038209
981: (05) goto pc+0
982: (05) goto pc+0
983: (05) goto pc+0
984: (bc) w5 = w8                     ; R5_w=3735929087 R8=-559038209
; return (word << shift) | (word >> ((-shift) & 31));
985: (77) r5 >>= 28                   ; R5_w=13
986: (bf) r2 = r8                     ; R2_w=-559038209 R8=-559038209
987: (67) r2 <<= 4                    ; R2_w=-8944611344
988: (4f) r2 |= r5                    ; R2_w=-8944611331 R5_w=13
; __jhash_mix(a, b, c);
989: (af) r2 ^= r3                    ; R2_w=-8944611331 R3=0
990: (05) goto pc+0
991: (05) goto pc+0
992: (05) goto pc+0
993: (bc) w5 = w2                     ; R2=-8944611331 R5_w=3940290557
; return (word << shift) | (word >> ((-shift) & 31));
994: (77) r5 >>= 26                   ; R5_w=58
995: (bf) r7 = r2                     ; R2=-8944611331 R7_w=-8944611331
996: (67) r7 <<= 6                    ; R7_w=-572455125184
997: (4f) r7 |= r5                    ; R5_w=58 R7_w=-572455125126
; b += *(u32*)(k + 4);
998: (07) r1 += -559038209            ; R1_w=P-559038209
; __jhash_mix(a, b, c);
999: (bf) r3 = r1                     ; R1_w=P-559038209 R3_w=P-559038209
1000: (1f) r3 -= r2
last_idx 1000 first_idx 991
regs=4 stack=0 before 999: (bf) r3 = r1
regs=4 stack=0 before 998: (07) r1 += -559038209
regs=4 stack=0 before 997: (4f) r7 |= r5
regs=4 stack=0 before 996: (67) r7 <<= 6
regs=4 stack=0 before 995: (bf) r7 = r2
regs=4 stack=0 before 994: (77) r5 >>= 26
regs=4 stack=0 before 993: (bc) w5 = w2
regs=4 stack=0 before 992: (05) goto pc+0
regs=4 stack=0 before 991: (05) goto pc+0
parent didn't have regs=4 stack=0 marks: R0=0 R1_r=P0 R2_rw=P-8944611331 R3=0 R4=0 R5_w=13 R6=ctx(off=0,imm=0) R7=scalar(id=804) R8=-559038209 R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-184=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
last_idx 990 first_idx 982
regs=4 stack=0 before 990: (05) goto pc+0
regs=4 stack=0 before 989: (af) r2 ^= r3
regs=c stack=0 before 988: (4f) r2 |= r5
regs=2c stack=0 before 987: (67) r2 <<= 4
regs=2c stack=0 before 986: (bf) r2 = r8
regs=128 stack=0 before 985: (77) r5 >>= 28
regs=128 stack=0 before 984: (bc) w5 = w8
regs=108 stack=0 before 983: (05) goto pc+0
regs=108 stack=0 before 982: (05) goto pc+0
parent didn't have regs=108 stack=0 marks: R0_w=0 R1_rw=P0 R2=scalar(umin=1000000001) R3_rw=P0 R4_w=0 R6=ctx(off=0,imm=0) R7=scalar(id=804) R8_rw=P-559038209 R9_w=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72_w=mmmmmmmm fp-80_w=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-184_w=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
last_idx 981 first_idx 967
regs=108 stack=0 before 981: (05) goto pc+0
regs=108 stack=0 before 980: (07) r8 += -559038209
regs=108 stack=0 before 979: (1f) r3 -= r8
regs=108 stack=0 before 978: (b7) r4 = 0
regs=108 stack=0 before 977: (b7) r3 = 0
regs=100 stack=0 before 976: (b7) r8 = 0
1001: (af) r3 ^= r7
last_idx 1001 first_idx 991
regs=80 stack=0 before 1000: (1f) r3 -= r2
regs=80 stack=0 before 999: (bf) r3 = r1
regs=80 stack=0 before 998: (07) r1 += -559038209
regs=80 stack=0 before 997: (4f) r7 |= r5
regs=a0 stack=0 before 996: (67) r7 <<= 6
regs=a0 stack=0 before 995: (bf) r7 = r2
regs=24 stack=0 before 994: (77) r5 >>= 26
regs=24 stack=0 before 993: (bc) w5 = w2
regs=4 stack=0 before 992: (05) goto pc+0
regs=4 stack=0 before 991: (05) goto pc+0
parent already had regs=4 stack=0 marks: R0=0 R1_r=P0 R2_rw=P-8944611331 R3=0 R4=0 R5_w=13 R6=ctx(off=0,imm=0) R7=scalar(id=804) R8=-559038209 R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-184=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
; a += (u32)k[3] << 24;
1002: (67) r4 <<= 24                  ; R4_w=0
; a += (u32)k[2] << 16;
1003: (57) r0 &= 255                  ; R0_w=0
; a += (u32)k[2] << 16;
1004: (67) r0 <<= 16                  ; R0_w=0
; a += (u32)k[3] << 24;
1005: (4f) r0 |= r4                   ; R0_w=0 R4_w=0
; pckt->flow.ports,
1006: (61) r5 = *(u32 *)(r10 -48)     ; R5_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; b += initval;
1007: (07) r5 += -525483785           ; R5_w=scalar(smin=-525483785,smax=3769483510)
1008: (05) goto pc+0
1009: (7b) *(u64 *)(r10 -168) = r5    ; R5=scalar(smin=-525483785,smax=3769483510) R10=fp0 fp-168_w=
1010: (05) goto pc+0
1011: (05) goto pc+0
1012: (bc) w4 = w5                    ; R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R5=scalar(smin=-525483785,smax=3769483510)
; return (word << shift) | (word >> ((-shift) & 31));
1013: (77) r4 >>= 18                  ; R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1014: (bf) r7 = r5                    ; R5=scalar(id=834,smin=-525483785,smax=3769483510) R7_w=scalar(id=834,smin=-525483785,smax=3769483510)
1015: (67) r7 <<= 14                  ; R7_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1016: (4f) r7 |= r4                   ; R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff)) R7_w=scalar()
; __jhash_final(a, b, c);
1017: (a7) r5 ^= -525483785           ; R5_w=scalar()
1018: (1f) r5 -= r7                   ; R5_w=scalar() R7_w=scalar()
; __jhash_mix(a, b, c);
1019: (0f) r1 += r8
last_idx 1019 first_idx 1009
regs=100 stack=0 before 1018: (1f) r5 -= r7
regs=100 stack=0 before 1017: (a7) r5 ^= -525483785
regs=100 stack=0 before 1016: (4f) r7 |= r4
regs=100 stack=0 before 1015: (67) r7 <<= 14
regs=100 stack=0 before 1014: (bf) r7 = r5
regs=100 stack=0 before 1013: (77) r4 >>= 18
regs=100 stack=0 before 1012: (bc) w4 = w5
regs=100 stack=0 before 1011: (05) goto pc+0
regs=100 stack=0 before 1010: (05) goto pc+0
regs=100 stack=0 before 1009: (7b) *(u64 *)(r10 -168) = r5
parent didn't have regs=100 stack=0 marks: R0_w=0 R1_rw=P-559038209 R2=P-8944611331 R3_w=P-570076017032 R4_w=0 R5_rw=scalar(smin=-525483785,smax=3769483510) R6=ctx(off=0,imm=0) R7_w=P-572455125126 R8_r=P-559038209 R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-184=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
last_idx 1008 first_idx 991
regs=100 stack=0 before 1008: (05) goto pc+0
regs=100 stack=0 before 1007: (07) r5 += -525483785
regs=100 stack=0 before 1006: (61) r5 = *(u32 *)(r10 -48)
regs=100 stack=0 before 1005: (4f) r0 |= r4
regs=100 stack=0 before 1004: (67) r0 <<= 16
regs=100 stack=0 before 1003: (57) r0 &= 255
regs=100 stack=0 before 1002: (67) r4 <<= 24
regs=100 stack=0 before 1001: (af) r3 ^= r7
regs=100 stack=0 before 1000: (1f) r3 -= r2
regs=100 stack=0 before 999: (bf) r3 = r1
regs=100 stack=0 before 998: (07) r1 += -559038209
regs=100 stack=0 before 997: (4f) r7 |= r5
regs=100 stack=0 before 996: (67) r7 <<= 6
regs=100 stack=0 before 995: (bf) r7 = r2
regs=100 stack=0 before 994: (77) r5 >>= 26
regs=100 stack=0 before 993: (bc) w5 = w2
regs=100 stack=0 before 992: (05) goto pc+0
regs=100 stack=0 before 991: (05) goto pc+0
parent didn't have regs=100 stack=0 marks: R0_r=0 R1_r=P0 R2_rw=P-8944611331 R3=0 R4_r=0 R5_w=13 R6=ctx(off=0,imm=0) R7=scalar(id=804) R8_r=P-559038209 R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48_r= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-184=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
last_idx 990 first_idx 982
regs=100 stack=0 before 990: (05) goto pc+0
regs=100 stack=0 before 989: (af) r2 ^= r3
regs=100 stack=0 before 988: (4f) r2 |= r5
regs=100 stack=0 before 987: (67) r2 <<= 4
regs=100 stack=0 before 986: (bf) r2 = r8
regs=100 stack=0 before 985: (77) r5 >>= 28
regs=100 stack=0 before 984: (bc) w5 = w8
regs=100 stack=0 before 983: (05) goto pc+0
regs=100 stack=0 before 982: (05) goto pc+0
parent already had regs=100 stack=0 marks: R0_rw=0 R1_rw=P0 R2=scalar(umin=1000000001) R3_rw=P0 R4_rw=0 R6=ctx(off=0,imm=0) R7=scalar(id=804) R8_rw=P-559038209 R9_w=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48_r= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72_w=mmmmmmmm fp-80_w=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-184_w=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
; a += (u32)k[1] << 8;
1020: (57) r9 &= 255                  ; R9_w=0
; a += (u32)k[1] << 8;
1021: (67) r9 <<= 8                   ; R9_w=0
; a += (u32)k[2] << 16;
1022: (4f) r0 |= r9                   ; R0_w=0 R9_w=0
1023: (79) r4 = *(u64 *)(r10 -184)    ; R4_w=P0 R10=fp0
; a += k[0];
1024: (57) r4 &= 255                  ; R4_w=P0
; a += (u32)k[1] << 8;
1025: (4f) r0 |= r4                   ; R0_w=0 R4_w=P0
1026: (05) goto pc+0
1027: (05) goto pc+0
; __jhash_mix(a, b, c);
1028: (05) goto pc+0
1029: (bc) w7 = w3                    ; R3=P-570076017032 R7_w=P1154633336
; return (word << shift) | (word >> ((-shift) & 31));
1030: (77) r7 >>= 24                  ; R7_w=P68
1031: (bf) r4 = r3                    ; R3=P-570076017032 R4_w=P-570076017032
1032: (67) r4 <<= 8                   ; R4_w=P-145939460360192
1033: (4f) r4 |= r7                   ; R4_w=P-145939460360124 R7_w=P68
; __jhash_mix(a, b, c);
1034: (0f) r2 += r1                   ; R1=P-1118076418 R2_w=P-10062687749
1035: (1f) r1 -= r3                   ; R1_w=P568957940614 R3=P-570076017032
1036: (af) r1 ^= r4                   ; R1_w=P-145407547585598 R4_w=P-145939460360124
1037: (05) goto pc+0
1038: (05) goto pc+0
; __jhash_final(a, b, c);
1039: (7b) *(u64 *)(r10 -176) = r5    ; R5=scalar() R10=fp0 fp-176_w=mmmmmmmm
1040: (05) goto pc+0
1041: (bc) w4 = w5                    ; R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R5=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1042: (77) r4 >>= 21                  ; R4_w=scalar(umax=2047,var_off=(0x0; 0x7ff))
1043: (bf) r8 = r5                    ; R5=scalar(id=836) R8_w=scalar(id=836)
1044: (67) r8 <<= 11                  ; R8_w=scalar(smax=9223372036854773760,umax=18446744073709549568,var_off=(0x0; 0xfffffffffffff800),s32_max=2147481600,u32_max=-2048)
1045: (4f) r8 |= r4                   ; R4_w=scalar(umax=2047,var_off=(0x0; 0x7ff)) R8_w=scalar()
1046: (05) goto pc+0
1047: (05) goto pc+0
; __jhash_mix(a, b, c);
1048: (05) goto pc+0
1049: (bc) w4 = w1                    ; R1=P-145407547585598 R4_w=P2865187778
; return (word << shift) | (word >> ((-shift) & 31));
1050: (77) r4 >>= 16                  ; R4_w=P43719
1051: (bf) r7 = r1                    ; R1=P-145407547585598 R7_w=P-145407547585598
1052: (67) r7 <<= 16                  ; R7_w=P8917315035139801088
1053: (4f) r7 |= r4                   ; R4_w=P43719 R7_w=P8917315035139844807
; __jhash_mix(a, b, c);
1054: (0f) r3 += r2                   ; R2=P-10062687749 R3_w=P-580138704781
1055: (1f) r2 -= r1                   ; R1=P-145407547585598 R2_w=P145397484897849
1056: (af) r2 ^= r7                   ; R2_w=P8917178920830430462 R7_w=P8917315035139844807
1057: (05) goto pc+0
1058: (05) goto pc+0
1059: (05) goto pc+0
1060: (bc) w7 = w2                    ; R2=P8917178920830430462 R7_w=P3065179390
; return (word << shift) | (word >> ((-shift) & 31));
1061: (77) r7 >>= 13                  ; R7_w=P374167
1062: (bf) r4 = r2                    ; R2=P8917178920830430462 R4_w=P8917178920830430462
1063: (67) r4 <<= 19                  ; R4_w=P8637259322254950400
1064: (4f) r4 |= r7                   ; R4_w=P8637259322255324567 R7_w=P374167
; __jhash_mix(a, b, c);
1065: (0f) r1 += r3                   ; R1_w=P-145987686290379 R3=P-580138704781
1066: (1f) r3 -= r2                   ; R2=P8917178920830430462 R3_w=P-8917179500969135243
1067: (af) r3 ^= r4                   ; R3_w=P-873023320690047262 R4_w=P8637259322255324567
1068: (0f) r2 += r1                   ; R1_w=P-145987686290379 R2_w=P8917032933144140083
1069: (bf) r5 = r3                    ; R3_w=P-873023320690047262 R5_w=P-873023320690047262
1070: (0f) r5 += r2                   ; R2_w=P8917032933144140083 R5_w=P8044009612454092821
1071: (05) goto pc+0
1072: (05) goto pc+0
1073: (05) goto pc+0
1074: (bc) w4 = w5                    ; R4_w=P2686935061 R5=P8044009612454092821
; return (word << shift) | (word >> ((-shift) & 31));
1075: (77) r4 >>= 18                  ; R4_w=P10249
1076: (bf) r7 = r5                    ; R5=P8044009612454092821 R7_w=P8044009612454092821
1077: (67) r7 <<= 14                  ; R7_w=P-8932916206889517056
1078: (4f) r7 |= r4                   ; R4_w=P10249 R7_w=P-8932916206889506807
; __jhash_mix(a, b, c);
1079: (05) goto pc+0
1080: (05) goto pc+0
1081: (05) goto pc+0
1082: (bc) w4 = w3                    ; R3=P-873023320690047262 R4_w=P1369655010
; return (word << shift) | (word >> ((-shift) & 31));
1083: (77) r4 >>= 28                  ; R4_w=P5
; __jhash_mix(a, b, c);
1084: (1f) r1 -= r3                   ; R1_w=P872877333003756883 R3=P-873023320690047262
; return (word << shift) | (word >> ((-shift) & 31));
1085: (67) r3 <<= 4                   ; R3_w=P4478370942668795424
1086: (4f) r3 |= r4                   ; R3_w=P4478370942668795429 R4_w=P5
; __jhash_mix(a, b, c);
1087: (af) r1 ^= r3                   ; R1_w=P3619570195461933942 R3_w=P4478370942668795429
; a += k[0];
1088: (0f) r2 += r0
last_idx 1088 first_idx 1080
regs=1 stack=0 before 1087: (af) r1 ^= r3
regs=1 stack=0 before 1086: (4f) r3 |= r4
regs=1 stack=0 before 1085: (67) r3 <<= 4
regs=1 stack=0 before 1084: (1f) r1 -= r3
regs=1 stack=0 before 1083: (77) r4 >>= 28
regs=1 stack=0 before 1082: (bc) w4 = w3
regs=1 stack=0 before 1081: (05) goto pc+0
regs=1 stack=0 before 1080: (05) goto pc+0
parent didn't have regs=1 stack=0 marks: R0_r=P0 R1_r=P-145987686290379 R2_r=P8917032933144140083 R3_r=P-873023320690047262 R4_w=P10249 R5=P8044009612454092821 R6=ctx(off=0,imm=0) R7_w=P-8932916206889506807 R8=scalar() R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
last_idx 1079 first_idx 1072
regs=1 stack=0 before 1079: (05) goto pc+0
regs=1 stack=0 before 1078: (4f) r7 |= r4
regs=1 stack=0 before 1077: (67) r7 <<= 14
regs=1 stack=0 before 1076: (bf) r7 = r5
regs=1 stack=0 before 1075: (77) r4 >>= 18
regs=1 stack=0 before 1074: (bc) w4 = w5
regs=1 stack=0 before 1073: (05) goto pc+0
regs=1 stack=0 before 1072: (05) goto pc+0
parent didn't have regs=1 stack=0 marks: R0_r=P0 R1_rw=P-145987686290379 R2_rw=P8917032933144140083 R3_rw=P-873023320690047262 R4_w=P8637259322255324567 R5_rw=P8044009612454092821 R6=ctx(off=0,imm=0) R7_w=P374167 R8=scalar() R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
last_idx 1071 first_idx 1058
regs=1 stack=0 before 1071: (05) goto pc+0
regs=1 stack=0 before 1070: (0f) r5 += r2
regs=1 stack=0 before 1069: (bf) r5 = r3
regs=1 stack=0 before 1068: (0f) r2 += r1
regs=1 stack=0 before 1067: (af) r3 ^= r4
regs=1 stack=0 before 1066: (1f) r3 -= r2
regs=1 stack=0 before 1065: (0f) r1 += r3
regs=1 stack=0 before 1064: (4f) r4 |= r7
regs=1 stack=0 before 1063: (67) r4 <<= 19
regs=1 stack=0 before 1062: (bf) r4 = r2
regs=1 stack=0 before 1061: (77) r7 >>= 13
regs=1 stack=0 before 1060: (bc) w7 = w2
regs=1 stack=0 before 1059: (05) goto pc+0
regs=1 stack=0 before 1058: (05) goto pc+0
parent didn't have regs=1 stack=0 marks: R0_r=P0 R1_r=P-145407547585598 R2_rw=P8917178920830430462 R3_rw=P-580138704781 R4_w=P43719 R5=scalar(id=836) R6=ctx(off=0,imm=0) R7_w=P8917315035139844807 R8=scalar() R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
last_idx 1057 first_idx 1047
regs=1 stack=0 before 1057: (05) goto pc+0
regs=1 stack=0 before 1056: (af) r2 ^= r7
regs=1 stack=0 before 1055: (1f) r2 -= r1
regs=1 stack=0 before 1054: (0f) r3 += r2
regs=1 stack=0 before 1053: (4f) r7 |= r4
regs=1 stack=0 before 1052: (67) r7 <<= 16
regs=1 stack=0 before 1051: (bf) r7 = r1
regs=1 stack=0 before 1050: (77) r4 >>= 16
regs=1 stack=0 before 1049: (bc) w4 = w1
regs=1 stack=0 before 1048: (05) goto pc+0
regs=1 stack=0 before 1047: (05) goto pc+0
parent didn't have regs=1 stack=0 marks: R0_r=P0 R1_r=P-145407547585598 R2_r=P-10062687749 R3_r=P-570076017032 R4_w=scalar(umax=2047,var_off=(0x0; 0x7ff)) R5=scalar(id=836) R6=ctx(off=0,imm=0) R7=P68 R8_w=scalar() R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176_w=mmmmmmmm fp-184=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
last_idx 1046 first_idx 1038
regs=1 stack=0 before 1046: (05) goto pc+0
regs=1 stack=0 before 1045: (4f) r8 |= r4
regs=1 stack=0 before 1044: (67) r8 <<= 11
regs=1 stack=0 before 1043: (bf) r8 = r5
regs=1 stack=0 before 1042: (77) r4 >>= 21
regs=1 stack=0 before 1041: (bc) w4 = w5
regs=1 stack=0 before 1040: (05) goto pc+0
regs=1 stack=0 before 1039: (7b) *(u64 *)(r10 -176) = r5
regs=1 stack=0 before 1038: (05) goto pc+0
parent didn't have regs=1 stack=0 marks: R0_r=P0 R1_rw=P-145407547585598 R2_rw=P-10062687749 R3_r=P-570076017032 R4_w=P-145939460360124 R5_r=scalar() R6=ctx(off=0,imm=0) R7_w=P68 R8=P-559038209 R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-184=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
last_idx 1037 first_idx 1027
regs=1 stack=0 before 1037: (05) goto pc+0
regs=1 stack=0 before 1036: (af) r1 ^= r4
regs=1 stack=0 before 1035: (1f) r1 -= r3
regs=1 stack=0 before 1034: (0f) r2 += r1
regs=1 stack=0 before 1033: (4f) r4 |= r7
regs=1 stack=0 before 1032: (67) r4 <<= 8
regs=1 stack=0 before 1031: (bf) r4 = r3
regs=1 stack=0 before 1030: (77) r7 >>= 24
regs=1 stack=0 before 1029: (bc) w7 = w3
regs=1 stack=0 before 1028: (05) goto pc+0
regs=1 stack=0 before 1027: (05) goto pc+0
parent didn't have regs=1 stack=0 marks: R0_rw=P0 R1_rw=P-1118076418 R2_r=P-8944611331 R3_r=P-570076017032 R4_w=P0 R5_rw=scalar() R6=ctx(off=0,imm=0) R7_w=scalar() R8=P-559038209 R9_w=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168_w= fp-184=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
last_idx 1026 first_idx 1009
regs=1 stack=0 before 1026: (05) goto pc+0
regs=1 stack=0 before 1025: (4f) r0 |= r4
regs=11 stack=0 before 1024: (57) r4 &= 255
regs=11 stack=0 before 1023: (79) r4 = *(u64 *)(r10 -184)
regs=1 stack=400000 before 1022: (4f) r0 |= r9
regs=201 stack=400000 before 1021: (67) r9 <<= 8
regs=201 stack=400000 before 1020: (57) r9 &= 255
regs=201 stack=400000 before 1019: (0f) r1 += r8
regs=201 stack=400000 before 1018: (1f) r5 -= r7
regs=201 stack=400000 before 1017: (a7) r5 ^= -525483785
regs=201 stack=400000 before 1016: (4f) r7 |= r4
regs=201 stack=400000 before 1015: (67) r7 <<= 14
regs=201 stack=400000 before 1014: (bf) r7 = r5
regs=201 stack=400000 before 1013: (77) r4 >>= 18
regs=201 stack=400000 before 1012: (bc) w4 = w5
regs=201 stack=400000 before 1011: (05) goto pc+0
regs=201 stack=400000 before 1010: (05) goto pc+0
regs=201 stack=400000 before 1009: (7b) *(u64 *)(r10 -168) = r5
parent didn't have regs=201 stack=0 marks: R0_rw=P0 R1_rw=P-559038209 R2_r=P-8944611331 R3_rw=P-570076017032 R4_w=0 R5_rw=scalar(smin=-525483785,smax=3769483510) R6=ctx(off=0,imm=0) R7_w=P-572455125126 R8_r=P-559038209 R9_r=P0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-184_r=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
last_idx 1008 first_idx 991
regs=201 stack=0 before 1008: (05) goto pc+0
regs=201 stack=0 before 1007: (07) r5 += -525483785
regs=201 stack=0 before 1006: (61) r5 = *(u32 *)(r10 -48)
regs=201 stack=0 before 1005: (4f) r0 |= r4
regs=211 stack=0 before 1004: (67) r0 <<= 16
regs=211 stack=0 before 1003: (57) r0 &= 255
regs=211 stack=0 before 1002: (67) r4 <<= 24
regs=211 stack=0 before 1001: (af) r3 ^= r7
regs=211 stack=0 before 1000: (1f) r3 -= r2
regs=211 stack=0 before 999: (bf) r3 = r1
regs=211 stack=0 before 998: (07) r1 += -559038209
regs=211 stack=0 before 997: (4f) r7 |= r5
regs=211 stack=0 before 996: (67) r7 <<= 6
regs=211 stack=0 before 995: (bf) r7 = r2
regs=211 stack=0 before 994: (77) r5 >>= 26
regs=211 stack=0 before 993: (bc) w5 = w2
regs=211 stack=0 before 992: (05) goto pc+0
regs=211 stack=0 before 991: (05) goto pc+0
parent didn't have regs=211 stack=0 marks: R0_r=P0 R1_r=P0 R2_rw=P-8944611331 R3=0 R4_r=P0 R5_w=13 R6=ctx(off=0,imm=0) R7=scalar(id=804) R8_r=P-559038209 R9_r=P0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48_r= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-184_r=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
last_idx 990 first_idx 982
regs=211 stack=0 before 990: (05) goto pc+0
regs=211 stack=0 before 989: (af) r2 ^= r3
regs=211 stack=0 before 988: (4f) r2 |= r5
regs=211 stack=0 before 987: (67) r2 <<= 4
regs=211 stack=0 before 986: (bf) r2 = r8
regs=211 stack=0 before 985: (77) r5 >>= 28
regs=211 stack=0 before 984: (bc) w5 = w8
regs=211 stack=0 before 983: (05) goto pc+0
regs=211 stack=0 before 982: (05) goto pc+0
parent didn't have regs=211 stack=0 marks: R0_rw=P0 R1_rw=P0 R2=scalar(umin=1000000001) R3_rw=P0 R4_rw=P0 R6=ctx(off=0,imm=0) R7=scalar(id=804) R8_rw=P-559038209 R9_rw=P0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48_r= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72_w=mmmmmmmm fp-80_w=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-184_rw=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
last_idx 981 first_idx 967
regs=211 stack=0 before 981: (05) goto pc+0
regs=211 stack=0 before 980: (07) r8 += -559038209
regs=211 stack=0 before 979: (1f) r3 -= r8
regs=211 stack=0 before 978: (b7) r4 = 0
regs=201 stack=0 before 977: (b7) r3 = 0
regs=201 stack=0 before 976: (b7) r8 = 0
regs=201 stack=0 before 975: (b7) r0 = 0
regs=200 stack=0 before 974: (b7) r9 = 0
; __jhash_final(a, b, c);
1089: (af) r1 ^= r5                   ; R1_w=P6744523029021125475 R5=P8044009612454092821
1090: (1f) r1 -= r7                   ; R1_w=P-2769304837798919334 R7=P-8932916206889506807
1091: (05) goto pc+0
1092: (05) goto pc+0
1093: (05) goto pc+0
1094: (bc) w3 = w1                    ; R1=P-2769304837798919334 R3_w=P607748954
; return (word << shift) | (word >> ((-shift) & 31));
1095: (77) r3 >>= 21                  ; R3_w=P289
1096: (bf) r4 = r1                    ; R1=P-2769304837798919334 R4_w=P-2769304837798919334
1097: (67) r4 <<= 11                  ; R4_w=P-8385877183354449920
1098: (4f) r4 |= r3                   ; R3_w=P289 R4_w=P-8385877183354449631
; __jhash_final(a, b, c);
1099: (bf) r3 = r1                    ; R1=P-2769304837798919334 R3_w=P-2769304837798919334
1100: (af) r3 ^= r2                   ; R2=P8917032933144140083 R3_w=P-6760226462814594455
1101: (1f) r3 -= r4                   ; R3_w=P1625650720539855176 R4_w=P-8385877183354449631
1102: (05) goto pc+0
1103: (05) goto pc+0
1104: (05) goto pc+0
1105: (bc) w2 = w3                    ; R2_w=P2661468488 R3=P1625650720539855176
; return (word << shift) | (word >> ((-shift) & 31));
1106: (77) r2 >>= 7                   ; R2_w=P20792722
1107: (bf) r4 = r3                    ; R3=P1625650720539855176 R4_w=P1625650720539855176
1108: (67) r4 <<= 25                  ; R4_w=P8015639407572811776
1109: (4f) r4 |= r2                   ; R2_w=P20792722 R4_w=P8015639407593604498
; __jhash_final(a, b, c);
1110: (bf) r7 = r3                    ; R3=P1625650720539855176 R7_w=P1625650720539855176
1111: (af) r7 ^= r5                   ; R5=P8044009612454092821 R7_w=P8731750324354001245
1112: (1f) r7 -= r4                   ; R4_w=P8015639407593604498 R7_w=P716110916760396747
1113: (05) goto pc+0
1114: (05) goto pc+0
1115: (05) goto pc+0
1116: (bc) w2 = w7                    ; R2_w=P2907202507 R7=P716110916760396747
; return (word << shift) | (word >> ((-shift) & 31));
1117: (77) r2 >>= 16                  ; R2_w=P44360
1118: (bf) r4 = r7                    ; R4_w=P716110916760396747 R7=P716110916760396747
1119: (67) r4 <<= 16                  ; R4_w=P2528117292261900288
1120: (4f) r4 |= r2                   ; R2_w=P44360 R4_w=P2528117292261944648
; __jhash_final(a, b, c);
1121: (bf) r2 = r7                    ; R2_w=P716110916760396747 R7=P716110916760396747
1122: (af) r2 ^= r1                   ; R1=P-2769304837798919334 R2_w=P-3431372408396586863
1123: (1f) r2 -= r4                   ; R2_w=P-5959489700658531511 R4_w=P2528117292261944648
1124: (05) goto pc+0
1125: (bc) w1 = w2                    ; R1_w=P631649097 R2=P-5959489700658531511
; return (word << shift) | (word >> ((-shift) & 31));
1126: (77) r1 >>= 28                  ; R1_w=P2
1127: (bf) r4 = r2                    ; R2=P-5959489700658531511 R4_w=P-5959489700658531511
1128: (67) r4 <<= 4                   ; R4_w=P-3118114841988746096
1129: (4f) r4 |= r1                   ; R1_w=P2 R4_w=P-3118114841988746094
; __jhash_final(a, b, c);
1130: (bf) r1 = r2                    ; R1_w=P-5959489700658531511 R2=P-5959489700658531511
1131: (af) r1 ^= r3                   ; R1_w=P-4916564071227786751 R3=P1625650720539855176
1132: (1f) r1 -= r4                   ; R1_w=P-1798449229239040657 R4_w=P-3118114841988746094
1133: (05) goto pc+0
1134: (05) goto pc+0
1135: (05) goto pc+0
1136: (bc) w3 = w1                    ; R1=P-1798449229239040657 R3_w=P1621214575
; return (word << shift) | (word >> ((-shift) & 31));
1137: (77) r3 >>= 18                  ; R3_w=P6184
1138: (bf) r4 = r1                    ; R1=P-1798449229239040657 R4_w=P-1798449229239040657
1139: (67) r4 <<= 14                  ; R4_w=P-6341886138288193536
1140: (4f) r4 |= r3                   ; R3_w=P6184 R4_w=P-6341886138288187352
; __jhash_final(a, b, c);
1141: (af) r1 ^= r7                   ; R1_w=P-1226460270496733532 R7=P716110916760396747
1142: (1f) r1 -= r4                   ; R1_w=P5115425867791453820 R4_w=P-6341886138288187352
1143: (05) goto pc+0
1144: (05) goto pc+0
1145: (05) goto pc+0
1146: (bc) w4 = w1                    ; R1=P5115425867791453820 R4_w=P1552797308
; return (word << shift) | (word >> ((-shift) & 31));
1147: (77) r4 >>= 8                   ; R4_w=P6065614
1148: (bf) r5 = r1                    ; R1=P5115425867791453820 R5_w=P5115425867791453820
1149: (67) r5 <<= 24                  ; R5_w=P-5090037560852348928
1150: (4f) r5 |= r4                   ; R4_w=P6065614 R5_w=P-5090037560846283314
; __jhash_final(a, b, c);
1151: (af) r1 ^= r2                   ; R1_w=P-1461973296061088459 R2=P-5959489700658531511
; a += initval;
1152: (1f) r1 -= r5                   ; R1_w=P3628064264785194855 R5_w=P-5090037560846283314
1153: (07) r1 += -525483785           ; R1_w=P3628064264259711070
1154: (79) r7 = *(u64 *)(r10 -176)    ; R7_w=scalar() R10=fp0
; __jhash_final(a, b, c);
1155: (af) r1 ^= r7
last_idx 1155 first_idx 1144
regs=80 stack=0 before 1154: (79) r7 = *(u64 *)(r10 -176)
regs=0 stack=200000 before 1153: (07) r1 += -525483785
regs=0 stack=200000 before 1152: (1f) r1 -= r5
regs=0 stack=200000 before 1151: (af) r1 ^= r2
regs=0 stack=200000 before 1150: (4f) r5 |= r4
regs=0 stack=200000 before 1149: (67) r5 <<= 24
regs=0 stack=200000 before 1148: (bf) r5 = r1
regs=0 stack=200000 before 1147: (77) r4 >>= 8
regs=0 stack=200000 before 1146: (bc) w4 = w1
regs=0 stack=200000 before 1145: (05) goto pc+0
regs=0 stack=200000 before 1144: (05) goto pc+0
parent already had regs=0 stack=0 marks: R0=P0 R1_rw=P5115425867791453820 R2_r=P-5959489700658531511 R3_w=P6184 R4_w=P-6341886138288187352 R5=P8044009612454092821 R6=ctx(off=0,imm=0) R7=P716110916760396747 R8=scalar() R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176_r=mmmmmmmm fp-184=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
1156: (1f) r1 -= r8                   ; R1_w=scalar() R8=scalar()
1157: (05) goto pc+0
1158: (bc) w2 = w1                    ; R1=scalar() R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1159: (77) r2 >>= 7                   ; R2_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff))
1160: (bf) r4 = r1                    ; R1=scalar(id=847) R4_w=scalar(id=847)
1161: (67) r4 <<= 25                  ; R4_w=scalar(smax=9223372036821221376,umax=18446744073675997184,var_off=(0x0; 0xfffffffffe000000),s32_max=2113929216,u32_max=-33554432)
1162: (4f) r4 |= r2                   ; R2_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff)) R4_w=scalar()
; __jhash_final(a, b, c);
1163: (bf) r0 = r1                    ; R0_w=scalar(id=847) R1=scalar(id=847)
1164: (79) r2 = *(u64 *)(r10 -168)    ; R2_w=scalar(smin=-525483785,smax=3769483510) R10=fp0
1165: (af) r0 ^= r2                   ; R0_w=scalar() R2_w=scalar(smin=-525483785,smax=3769483510)
1166: (1f) r0 -= r4                   ; R0_w=scalar() R4_w=scalar()
1167: (05) goto pc+0
1168: (05) goto pc+0
1169: (05) goto pc+0
1170: (bc) w2 = w0                    ; R0=scalar() R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1171: (77) r2 >>= 16                  ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff))
1172: (bf) r5 = r0                    ; R0=scalar(id=848) R5_w=scalar(id=848)
1173: (67) r5 <<= 16                  ; R5_w=scalar(smax=9223372036854710272,umax=18446744073709486080,var_off=(0x0; 0xffffffffffff0000),s32_max=2147418112,u32_max=-65536)
1174: (4f) r5 |= r2                   ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R5_w=scalar()
; __jhash_final(a, b, c);
1175: (bf) r4 = r0                    ; R0=scalar(id=848) R4_w=scalar(id=848)
1176: (af) r4 ^= r7                   ; R4_w=scalar() R7=Pscalar()
1177: (1f) r4 -= r5                   ; R4_w=scalar() R5_w=scalar()
1178: (05) goto pc+0
1179: (bc) w2 = w4                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R4=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1180: (77) r2 >>= 28                  ; R2_w=scalar(umax=15,var_off=(0x0; 0xf))
1181: (bf) r5 = r4                    ; R4=scalar(id=849) R5_w=scalar(id=849)
1182: (67) r5 <<= 4                   ; R5_w=scalar(smax=9223372036854775792,umax=18446744073709551600,var_off=(0x0; 0xfffffffffffffff0),s32_max=2147483632,u32_max=-16)
1183: (4f) r5 |= r2                   ; R2_w=scalar(umax=15,var_off=(0x0; 0xf)) R5_w=scalar()
; __jhash_final(a, b, c);
1184: (bf) r2 = r4                    ; R2_w=scalar(id=849) R4=scalar(id=849)
1185: (af) r2 ^= r1                   ; R1=scalar(id=847) R2_w=scalar()
1186: (1f) r2 -= r5                   ; R2_w=scalar() R5_w=scalar()
1187: (05) goto pc+0
1188: (05) goto pc+0
1189: (05) goto pc+0
1190: (bc) w1 = w2                    ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R2=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1191: (77) r1 >>= 18                  ; R1_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1192: (bf) r5 = r2                    ; R2=scalar(id=850) R5_w=scalar(id=850)
1193: (67) r5 <<= 14                  ; R5_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1194: (4f) r5 |= r1                   ; R1_w=scalar(umax=16383,var_off=(0x0; 0x3fff)) R5_w=scalar()
; __jhash_final(a, b, c);
1195: (af) r2 ^= r0                   ; R0=scalar(id=848) R2_w=scalar()
1196: (1f) r2 -= r5                   ; R2_w=scalar() R5_w=scalar()
1197: (05) goto pc+0
1198: (bc) w1 = w2                    ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R2=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1199: (77) r1 >>= 8                   ; R1_w=scalar(umax=16777215,var_off=(0x0; 0xffffff))
1200: (bf) r3 = r2                    ; R2=scalar(id=851) R3_w=scalar(id=851)
1201: (67) r3 <<= 24                  ; R3_w=scalar(smax=9223372036837998592,umax=18446744073692774400,var_off=(0x0; 0xffffffffff000000),s32_max=2130706432,u32_max=-16777216)
1202: (4f) r3 |= r1                   ; R1_w=scalar(umax=16777215,var_off=(0x0; 0xffffff)) R3_w=scalar()
; __jhash_final(a, b, c);
1203: (af) r2 ^= r4                   ; R2_w=scalar() R4=scalar(id=849)
1204: (1f) r2 -= r3                   ; R2_w=scalar() R3_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1205: (79) r1 = *(u64 *)(r10 -144)    ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
1206: (61) r1 = *(u32 *)(r1 +4)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; key = RING_SIZE * (vip_info->vip_num) + hash;
1207: (27) r1 *= 65537                ; R1_w=scalar(umax=281479271612415,var_off=(0x0; 0x1ffffffffffff))
; __jhash_final(a, b, c);
1208: (bc) w2 = w2                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
1209: (05) goto pc+0
; hash = get_packet_hash(pckt, hash_16bytes) % RING_SIZE;
1210: (97) r2 %= 65537                ; R2_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1211: (0f) r2 += r1                   ; R1_w=scalar(umax=281479271612415,var_off=(0x0; 0x1ffffffffffff)) R2_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1212: (63) *(u32 *)(r10 -20) = r2     ; R2_w=scalar() R10=fp0 fp-24=mmmm????
1213: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1214: (07) r2 += -20                  ; R2_w=fp-20
; real_pos = bpf_map_lookup_elem(&ch_rings, &key);
1215: (18) r1 = 0xffffaebaa0631000    ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
1217: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=852,off=0,ks=4,vs=4,imm=0)
; if (!real_pos) {
1218: (15) if r0 == 0x0 goto pc+638   ; R0=map_value(off=0,ks=4,vs=4,imm=0)
; key = *real_pos;
1219: (61) r1 = *(u32 *)(r0 +0)       ; R0=map_value(off=0,ks=4,vs=4,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; key = *real_pos;
1220: (63) *(u32 *)(r10 -20) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-24=mmmm????
1221: (79) r8 = *(u64 *)(r10 -192)    ; R8_w=P0 R10=fp0
; if (key == 0) {
1222: (55) if r1 != 0x0 goto pc+12    ; R1_w=0
1223: (05) goto pc+0
; __u32 ch_drop_stats_key = MAX_VIPS + CH_DROP_STATS;
1224: (62) *(u32 *)(r10 -28) = 521    ; R10=fp0 fp-32=mmmm????
1225: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1226: (07) r2 += -28                  ; R2_w=fp-28
; bpf_map_lookup_elem(&stats, &ch_drop_stats_key);
1227: (18) r1 = 0xffffa03499be8000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
1229: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=853,off=0,ks=4,vs=16,imm=0)
; if (!ch_drop_stats) {
1230: (15) if r0 == 0x0 goto pc+3     ; R0=map_value(off=0,ks=4,vs=16,imm=0)
; ch_drop_stats->v2 += 1;
1231: (79) r1 = *(u64 *)(r0 +8)       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1232: (07) r1 += 1                    ; R1_w=scalar()
1233: (7b) *(u64 *)(r0 +8) = r1       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
; pckt->real_index = key;
1234: (61) r1 = *(u32 *)(r10 -20)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; pckt->real_index = key;
1235: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1236: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1237: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1238: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1240: (85) call bpf_map_lookup_elem#1
frame 8: propagating r0
1241: safe

from 1230 to 1234: R0=0 R6=ctx(off=0,imm=0) R7=Pscalar() R8=P0 R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40=mmmmmmmm fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
; pckt->real_index = key;
1234: (61) r1 = *(u32 *)(r10 -20)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; pckt->real_index = key;
1235: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1236: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1237: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1238: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1240: (85) call bpf_map_lookup_elem#1
frame 8: propagating r0
1241: safe

from 1222 to 1235: R0=map_value(off=0,ks=4,vs=4,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6=ctx(off=0,imm=0) R7=Pscalar() R8_w=P0 R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40=mmmmmmmm fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184=00000000 fp-192=00000000 fp-200= fp-208=mmmmmmmm
; pckt->real_index = key;
1235: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1236: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1237: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1238: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1240: (85) call bpf_map_lookup_elem#1
frame 8: propagating r0
1241: safe

from 1218 to 1857: safe

from 942 to 947: R0=scalar(id=804) R1=1000000001 R2=scalar(umax=1000000000,var_off=(0x0; 0x3fffffff)) R6=ctx(off=0,imm=0) R7=scalar(id=804) R8=1 R9=map_value(off=0,ks=4,vs=16,imm=0) R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-200=
; conn_rate_stats->v1 += 1;
947: (79) r1 = *(u64 *)(r9 +0)        ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=16,imm=0)
948: (07) r1 += 1                     ; R1_w=scalar()
949: (7b) *(u64 *)(r9 +0) = r1        ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=16,imm=0)
; if (conn_rate_stats->v1 > MAX_CONN_RATE) {
950: (25) if r1 > 0x1e848 goto pc+1   ; R1_w=scalar(umax=125000,var_off=(0x0; 0x1ffff))
951: (b7) r8 = 0                      ; R8_w=0
952: (7b) *(u64 *)(r10 -192) = r8
last_idx 952 first_idx 947
regs=100 stack=0 before 951: (b7) r8 = 0
953: R8_w=P0 R10=fp0 fp-192_w=00000000
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
953: (79) r1 = *(u64 *)(r10 -144)     ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
954: (61) r1 = *(u32 *)(r1 +0)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
955: (57) r1 &= 8                     ; R1_w=scalar(umax=8,var_off=(0x0; 0x8))
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
956: (7b) *(u64 *)(r10 -208) = r7     ; R7=scalar(id=804) R10=fp0 fp-208_w=mmmmmmmm
957: (55) if r1 != 0x0 goto pc+9      ; R1_w=0
; a += k[0];
958: (71) r1 = *(u8 *)(r10 -68)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; a += (u32)k[1] << 8;
959: (7b) *(u64 *)(r10 -184) = r1     ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0 fp-184_w=
960: (71) r9 = *(u8 *)(r10 -67)       ; R9_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; a += (u32)k[2] << 16;
961: (71) r0 = *(u8 *)(r10 -66)       ; R0_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; b += *(u32*)(k + 4);
962: (61) r1 = *(u32 *)(r10 -76)      ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; c += *(u32*)(k + 8);
963: (61) r8 = *(u32 *)(r10 -72)      ; R8_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; a += *(u32*)(k);
964: (61) r3 = *(u32 *)(r10 -80)      ; R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; a += (u32)k[3] << 24;
965: (71) r4 = *(u8 *)(r10 -65)       ; R4_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
966: (05) goto pc+12
979: safe

from 957 to 967: safe

from 950 to 952: R0=scalar(id=804) R1=scalar(umin=125001) R2=scalar(umax=1000000000,var_off=(0x0; 0x3fffffff)) R6=ctx(off=0,imm=0) R7=scalar(id=804) R8=1 R9=map_value(off=0,ks=4,vs=16,imm=0) R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-200=
; if (conn_rate_stats->v1 > MAX_CONN_RATE) {
952: (7b) *(u64 *)(r10 -192) = r8     ; R8=1 R10=fp0 fp-192_w=1
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
953: (79) r1 = *(u64 *)(r10 -144)     ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
954: (61) r1 = *(u32 *)(r1 +0)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
955: (57) r1 &= 8                     ; R1_w=scalar(umax=8,var_off=(0x0; 0x8))
; if (vip_info->flags & F_HASH_DPORT_ONLY) {
956: (7b) *(u64 *)(r10 -208) = r7     ; R7=scalar(id=804) R10=fp0 fp-208_w=mmmmmmmm
957: (55) if r1 != 0x0 goto pc+9      ; R1_w=0
; a += k[0];
958: (71) r1 = *(u8 *)(r10 -68)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; a += (u32)k[1] << 8;
959: (7b) *(u64 *)(r10 -184) = r1     ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0 fp-184_w=
960: (71) r9 = *(u8 *)(r10 -67)       ; R9_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; a += (u32)k[2] << 16;
961: (71) r0 = *(u8 *)(r10 -66)       ; R0_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; b += *(u32*)(k + 4);
962: (61) r1 = *(u32 *)(r10 -76)      ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; c += *(u32*)(k + 8);
963: (61) r8 = *(u32 *)(r10 -72)      ; R8_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; a += *(u32*)(k);
964: (61) r3 = *(u32 *)(r10 -80)      ; R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; a += (u32)k[3] << 24;
965: (71) r4 = *(u8 *)(r10 -65)       ; R4_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
966: (05) goto pc+12
; __jhash_mix(a, b, c);
979: (1f) r3 -= r8                    ; R3_w=scalar(smin=-4294967295,smax=4294967295) R8=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; c += *(u32*)(k + 8);
980: (07) r8 += -559038209            ; R8_w=scalar(smin=-559038209,smax=3735929086)
981: (05) goto pc+0
982: (05) goto pc+0
983: (05) goto pc+0
984: (bc) w5 = w8                     ; R5_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R8_w=scalar(smin=-559038209,smax=3735929086)
; return (word << shift) | (word >> ((-shift) & 31));
985: (77) r5 >>= 28                   ; R5_w=scalar(umax=15,var_off=(0x0; 0xf))
986: (bf) r2 = r8                     ; R2_w=scalar(id=857,smin=-559038209,smax=3735929086) R8_w=scalar(id=857,smin=-559038209,smax=3735929086)
987: (67) r2 <<= 4                    ; R2_w=scalar(smax=9223372036854775792,umax=18446744073709551600,var_off=(0x0; 0xfffffffffffffff0),s32_max=2147483632,u32_max=-16)
988: (4f) r2 |= r5                    ; R2_w=scalar() R5_w=scalar(umax=15,var_off=(0x0; 0xf))
; __jhash_mix(a, b, c);
989: (af) r2 ^= r3                    ; R2_w=scalar() R3_w=scalar(smin=-4294967295,smax=4294967295)
990: (05) goto pc+0
991: (05) goto pc+0
992: (05) goto pc+0
993: (bc) w5 = w2                     ; R2=scalar() R5_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
994: (77) r5 >>= 26                   ; R5_w=scalar(umax=63,var_off=(0x0; 0x3f))
995: (bf) r7 = r2                     ; R2=scalar(id=858) R7_w=scalar(id=858)
996: (67) r7 <<= 6                    ; R7_w=scalar(smax=9223372036854775744,umax=18446744073709551552,var_off=(0x0; 0xffffffffffffffc0),s32_max=2147483584,u32_max=-64)
997: (4f) r7 |= r5                    ; R5_w=scalar(umax=63,var_off=(0x0; 0x3f)) R7_w=scalar()
; b += *(u32*)(k + 4);
998: (07) r1 += -559038209            ; R1_w=scalar(smin=-559038209,smax=3735929086)
; __jhash_mix(a, b, c);
999: (bf) r3 = r1                     ; R1_w=scalar(id=859,smin=-559038209,smax=3735929086) R3_w=scalar(id=859,smin=-559038209,smax=3735929086)
1000: (1f) r3 -= r2                   ; R2=scalar(id=858) R3_w=scalar()
1001: (af) r3 ^= r7                   ; R3_w=scalar() R7_w=scalar()
; a += (u32)k[3] << 24;
1002: (67) r4 <<= 24                  ; R4_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; a += (u32)k[2] << 16;
1003: (57) r0 &= 255                  ; R0_w=scalar(umax=255,var_off=(0x0; 0xff))
; a += (u32)k[2] << 16;
1004: (67) r0 <<= 16                  ; R0_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; a += (u32)k[3] << 24;
1005: (4f) r0 |= r4                   ; R0_w=scalar() R4_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; pckt->flow.ports,
1006: (61) r5 = *(u32 *)(r10 -48)     ; R5_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; b += initval;
1007: (07) r5 += -525483785           ; R5_w=scalar(smin=-525483785,smax=3769483510)
1008: (05) goto pc+0
1009: (7b) *(u64 *)(r10 -168) = r5    ; R5=scalar(smin=-525483785,smax=3769483510) R10=fp0 fp-168_w=
1010: (05) goto pc+0
1011: (05) goto pc+0
1012: (bc) w4 = w5                    ; R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R5=scalar(smin=-525483785,smax=3769483510)
; return (word << shift) | (word >> ((-shift) & 31));
1013: (77) r4 >>= 18                  ; R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1014: (bf) r7 = r5                    ; R5=scalar(id=860,smin=-525483785,smax=3769483510) R7_w=scalar(id=860,smin=-525483785,smax=3769483510)
1015: (67) r7 <<= 14                  ; R7_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1016: (4f) r7 |= r4                   ; R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff)) R7_w=scalar()
; __jhash_final(a, b, c);
1017: (a7) r5 ^= -525483785           ; R5_w=scalar()
1018: (1f) r5 -= r7                   ; R5_w=scalar() R7_w=scalar()
; __jhash_mix(a, b, c);
1019: (0f) r1 += r8                   ; R1_w=scalar(smin=-1118076418,smax=7471858172) R8=scalar(id=857,smin=-559038209,smax=3735929086)
; a += (u32)k[1] << 8;
1020: (57) r9 &= 255                  ; R9_w=scalar(umax=255,var_off=(0x0; 0xff))
; a += (u32)k[1] << 8;
1021: (67) r9 <<= 8                   ; R9_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; a += (u32)k[2] << 16;
1022: (4f) r0 |= r9                   ; R0_w=scalar() R9_w=scalar(umax=65280,var_off=(0x0; 0xff00))
1023: (79) r4 = *(u64 *)(r10 -184)    ; R4_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; a += k[0];
1024: (57) r4 &= 255                  ; R4_w=scalar(umax=255,var_off=(0x0; 0xff))
; a += (u32)k[1] << 8;
1025: (4f) r0 |= r4                   ; R0_w=scalar() R4_w=scalar(umax=255,var_off=(0x0; 0xff))
1026: (05) goto pc+0
1027: (05) goto pc+0
; __jhash_mix(a, b, c);
1028: (05) goto pc+0
1029: (bc) w7 = w3                    ; R3=scalar() R7_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1030: (77) r7 >>= 24                  ; R7_w=scalar(umax=255,var_off=(0x0; 0xff))
1031: (bf) r4 = r3                    ; R3=scalar(id=861) R4_w=scalar(id=861)
1032: (67) r4 <<= 8                   ; R4_w=scalar(smax=9223372036854775552,umax=18446744073709551360,var_off=(0x0; 0xffffffffffffff00),s32_max=2147483392,u32_max=-256)
1033: (4f) r4 |= r7                   ; R4_w=scalar() R7_w=scalar(umax=255,var_off=(0x0; 0xff))
; __jhash_mix(a, b, c);
1034: (0f) r2 += r1                   ; R1=scalar(smin=-1118076418,smax=7471858172) R2_w=scalar()
1035: (1f) r1 -= r3                   ; R1_w=scalar() R3=scalar(id=861)
1036: (af) r1 ^= r4                   ; R1_w=scalar() R4_w=scalar()
1037: (05) goto pc+0
1038: (05) goto pc+0
; __jhash_final(a, b, c);
1039: (7b) *(u64 *)(r10 -176) = r5    ; R5=scalar() R10=fp0 fp-176_w=mmmmmmmm
1040: (05) goto pc+0
1041: (bc) w4 = w5                    ; R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R5=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1042: (77) r4 >>= 21                  ; R4_w=scalar(umax=2047,var_off=(0x0; 0x7ff))
1043: (bf) r8 = r5                    ; R5=scalar(id=862) R8_w=scalar(id=862)
1044: (67) r8 <<= 11                  ; R8_w=scalar(smax=9223372036854773760,umax=18446744073709549568,var_off=(0x0; 0xfffffffffffff800),s32_max=2147481600,u32_max=-2048)
1045: (4f) r8 |= r4                   ; R4_w=scalar(umax=2047,var_off=(0x0; 0x7ff)) R8_w=scalar()
1046: (05) goto pc+0
1047: (05) goto pc+0
; __jhash_mix(a, b, c);
1048: (05) goto pc+0
1049: (bc) w4 = w1                    ; R1=scalar() R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1050: (77) r4 >>= 16                  ; R4_w=scalar(umax=65535,var_off=(0x0; 0xffff))
1051: (bf) r7 = r1                    ; R1=scalar(id=863) R7_w=scalar(id=863)
1052: (67) r7 <<= 16                  ; R7_w=scalar(smax=9223372036854710272,umax=18446744073709486080,var_off=(0x0; 0xffffffffffff0000),s32_max=2147418112,u32_max=-65536)
1053: (4f) r7 |= r4                   ; R4_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R7_w=scalar()
; __jhash_mix(a, b, c);
1054: (0f) r3 += r2                   ; R2=scalar() R3_w=scalar()
1055: (1f) r2 -= r1                   ; R1=scalar(id=863) R2_w=scalar()
1056: (af) r2 ^= r7                   ; R2_w=scalar() R7_w=scalar()
1057: (05) goto pc+0
1058: (05) goto pc+0
1059: (05) goto pc+0
1060: (bc) w7 = w2                    ; R2=scalar() R7_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1061: (77) r7 >>= 13                  ; R7_w=scalar(umax=524287,var_off=(0x0; 0x7ffff))
1062: (bf) r4 = r2                    ; R2=scalar(id=864) R4_w=scalar(id=864)
1063: (67) r4 <<= 19                  ; R4_w=scalar(smax=9223372036854251520,umax=18446744073709027328,var_off=(0x0; 0xfffffffffff80000),s32_max=2146959360,u32_max=-524288)
1064: (4f) r4 |= r7                   ; R4_w=scalar() R7_w=scalar(umax=524287,var_off=(0x0; 0x7ffff))
; __jhash_mix(a, b, c);
1065: (0f) r1 += r3                   ; R1_w=scalar() R3=scalar()
1066: (1f) r3 -= r2                   ; R2=scalar(id=864) R3_w=scalar()
1067: (af) r3 ^= r4                   ; R3_w=scalar() R4_w=scalar()
1068: (0f) r2 += r1                   ; R1_w=scalar() R2_w=scalar()
1069: (bf) r5 = r3                    ; R3_w=scalar(id=865) R5_w=scalar(id=865)
1070: (0f) r5 += r2                   ; R2_w=scalar() R5_w=scalar()
1071: (05) goto pc+0
1072: (05) goto pc+0
1073: (05) goto pc+0
1074: (bc) w4 = w5                    ; R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R5=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1075: (77) r4 >>= 18                  ; R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1076: (bf) r7 = r5                    ; R5=scalar(id=866) R7_w=scalar(id=866)
1077: (67) r7 <<= 14                  ; R7_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1078: (4f) r7 |= r4                   ; R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff)) R7_w=scalar()
; __jhash_mix(a, b, c);
1079: (05) goto pc+0
1080: (05) goto pc+0
1081: (05) goto pc+0
1082: (bc) w4 = w3                    ; R3=scalar(id=865) R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1083: (77) r4 >>= 28                  ; R4_w=scalar(umax=15,var_off=(0x0; 0xf))
; __jhash_mix(a, b, c);
1084: (1f) r1 -= r3                   ; R1_w=scalar() R3=scalar(id=865)
; return (word << shift) | (word >> ((-shift) & 31));
1085: (67) r3 <<= 4                   ; R3_w=scalar(smax=9223372036854775792,umax=18446744073709551600,var_off=(0x0; 0xfffffffffffffff0),s32_max=2147483632,u32_max=-16)
1086: (4f) r3 |= r4                   ; R3_w=scalar() R4_w=scalar(umax=15,var_off=(0x0; 0xf))
; __jhash_mix(a, b, c);
1087: (af) r1 ^= r3                   ; R1_w=scalar() R3_w=scalar()
; a += k[0];
1088: (0f) r2 += r0                   ; R0=scalar() R2_w=scalar()
; __jhash_final(a, b, c);
1089: (af) r1 ^= r5                   ; R1_w=scalar() R5=scalar(id=866)
1090: (1f) r1 -= r7                   ; R1_w=scalar() R7=scalar()
1091: (05) goto pc+0
1092: (05) goto pc+0
1093: (05) goto pc+0
1094: (bc) w3 = w1                    ; R1=scalar() R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1095: (77) r3 >>= 21                  ; R3_w=scalar(umax=2047,var_off=(0x0; 0x7ff))
1096: (bf) r4 = r1                    ; R1=scalar(id=867) R4_w=scalar(id=867)
1097: (67) r4 <<= 11                  ; R4_w=scalar(smax=9223372036854773760,umax=18446744073709549568,var_off=(0x0; 0xfffffffffffff800),s32_max=2147481600,u32_max=-2048)
1098: (4f) r4 |= r3                   ; R3_w=scalar(umax=2047,var_off=(0x0; 0x7ff)) R4_w=scalar()
; __jhash_final(a, b, c);
1099: (bf) r3 = r1                    ; R1=scalar(id=867) R3_w=scalar(id=867)
1100: (af) r3 ^= r2                   ; R2=scalar() R3_w=scalar()
1101: (1f) r3 -= r4                   ; R3_w=scalar() R4_w=scalar()
1102: (05) goto pc+0
1103: (05) goto pc+0
1104: (05) goto pc+0
1105: (bc) w2 = w3                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1106: (77) r2 >>= 7                   ; R2_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff))
1107: (bf) r4 = r3                    ; R3=scalar(id=868) R4_w=scalar(id=868)
1108: (67) r4 <<= 25                  ; R4_w=scalar(smax=9223372036821221376,umax=18446744073675997184,var_off=(0x0; 0xfffffffffe000000),s32_max=2113929216,u32_max=-33554432)
1109: (4f) r4 |= r2                   ; R2_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff)) R4_w=scalar()
; __jhash_final(a, b, c);
1110: (bf) r7 = r3                    ; R3=scalar(id=868) R7_w=scalar(id=868)
1111: (af) r7 ^= r5                   ; R5=scalar(id=866) R7_w=scalar()
1112: (1f) r7 -= r4                   ; R4_w=scalar() R7_w=scalar()
1113: (05) goto pc+0
1114: (05) goto pc+0
1115: (05) goto pc+0
1116: (bc) w2 = w7                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R7=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1117: (77) r2 >>= 16                  ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff))
1118: (bf) r4 = r7                    ; R4_w=scalar(id=869) R7=scalar(id=869)
1119: (67) r4 <<= 16                  ; R4_w=scalar(smax=9223372036854710272,umax=18446744073709486080,var_off=(0x0; 0xffffffffffff0000),s32_max=2147418112,u32_max=-65536)
1120: (4f) r4 |= r2                   ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R4_w=scalar()
; __jhash_final(a, b, c);
1121: (bf) r2 = r7                    ; R2_w=scalar(id=869) R7=scalar(id=869)
1122: (af) r2 ^= r1                   ; R1=scalar(id=867) R2_w=scalar()
1123: (1f) r2 -= r4                   ; R2_w=scalar() R4_w=scalar()
1124: (05) goto pc+0
1125: (bc) w1 = w2                    ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R2=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1126: (77) r1 >>= 28                  ; R1_w=scalar(umax=15,var_off=(0x0; 0xf))
1127: (bf) r4 = r2                    ; R2=scalar(id=870) R4_w=scalar(id=870)
1128: (67) r4 <<= 4                   ; R4_w=scalar(smax=9223372036854775792,umax=18446744073709551600,var_off=(0x0; 0xfffffffffffffff0),s32_max=2147483632,u32_max=-16)
1129: (4f) r4 |= r1                   ; R1_w=scalar(umax=15,var_off=(0x0; 0xf)) R4_w=scalar()
; __jhash_final(a, b, c);
1130: (bf) r1 = r2                    ; R1_w=scalar(id=870) R2=scalar(id=870)
1131: (af) r1 ^= r3                   ; R1_w=scalar() R3=scalar(id=868)
1132: (1f) r1 -= r4                   ; R1_w=scalar() R4_w=scalar()
1133: (05) goto pc+0
1134: (05) goto pc+0
1135: (05) goto pc+0
1136: (bc) w3 = w1                    ; R1=scalar() R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1137: (77) r3 >>= 18                  ; R3_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1138: (bf) r4 = r1                    ; R1=scalar(id=871) R4_w=scalar(id=871)
1139: (67) r4 <<= 14                  ; R4_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1140: (4f) r4 |= r3                   ; R3_w=scalar(umax=16383,var_off=(0x0; 0x3fff)) R4_w=scalar()
; __jhash_final(a, b, c);
1141: (af) r1 ^= r7                   ; R1_w=scalar() R7=scalar(id=869)
1142: (1f) r1 -= r4                   ; R1_w=scalar() R4_w=scalar()
1143: (05) goto pc+0
1144: (05) goto pc+0
1145: (05) goto pc+0
1146: (bc) w4 = w1                    ; R1=scalar() R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1147: (77) r4 >>= 8                   ; R4_w=scalar(umax=16777215,var_off=(0x0; 0xffffff))
1148: (bf) r5 = r1                    ; R1=scalar(id=872) R5_w=scalar(id=872)
1149: (67) r5 <<= 24                  ; R5_w=scalar(smax=9223372036837998592,umax=18446744073692774400,var_off=(0x0; 0xffffffffff000000),s32_max=2130706432,u32_max=-16777216)
1150: (4f) r5 |= r4                   ; R4_w=scalar(umax=16777215,var_off=(0x0; 0xffffff)) R5_w=scalar()
; __jhash_final(a, b, c);
1151: (af) r1 ^= r2                   ; R1_w=scalar() R2=scalar(id=870)
; a += initval;
1152: (1f) r1 -= r5                   ; R1_w=scalar() R5_w=scalar()
1153: (07) r1 += -525483785           ; R1_w=scalar()
1154: (79) r7 = *(u64 *)(r10 -176)    ; R7_w=scalar() R10=fp0
; __jhash_final(a, b, c);
1155: (af) r1 ^= r7                   ; R1_w=scalar() R7_w=scalar()
1156: (1f) r1 -= r8                   ; R1_w=scalar() R8=scalar()
1157: (05) goto pc+0
1158: (bc) w2 = w1                    ; R1=scalar() R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1159: (77) r2 >>= 7                   ; R2_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff))
1160: (bf) r4 = r1                    ; R1=scalar(id=873) R4_w=scalar(id=873)
1161: (67) r4 <<= 25                  ; R4_w=scalar(smax=9223372036821221376,umax=18446744073675997184,var_off=(0x0; 0xfffffffffe000000),s32_max=2113929216,u32_max=-33554432)
1162: (4f) r4 |= r2                   ; R2_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff)) R4_w=scalar()
; __jhash_final(a, b, c);
1163: (bf) r0 = r1                    ; R0_w=scalar(id=873) R1=scalar(id=873)
1164: (79) r2 = *(u64 *)(r10 -168)    ; R2_w=scalar(smin=-525483785,smax=3769483510) R10=fp0
1165: (af) r0 ^= r2                   ; R0_w=scalar() R2_w=scalar(smin=-525483785,smax=3769483510)
1166: (1f) r0 -= r4                   ; R0_w=scalar() R4_w=scalar()
1167: (05) goto pc+0
1168: (05) goto pc+0
1169: (05) goto pc+0
1170: (bc) w2 = w0                    ; R0=scalar() R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1171: (77) r2 >>= 16                  ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff))
1172: (bf) r5 = r0                    ; R0=scalar(id=874) R5_w=scalar(id=874)
1173: (67) r5 <<= 16                  ; R5_w=scalar(smax=9223372036854710272,umax=18446744073709486080,var_off=(0x0; 0xffffffffffff0000),s32_max=2147418112,u32_max=-65536)
1174: (4f) r5 |= r2                   ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R5_w=scalar()
; __jhash_final(a, b, c);
1175: (bf) r4 = r0                    ; R0=scalar(id=874) R4_w=scalar(id=874)
1176: (af) r4 ^= r7                   ; R4_w=scalar() R7=scalar()
1177: (1f) r4 -= r5                   ; R4_w=scalar() R5_w=scalar()
1178: (05) goto pc+0
1179: (bc) w2 = w4                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R4=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1180: (77) r2 >>= 28                  ; R2_w=scalar(umax=15,var_off=(0x0; 0xf))
1181: (bf) r5 = r4                    ; R4=scalar(id=875) R5_w=scalar(id=875)
1182: (67) r5 <<= 4                   ; R5_w=scalar(smax=9223372036854775792,umax=18446744073709551600,var_off=(0x0; 0xfffffffffffffff0),s32_max=2147483632,u32_max=-16)
1183: (4f) r5 |= r2                   ; R2_w=scalar(umax=15,var_off=(0x0; 0xf)) R5_w=scalar()
; __jhash_final(a, b, c);
1184: (bf) r2 = r4                    ; R2_w=scalar(id=875) R4=scalar(id=875)
1185: (af) r2 ^= r1                   ; R1=scalar(id=873) R2_w=scalar()
1186: (1f) r2 -= r5                   ; R2_w=scalar() R5_w=scalar()
1187: (05) goto pc+0
1188: (05) goto pc+0
1189: (05) goto pc+0
1190: (bc) w1 = w2                    ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R2=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1191: (77) r1 >>= 18                  ; R1_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1192: (bf) r5 = r2                    ; R2=scalar(id=876) R5_w=scalar(id=876)
1193: (67) r5 <<= 14                  ; R5_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1194: (4f) r5 |= r1                   ; R1_w=scalar(umax=16383,var_off=(0x0; 0x3fff)) R5_w=scalar()
; __jhash_final(a, b, c);
1195: (af) r2 ^= r0                   ; R0=scalar(id=874) R2_w=scalar()
1196: (1f) r2 -= r5                   ; R2_w=scalar() R5_w=scalar()
1197: (05) goto pc+0
1198: (bc) w1 = w2                    ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R2=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1199: (77) r1 >>= 8                   ; R1_w=scalar(umax=16777215,var_off=(0x0; 0xffffff))
1200: (bf) r3 = r2                    ; R2=scalar(id=877) R3_w=scalar(id=877)
1201: (67) r3 <<= 24                  ; R3_w=scalar(smax=9223372036837998592,umax=18446744073692774400,var_off=(0x0; 0xffffffffff000000),s32_max=2130706432,u32_max=-16777216)
1202: (4f) r3 |= r1                   ; R1_w=scalar(umax=16777215,var_off=(0x0; 0xffffff)) R3_w=scalar()
; __jhash_final(a, b, c);
1203: (af) r2 ^= r4                   ; R2_w=scalar() R4=scalar(id=875)
1204: (1f) r2 -= r3                   ; R2_w=scalar() R3_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1205: (79) r1 = *(u64 *)(r10 -144)    ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
1206: (61) r1 = *(u32 *)(r1 +4)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; key = RING_SIZE * (vip_info->vip_num) + hash;
1207: (27) r1 *= 65537                ; R1_w=scalar(umax=281479271612415,var_off=(0x0; 0x1ffffffffffff))
; __jhash_final(a, b, c);
1208: (bc) w2 = w2                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
1209: (05) goto pc+0
; hash = get_packet_hash(pckt, hash_16bytes) % RING_SIZE;
1210: (97) r2 %= 65537                ; R2_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1211: (0f) r2 += r1                   ; R1_w=scalar(umax=281479271612415,var_off=(0x0; 0x1ffffffffffff)) R2_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1212: (63) *(u32 *)(r10 -20) = r2     ; R2_w=scalar() R10=fp0 fp-24=mmmm????
1213: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1214: (07) r2 += -20                  ; R2_w=fp-20
; real_pos = bpf_map_lookup_elem(&ch_rings, &key);
1215: (18) r1 = 0xffffaebaa0631000    ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
1217: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=878,off=0,ks=4,vs=4,imm=0)
; if (!real_pos) {
1218: (15) if r0 == 0x0 goto pc+638   ; R0=map_value(off=0,ks=4,vs=4,imm=0)
; key = *real_pos;
1219: (61) r1 = *(u32 *)(r0 +0)       ; R0=map_value(off=0,ks=4,vs=4,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; key = *real_pos;
1220: (63) *(u32 *)(r10 -20) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-24=mmmm????
1221: (79) r8 = *(u64 *)(r10 -192)    ; R8_w=1 R10=fp0
; if (key == 0) {
1222: (55) if r1 != 0x0 goto pc+12    ; R1_w=0
1223: (05) goto pc+0
; __u32 ch_drop_stats_key = MAX_VIPS + CH_DROP_STATS;
1224: (62) *(u32 *)(r10 -28) = 521    ; R10=fp0 fp-32=mmmm????
1225: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1226: (07) r2 += -28                  ; R2_w=fp-28
; bpf_map_lookup_elem(&stats, &ch_drop_stats_key);
1227: (18) r1 = 0xffffa03499be8000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
1229: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=879,off=0,ks=4,vs=16,imm=0)
; if (!ch_drop_stats) {
1230: (15) if r0 == 0x0 goto pc+3     ; R0=map_value(off=0,ks=4,vs=16,imm=0)
; ch_drop_stats->v2 += 1;
1231: (79) r1 = *(u64 *)(r0 +8)       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1232: (07) r1 += 1                    ; R1_w=scalar()
1233: (7b) *(u64 *)(r0 +8) = r1       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
; pckt->real_index = key;
1234: (61) r1 = *(u32 *)(r10 -20)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; pckt->real_index = key;
1235: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1236: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1237: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1238: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1240: (85) call bpf_map_lookup_elem#1
1241: safe

from 1230 to 1234: R0=0 R6=ctx(off=0,imm=0) R7=scalar() R8=1 R9=scalar(umax=65280,var_off=(0x0; 0xff00)) R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184= fp-192=1 fp-200= fp-208=mmmmmmmm
; pckt->real_index = key;
1234: (61) r1 = *(u32 *)(r10 -20)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; pckt->real_index = key;
1235: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1236: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1237: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1238: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1240: (85) call bpf_map_lookup_elem#1
1241: safe

from 1222 to 1235: R0=map_value(off=0,ks=4,vs=4,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6=ctx(off=0,imm=0) R7=scalar() R8_w=1 R9=scalar(umax=65280,var_off=(0x0; 0xff00)) R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184= fp-192=1 fp-200= fp-208=mmmmmmmm
; pckt->real_index = key;
1235: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1236: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1237: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1238: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1240: (85) call bpf_map_lookup_elem#1
1241: safe

from 1218 to 1857: safe

from 957 to 967: R0=scalar(id=804) R1=scalar(umax=8,var_off=(0x0; 0x8)) R2=scalar(umax=1000000000,var_off=(0x0; 0x3fffffff)) R6=ctx(off=0,imm=0) R7=scalar(id=804) R8=1 R9=map_value(off=0,ks=4,vs=16,imm=0) R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-192=1 fp-200= fp-208=mmmmmmmm
; pckt->flow.port16[0] = pckt->flow.port16[1];
967: (69) r1 = *(u16 *)(r10 -46)      ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; pckt->flow.port16[0] = pckt->flow.port16[1];
968: (6b) *(u16 *)(r10 -48) = r1      ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-48=
969: (05) goto pc+0
; memset(pckt->flow.srcv6, 0, 16);
970: (7a) *(u64 *)(r10 -80) = 0       ; R10=fp0 fp-80_w=mmmmmmmm
971: (b7) r1 = 0                      ; R1_w=0
972: (7b) *(u64 *)(r10 -184) = r1
last_idx 972 first_idx 967
regs=2 stack=0 before 971: (b7) r1 = 0
973: R1_w=P0 R10=fp0 fp-184_w=00000000
973: (7a) *(u64 *)(r10 -72) = 0       ; R10=fp0 fp-72_w=mmmmmmmm
974: (b7) r9 = 0                      ; R9_w=0
975: (b7) r0 = 0                      ; R0_w=0
976: (b7) r8 = 0                      ; R8_w=0
977: (b7) r3 = 0                      ; R3_w=0
978: (b7) r4 = 0                      ; R4_w=0
; __jhash_mix(a, b, c);
979: (1f) r3 -= r8                    ; R3_w=0 R8_w=0
; c += *(u32*)(k + 8);
980: (07) r8 += -559038209            ; R8_w=-559038209
981: (05) goto pc+0
982: (05) goto pc+0
983: (05) goto pc+0
984: (bc) w5 = w8                     ; R5_w=3735929087 R8=-559038209
; return (word << shift) | (word >> ((-shift) & 31));
985: (77) r5 >>= 28                   ; R5_w=13
986: (bf) r2 = r8                     ; R2_w=-559038209 R8=-559038209
987: (67) r2 <<= 4                    ; R2_w=-8944611344
988: (4f) r2 |= r5                    ; R2_w=-8944611331 R5_w=13
; __jhash_mix(a, b, c);
989: (af) r2 ^= r3                    ; R2_w=-8944611331 R3=0
990: (05) goto pc+0
991: (05) goto pc+0
992: (05) goto pc+0
993: (bc) w5 = w2                     ; R2=-8944611331 R5_w=3940290557
; return (word << shift) | (word >> ((-shift) & 31));
994: (77) r5 >>= 26                   ; R5_w=58
995: (bf) r7 = r2                     ; R2=-8944611331 R7_w=-8944611331
996: (67) r7 <<= 6                    ; R7_w=-572455125184
997: (4f) r7 |= r5                    ; R5_w=58 R7_w=-572455125126
; b += *(u32*)(k + 4);
998: (07) r1 += -559038209            ; R1_w=P-559038209
; __jhash_mix(a, b, c);
999: (bf) r3 = r1                     ; R1_w=P-559038209 R3_w=P-559038209
1000: (1f) r3 -= r2
last_idx 1000 first_idx 991
regs=4 stack=0 before 999: (bf) r3 = r1
regs=4 stack=0 before 998: (07) r1 += -559038209
regs=4 stack=0 before 997: (4f) r7 |= r5
regs=4 stack=0 before 996: (67) r7 <<= 6
regs=4 stack=0 before 995: (bf) r7 = r2
regs=4 stack=0 before 994: (77) r5 >>= 26
regs=4 stack=0 before 993: (bc) w5 = w2
regs=4 stack=0 before 992: (05) goto pc+0
regs=4 stack=0 before 991: (05) goto pc+0
parent didn't have regs=4 stack=0 marks: R0=0 R1_r=P0 R2_rw=P-8944611331 R3=0 R4=0 R5_w=13 R6=ctx(off=0,imm=0) R7=scalar(id=804) R8=-559038209 R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-184=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
last_idx 990 first_idx 982
regs=4 stack=0 before 990: (05) goto pc+0
regs=4 stack=0 before 989: (af) r2 ^= r3
regs=c stack=0 before 988: (4f) r2 |= r5
regs=2c stack=0 before 987: (67) r2 <<= 4
regs=2c stack=0 before 986: (bf) r2 = r8
regs=128 stack=0 before 985: (77) r5 >>= 28
regs=128 stack=0 before 984: (bc) w5 = w8
regs=108 stack=0 before 983: (05) goto pc+0
regs=108 stack=0 before 982: (05) goto pc+0
parent didn't have regs=108 stack=0 marks: R0_w=0 R1_rw=P0 R2=scalar(umax=1000000000,var_off=(0x0; 0x3fffffff)) R3_rw=P0 R4_w=0 R6=ctx(off=0,imm=0) R7=scalar(id=804) R8_rw=P-559038209 R9_w=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72_w=mmmmmmmm fp-80_w=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-184_w=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
last_idx 981 first_idx 967
regs=108 stack=0 before 981: (05) goto pc+0
regs=108 stack=0 before 980: (07) r8 += -559038209
regs=108 stack=0 before 979: (1f) r3 -= r8
regs=108 stack=0 before 978: (b7) r4 = 0
regs=108 stack=0 before 977: (b7) r3 = 0
regs=100 stack=0 before 976: (b7) r8 = 0
1001: (af) r3 ^= r7
last_idx 1001 first_idx 991
regs=80 stack=0 before 1000: (1f) r3 -= r2
regs=80 stack=0 before 999: (bf) r3 = r1
regs=80 stack=0 before 998: (07) r1 += -559038209
regs=80 stack=0 before 997: (4f) r7 |= r5
regs=a0 stack=0 before 996: (67) r7 <<= 6
regs=a0 stack=0 before 995: (bf) r7 = r2
regs=24 stack=0 before 994: (77) r5 >>= 26
regs=24 stack=0 before 993: (bc) w5 = w2
regs=4 stack=0 before 992: (05) goto pc+0
regs=4 stack=0 before 991: (05) goto pc+0
parent already had regs=4 stack=0 marks: R0=0 R1_r=P0 R2_rw=P-8944611331 R3=0 R4=0 R5_w=13 R6=ctx(off=0,imm=0) R7=scalar(id=804) R8=-559038209 R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-184=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
; a += (u32)k[3] << 24;
1002: (67) r4 <<= 24                  ; R4_w=0
; a += (u32)k[2] << 16;
1003: (57) r0 &= 255                  ; R0_w=0
; a += (u32)k[2] << 16;
1004: (67) r0 <<= 16                  ; R0_w=0
; a += (u32)k[3] << 24;
1005: (4f) r0 |= r4                   ; R0_w=0 R4_w=0
; pckt->flow.ports,
1006: (61) r5 = *(u32 *)(r10 -48)     ; R5_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; b += initval;
1007: (07) r5 += -525483785           ; R5_w=scalar(smin=-525483785,smax=3769483510)
1008: (05) goto pc+0
1009: (7b) *(u64 *)(r10 -168) = r5    ; R5=scalar(smin=-525483785,smax=3769483510) R10=fp0 fp-168_w=
1010: (05) goto pc+0
1011: (05) goto pc+0
1012: (bc) w4 = w5                    ; R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R5=scalar(smin=-525483785,smax=3769483510)
; return (word << shift) | (word >> ((-shift) & 31));
1013: (77) r4 >>= 18                  ; R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1014: (bf) r7 = r5                    ; R5=scalar(id=886,smin=-525483785,smax=3769483510) R7_w=scalar(id=886,smin=-525483785,smax=3769483510)
1015: (67) r7 <<= 14                  ; R7_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1016: (4f) r7 |= r4                   ; R4_w=scalar(umax=16383,var_off=(0x0; 0x3fff)) R7_w=scalar()
; __jhash_final(a, b, c);
1017: (a7) r5 ^= -525483785           ; R5_w=scalar()
1018: (1f) r5 -= r7                   ; R5_w=scalar() R7_w=scalar()
; __jhash_mix(a, b, c);
1019: (0f) r1 += r8
last_idx 1019 first_idx 1009
regs=100 stack=0 before 1018: (1f) r5 -= r7
regs=100 stack=0 before 1017: (a7) r5 ^= -525483785
regs=100 stack=0 before 1016: (4f) r7 |= r4
regs=100 stack=0 before 1015: (67) r7 <<= 14
regs=100 stack=0 before 1014: (bf) r7 = r5
regs=100 stack=0 before 1013: (77) r4 >>= 18
regs=100 stack=0 before 1012: (bc) w4 = w5
regs=100 stack=0 before 1011: (05) goto pc+0
regs=100 stack=0 before 1010: (05) goto pc+0
regs=100 stack=0 before 1009: (7b) *(u64 *)(r10 -168) = r5
parent didn't have regs=100 stack=0 marks: R0_w=0 R1_rw=P-559038209 R2=P-8944611331 R3_w=P-570076017032 R4_w=0 R5_rw=scalar(smin=-525483785,smax=3769483510) R6=ctx(off=0,imm=0) R7_w=P-572455125126 R8_r=P-559038209 R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-184=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
last_idx 1008 first_idx 991
regs=100 stack=0 before 1008: (05) goto pc+0
regs=100 stack=0 before 1007: (07) r5 += -525483785
regs=100 stack=0 before 1006: (61) r5 = *(u32 *)(r10 -48)
regs=100 stack=0 before 1005: (4f) r0 |= r4
regs=100 stack=0 before 1004: (67) r0 <<= 16
regs=100 stack=0 before 1003: (57) r0 &= 255
regs=100 stack=0 before 1002: (67) r4 <<= 24
regs=100 stack=0 before 1001: (af) r3 ^= r7
regs=100 stack=0 before 1000: (1f) r3 -= r2
regs=100 stack=0 before 999: (bf) r3 = r1
regs=100 stack=0 before 998: (07) r1 += -559038209
regs=100 stack=0 before 997: (4f) r7 |= r5
regs=100 stack=0 before 996: (67) r7 <<= 6
regs=100 stack=0 before 995: (bf) r7 = r2
regs=100 stack=0 before 994: (77) r5 >>= 26
regs=100 stack=0 before 993: (bc) w5 = w2
regs=100 stack=0 before 992: (05) goto pc+0
regs=100 stack=0 before 991: (05) goto pc+0
parent didn't have regs=100 stack=0 marks: R0_r=0 R1_r=P0 R2_rw=P-8944611331 R3=0 R4_r=0 R5_w=13 R6=ctx(off=0,imm=0) R7=scalar(id=804) R8_r=P-559038209 R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48_r= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-184=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
last_idx 990 first_idx 982
regs=100 stack=0 before 990: (05) goto pc+0
regs=100 stack=0 before 989: (af) r2 ^= r3
regs=100 stack=0 before 988: (4f) r2 |= r5
regs=100 stack=0 before 987: (67) r2 <<= 4
regs=100 stack=0 before 986: (bf) r2 = r8
regs=100 stack=0 before 985: (77) r5 >>= 28
regs=100 stack=0 before 984: (bc) w5 = w8
regs=100 stack=0 before 983: (05) goto pc+0
regs=100 stack=0 before 982: (05) goto pc+0
parent already had regs=100 stack=0 marks: R0_rw=0 R1_rw=P0 R2=scalar(umax=1000000000,var_off=(0x0; 0x3fffffff)) R3_rw=P0 R4_rw=0 R6=ctx(off=0,imm=0) R7=scalar(id=804) R8_rw=P-559038209 R9_w=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48_r= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72_w=mmmmmmmm fp-80_w=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-184_w=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
; a += (u32)k[1] << 8;
1020: (57) r9 &= 255                  ; R9_w=0
; a += (u32)k[1] << 8;
1021: (67) r9 <<= 8                   ; R9_w=0
; a += (u32)k[2] << 16;
1022: (4f) r0 |= r9                   ; R0_w=0 R9_w=0
1023: (79) r4 = *(u64 *)(r10 -184)    ; R4_w=P0 R10=fp0
; a += k[0];
1024: (57) r4 &= 255                  ; R4_w=P0
; a += (u32)k[1] << 8;
1025: (4f) r0 |= r4                   ; R0_w=0 R4_w=P0
1026: (05) goto pc+0
1027: (05) goto pc+0
; __jhash_mix(a, b, c);
1028: (05) goto pc+0
1029: (bc) w7 = w3                    ; R3=P-570076017032 R7_w=P1154633336
; return (word << shift) | (word >> ((-shift) & 31));
1030: (77) r7 >>= 24                  ; R7_w=P68
1031: (bf) r4 = r3                    ; R3=P-570076017032 R4_w=P-570076017032
1032: (67) r4 <<= 8                   ; R4_w=P-145939460360192
1033: (4f) r4 |= r7                   ; R4_w=P-145939460360124 R7_w=P68
; __jhash_mix(a, b, c);
1034: (0f) r2 += r1                   ; R1=P-1118076418 R2_w=P-10062687749
1035: (1f) r1 -= r3                   ; R1_w=P568957940614 R3=P-570076017032
1036: (af) r1 ^= r4                   ; R1_w=P-145407547585598 R4_w=P-145939460360124
1037: (05) goto pc+0
1038: (05) goto pc+0
; __jhash_final(a, b, c);
1039: (7b) *(u64 *)(r10 -176) = r5    ; R5=scalar() R10=fp0 fp-176_w=mmmmmmmm
1040: (05) goto pc+0
1041: (bc) w4 = w5                    ; R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R5=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1042: (77) r4 >>= 21                  ; R4_w=scalar(umax=2047,var_off=(0x0; 0x7ff))
1043: (bf) r8 = r5                    ; R5=scalar(id=888) R8_w=scalar(id=888)
1044: (67) r8 <<= 11                  ; R8_w=scalar(smax=9223372036854773760,umax=18446744073709549568,var_off=(0x0; 0xfffffffffffff800),s32_max=2147481600,u32_max=-2048)
1045: (4f) r8 |= r4                   ; R4_w=scalar(umax=2047,var_off=(0x0; 0x7ff)) R8_w=scalar()
1046: (05) goto pc+0
1047: (05) goto pc+0
; __jhash_mix(a, b, c);
1048: (05) goto pc+0
1049: (bc) w4 = w1                    ; R1=P-145407547585598 R4_w=P2865187778
; return (word << shift) | (word >> ((-shift) & 31));
1050: (77) r4 >>= 16                  ; R4_w=P43719
1051: (bf) r7 = r1                    ; R1=P-145407547585598 R7_w=P-145407547585598
1052: (67) r7 <<= 16                  ; R7_w=P8917315035139801088
1053: (4f) r7 |= r4                   ; R4_w=P43719 R7_w=P8917315035139844807
; __jhash_mix(a, b, c);
1054: (0f) r3 += r2                   ; R2=P-10062687749 R3_w=P-580138704781
1055: (1f) r2 -= r1                   ; R1=P-145407547585598 R2_w=P145397484897849
1056: (af) r2 ^= r7                   ; R2_w=P8917178920830430462 R7_w=P8917315035139844807
1057: (05) goto pc+0
1058: (05) goto pc+0
1059: (05) goto pc+0
1060: (bc) w7 = w2                    ; R2=P8917178920830430462 R7_w=P3065179390
; return (word << shift) | (word >> ((-shift) & 31));
1061: (77) r7 >>= 13                  ; R7_w=P374167
1062: (bf) r4 = r2                    ; R2=P8917178920830430462 R4_w=P8917178920830430462
1063: (67) r4 <<= 19                  ; R4_w=P8637259322254950400
1064: (4f) r4 |= r7                   ; R4_w=P8637259322255324567 R7_w=P374167
; __jhash_mix(a, b, c);
1065: (0f) r1 += r3                   ; R1_w=P-145987686290379 R3=P-580138704781
1066: (1f) r3 -= r2                   ; R2=P8917178920830430462 R3_w=P-8917179500969135243
1067: (af) r3 ^= r4                   ; R3_w=P-873023320690047262 R4_w=P8637259322255324567
1068: (0f) r2 += r1                   ; R1_w=P-145987686290379 R2_w=P8917032933144140083
1069: (bf) r5 = r3                    ; R3_w=P-873023320690047262 R5_w=P-873023320690047262
1070: (0f) r5 += r2                   ; R2_w=P8917032933144140083 R5_w=P8044009612454092821
1071: (05) goto pc+0
1072: (05) goto pc+0
1073: (05) goto pc+0
1074: (bc) w4 = w5                    ; R4_w=P2686935061 R5=P8044009612454092821
; return (word << shift) | (word >> ((-shift) & 31));
1075: (77) r4 >>= 18                  ; R4_w=P10249
1076: (bf) r7 = r5                    ; R5=P8044009612454092821 R7_w=P8044009612454092821
1077: (67) r7 <<= 14                  ; R7_w=P-8932916206889517056
1078: (4f) r7 |= r4                   ; R4_w=P10249 R7_w=P-8932916206889506807
; __jhash_mix(a, b, c);
1079: (05) goto pc+0
1080: (05) goto pc+0
1081: (05) goto pc+0
1082: (bc) w4 = w3                    ; R3=P-873023320690047262 R4_w=P1369655010
; return (word << shift) | (word >> ((-shift) & 31));
1083: (77) r4 >>= 28                  ; R4_w=P5
; __jhash_mix(a, b, c);
1084: (1f) r1 -= r3                   ; R1_w=P872877333003756883 R3=P-873023320690047262
; return (word << shift) | (word >> ((-shift) & 31));
1085: (67) r3 <<= 4                   ; R3_w=P4478370942668795424
1086: (4f) r3 |= r4                   ; R3_w=P4478370942668795429 R4_w=P5
; __jhash_mix(a, b, c);
1087: (af) r1 ^= r3                   ; R1_w=P3619570195461933942 R3_w=P4478370942668795429
; a += k[0];
1088: (0f) r2 += r0
last_idx 1088 first_idx 1080
regs=1 stack=0 before 1087: (af) r1 ^= r3
regs=1 stack=0 before 1086: (4f) r3 |= r4
regs=1 stack=0 before 1085: (67) r3 <<= 4
regs=1 stack=0 before 1084: (1f) r1 -= r3
regs=1 stack=0 before 1083: (77) r4 >>= 28
regs=1 stack=0 before 1082: (bc) w4 = w3
regs=1 stack=0 before 1081: (05) goto pc+0
regs=1 stack=0 before 1080: (05) goto pc+0
parent didn't have regs=1 stack=0 marks: R0_r=P0 R1_r=P-145987686290379 R2_r=P8917032933144140083 R3_r=P-873023320690047262 R4_w=P10249 R5=P8044009612454092821 R6=ctx(off=0,imm=0) R7_w=P-8932916206889506807 R8=scalar() R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
last_idx 1079 first_idx 1072
regs=1 stack=0 before 1079: (05) goto pc+0
regs=1 stack=0 before 1078: (4f) r7 |= r4
regs=1 stack=0 before 1077: (67) r7 <<= 14
regs=1 stack=0 before 1076: (bf) r7 = r5
regs=1 stack=0 before 1075: (77) r4 >>= 18
regs=1 stack=0 before 1074: (bc) w4 = w5
regs=1 stack=0 before 1073: (05) goto pc+0
regs=1 stack=0 before 1072: (05) goto pc+0
parent didn't have regs=1 stack=0 marks: R0_r=P0 R1_rw=P-145987686290379 R2_rw=P8917032933144140083 R3_rw=P-873023320690047262 R4_w=P8637259322255324567 R5_rw=P8044009612454092821 R6=ctx(off=0,imm=0) R7_w=P374167 R8=scalar() R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
last_idx 1071 first_idx 1058
regs=1 stack=0 before 1071: (05) goto pc+0
regs=1 stack=0 before 1070: (0f) r5 += r2
regs=1 stack=0 before 1069: (bf) r5 = r3
regs=1 stack=0 before 1068: (0f) r2 += r1
regs=1 stack=0 before 1067: (af) r3 ^= r4
regs=1 stack=0 before 1066: (1f) r3 -= r2
regs=1 stack=0 before 1065: (0f) r1 += r3
regs=1 stack=0 before 1064: (4f) r4 |= r7
regs=1 stack=0 before 1063: (67) r4 <<= 19
regs=1 stack=0 before 1062: (bf) r4 = r2
regs=1 stack=0 before 1061: (77) r7 >>= 13
regs=1 stack=0 before 1060: (bc) w7 = w2
regs=1 stack=0 before 1059: (05) goto pc+0
regs=1 stack=0 before 1058: (05) goto pc+0
parent didn't have regs=1 stack=0 marks: R0_r=P0 R1_r=P-145407547585598 R2_rw=P8917178920830430462 R3_rw=P-580138704781 R4_w=P43719 R5=scalar(id=888) R6=ctx(off=0,imm=0) R7_w=P8917315035139844807 R8=scalar() R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
last_idx 1057 first_idx 1047
regs=1 stack=0 before 1057: (05) goto pc+0
regs=1 stack=0 before 1056: (af) r2 ^= r7
regs=1 stack=0 before 1055: (1f) r2 -= r1
regs=1 stack=0 before 1054: (0f) r3 += r2
regs=1 stack=0 before 1053: (4f) r7 |= r4
regs=1 stack=0 before 1052: (67) r7 <<= 16
regs=1 stack=0 before 1051: (bf) r7 = r1
regs=1 stack=0 before 1050: (77) r4 >>= 16
regs=1 stack=0 before 1049: (bc) w4 = w1
regs=1 stack=0 before 1048: (05) goto pc+0
regs=1 stack=0 before 1047: (05) goto pc+0
parent didn't have regs=1 stack=0 marks: R0_r=P0 R1_r=P-145407547585598 R2_r=P-10062687749 R3_r=P-570076017032 R4_w=scalar(umax=2047,var_off=(0x0; 0x7ff)) R5=scalar(id=888) R6=ctx(off=0,imm=0) R7=P68 R8_w=scalar() R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176_w=mmmmmmmm fp-184=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
last_idx 1046 first_idx 1038
regs=1 stack=0 before 1046: (05) goto pc+0
regs=1 stack=0 before 1045: (4f) r8 |= r4
regs=1 stack=0 before 1044: (67) r8 <<= 11
regs=1 stack=0 before 1043: (bf) r8 = r5
regs=1 stack=0 before 1042: (77) r4 >>= 21
regs=1 stack=0 before 1041: (bc) w4 = w5
regs=1 stack=0 before 1040: (05) goto pc+0
regs=1 stack=0 before 1039: (7b) *(u64 *)(r10 -176) = r5
regs=1 stack=0 before 1038: (05) goto pc+0
parent didn't have regs=1 stack=0 marks: R0_r=P0 R1_rw=P-145407547585598 R2_rw=P-10062687749 R3_r=P-570076017032 R4_w=P-145939460360124 R5_r=scalar() R6=ctx(off=0,imm=0) R7_w=P68 R8=P-559038209 R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-184=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
last_idx 1037 first_idx 1027
regs=1 stack=0 before 1037: (05) goto pc+0
regs=1 stack=0 before 1036: (af) r1 ^= r4
regs=1 stack=0 before 1035: (1f) r1 -= r3
regs=1 stack=0 before 1034: (0f) r2 += r1
regs=1 stack=0 before 1033: (4f) r4 |= r7
regs=1 stack=0 before 1032: (67) r4 <<= 8
regs=1 stack=0 before 1031: (bf) r4 = r3
regs=1 stack=0 before 1030: (77) r7 >>= 24
regs=1 stack=0 before 1029: (bc) w7 = w3
regs=1 stack=0 before 1028: (05) goto pc+0
regs=1 stack=0 before 1027: (05) goto pc+0
parent didn't have regs=1 stack=0 marks: R0_rw=P0 R1_rw=P-1118076418 R2_r=P-8944611331 R3_r=P-570076017032 R4_w=P0 R5_rw=scalar() R6=ctx(off=0,imm=0) R7_w=scalar() R8=P-559038209 R9_w=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168_w= fp-184=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
last_idx 1026 first_idx 1009
regs=1 stack=0 before 1026: (05) goto pc+0
regs=1 stack=0 before 1025: (4f) r0 |= r4
regs=11 stack=0 before 1024: (57) r4 &= 255
regs=11 stack=0 before 1023: (79) r4 = *(u64 *)(r10 -184)
regs=1 stack=400000 before 1022: (4f) r0 |= r9
regs=201 stack=400000 before 1021: (67) r9 <<= 8
regs=201 stack=400000 before 1020: (57) r9 &= 255
regs=201 stack=400000 before 1019: (0f) r1 += r8
regs=201 stack=400000 before 1018: (1f) r5 -= r7
regs=201 stack=400000 before 1017: (a7) r5 ^= -525483785
regs=201 stack=400000 before 1016: (4f) r7 |= r4
regs=201 stack=400000 before 1015: (67) r7 <<= 14
regs=201 stack=400000 before 1014: (bf) r7 = r5
regs=201 stack=400000 before 1013: (77) r4 >>= 18
regs=201 stack=400000 before 1012: (bc) w4 = w5
regs=201 stack=400000 before 1011: (05) goto pc+0
regs=201 stack=400000 before 1010: (05) goto pc+0
regs=201 stack=400000 before 1009: (7b) *(u64 *)(r10 -168) = r5
parent didn't have regs=201 stack=0 marks: R0_rw=P0 R1_rw=P-559038209 R2_r=P-8944611331 R3_rw=P-570076017032 R4_w=0 R5_rw=scalar(smin=-525483785,smax=3769483510) R6=ctx(off=0,imm=0) R7_w=P-572455125126 R8_r=P-559038209 R9_r=P0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-184_r=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
last_idx 1008 first_idx 991
regs=201 stack=0 before 1008: (05) goto pc+0
regs=201 stack=0 before 1007: (07) r5 += -525483785
regs=201 stack=0 before 1006: (61) r5 = *(u32 *)(r10 -48)
regs=201 stack=0 before 1005: (4f) r0 |= r4
regs=211 stack=0 before 1004: (67) r0 <<= 16
regs=211 stack=0 before 1003: (57) r0 &= 255
regs=211 stack=0 before 1002: (67) r4 <<= 24
regs=211 stack=0 before 1001: (af) r3 ^= r7
regs=211 stack=0 before 1000: (1f) r3 -= r2
regs=211 stack=0 before 999: (bf) r3 = r1
regs=211 stack=0 before 998: (07) r1 += -559038209
regs=211 stack=0 before 997: (4f) r7 |= r5
regs=211 stack=0 before 996: (67) r7 <<= 6
regs=211 stack=0 before 995: (bf) r7 = r2
regs=211 stack=0 before 994: (77) r5 >>= 26
regs=211 stack=0 before 993: (bc) w5 = w2
regs=211 stack=0 before 992: (05) goto pc+0
regs=211 stack=0 before 991: (05) goto pc+0
parent didn't have regs=211 stack=0 marks: R0_r=P0 R1_r=P0 R2_rw=P-8944611331 R3=0 R4_r=P0 R5_w=13 R6=ctx(off=0,imm=0) R7=scalar(id=804) R8_r=P-559038209 R9_r=P0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48_r= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-184_r=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
last_idx 990 first_idx 982
regs=211 stack=0 before 990: (05) goto pc+0
regs=211 stack=0 before 989: (af) r2 ^= r3
regs=211 stack=0 before 988: (4f) r2 |= r5
regs=211 stack=0 before 987: (67) r2 <<= 4
regs=211 stack=0 before 986: (bf) r2 = r8
regs=211 stack=0 before 985: (77) r5 >>= 28
regs=211 stack=0 before 984: (bc) w5 = w8
regs=211 stack=0 before 983: (05) goto pc+0
regs=211 stack=0 before 982: (05) goto pc+0
parent didn't have regs=211 stack=0 marks: R0_rw=P0 R1_rw=P0 R2=scalar(umax=1000000000,var_off=(0x0; 0x3fffffff)) R3_rw=P0 R4_rw=P0 R6=ctx(off=0,imm=0) R7=scalar(id=804) R8_rw=P-559038209 R9_rw=P0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48_r= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72_w=mmmmmmmm fp-80_w=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-184_rw=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
last_idx 981 first_idx 967
regs=211 stack=0 before 981: (05) goto pc+0
regs=211 stack=0 before 980: (07) r8 += -559038209
regs=211 stack=0 before 979: (1f) r3 -= r8
regs=211 stack=0 before 978: (b7) r4 = 0
regs=201 stack=0 before 977: (b7) r3 = 0
regs=201 stack=0 before 976: (b7) r8 = 0
regs=201 stack=0 before 975: (b7) r0 = 0
regs=200 stack=0 before 974: (b7) r9 = 0
; __jhash_final(a, b, c);
1089: (af) r1 ^= r5                   ; R1_w=P6744523029021125475 R5=P8044009612454092821
1090: (1f) r1 -= r7                   ; R1_w=P-2769304837798919334 R7=P-8932916206889506807
1091: (05) goto pc+0
1092: (05) goto pc+0
1093: (05) goto pc+0
1094: (bc) w3 = w1                    ; R1=P-2769304837798919334 R3_w=P607748954
; return (word << shift) | (word >> ((-shift) & 31));
1095: (77) r3 >>= 21                  ; R3_w=P289
1096: (bf) r4 = r1                    ; R1=P-2769304837798919334 R4_w=P-2769304837798919334
1097: (67) r4 <<= 11                  ; R4_w=P-8385877183354449920
1098: (4f) r4 |= r3                   ; R3_w=P289 R4_w=P-8385877183354449631
; __jhash_final(a, b, c);
1099: (bf) r3 = r1                    ; R1=P-2769304837798919334 R3_w=P-2769304837798919334
1100: (af) r3 ^= r2                   ; R2=P8917032933144140083 R3_w=P-6760226462814594455
1101: (1f) r3 -= r4                   ; R3_w=P1625650720539855176 R4_w=P-8385877183354449631
1102: (05) goto pc+0
1103: (05) goto pc+0
1104: (05) goto pc+0
1105: (bc) w2 = w3                    ; R2_w=P2661468488 R3=P1625650720539855176
; return (word << shift) | (word >> ((-shift) & 31));
1106: (77) r2 >>= 7                   ; R2_w=P20792722
1107: (bf) r4 = r3                    ; R3=P1625650720539855176 R4_w=P1625650720539855176
1108: (67) r4 <<= 25                  ; R4_w=P8015639407572811776
1109: (4f) r4 |= r2                   ; R2_w=P20792722 R4_w=P8015639407593604498
; __jhash_final(a, b, c);
1110: (bf) r7 = r3                    ; R3=P1625650720539855176 R7_w=P1625650720539855176
1111: (af) r7 ^= r5                   ; R5=P8044009612454092821 R7_w=P8731750324354001245
1112: (1f) r7 -= r4                   ; R4_w=P8015639407593604498 R7_w=P716110916760396747
1113: (05) goto pc+0
1114: (05) goto pc+0
1115: (05) goto pc+0
1116: (bc) w2 = w7                    ; R2_w=P2907202507 R7=P716110916760396747
; return (word << shift) | (word >> ((-shift) & 31));
1117: (77) r2 >>= 16                  ; R2_w=P44360
1118: (bf) r4 = r7                    ; R4_w=P716110916760396747 R7=P716110916760396747
1119: (67) r4 <<= 16                  ; R4_w=P2528117292261900288
1120: (4f) r4 |= r2                   ; R2_w=P44360 R4_w=P2528117292261944648
; __jhash_final(a, b, c);
1121: (bf) r2 = r7                    ; R2_w=P716110916760396747 R7=P716110916760396747
1122: (af) r2 ^= r1                   ; R1=P-2769304837798919334 R2_w=P-3431372408396586863
1123: (1f) r2 -= r4                   ; R2_w=P-5959489700658531511 R4_w=P2528117292261944648
1124: (05) goto pc+0
1125: (bc) w1 = w2                    ; R1_w=P631649097 R2=P-5959489700658531511
; return (word << shift) | (word >> ((-shift) & 31));
1126: (77) r1 >>= 28                  ; R1_w=P2
1127: (bf) r4 = r2                    ; R2=P-5959489700658531511 R4_w=P-5959489700658531511
1128: (67) r4 <<= 4                   ; R4_w=P-3118114841988746096
1129: (4f) r4 |= r1                   ; R1_w=P2 R4_w=P-3118114841988746094
; __jhash_final(a, b, c);
1130: (bf) r1 = r2                    ; R1_w=P-5959489700658531511 R2=P-5959489700658531511
1131: (af) r1 ^= r3                   ; R1_w=P-4916564071227786751 R3=P1625650720539855176
1132: (1f) r1 -= r4                   ; R1_w=P-1798449229239040657 R4_w=P-3118114841988746094
1133: (05) goto pc+0
1134: (05) goto pc+0
1135: (05) goto pc+0
1136: (bc) w3 = w1                    ; R1=P-1798449229239040657 R3_w=P1621214575
; return (word << shift) | (word >> ((-shift) & 31));
1137: (77) r3 >>= 18                  ; R3_w=P6184
1138: (bf) r4 = r1                    ; R1=P-1798449229239040657 R4_w=P-1798449229239040657
1139: (67) r4 <<= 14                  ; R4_w=P-6341886138288193536
1140: (4f) r4 |= r3                   ; R3_w=P6184 R4_w=P-6341886138288187352
; __jhash_final(a, b, c);
1141: (af) r1 ^= r7                   ; R1_w=P-1226460270496733532 R7=P716110916760396747
1142: (1f) r1 -= r4                   ; R1_w=P5115425867791453820 R4_w=P-6341886138288187352
1143: (05) goto pc+0
1144: (05) goto pc+0
1145: (05) goto pc+0
1146: (bc) w4 = w1                    ; R1=P5115425867791453820 R4_w=P1552797308
; return (word << shift) | (word >> ((-shift) & 31));
1147: (77) r4 >>= 8                   ; R4_w=P6065614
1148: (bf) r5 = r1                    ; R1=P5115425867791453820 R5_w=P5115425867791453820
1149: (67) r5 <<= 24                  ; R5_w=P-5090037560852348928
1150: (4f) r5 |= r4                   ; R4_w=P6065614 R5_w=P-5090037560846283314
; __jhash_final(a, b, c);
1151: (af) r1 ^= r2                   ; R1_w=P-1461973296061088459 R2=P-5959489700658531511
; a += initval;
1152: (1f) r1 -= r5                   ; R1_w=P3628064264785194855 R5_w=P-5090037560846283314
1153: (07) r1 += -525483785           ; R1_w=P3628064264259711070
1154: (79) r7 = *(u64 *)(r10 -176)    ; R7_w=scalar() R10=fp0
; __jhash_final(a, b, c);
1155: (af) r1 ^= r7
last_idx 1155 first_idx 1144
regs=80 stack=0 before 1154: (79) r7 = *(u64 *)(r10 -176)
regs=0 stack=200000 before 1153: (07) r1 += -525483785
regs=0 stack=200000 before 1152: (1f) r1 -= r5
regs=0 stack=200000 before 1151: (af) r1 ^= r2
regs=0 stack=200000 before 1150: (4f) r5 |= r4
regs=0 stack=200000 before 1149: (67) r5 <<= 24
regs=0 stack=200000 before 1148: (bf) r5 = r1
regs=0 stack=200000 before 1147: (77) r4 >>= 8
regs=0 stack=200000 before 1146: (bc) w4 = w1
regs=0 stack=200000 before 1145: (05) goto pc+0
regs=0 stack=200000 before 1144: (05) goto pc+0
parent already had regs=0 stack=0 marks: R0=P0 R1_rw=P5115425867791453820 R2_r=P-5959489700658531511 R3_w=P6184 R4_w=P-6341886138288187352 R5=P8044009612454092821 R6=ctx(off=0,imm=0) R7=P716110916760396747 R8=scalar() R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-32=mmmm???? fp-40=mmmmmmmm fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176_r=mmmmmmmm fp-184=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
1156: (1f) r1 -= r8                   ; R1_w=scalar() R8=scalar()
1157: (05) goto pc+0
1158: (bc) w2 = w1                    ; R1=scalar() R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1159: (77) r2 >>= 7                   ; R2_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff))
1160: (bf) r4 = r1                    ; R1=scalar(id=899) R4_w=scalar(id=899)
1161: (67) r4 <<= 25                  ; R4_w=scalar(smax=9223372036821221376,umax=18446744073675997184,var_off=(0x0; 0xfffffffffe000000),s32_max=2113929216,u32_max=-33554432)
1162: (4f) r4 |= r2                   ; R2_w=scalar(umax=33554431,var_off=(0x0; 0x1ffffff)) R4_w=scalar()
; __jhash_final(a, b, c);
1163: (bf) r0 = r1                    ; R0_w=scalar(id=899) R1=scalar(id=899)
1164: (79) r2 = *(u64 *)(r10 -168)    ; R2_w=scalar(smin=-525483785,smax=3769483510) R10=fp0
1165: (af) r0 ^= r2                   ; R0_w=scalar() R2_w=scalar(smin=-525483785,smax=3769483510)
1166: (1f) r0 -= r4                   ; R0_w=scalar() R4_w=scalar()
1167: (05) goto pc+0
1168: (05) goto pc+0
1169: (05) goto pc+0
1170: (bc) w2 = w0                    ; R0=scalar() R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; return (word << shift) | (word >> ((-shift) & 31));
1171: (77) r2 >>= 16                  ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff))
1172: (bf) r5 = r0                    ; R0=scalar(id=900) R5_w=scalar(id=900)
1173: (67) r5 <<= 16                  ; R5_w=scalar(smax=9223372036854710272,umax=18446744073709486080,var_off=(0x0; 0xffffffffffff0000),s32_max=2147418112,u32_max=-65536)
1174: (4f) r5 |= r2                   ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R5_w=scalar()
; __jhash_final(a, b, c);
1175: (bf) r4 = r0                    ; R0=scalar(id=900) R4_w=scalar(id=900)
1176: (af) r4 ^= r7                   ; R4_w=scalar() R7=Pscalar()
1177: (1f) r4 -= r5                   ; R4_w=scalar() R5_w=scalar()
1178: (05) goto pc+0
1179: (bc) w2 = w4                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R4=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1180: (77) r2 >>= 28                  ; R2_w=scalar(umax=15,var_off=(0x0; 0xf))
1181: (bf) r5 = r4                    ; R4=scalar(id=901) R5_w=scalar(id=901)
1182: (67) r5 <<= 4                   ; R5_w=scalar(smax=9223372036854775792,umax=18446744073709551600,var_off=(0x0; 0xfffffffffffffff0),s32_max=2147483632,u32_max=-16)
1183: (4f) r5 |= r2                   ; R2_w=scalar(umax=15,var_off=(0x0; 0xf)) R5_w=scalar()
; __jhash_final(a, b, c);
1184: (bf) r2 = r4                    ; R2_w=scalar(id=901) R4=scalar(id=901)
1185: (af) r2 ^= r1                   ; R1=scalar(id=899) R2_w=scalar()
1186: (1f) r2 -= r5                   ; R2_w=scalar() R5_w=scalar()
1187: (05) goto pc+0
1188: (05) goto pc+0
1189: (05) goto pc+0
1190: (bc) w1 = w2                    ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R2=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1191: (77) r1 >>= 18                  ; R1_w=scalar(umax=16383,var_off=(0x0; 0x3fff))
1192: (bf) r5 = r2                    ; R2=scalar(id=902) R5_w=scalar(id=902)
1193: (67) r5 <<= 14                  ; R5_w=scalar(smax=9223372036854759424,umax=18446744073709535232,var_off=(0x0; 0xffffffffffffc000),s32_max=2147467264,u32_max=-16384)
1194: (4f) r5 |= r1                   ; R1_w=scalar(umax=16383,var_off=(0x0; 0x3fff)) R5_w=scalar()
; __jhash_final(a, b, c);
1195: (af) r2 ^= r0                   ; R0=scalar(id=900) R2_w=scalar()
1196: (1f) r2 -= r5                   ; R2_w=scalar() R5_w=scalar()
1197: (05) goto pc+0
1198: (bc) w1 = w2                    ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R2=scalar()
; return (word << shift) | (word >> ((-shift) & 31));
1199: (77) r1 >>= 8                   ; R1_w=scalar(umax=16777215,var_off=(0x0; 0xffffff))
1200: (bf) r3 = r2                    ; R2=scalar(id=903) R3_w=scalar(id=903)
1201: (67) r3 <<= 24                  ; R3_w=scalar(smax=9223372036837998592,umax=18446744073692774400,var_off=(0x0; 0xffffffffff000000),s32_max=2130706432,u32_max=-16777216)
1202: (4f) r3 |= r1                   ; R1_w=scalar(umax=16777215,var_off=(0x0; 0xffffff)) R3_w=scalar()
; __jhash_final(a, b, c);
1203: (af) r2 ^= r4                   ; R2_w=scalar() R4=scalar(id=901)
1204: (1f) r2 -= r3                   ; R2_w=scalar() R3_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1205: (79) r1 = *(u64 *)(r10 -144)    ; R1_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
1206: (61) r1 = *(u32 *)(r1 +4)       ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; key = RING_SIZE * (vip_info->vip_num) + hash;
1207: (27) r1 *= 65537                ; R1_w=scalar(umax=281479271612415,var_off=(0x0; 0x1ffffffffffff))
; __jhash_final(a, b, c);
1208: (bc) w2 = w2                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
1209: (05) goto pc+0
; hash = get_packet_hash(pckt, hash_16bytes) % RING_SIZE;
1210: (97) r2 %= 65537                ; R2_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1211: (0f) r2 += r1                   ; R1_w=scalar(umax=281479271612415,var_off=(0x0; 0x1ffffffffffff)) R2_w=scalar()
; key = RING_SIZE * (vip_info->vip_num) + hash;
1212: (63) *(u32 *)(r10 -20) = r2     ; R2_w=scalar() R10=fp0 fp-24=mmmm????
1213: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1214: (07) r2 += -20                  ; R2_w=fp-20
; real_pos = bpf_map_lookup_elem(&ch_rings, &key);
1215: (18) r1 = 0xffffaebaa0631000    ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
1217: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=904,off=0,ks=4,vs=4,imm=0)
; if (!real_pos) {
1218: (15) if r0 == 0x0 goto pc+638   ; R0=map_value(off=0,ks=4,vs=4,imm=0)
; key = *real_pos;
1219: (61) r1 = *(u32 *)(r0 +0)       ; R0=map_value(off=0,ks=4,vs=4,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; key = *real_pos;
1220: (63) *(u32 *)(r10 -20) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-24=mmmm????
1221: (79) r8 = *(u64 *)(r10 -192)    ; R8_w=1 R10=fp0
; if (key == 0) {
1222: (55) if r1 != 0x0 goto pc+12    ; R1_w=0
1223: (05) goto pc+0
; __u32 ch_drop_stats_key = MAX_VIPS + CH_DROP_STATS;
1224: (62) *(u32 *)(r10 -28) = 521    ; R10=fp0 fp-32=mmmm????
1225: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
1226: (07) r2 += -28                  ; R2_w=fp-28
; bpf_map_lookup_elem(&stats, &ch_drop_stats_key);
1227: (18) r1 = 0xffffa03499be8000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
1229: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=905,off=0,ks=4,vs=16,imm=0)
; if (!ch_drop_stats) {
1230: (15) if r0 == 0x0 goto pc+3     ; R0=map_value(off=0,ks=4,vs=16,imm=0)
; ch_drop_stats->v2 += 1;
1231: (79) r1 = *(u64 *)(r0 +8)       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
1232: (07) r1 += 1                    ; R1_w=scalar()
1233: (7b) *(u64 *)(r0 +8) = r1       ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
; pckt->real_index = key;
1234: (61) r1 = *(u32 *)(r10 -20)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; pckt->real_index = key;
1235: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1236: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1237: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1238: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1240: (85) call bpf_map_lookup_elem#1
1241: safe

from 1230 to 1234: R0=0 R6=ctx(off=0,imm=0) R7=Pscalar() R8=1 R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40=mmmmmmmm fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
; pckt->real_index = key;
1234: (61) r1 = *(u32 *)(r10 -20)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; pckt->real_index = key;
1235: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1236: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1237: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1238: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1240: (85) call bpf_map_lookup_elem#1
1241: safe

from 1222 to 1235: R0=map_value(off=0,ks=4,vs=4,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6=ctx(off=0,imm=0) R7=Pscalar() R8_w=1 R9=0 R10=fp0 fp-8=00000000 fp-16=00000000 fp-24=mmmm???? fp-32=mmmm???? fp-40=mmmmmmmm fp-48= fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=mmmmmmmm fp-184=00000000 fp-192=1 fp-200= fp-208=mmmmmmmm
; pckt->real_index = key;
1235: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1236: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1237: (07) r2 += -20                  ; R2_w=fp-20
; *real = bpf_map_lookup_elem(&reals, &key);
1238: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1240: (85) call bpf_map_lookup_elem#1
1241: safe

from 1218 to 1857: safe

from 935 to 952: safe

from 916 to 918: R0=map_value(off=0,ks=4,vs=16,imm=0) R1=1 R2=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=40,vs=16,imm=0) R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-200=
; if (pckt.flags & F_SYN_SET) {
918: (67) r1 <<= 3                    ; R1_w=8
; 
919: (0f) r0 += r1
last_idx 919 first_idx 918
regs=2 stack=0 before 918: (67) r1 <<= 3
parent didn't have regs=2 stack=0 marks: R0_r=map_value(off=0,ks=4,vs=16,imm=0) R1_r=P1 R2=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=40,vs=16,imm=0) R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-200=
last_idx 916 first_idx 916
regs=2 stack=0 before 916: (15) if r2 == 0x0 goto pc+1
parent didn't have regs=2 stack=0 marks: R0_rw=map_value(off=0,ks=4,vs=16,imm=0) R1_rw=P1 R2_rw=scalar(umax=2,var_off=(0x0; 0x2)) R6_r=ctx(off=0,imm=0) R7=pkt(off=0,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=40,vs=16,imm=0) R10=fp0 fp-16=????mmmm fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96_r=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168= fp-200_r=
last_idx 915 first_idx 906
regs=2 stack=0 before 915: (b7) r1 = 1
920: (79) r1 = *(u64 *)(r0 +0)        ; R0_w=map_value(off=8,ks=4,vs=16,imm=0) R1_w=scalar()
921: (07) r1 += 1                     ; R1_w=scalar()
922: (7b) *(u64 *)(r0 +0) = r1        ; R0_w=map_value(off=8,ks=4,vs=16,imm=0) R1_w=scalar()
923: (b7) r7 = 0                      ; R7_w=0
; struct real_pos_lru new_dst_lru = {};
924: (7b) *(u64 *)(r10 -8) = r7
last_idx 924 first_idx 918
regs=80 stack=0 before 923: (b7) r7 = 0
925: R7_w=P0 R10=fp0 fp-8_w=00000000
925: (7b) *(u64 *)(r10 -16) = r7      ; R7_w=P0 R10=fp0 fp-16_w=00000000
926: (05) goto pc+0
frame 7: propagating r0
927: safe

from 912 to 1857: safe

from 904 to 923: R0=scalar(id=688) R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R2=scalar(umin=30000000001) R6=ctx(off=0,imm=0) R7=pkt(off=0,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=40,vs=16,imm=0) R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-200=
; 
923: (b7) r7 = 0                      ; R7_w=0
; struct real_pos_lru new_dst_lru = {};
924: (7b) *(u64 *)(r10 -8) = r7
last_idx 924 first_idx 891
regs=80 stack=0 before 923: (b7) r7 = 0
925: R7_w=P0 R10=fp0 fp-8_w=00000000
925: (7b) *(u64 *)(r10 -16) = r7      ; R7_w=P0 R10=fp0 fp-16_w=00000000
926: (05) goto pc+0
frame 7: propagating r0
927: safe

from 884 to 893: R0=map_value(off=0,ks=40,vs=16,imm=0) R1=scalar(umax=255,var_off=(0x0; 0xff)) R6=ctx(off=0,imm=0) R7=pkt(off=0,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=40,vs=16,imm=0) R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-200=
; key = dst_lru->pos;
893: (61) r1 = *(u32 *)(r9 +0)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9=map_value(off=0,ks=40,vs=16,imm=0)
; pckt->real_index = key;
894: (63) *(u32 *)(r10 -40) = r1      ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
; key = dst_lru->pos;
895: (63) *(u32 *)(r10 -16) = r1      ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-16=
896: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; key = dst_lru->pos;
897: (07) r2 += -16                   ; R2_w=fp-16
; *real = bpf_map_lookup_elem(&reals, &key);
898: (18) r1 = 0xffffaeba8c207000     ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
900: (85) call bpf_map_lookup_elem#1
901: safe

from 882 to 903: R0=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9_w=0 R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-200=
; if (pckt.flow.proto == IPPROTO_TCP) {
903: (71) r1 = *(u8 *)(r10 -44)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (pckt.flow.proto == IPPROTO_TCP) {
904: (55) if r1 != 0x6 goto pc+18     ; R1_w=6
905: (05) goto pc+0
906: safe

from 904 to 923: R0=0 R1=scalar(umax=255,var_off=(0x0; 0xff)) R6=ctx(off=0,imm=0) R7=pkt(off=0,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=0 R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-200=
; 
923: (b7) r7 = 0                      ; R7_w=0
; struct real_pos_lru new_dst_lru = {};
924: (7b) *(u64 *)(r10 -8) = r7
last_idx 924 first_idx 923
regs=80 stack=0 before 923: (b7) r7 = 0
925: R7_w=P0 R10=fp0 fp-8_w=00000000
925: (7b) *(u64 *)(r10 -16) = r7      ; R7_w=P0 R10=fp0 fp-16_w=00000000
926: (05) goto pc+0
frame 7: propagating r0
927: safe

from 876 to 903: R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar(umax=2,var_off=(0x0; 0x2)) R6=ctx(off=0,imm=0) R7=pkt(off=0,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-200=
; if (pckt.flow.proto == IPPROTO_TCP) {
903: (71) r1 = *(u8 *)(r10 -44)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (pckt.flow.proto == IPPROTO_TCP) {
904: (55) if r1 != 0x6 goto pc+18     ; R1_w=6
905: (05) goto pc+0
906: safe

from 904 to 923: safe

from 873 to 903: R0=map_value(off=0,ks=4,vs=16,imm=0) R1=scalar(umax=2,var_off=(0x0; 0x2)) R6=ctx(off=0,imm=0) R7=pkt(off=0,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-200=
; if (pckt.flow.proto == IPPROTO_TCP) {
903: (71) r1 = *(u8 *)(r10 -44)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (pckt.flow.proto == IPPROTO_TCP) {
904: (55) if r1 != 0x6 goto pc+18     ; R1_w=6
905: (05) goto pc+0
906: safe

from 904 to 923: safe

from 430 to 869: R0=map_value(off=0,ks=4,vs=16,imm=0) R1=scalar(umin=2,umax=255,var_off=(0x0; 0xff)) R6=ctx(off=0,imm=0) R7=pkt(off=0,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; original_sport = pckt.flow.port16[0];
869: (69) r1 = *(u16 *)(r10 -48)      ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
870: (7b) *(u64 *)(r10 -200) = r1     ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-200_w=
871: (71) r1 = *(u8 *)(r10 -36)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
872: (57) r1 &= 2
873: safe

from 422 to 1857: safe

from 414 to 687: R0=map_ptr(off=0,ks=40,vs=16,imm=0) R1=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; pckt->flow.src = iph->daddr;
687: (05) goto pc+0
; __u32 quic_packets_stats_key = 0;
688: (62) *(u32 *)(r10 -28) = 0       ; R10=fp0 fp-32=mmmm????
689: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
690: (07) r2 += -28                   ; R2_w=fp-28
; bpf_map_lookup_elem(&quic_stats_map, &quic_packets_stats_key);
691: (18) r1 = 0xffffa03587064800     ; R1_w=map_ptr(off=0,ks=4,vs=104,imm=0)
693: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=910,off=0,ks=4,vs=104,imm=0)
694: (bf) r9 = r0                     ; R0_w=map_value_or_null(id=910,off=0,ks=4,vs=104,imm=0) R9_w=map_value_or_null(id=910,off=0,ks=4,vs=104,imm=0)
; if (!quic_packets_stats) {
695: (15) if r9 == 0x0 goto pc+1161   ; R9_w=map_value(off=0,ks=4,vs=104,imm=0)
; bool is_icmp = (pckt->flags & F_ICMP);
696: (71) r2 = *(u8 *)(r10 -36)       ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; bool is_icmp = (pckt->flags & F_ICMP);
697: (57) r2 &= 1                     ; R2_w=scalar(umax=1,var_off=(0x0; 0x1))
698: (b7) r1 = 54                     ; R1=54
; if (is_ipv6) {
699: (15) if r2 == 0x0 goto pc+1      ; R2=scalar(umax=1,var_off=(0x0; 0x1))
700: (b7) r1 = 102                    ; R1_w=102
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
701: (0f) r7 += r1
last_idx 701 first_idx 699
regs=2 stack=0 before 700: (b7) r1 = 102
702: R1_w=P102 R7_w=pkt(off=102,r=122,imm=0)
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
702: (bf) r1 = r7                     ; R1_w=pkt(off=102,r=122,imm=0) R7_w=pkt(off=102,r=122,imm=0)
703: (07) r1 += 9                     ; R1_w=pkt(off=111,r=122,imm=0)
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
704: (2d) if r1 > r8 goto pc+160      ; R1_w=pkt(off=111,r=122,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
705: (71) r2 = *(u8 *)(r7 +8)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=102,r=122,imm=0)
706: (67) r2 <<= 56                   ; R2_w=scalar(smax=9151314442816847872,umax=18374686479671623680,var_off=(0x0; 0xff00000000000000),s32_min=0,s32_max=0,u32_max=0)
707: (c7) r2 s>>= 56                  ; R2=scalar(smin=-128,smax=127)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
708: (65) if r2 s> 0xffffffff goto pc+40      ; R2=scalar(umin=18446744073709551488,var_off=(0xffffffffffffff80; 0x7f),u32_min=-128)
; if (quic_data + sizeof(struct quic_long_header) > data_end) {
709: (bf) r1 = r7                     ; R1_w=pkt(off=102,r=122,imm=0) R7=pkt(off=102,r=122,imm=0)
710: (07) r1 += 22                    ; R1_w=pkt(off=124,r=122,imm=0)
; if (quic_data + sizeof(struct quic_long_header) > data_end) {
711: (2d) if r1 > r8 goto pc+153      ; R1_w=pkt(off=124,r=124,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_PACKET_TYPE_MASK) < QUIC_HANDSHAKE) {
712: (57) r2 &= 32                    ; R2_w=scalar(umax=32,var_off=(0x0; 0x20))
; if ((*pkt_type & QUIC_PACKET_TYPE_MASK) < QUIC_HANDSHAKE) {
713: (15) if r2 == 0x0 goto pc+77     ; R2_w=scalar(umax=32,var_off=(0x0; 0x20))
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
714: (71) r1 = *(u8 *)(r7 +13)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=102,r=124,imm=0)
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
715: (07) r7 += 14                    ; R7=pkt(off=116,r=124,imm=0)
716: (25) if r1 > 0x7 goto pc+36      ; R1=scalar(umax=7,var_off=(0x0; 0x7))
717: (05) goto pc+147
; 
865: (79) r1 = *(u64 *)(r9 +0)        ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
866: (07) r1 += 1                     ; R1_w=scalar()
867: (7b) *(u64 *)(r9 +0) = r1        ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
868: (79) r9 = *(u64 *)(r10 -144)     ; R9_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
; original_sport = pckt.flow.port16[0];
869: (69) r1 = *(u16 *)(r10 -48)      ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
870: (7b) *(u64 *)(r10 -200) = r1     ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-200_w=
871: (71) r1 = *(u8 *)(r10 -36)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
872: (57) r1 &= 2
873: safe

from 716 to 753: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(umin=8,umax=255,var_off=(0x0; 0xff)) R2=scalar(umax=32,var_off=(0x0; 0x20)) R6=ctx(off=0,imm=0) R7=pkt(off=116,r=124,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (!connId) {
753: (15) if r7 == 0x0 goto pc+111    ; R7=pkt(off=116,r=124,imm=0)
; __u8 connIdVersion = (connId[0] >> 6);
754: (71) r1 = *(u8 *)(r7 +0)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=116,r=124,imm=0)
755: (bf) r2 = r1                     ; R1_w=scalar(id=911,umax=255,var_off=(0x0; 0xff)) R2_w=scalar(id=911,umax=255,var_off=(0x0; 0xff))
756: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
; if (connIdVersion == QUIC_CONNID_VERSION_V1) {
757: (15) if r2 == 0x3 goto pc+48     ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
758: (15) if r2 == 0x2 goto pc+59     ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
759: (55) if r2 != 0x1 goto pc+105    ; R2_w=1
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
760: (57) r1 &= 63                    ; R1_w=scalar(umax=63,var_off=(0x0; 0x3f))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
761: (67) r1 <<= 10                   ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
762: (71) r8 = *(u8 *)(r7 +1)         ; R7=pkt(off=116,r=124,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
763: (67) r8 <<= 2                    ; R8_w=scalar(umax=1020,var_off=(0x0; 0x3fc))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
764: (4f) r8 |= r1                    ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00)) R8_w=scalar()
765: (18) r1 = 0x100000000            ; R1_w=4294967296
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
767: (71) r2 = *(u8 *)(r7 +2)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=116,r=124,imm=0)
768: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
769: (05) goto pc+56
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
826: (57) r2 &= 255                   ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
; 
827: (4f) r8 |= r2                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
828: (bf) r2 = r8                     ; R2_w=scalar(id=912) R8_w=scalar(id=912)
829: (67) r2 <<= 32                   ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
830: (c7) r2 s>>= 32                  ; R2_w=scalar(smin=-2147483648,smax=2147483647)
831: (b7) r3 = 1                      ; R3_w=1
; if (qpr.server_id > 0) {
832: (6d) if r3 s> r2 goto pc+32      ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
833: (77) r1 >>= 32                   ; R1_w=1
; if (cid_version == QUIC_CONNID_VERSION_V1) {
834: (15) if r1 == 0x3 goto pc+5
last_idx 834 first_idx 826
regs=2 stack=0 before 833: (77) r1 >>= 32
regs=2 stack=0 before 832: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 831: (b7) r3 = 1
regs=2 stack=0 before 830: (c7) r2 s>>= 32
regs=2 stack=0 before 829: (67) r2 <<= 32
regs=2 stack=0 before 828: (bf) r2 = r8
regs=2 stack=0 before 827: (4f) r8 |= r2
regs=2 stack=0 before 826: (57) r2 &= 255
parent didn't have regs=2 stack=0 marks: R0=map_value(off=0,ks=4,vs=104,imm=0) R1_rw=P4294967296 R2_rw=scalar(umax=3,var_off=(0x0; 0x3)) R6=ctx(off=0,imm=0) R7=pkt(off=116,r=124,imm=0) R8_rw=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
last_idx 769 first_idx 753
regs=2 stack=0 before 769: (05) goto pc+56
regs=2 stack=0 before 768: (77) r2 >>= 6
regs=2 stack=0 before 767: (71) r2 = *(u8 *)(r7 +2)
regs=2 stack=0 before 765: (18) r1 = 0x100000000
835: (15) if r1 == 0x2 goto pc+7      ; R1=P1
836: (55) if r1 != 0x1 goto pc+9      ; R1=P1
; quic_packets_stats->cid_v1 += 1;
837: (bf) r1 = r9                     ; R1_w=map_value(off=0,ks=4,vs=104,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0)
838: (07) r1 += 56                    ; R1_w=map_value(off=56,ks=4,vs=104,imm=0)
839: (05) goto pc+8
; 
848: (79) r2 = *(u64 *)(r1 +0)        ; R1_w=map_value(off=56,ks=4,vs=104,imm=0) R2_w=scalar()
849: (07) r2 += 1                     ; R2_w=scalar()
850: (7b) *(u64 *)(r1 +0) = r2        ; R1_w=map_value(off=56,ks=4,vs=104,imm=0) R2_w=scalar()
; __u32 key = qpr.server_id;
851: (63) *(u32 *)(r10 -20) = r8      ; R8=scalar(id=912) R10=fp0 fp-24=mmmm????
852: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; 
853: (07) r2 += -20                   ; R2_w=fp-20
; __u32* real_pos = bpf_map_lookup_elem(&server_id_map, &key);
854: (18) r1 = 0xffffaebab0634000     ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
856: (85) call bpf_map_lookup_elem#1          ; R0=map_value_or_null(id=913,off=0,ks=4,vs=4,imm=0)
; if (real_pos) {
857: (15) if r0 == 0x0 goto pc+7      ; R0=map_value(off=0,ks=4,vs=4,imm=0)
; key = *real_pos;
858: (61) r1 = *(u32 *)(r0 +0)        ; R0=map_value(off=0,ks=4,vs=4,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; key = *real_pos;
859: (63) *(u32 *)(r10 -20) = r1      ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-24=mmmm????
; if (key == 0) {
860: (55) if r1 != 0x0 goto pc+667    ; R1_w=0
; quic_packets_stats->cid_invalid_server_id_sample = qpr.server_id;
861: (7b) *(u64 *)(r9 +24) = r8       ; R8=scalar(id=912) R9=map_value(off=0,ks=4,vs=104,imm=0)
; quic_packets_stats->cid_invalid_server_id += 1;
862: (79) r1 = *(u64 *)(r9 +16)       ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
863: (07) r1 += 1                     ; R1_w=scalar()
864: (7b) *(u64 *)(r9 +16) = r1       ; R1=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
; 
865: (79) r1 = *(u64 *)(r9 +0)        ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
866: (07) r1 += 1                     ; R1_w=scalar()
867: (7b) *(u64 *)(r9 +0) = r1        ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
868: (79) r9 = *(u64 *)(r10 -144)     ; R9_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
; original_sport = pckt.flow.port16[0];
869: (69) r1 = *(u16 *)(r10 -48)      ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
870: (7b) *(u64 *)(r10 -200) = r1     ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-200_w=
871: (71) r1 = *(u8 *)(r10 -36)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
872: (57) r1 &= 2
873: safe

from 860 to 1528: R0=map_value(off=0,ks=4,vs=4,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6=ctx(off=0,imm=0) R7=pkt(off=116,r=124,imm=0) R8=scalar(id=912) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-24=mmmm???? fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; pckt.real_index = key;
1528: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1529: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1530: (07) r2 += -20                  ; R2_w=fp-20
; dst = bpf_map_lookup_elem(&reals, &key);
1531: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1533: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=914,off=0,ks=4,vs=20,imm=0)
1534: (7b) *(u64 *)(r10 -176) = r0    ; R0_w=map_value_or_null(id=914,off=0,ks=4,vs=20,imm=0) R10=fp0 fp-176_w=map_value_or_null
; if (!dst) {
1535: (55) if r0 != 0x0 goto pc+1     ; R0_w=0
1536: (05) goto pc+599
2136: safe

from 1535 to 1537: R0=map_value(off=0,ks=4,vs=20,imm=0) R6=ctx(off=0,imm=0) R7=pkt(off=116,r=124,imm=0) R8=scalar(id=912) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=map_value
1537: (05) goto pc+0
; __u32 flags_key = 0;
1538: (62) *(u32 *)(r10 -124) = 0     ; R10=fp0 fp-128=mmmm????
1539: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1540: (07) r2 += -124                 ; R2_w=fp-124
; bpf_map_lookup_elem(&server_id_flags, &flags_key);
1541: (18) r1 = 0xffffa03587066800    ; R1_w=map_ptr(off=0,ks=4,vs=1,imm=0)
1543: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=915,off=0,ks=4,vs=1,imm=0)
; flags_value && flags_value->update_quic_sid_based_dst_in_lru;
1544: (15) if r0 == 0x0 goto pc+656   ; R0_w=map_value(off=0,ks=4,vs=1,imm=0)
; flags_value && flags_value->update_quic_sid_based_dst_in_lru;
1545: (71) r7 = *(u8 *)(r0 +0)        ; R0_w=map_value(off=0,ks=4,vs=1,imm=0) R7_w=scalar(umax=255,var_off=(0x0; 0xff))
1546: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1547: (07) r2 += -80                  ; R2_w=fp-80
; struct real_pos_lru* dst_lru = bpf_map_lookup_elem(lru_map, &pckt->flow);
1548: (79) r1 = *(u64 *)(r10 -152)    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0
1549: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=916,off=0,ks=40,vs=16,imm=0)
; if (dst_lru) {
1550: (15) if r0 == 0x0 goto pc+614   ; R0=map_value(off=0,ks=40,vs=16,imm=0)
; if (dst_lru->pos == pckt->real_index) {
1551: (61) r1 = *(u32 *)(r10 -40)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; if (dst_lru->pos == pckt->real_index) {
1552: (61) r2 = *(u32 *)(r0 +0)       ; R0=map_value(off=0,ks=40,vs=16,imm=0) R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; flags_value && flags_value->update_quic_sid_based_dst_in_lru;
1553: (bf) r3 = r7                    ; R3_w=scalar(id=917,umax=255,var_off=(0x0; 0xff)) R7=scalar(id=917,umax=255,var_off=(0x0; 0xff))
; if (dst_lru->pos == pckt->real_index) {
1554: (15) if r3 == 0x0 goto pc+669   ; R3_w=scalar(id=917,umax=255,var_off=(0x0; 0xff))
1555: (bf) r3 = r1                    ; R1_w=scalar(id=918,umax=4294967295,var_off=(0x0; 0xffffffff)) R3_w=scalar(id=918,umax=4294967295,var_off=(0x0; 0xffffffff))
1556: (bf) r4 = r2                    ; R2_w=scalar(id=919,umax=4294967295,var_off=(0x0; 0xffffffff)) R4_w=scalar(id=919,umax=4294967295,var_off=(0x0; 0xffffffff))
1557: (1d) if r4 == r3 goto pc+666    ; R3_w=scalar(id=918,umax=4294967295,var_off=(0x0; 0xffffffff)) R4_w=scalar(id=919,umax=4294967295,var_off=(0x0; 0xffffffff))
; dst_lru->pos = pckt->real_index;
1558: (63) *(u32 *)(r0 +0) = r1       ; R0=map_value(off=0,ks=40,vs=16,imm=0) R1_w=scalar(id=918,umax=4294967295,var_off=(0x0; 0xffffffff))
; vip_num, /* new conn */ false, /* mismatch in lru */ true);
1559: (61) r1 = *(u32 *)(r10 -108)    ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; if (res == DST_MATCH_IN_LRU) {
1560: (7b) *(u64 *)(r10 -168) = r1    ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-168_w=
1561: (05) goto pc+647
2209: safe

from 1557 to 2224: safe

from 1554 to 2224: safe

from 1550 to 2165: R0=0 R6=ctx(off=0,imm=0) R7=scalar(umax=255,var_off=(0x0; 0xff)) R8=scalar(id=912) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-128=mmmm???? fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=map_value
; flags_value && flags_value->update_quic_sid_based_dst_in_lru;
2165: (bf) r1 = r7                    ; R1_w=scalar(id=920,umax=255,var_off=(0x0; 0xff)) R7=scalar(id=920,umax=255,var_off=(0x0; 0xff))
; if (update_lru) {
2166: (15) if r1 == 0x0 goto pc+12    ; R1_w=scalar(id=920,umax=255,var_off=(0x0; 0xff))
2167: (05) goto pc+0
; struct real_pos_lru new_dst_lru = {};
2168: (7a) *(u64 *)(r10 -16) = 0      ; R10=fp0 fp-16_w=mmmmmmmm
; new_dst_lru.pos = pckt->real_index;
2169: (61) r2 = *(u32 *)(r10 -40)     ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; new_dst_lru.pos = pckt->real_index;
2170: (63) *(u32 *)(r10 -16) = r2     ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-16_w=
; struct real_pos_lru new_dst_lru = {};
2171: (7a) *(u64 *)(r10 -8) = 0       ; R10=fp0 fp-8_w=mmmmmmmm
2172: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
2173: (07) r2 += -80                  ; R2_w=fp-80
2174: (bf) r3 = r10                   ; R3_w=fp0 R10=fp0
2175: (07) r3 += -16                  ; R3_w=fp-16
; bpf_map_update_elem(lru_map, &pckt->flow, &new_dst_lru, BPF_ANY);
2176: (79) r1 = *(u64 *)(r10 -152)    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0
2177: (b7) r4 = 0                     ; R4_w=0
2178: (85) call bpf_map_update_elem#2
2179: safe

from 2166 to 2179: safe

from 1544 to 2201: R0=0 R6=ctx(off=0,imm=0) R7=pkt(off=116,r=124,imm=0) R8=scalar(id=912) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-128=mmmm???? fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=map_value
; quic_packets_stats->dst_not_found_in_lru += 1;
2201: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
2202: (07) r2 += -80                  ; R2_w=fp-80
; struct real_pos_lru* dst_lru = bpf_map_lookup_elem(lru_map, &pckt->flow);
2203: (79) r1 = *(u64 *)(r10 -152)    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0
2204: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=921,off=0,ks=40,vs=16,imm=0)
; if (dst_lru) {
2205: (15) if r0 == 0x0 goto pc-27    ; R0_w=map_value(off=0,ks=40,vs=16,imm=0)
; if (dst_lru->pos == pckt->real_index) {
2206: (61) r1 = *(u32 *)(r0 +0)       ; R0_w=map_value(off=0,ks=40,vs=16,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (dst_lru->pos == pckt->real_index) {
2207: (61) r2 = *(u32 *)(r10 -40)     ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; if (res == DST_MATCH_IN_LRU) {
2208: (1d) if r1 == r2 goto pc+16     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
2209: safe

from 2208 to 2225: R0=map_value(off=0,ks=40,vs=16,imm=0) R1=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R2=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6=ctx(off=0,imm=0) R7=pkt(off=116,r=124,imm=0) R8=scalar(id=912) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-128=mmmm???? fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=map_value
; quic_packets_stats->dst_match_in_lru += 1;
2225: (79) r1 = *(u64 *)(r9 +80)      ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
2226: (07) r1 += 1                    ; R1_w=scalar()
2227: (7b) *(u64 *)(r9 +80) = r1
2228: safe

from 2205 to 2179: safe

from 857 to 865: safe

from 832 to 865: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=4294967296 R2_w=scalar(smin=-2147483648,smax=0) R3_w=1 R6=ctx(off=0,imm=0) R7=pkt(off=116,r=124,imm=0) R8_w=scalar(id=912) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; 
865: (79) r1 = *(u64 *)(r9 +0)        ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
866: (07) r1 += 1                     ; R1_w=scalar()
867: (7b) *(u64 *)(r9 +0) = r1        ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
868: (79) r9 = *(u64 *)(r10 -144)     ; R9_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
; original_sport = pckt.flow.port16[0];
869: (69) r1 = *(u16 *)(r10 -48)      ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
870: (7b) *(u64 *)(r10 -200) = r1     ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-200_w=
871: (71) r1 = *(u8 *)(r10 -36)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
872: (57) r1 &= 2
873: safe

from 759 to 865: R0=map_value(off=0,ks=4,vs=104,imm=0) R1_w=scalar(id=911,umax=255,var_off=(0x0; 0xff)) R2_w=scalar(umax=3,var_off=(0x0; 0x3)) R6=ctx(off=0,imm=0) R7=pkt(off=116,r=124,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; 
865: (79) r1 = *(u64 *)(r9 +0)        ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
866: (07) r1 += 1                     ; R1_w=scalar()
867: (7b) *(u64 *)(r9 +0) = r1        ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
868: (79) r9 = *(u64 *)(r10 -144)     ; R9_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
; original_sport = pckt.flow.port16[0];
869: (69) r1 = *(u16 *)(r10 -48)      ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
870: (7b) *(u64 *)(r10 -200) = r1     ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-200_w=
871: (71) r1 = *(u8 *)(r10 -36)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
872: (57) r1 &= 2
873: safe

from 758 to 818: R0=map_value(off=0,ks=4,vs=104,imm=0) R1_w=scalar(id=911,umax=255,var_off=(0x0; 0xff)) R2_w=2 R6=ctx(off=0,imm=0) R7=pkt(off=116,r=124,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
818: (71) r1 = *(u8 *)(r7 +1)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=116,r=124,imm=0)
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
819: (67) r1 <<= 16                   ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
820: (71) r8 = *(u8 *)(r7 +2)         ; R7=pkt(off=116,r=124,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
821: (67) r8 <<= 8                    ; R8_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
822: (4f) r8 |= r1                    ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000)) R8_w=scalar()
823: (18) r1 = 0x200000000            ; R1_w=8589934592
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
825: (71) r2 = *(u8 *)(r7 +3)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=116,r=124,imm=0)
826: (57) r2 &= 255                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
827: (4f) r8 |= r2                    ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
828: (bf) r2 = r8                     ; R2_w=scalar(id=922) R8_w=scalar(id=922)
829: (67) r2 <<= 32                   ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
830: (c7) r2 s>>= 32                  ; R2_w=scalar(smin=-2147483648,smax=2147483647)
831: (b7) r3 = 1                      ; R3_w=1
; if (qpr.server_id > 0) {
832: (6d) if r3 s> r2 goto pc+32      ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
833: (77) r1 >>= 32                   ; R1_w=2
; if (cid_version == QUIC_CONNID_VERSION_V1) {
834: (15) if r1 == 0x3 goto pc+5
last_idx 834 first_idx 753
regs=2 stack=0 before 833: (77) r1 >>= 32
regs=2 stack=0 before 832: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 831: (b7) r3 = 1
regs=2 stack=0 before 830: (c7) r2 s>>= 32
regs=2 stack=0 before 829: (67) r2 <<= 32
regs=2 stack=0 before 828: (bf) r2 = r8
regs=2 stack=0 before 827: (4f) r8 |= r2
regs=2 stack=0 before 826: (57) r2 &= 255
regs=2 stack=0 before 825: (71) r2 = *(u8 *)(r7 +3)
regs=2 stack=0 before 823: (18) r1 = 0x200000000
835: R1=P2
835: (15) if r1 == 0x2 goto pc+7      ; R1=P2
; quic_packets_stats->cid_v2 += 1;
843: (bf) r1 = r9                     ; R1_w=map_value(off=0,ks=4,vs=104,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0)
844: (07) r1 += 64                    ; R1_w=map_value(off=64,ks=4,vs=104,imm=0)
845: (05) goto pc+2
; 
848: (79) r2 = *(u64 *)(r1 +0)        ; R1_w=map_value(off=64,ks=4,vs=104,imm=0) R2_w=scalar()
849: (07) r2 += 1                     ; R2_w=scalar()
850: (7b) *(u64 *)(r1 +0) = r2        ; R1_w=map_value(off=64,ks=4,vs=104,imm=0) R2_w=scalar()
; __u32 key = qpr.server_id;
851: (63) *(u32 *)(r10 -20) = r8      ; R8=scalar(id=922) R10=fp0 fp-24=mmmm????
852: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; 
853: (07) r2 += -20                   ; R2_w=fp-20
; __u32* real_pos = bpf_map_lookup_elem(&server_id_map, &key);
854: (18) r1 = 0xffffaebab0634000     ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
856: (85) call bpf_map_lookup_elem#1
857: safe

from 832 to 865: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=8589934592 R2=scalar(smin=-2147483648,smax=0) R3=1 R6=ctx(off=0,imm=0) R7=pkt(off=116,r=124,imm=0) R8=scalar(id=922) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; 
865: (79) r1 = *(u64 *)(r9 +0)        ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
866: (07) r1 += 1                     ; R1_w=scalar()
867: (7b) *(u64 *)(r9 +0) = r1        ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
868: (79) r9 = *(u64 *)(r10 -144)     ; R9_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
; original_sport = pckt.flow.port16[0];
869: (69) r1 = *(u16 *)(r10 -48)      ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
870: (7b) *(u64 *)(r10 -200) = r1     ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-200_w=
871: (71) r1 = *(u8 *)(r10 -36)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
872: (57) r1 &= 2
873: safe

from 757 to 806: R0=map_value(off=0,ks=4,vs=104,imm=0) R1_w=scalar(id=911,umax=255,var_off=(0x0; 0xff)) R2_w=3 R6=ctx(off=0,imm=0) R7=pkt(off=116,r=124,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
806: (71) r1 = *(u8 *)(r7 +1)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=116,r=124,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
807: (67) r1 <<= 24                   ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
808: (71) r8 = *(u8 *)(r7 +2)         ; R7=pkt(off=116,r=124,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
809: (67) r8 <<= 16                   ; R8_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
810: (4f) r8 |= r1                    ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432) R8_w=scalar()
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
811: (71) r1 = *(u8 *)(r7 +3)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=116,r=124,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
812: (67) r1 <<= 8                    ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
813: (4f) r8 |= r1                    ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00)) R8_w=scalar()
814: (18) r1 = 0x300000000            ; R1_w=12884901888
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
816: (71) r2 = *(u8 *)(r7 +4)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=116,r=124,imm=0)
817: (05) goto pc+8
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
826: (57) r2 &= 255                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
827: (4f) r8 |= r2                    ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
828: (bf) r2 = r8                     ; R2_w=scalar(id=924) R8_w=scalar(id=924)
829: (67) r2 <<= 32                   ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
830: (c7) r2 s>>= 32                  ; R2_w=scalar(smin=-2147483648,smax=2147483647)
831: (b7) r3 = 1                      ; R3_w=1
; if (qpr.server_id > 0) {
832: (6d) if r3 s> r2 goto pc+32      ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
833: (77) r1 >>= 32                   ; R1=3
; if (cid_version == QUIC_CONNID_VERSION_V1) {
834: (15) if r1 == 0x3 goto pc+5
last_idx 834 first_idx 834
parent didn't have regs=2 stack=0 marks: R0=map_value(off=0,ks=4,vs=104,imm=0) R1_rw=P3 R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1 R6=ctx(off=0,imm=0) R7=pkt(off=116,r=124,imm=0) R8_w=scalar(id=924) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
last_idx 833 first_idx 753
regs=2 stack=0 before 833: (77) r1 >>= 32
regs=2 stack=0 before 832: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 831: (b7) r3 = 1
regs=2 stack=0 before 830: (c7) r2 s>>= 32
regs=2 stack=0 before 829: (67) r2 <<= 32
regs=2 stack=0 before 828: (bf) r2 = r8
regs=2 stack=0 before 827: (4f) r8 |= r2
regs=2 stack=0 before 826: (57) r2 &= 255
regs=2 stack=0 before 817: (05) goto pc+8
regs=2 stack=0 before 816: (71) r2 = *(u8 *)(r7 +4)
regs=2 stack=0 before 814: (18) r1 = 0x300000000
; quic_packets_stats->cid_v3 += 1;
840: (bf) r1 = r9                     ; R1_w=map_value(off=0,ks=4,vs=104,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0)
841: (07) r1 += 72                    ; R1_w=map_value(off=72,ks=4,vs=104,imm=0)
842: (05) goto pc+5
; 
848: (79) r2 = *(u64 *)(r1 +0)        ; R1_w=map_value(off=72,ks=4,vs=104,imm=0) R2_w=scalar()
849: (07) r2 += 1                     ; R2_w=scalar()
850: (7b) *(u64 *)(r1 +0) = r2        ; R1_w=map_value(off=72,ks=4,vs=104,imm=0) R2_w=scalar()
; __u32 key = qpr.server_id;
851: (63) *(u32 *)(r10 -20) = r8      ; R8=scalar(id=924) R10=fp0 fp-24=mmmm????
852: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; 
853: (07) r2 += -20                   ; R2_w=fp-20
; __u32* real_pos = bpf_map_lookup_elem(&server_id_map, &key);
854: (18) r1 = 0xffffaebab0634000     ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
856: (85) call bpf_map_lookup_elem#1
857: safe

from 832 to 865: safe

from 753 to 865: safe

from 713 to 791: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=pkt(off=124,r=124,imm=0) R2=0 R6=ctx(off=0,imm=0) R7=pkt(off=102,r=124,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; quic_packets_stats->cid_initial += 1;
791: (79) r1 = *(u64 *)(r9 +8)        ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
792: (07) r1 += 1                     ; R1_w=scalar()
793: (7b) *(u64 *)(r9 +8) = r1        ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
794: (79) r1 = *(u64 *)(r10 -168)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
795: (63) *(u32 *)(r10 -16) = r1      ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-16=
796: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; 
797: (07) r2 += -16                   ; R2_w=fp-16
; bpf_map_lookup_elem(&server_id_stats, &vip_num);
798: (18) r1 = 0xffffa0364c1b2000     ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
800: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=926,off=0,ks=4,vs=16,imm=0)
; if (!per_vip_stats) {
801: (15) if r0 == 0x0 goto pc+66     ; R0_w=map_value(off=0,ks=4,vs=16,imm=0)
; per_vip_stats->v1 += 1;
802: (79) r1 = *(u64 *)(r0 +0)        ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
803: (07) r1 += 1                     ; R1_w=scalar()
804: (7b) *(u64 *)(r0 +0) = r1        ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
805: (05) goto pc+62
; 
868: (79) r9 = *(u64 *)(r10 -144)     ; R9_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
; original_sport = pckt.flow.port16[0];
869: (69) r1 = *(u16 *)(r10 -48)      ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
870: (7b) *(u64 *)(r10 -200) = r1     ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-200_w=
871: (71) r1 = *(u8 *)(r10 -36)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
872: (57) r1 &= 2
873: safe

from 801 to 868: safe

from 711 to 865: safe

from 708 to 749: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=pkt(off=111,r=122,imm=0) R2=scalar(umax=127,var_off=(0x0; 0x7f)) R6=ctx(off=0,imm=0) R7=pkt(off=102,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (quic_data + sizeof(struct quic_short_header) > data_end) {
749: (bf) r2 = r7                     ; R2_w=pkt(off=102,r=122,imm=0) R7=pkt(off=102,r=122,imm=0)
750: (07) r2 += 17                    ; R2_w=pkt(off=119,r=122,imm=0)
751: (bf) r7 = r1                     ; R1=pkt(off=111,r=122,imm=0) R7_w=pkt(off=111,r=122,imm=0)
; if (quic_data + sizeof(struct quic_short_header) > data_end) {
752: (2d) if r2 > r8 goto pc+112      ; R2_w=pkt(off=119,r=122,imm=0) R8=pkt_end(off=0,imm=0)
; if (!connId) {
753: (15) if r7 == 0x0 goto pc+111    ; R7_w=pkt(off=111,r=122,imm=0)
; __u8 connIdVersion = (connId[0] >> 6);
754: (71) r1 = *(u8 *)(r7 +0)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=111,r=122,imm=0)
755: (bf) r2 = r1                     ; R1_w=scalar(id=927,umax=255,var_off=(0x0; 0xff)) R2_w=scalar(id=927,umax=255,var_off=(0x0; 0xff))
756: (77) r2 >>= 6                    ; R2=scalar(umax=3,var_off=(0x0; 0x3))
; if (connIdVersion == QUIC_CONNID_VERSION_V1) {
757: (15) if r2 == 0x3 goto pc+48     ; R2=scalar(umax=3,var_off=(0x0; 0x3))
758: (15) if r2 == 0x2 goto pc+59     ; R2=scalar(umax=3,var_off=(0x0; 0x3))
759: (55) if r2 != 0x1 goto pc+105    ; R2=1
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
760: (57) r1 &= 63                    ; R1_w=scalar(umax=63,var_off=(0x0; 0x3f))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
761: (67) r1 <<= 10                   ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
762: (71) r8 = *(u8 *)(r7 +1)         ; R7=pkt(off=111,r=122,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
763: (67) r8 <<= 2                    ; R8_w=scalar(umax=1020,var_off=(0x0; 0x3fc))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
764: (4f) r8 |= r1                    ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00)) R8_w=scalar()
765: (18) r1 = 0x100000000            ; R1_w=4294967296
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
767: (71) r2 = *(u8 *)(r7 +2)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=111,r=122,imm=0)
768: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
769: (05) goto pc+56
frame 1: propagating r0
last_idx 826 first_idx 757
regs=2 stack=0 before 769: (05) goto pc+56
regs=2 stack=0 before 768: (77) r2 >>= 6
regs=2 stack=0 before 767: (71) r2 = *(u8 *)(r7 +2)
regs=2 stack=0 before 765: (18) r1 = 0x100000000
826: safe

from 759 to 865: safe

from 758 to 818: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=927,umax=255,var_off=(0x0; 0xff)) R2=2 R6=ctx(off=0,imm=0) R7=pkt(off=111,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
818: (71) r1 = *(u8 *)(r7 +1)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=111,r=122,imm=0)
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
819: (67) r1 <<= 16                   ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
820: (71) r8 = *(u8 *)(r7 +2)         ; R7=pkt(off=111,r=122,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
821: (67) r8 <<= 8                    ; R8_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
822: (4f) r8 |= r1                    ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000)) R8_w=scalar()
823: (18) r1 = 0x200000000            ; R1_w=8589934592
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
825: (71) r2 = *(u8 *)(r7 +3)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=111,r=122,imm=0)
826: (57) r2 &= 255                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
827: (4f) r8 |= r2                    ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
828: (bf) r2 = r8                     ; R2_w=scalar(id=928) R8_w=scalar(id=928)
829: (67) r2 <<= 32                   ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
830: (c7) r2 s>>= 32                  ; R2_w=scalar(smin=-2147483648,smax=2147483647)
831: (b7) r3 = 1                      ; R3_w=1
; if (qpr.server_id > 0) {
832: (6d) if r3 s> r2 goto pc+32      ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
833: (77) r1 >>= 32                   ; R1_w=2
; if (cid_version == QUIC_CONNID_VERSION_V1) {
834: (15) if r1 == 0x3 goto pc+5
last_idx 834 first_idx 818
regs=2 stack=0 before 833: (77) r1 >>= 32
regs=2 stack=0 before 832: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 831: (b7) r3 = 1
regs=2 stack=0 before 830: (c7) r2 s>>= 32
regs=2 stack=0 before 829: (67) r2 <<= 32
regs=2 stack=0 before 828: (bf) r2 = r8
regs=2 stack=0 before 827: (4f) r8 |= r2
regs=2 stack=0 before 826: (57) r2 &= 255
regs=2 stack=0 before 825: (71) r2 = *(u8 *)(r7 +3)
regs=2 stack=0 before 823: (18) r1 = 0x200000000
frame 1: propagating r0
835: safe

from 832 to 865: safe

from 757 to 806: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=927,umax=255,var_off=(0x0; 0xff)) R2=3 R6=ctx(off=0,imm=0) R7=pkt(off=111,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
806: (71) r1 = *(u8 *)(r7 +1)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=111,r=122,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
807: (67) r1 <<= 24                   ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
808: (71) r8 = *(u8 *)(r7 +2)         ; R7=pkt(off=111,r=122,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
809: (67) r8 <<= 16                   ; R8_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
810: (4f) r8 |= r1                    ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432) R8_w=scalar()
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
811: (71) r1 = *(u8 *)(r7 +3)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=111,r=122,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
812: (67) r1 <<= 8                    ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
813: (4f) r8 |= r1                    ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00)) R8_w=scalar()
814: (18) r1 = 0x300000000            ; R1_w=12884901888
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
816: (71) r2 = *(u8 *)(r7 +4)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=111,r=122,imm=0)
817: (05) goto pc+8
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
826: (57) r2 &= 255                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
827: (4f) r8 |= r2                    ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
828: (bf) r2 = r8                     ; R2_w=scalar(id=929) R8_w=scalar(id=929)
829: (67) r2 <<= 32                   ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
830: (c7) r2 s>>= 32                  ; R2_w=scalar(smin=-2147483648,smax=2147483647)
831: (b7) r3 = 1                      ; R3_w=1
; if (qpr.server_id > 0) {
832: (6d) if r3 s> r2 goto pc+32      ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
833: (77) r1 >>= 32
frame 1: propagating r0
last_idx 834 first_idx 806
regs=2 stack=0 before 833: (77) r1 >>= 32
regs=2 stack=0 before 832: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 831: (b7) r3 = 1
regs=2 stack=0 before 830: (c7) r2 s>>= 32
regs=2 stack=0 before 829: (67) r2 <<= 32
regs=2 stack=0 before 828: (bf) r2 = r8
regs=2 stack=0 before 827: (4f) r8 |= r2
regs=2 stack=0 before 826: (57) r2 &= 255
regs=2 stack=0 before 817: (05) goto pc+8
regs=2 stack=0 before 816: (71) r2 = *(u8 *)(r7 +4)
regs=2 stack=0 before 814: (18) r1 = 0x300000000
834: safe

from 832 to 865: safe

from 753 to 865: safe

from 752 to 865: safe

from 704 to 865: safe

from 699 to 701: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=54 R2=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
701: (0f) r7 += r1
last_idx 701 first_idx 701
parent didn't have regs=2 stack=0 marks: R0=map_value(off=0,ks=4,vs=104,imm=0) R1_r=P54 R2=0 R6=ctx(off=0,imm=0) R7_r=pkt(off=0,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
last_idx 699 first_idx 699
regs=2 stack=0 before 699: (15) if r2 == 0x0 goto pc+1
parent didn't have regs=2 stack=0 marks: R0_w=map_value(off=0,ks=4,vs=104,imm=0) R1_rw=P54 R2_rw=scalar(umax=1,var_off=(0x0; 0x1)) R6_r=ctx(off=0,imm=0) R7_r=pkt(off=0,r=122,imm=0) R8_r=pkt_end(off=0,imm=0) R9_rw=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16_r=????mmmm fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96_r=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=
last_idx 698 first_idx 687
regs=2 stack=0 before 698: (b7) r1 = 54
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
702: (bf) r1 = r7                     ; R1_w=pkt(off=54,r=122,imm=0) R7_w=pkt(off=54,r=122,imm=0)
703: (07) r1 += 9                     ; R1_w=pkt(off=63,r=122,imm=0)
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
704: (2d) if r1 > r8 goto pc+160      ; R1_w=pkt(off=63,r=122,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
705: (71) r2 = *(u8 *)(r7 +8)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=54,r=122,imm=0)
706: (67) r2 <<= 56                   ; R2_w=scalar(smax=9151314442816847872,umax=18374686479671623680,var_off=(0x0; 0xff00000000000000),s32_min=0,s32_max=0,u32_max=0)
707: (c7) r2 s>>= 56                  ; R2_w=scalar(smin=-128,smax=127)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
708: (65) if r2 s> 0xffffffff goto pc+40      ; R2_w=scalar(umin=18446744073709551488,var_off=(0xffffffffffffff80; 0x7f),u32_min=-128)
; if (quic_data + sizeof(struct quic_long_header) > data_end) {
709: (bf) r1 = r7                     ; R1_w=pkt(off=54,r=122,imm=0) R7_w=pkt(off=54,r=122,imm=0)
710: (07) r1 += 22                    ; R1=pkt(off=76,r=122,imm=0)
; if (quic_data + sizeof(struct quic_long_header) > data_end) {
711: (2d) if r1 > r8 goto pc+153      ; R1=pkt(off=76,r=122,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_PACKET_TYPE_MASK) < QUIC_HANDSHAKE) {
712: (57) r2 &= 32                    ; R2_w=scalar(umax=32,var_off=(0x0; 0x20))
; if ((*pkt_type & QUIC_PACKET_TYPE_MASK) < QUIC_HANDSHAKE) {
713: (15) if r2 == 0x0 goto pc+77     ; R2_w=scalar(umax=32,var_off=(0x0; 0x20))
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
714: (71) r1 = *(u8 *)(r7 +13)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=54,r=122,imm=0)
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
715: (07) r7 += 14                    ; R7_w=pkt(off=68,r=122,imm=0)
716: (25) if r1 > 0x7 goto pc+36      ; R1_w=scalar(umax=7,var_off=(0x0; 0x7))
717: (05) goto pc+147
865: safe

from 716 to 753: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(umin=8,umax=255,var_off=(0x0; 0xff)) R2=scalar(umax=32,var_off=(0x0; 0x20)) R6=ctx(off=0,imm=0) R7=pkt(off=68,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (!connId) {
753: (15) if r7 == 0x0 goto pc+111    ; R7=pkt(off=68,r=122,imm=0)
; __u8 connIdVersion = (connId[0] >> 6);
754: (71) r1 = *(u8 *)(r7 +0)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=68,r=122,imm=0)
755: (bf) r2 = r1                     ; R1_w=scalar(id=930,umax=255,var_off=(0x0; 0xff)) R2_w=scalar(id=930,umax=255,var_off=(0x0; 0xff))
756: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
; if (connIdVersion == QUIC_CONNID_VERSION_V1) {
757: (15) if r2 == 0x3 goto pc+48     ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
758: (15) if r2 == 0x2 goto pc+59     ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
759: (55) if r2 != 0x1 goto pc+105    ; R2_w=1
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
760: (57) r1 &= 63                    ; R1_w=scalar(umax=63,var_off=(0x0; 0x3f))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
761: (67) r1 <<= 10                   ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
762: (71) r8 = *(u8 *)(r7 +1)         ; R7=pkt(off=68,r=122,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
763: (67) r8 <<= 2                    ; R8_w=scalar(umax=1020,var_off=(0x0; 0x3fc))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
764: (4f) r8 |= r1                    ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00)) R8_w=scalar()
765: (18) r1 = 0x100000000            ; R1_w=4294967296
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
767: (71) r2 = *(u8 *)(r7 +2)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=68,r=122,imm=0)
768: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
769: (05) goto pc+56
frame 1: propagating r0
last_idx 826 first_idx 753
regs=2 stack=0 before 769: (05) goto pc+56
regs=2 stack=0 before 768: (77) r2 >>= 6
regs=2 stack=0 before 767: (71) r2 = *(u8 *)(r7 +2)
regs=2 stack=0 before 765: (18) r1 = 0x100000000
826: safe

from 759 to 865: safe

from 758 to 818: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=930,umax=255,var_off=(0x0; 0xff)) R2=2 R6=ctx(off=0,imm=0) R7=pkt(off=68,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
818: (71) r1 = *(u8 *)(r7 +1)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=68,r=122,imm=0)
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
819: (67) r1 <<= 16                   ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
820: (71) r8 = *(u8 *)(r7 +2)         ; R7=pkt(off=68,r=122,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
821: (67) r8 <<= 8                    ; R8_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
822: (4f) r8 |= r1                    ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000)) R8_w=scalar()
823: (18) r1 = 0x200000000            ; R1_w=8589934592
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
825: (71) r2 = *(u8 *)(r7 +3)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=68,r=122,imm=0)
826: (57) r2 &= 255                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
827: (4f) r8 |= r2                    ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
828: (bf) r2 = r8                     ; R2_w=scalar(id=931) R8_w=scalar(id=931)
829: (67) r2 <<= 32                   ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
830: (c7) r2 s>>= 32                  ; R2_w=scalar(smin=-2147483648,smax=2147483647)
831: (b7) r3 = 1                      ; R3_w=1
; if (qpr.server_id > 0) {
832: (6d) if r3 s> r2 goto pc+32      ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
833: (77) r1 >>= 32                   ; R1_w=2
; if (cid_version == QUIC_CONNID_VERSION_V1) {
834: (15) if r1 == 0x3 goto pc+5
last_idx 834 first_idx 818
regs=2 stack=0 before 833: (77) r1 >>= 32
regs=2 stack=0 before 832: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 831: (b7) r3 = 1
regs=2 stack=0 before 830: (c7) r2 s>>= 32
regs=2 stack=0 before 829: (67) r2 <<= 32
regs=2 stack=0 before 828: (bf) r2 = r8
regs=2 stack=0 before 827: (4f) r8 |= r2
regs=2 stack=0 before 826: (57) r2 &= 255
regs=2 stack=0 before 825: (71) r2 = *(u8 *)(r7 +3)
regs=2 stack=0 before 823: (18) r1 = 0x200000000
frame 1: propagating r0
835: safe

from 832 to 865: safe

from 757 to 806: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=930,umax=255,var_off=(0x0; 0xff)) R2=3 R6=ctx(off=0,imm=0) R7=pkt(off=68,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
806: (71) r1 = *(u8 *)(r7 +1)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=68,r=122,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
807: (67) r1 <<= 24                   ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
808: (71) r8 = *(u8 *)(r7 +2)         ; R7=pkt(off=68,r=122,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
809: (67) r8 <<= 16                   ; R8_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
810: (4f) r8 |= r1                    ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432) R8_w=scalar()
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
811: (71) r1 = *(u8 *)(r7 +3)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=68,r=122,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
812: (67) r1 <<= 8                    ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
813: (4f) r8 |= r1                    ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00)) R8_w=scalar()
814: (18) r1 = 0x300000000            ; R1_w=12884901888
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
816: (71) r2 = *(u8 *)(r7 +4)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=68,r=122,imm=0)
817: (05) goto pc+8
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
826: (57) r2 &= 255                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
827: (4f) r8 |= r2                    ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
828: (bf) r2 = r8                     ; R2_w=scalar(id=932) R8_w=scalar(id=932)
829: (67) r2 <<= 32                   ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
830: (c7) r2 s>>= 32                  ; R2_w=scalar(smin=-2147483648,smax=2147483647)
831: (b7) r3 = 1                      ; R3_w=1
; if (qpr.server_id > 0) {
832: (6d) if r3 s> r2 goto pc+32      ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
833: (77) r1 >>= 32
frame 1: propagating r0
last_idx 834 first_idx 806
regs=2 stack=0 before 833: (77) r1 >>= 32
regs=2 stack=0 before 832: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 831: (b7) r3 = 1
regs=2 stack=0 before 830: (c7) r2 s>>= 32
regs=2 stack=0 before 829: (67) r2 <<= 32
regs=2 stack=0 before 828: (bf) r2 = r8
regs=2 stack=0 before 827: (4f) r8 |= r2
regs=2 stack=0 before 826: (57) r2 &= 255
regs=2 stack=0 before 817: (05) goto pc+8
regs=2 stack=0 before 816: (71) r2 = *(u8 *)(r7 +4)
regs=2 stack=0 before 814: (18) r1 = 0x300000000
834: safe

from 832 to 865: safe

from 753 to 865: safe

from 713 to 791: safe

from 711 to 865: safe

from 708 to 749: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=pkt(off=63,r=122,imm=0) R2=scalar(umax=127,var_off=(0x0; 0x7f)) R6=ctx(off=0,imm=0) R7=pkt(off=54,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (quic_data + sizeof(struct quic_short_header) > data_end) {
749: (bf) r2 = r7                     ; R2_w=pkt(off=54,r=122,imm=0) R7=pkt(off=54,r=122,imm=0)
750: (07) r2 += 17                    ; R2_w=pkt(off=71,r=122,imm=0)
751: (bf) r7 = r1                     ; R1=pkt(off=63,r=122,imm=0) R7_w=pkt(off=63,r=122,imm=0)
; if (quic_data + sizeof(struct quic_short_header) > data_end) {
752: (2d) if r2 > r8 goto pc+112      ; R2_w=pkt(off=71,r=122,imm=0) R8=pkt_end(off=0,imm=0)
; if (!connId) {
753: (15) if r7 == 0x0 goto pc+111    ; R7_w=pkt(off=63,r=122,imm=0)
; __u8 connIdVersion = (connId[0] >> 6);
754: (71) r1 = *(u8 *)(r7 +0)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=63,r=122,imm=0)
755: (bf) r2 = r1                     ; R1_w=scalar(id=933,umax=255,var_off=(0x0; 0xff)) R2_w=scalar(id=933,umax=255,var_off=(0x0; 0xff))
756: (77) r2 >>= 6                    ; R2=scalar(umax=3,var_off=(0x0; 0x3))
; if (connIdVersion == QUIC_CONNID_VERSION_V1) {
757: (15) if r2 == 0x3 goto pc+48     ; R2=scalar(umax=3,var_off=(0x0; 0x3))
758: (15) if r2 == 0x2 goto pc+59     ; R2=scalar(umax=3,var_off=(0x0; 0x3))
759: (55) if r2 != 0x1 goto pc+105    ; R2=1
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
760: (57) r1 &= 63                    ; R1_w=scalar(umax=63,var_off=(0x0; 0x3f))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
761: (67) r1 <<= 10                   ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
762: (71) r8 = *(u8 *)(r7 +1)         ; R7=pkt(off=63,r=122,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
763: (67) r8 <<= 2                    ; R8_w=scalar(umax=1020,var_off=(0x0; 0x3fc))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
764: (4f) r8 |= r1                    ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00)) R8_w=scalar()
765: (18) r1 = 0x100000000            ; R1_w=4294967296
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
767: (71) r2 = *(u8 *)(r7 +2)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=63,r=122,imm=0)
768: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
769: (05) goto pc+56
frame 1: propagating r0
last_idx 826 first_idx 757
regs=2 stack=0 before 769: (05) goto pc+56
regs=2 stack=0 before 768: (77) r2 >>= 6
regs=2 stack=0 before 767: (71) r2 = *(u8 *)(r7 +2)
regs=2 stack=0 before 765: (18) r1 = 0x100000000
826: safe

from 759 to 865: safe

from 758 to 818: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=933,umax=255,var_off=(0x0; 0xff)) R2=2 R6=ctx(off=0,imm=0) R7=pkt(off=63,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
818: (71) r1 = *(u8 *)(r7 +1)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=63,r=122,imm=0)
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
819: (67) r1 <<= 16                   ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
820: (71) r8 = *(u8 *)(r7 +2)         ; R7=pkt(off=63,r=122,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
821: (67) r8 <<= 8                    ; R8_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
822: (4f) r8 |= r1                    ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000)) R8_w=scalar()
823: (18) r1 = 0x200000000            ; R1_w=8589934592
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
825: (71) r2 = *(u8 *)(r7 +3)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=63,r=122,imm=0)
826: (57) r2 &= 255                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
827: (4f) r8 |= r2                    ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
828: (bf) r2 = r8                     ; R2_w=scalar(id=934) R8_w=scalar(id=934)
829: (67) r2 <<= 32                   ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
830: (c7) r2 s>>= 32                  ; R2_w=scalar(smin=-2147483648,smax=2147483647)
831: (b7) r3 = 1                      ; R3_w=1
; if (qpr.server_id > 0) {
832: (6d) if r3 s> r2 goto pc+32      ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
833: (77) r1 >>= 32                   ; R1_w=2
; if (cid_version == QUIC_CONNID_VERSION_V1) {
834: (15) if r1 == 0x3 goto pc+5
last_idx 834 first_idx 818
regs=2 stack=0 before 833: (77) r1 >>= 32
regs=2 stack=0 before 832: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 831: (b7) r3 = 1
regs=2 stack=0 before 830: (c7) r2 s>>= 32
regs=2 stack=0 before 829: (67) r2 <<= 32
regs=2 stack=0 before 828: (bf) r2 = r8
regs=2 stack=0 before 827: (4f) r8 |= r2
regs=2 stack=0 before 826: (57) r2 &= 255
regs=2 stack=0 before 825: (71) r2 = *(u8 *)(r7 +3)
regs=2 stack=0 before 823: (18) r1 = 0x200000000
frame 1: propagating r0
835: safe

from 832 to 865: safe

from 757 to 806: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=933,umax=255,var_off=(0x0; 0xff)) R2=3 R6=ctx(off=0,imm=0) R7=pkt(off=63,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
806: (71) r1 = *(u8 *)(r7 +1)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=63,r=122,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
807: (67) r1 <<= 24                   ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
808: (71) r8 = *(u8 *)(r7 +2)         ; R7=pkt(off=63,r=122,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
809: (67) r8 <<= 16                   ; R8_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
810: (4f) r8 |= r1                    ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432) R8_w=scalar()
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
811: (71) r1 = *(u8 *)(r7 +3)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=63,r=122,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
812: (67) r1 <<= 8                    ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
813: (4f) r8 |= r1                    ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00)) R8_w=scalar()
814: (18) r1 = 0x300000000            ; R1_w=12884901888
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
816: (71) r2 = *(u8 *)(r7 +4)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=63,r=122,imm=0)
817: (05) goto pc+8
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
826: (57) r2 &= 255                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
827: (4f) r8 |= r2                    ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
828: (bf) r2 = r8                     ; R2_w=scalar(id=935) R8_w=scalar(id=935)
829: (67) r2 <<= 32                   ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
830: (c7) r2 s>>= 32                  ; R2_w=scalar(smin=-2147483648,smax=2147483647)
831: (b7) r3 = 1                      ; R3_w=1
; if (qpr.server_id > 0) {
832: (6d) if r3 s> r2 goto pc+32      ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
833: (77) r1 >>= 32
frame 1: propagating r0
last_idx 834 first_idx 806
regs=2 stack=0 before 833: (77) r1 >>= 32
regs=2 stack=0 before 832: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 831: (b7) r3 = 1
regs=2 stack=0 before 830: (c7) r2 s>>= 32
regs=2 stack=0 before 829: (67) r2 <<= 32
regs=2 stack=0 before 828: (bf) r2 = r8
regs=2 stack=0 before 827: (4f) r8 |= r2
regs=2 stack=0 before 826: (57) r2 &= 255
regs=2 stack=0 before 817: (05) goto pc+8
regs=2 stack=0 before 816: (71) r2 = *(u8 *)(r7 +4)
regs=2 stack=0 before 814: (18) r1 = 0x300000000
834: safe

from 832 to 865: safe

from 753 to 865: safe

from 752 to 865: safe

from 704 to 865: safe

from 695 to 1857: safe

from 411 to 869: R0=map_ptr(off=0,ks=40,vs=16,imm=0) R1=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; original_sport = pckt.flow.port16[0];
869: (69) r1 = *(u16 *)(r10 -48)      ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
870: (7b) *(u64 *)(r10 -200) = r1     ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-200_w=
871: (71) r1 = *(u8 *)(r10 -36)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
872: (57) r1 &= 2
873: safe

from 380 to 383: R0=map_value(off=0,ks=4,vs=16,imm=0) R1=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm fp-120=mmmm???? fp-136= fp-144=map_value fp-160=map_value
; vip_num = vip_info->vip_num;
383: (61) r1 = *(u32 *)(r9 +4)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9=map_value(off=0,ks=20,vs=8,imm=0)
384: (7b) *(u64 *)(r10 -168) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-168_w=
; vip_num = vip_info->vip_num;
385: (63) *(u32 *)(r10 -108) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-112=mmmmmmmm
; __u32 cpu_num = bpf_get_smp_processor_id();
386: (85) call bpf_get_smp_processor_id#8     ; R0_w=scalar()
; __u32 cpu_num = bpf_get_smp_processor_id();
387: (63) *(u32 *)(r10 -120) = r0     ; R0_w=scalar() R10=fp0 fp-120=mmmmmmmm
388: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; 
389: (07) r2 += -120                  ; R2_w=fp-120
; void* lru_map = bpf_map_lookup_elem(&lru_mapping, &cpu_num);
390: (18) r1 = 0xffffa0376748a000     ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
392: (85) call bpf_map_lookup_elem#1
393: safe

from 372 to 1858: safe

from 362 to 1858: safe

from 355 to 358: R0=map_value(off=0,ks=20,vs=8,imm=0) R1=scalar(umax=136,var_off=(0x0; 0x88)) R6=ctx(off=0,imm=0) R7=pkt(off=0,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=2 R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm fp-136=
; if (data_end - data > MAX_PCKT_SIZE) {
358: (bf) r1 = r8                     ; R1_w=pkt_end(off=0,imm=0) R8=pkt_end(off=0,imm=0)
359: (1f) r1 -= r7                    ; R1_w=scalar() R7=pkt(off=0,r=122,imm=0)
360: (b7) r9 = 1                      ; R9_w=1
361: (79) r2 = *(u64 *)(r10 -136)     ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; if (data_end - data > MAX_PCKT_SIZE) {
362: (65) if r1 s> 0x5ea goto pc+1495         ; R1_w=scalar(smax=1514)
363: (7b) *(u64 *)(r10 -144) = r0     ; R0=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-144_w=map_value
364: (7b) *(u64 *)(r10 -136) = r2     ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-136_w=
365: (05) goto pc+0
366: safe

from 362 to 1858: safe

from 351 to 1858: safe

from 341 to 358: safe

from 292 to 295: R0=scalar(umax=65535,var_off=(0x0; 0xffff)) R1=6 R2=scalar(id=406,umin=1,umax=255,var_off=(0x1; 0xfe)) R3=P1 R4=pkt(off=102,r=122,imm=0) R5=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=1 R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm fp-136=
; pckt->flags |= F_SYN_SET;
295: (7b) *(u64 *)(r10 -136) = r0     ; R0=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-136_w=
296: (b7) r2 = 1
frame 3: propagating r0
297: safe

from 289 to 1858: safe

from 278 to 1858: safe

from 276 to 308: R0=scalar(umax=65535,var_off=(0x0; 0xffff)) R1_w=17 R2_w=scalar(umin=1,umax=255,var_off=(0x1; 0xfe)) R3_w=17 R4_w=scalar() R6=ctx(off=0,imm=0) R7=pkt(off=0,r=102,imm=0) R8=pkt_end(off=0,imm=0) R9=1 R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56_w=mmmmmmmm fp-64_w=mmmmmmmm fp-72_w=mmmmmmmm fp-80_w=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm fp-136=
; bool is_icmp = !((pckt->flags & F_ICMP) == 0);
308: (57) r2 &= 1                     ; R2_w=1
309: (b7) r4 = 54                     ; R4_w=54
; if (is_ipv6) {
310: (15) if r2 == 0x0 goto pc+1
last_idx 310 first_idx 502
regs=4 stack=0 before 309: (b7) r4 = 54
regs=4 stack=0 before 308: (57) r2 &= 1
regs=4 stack=0 before 276: (15) if r3 == 0x11 goto pc+31
regs=4 stack=0 before 275: (bf) r3 = r1
regs=4 stack=0 before 526: (05) goto pc-252
regs=4 stack=0 before 525: (7b) *(u64 *)(r10 -56) = r4
regs=4 stack=0 before 524: (4f) r4 |= r3
regs=4 stack=0 before 523: (67) r4 <<= 32
regs=4 stack=0 before 522: (61) r4 = *(u32 *)(r7 +82)
regs=4 stack=0 before 521: (61) r3 = *(u32 *)(r7 +78)
regs=4 stack=0 before 520: (7b) *(u64 *)(r10 -64) = r3
regs=4 stack=0 before 519: (4f) r3 |= r4
regs=4 stack=0 before 518: (61) r4 = *(u32 *)(r7 +70)
regs=4 stack=0 before 517: (67) r3 <<= 32
regs=4 stack=0 before 516: (61) r3 = *(u32 *)(r7 +74)
regs=4 stack=0 before 515: (7b) *(u64 *)(r10 -72) = r3
regs=4 stack=0 before 514: (4f) r3 |= r4
regs=4 stack=0 before 513: (61) r4 = *(u32 *)(r7 +94)
regs=4 stack=0 before 512: (67) r3 <<= 32
regs=4 stack=0 before 511: (61) r3 = *(u32 *)(r7 +98)
regs=4 stack=0 before 510: (7b) *(u64 *)(r10 -80) = r3
regs=4 stack=0 before 509: (4f) r3 |= r4
regs=4 stack=0 before 508: (61) r4 = *(u32 *)(r7 +86)
regs=4 stack=0 before 507: (67) r3 <<= 32
regs=4 stack=0 before 506: (61) r3 = *(u32 *)(r7 +90)
regs=4 stack=0 before 505: (73) *(u8 *)(r10 -44) = r1
regs=4 stack=0 before 504: (73) *(u8 *)(r10 -36) = r2
regs=4 stack=0 before 503: (71) r1 = *(u8 *)(r7 +68)
regs=4 stack=0 before 502: (47) r2 |= 1
parent already had regs=4 stack=0 marks: R0_rw=scalar(umax=65535,var_off=(0x0; 0xffff)) R1_w=pkt(off=102,r=102,imm=0) R2_rw=Pscalar(umax=255,var_off=(0x0; 0xff)) R6_r=ctx(off=0,imm=0) R7_r=pkt(off=0,r=102,imm=0) R8_r=pkt_end(off=0,imm=0) R9=1 R10=fp0 fp-16_r=????mmmm fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112_r=????mmmm fp-136=
311: (b7) r4 = 102                    ; R4_w=102
; udp = data + off;
312: (bf) r3 = r7                     ; R3_w=pkt(off=0,r=102,imm=0) R7=pkt(off=0,r=102,imm=0)
313: (0f) r3 += r4
last_idx 313 first_idx 502
regs=10 stack=0 before 312: (bf) r3 = r7
regs=10 stack=0 before 311: (b7) r4 = 102
314: R3_w=pkt(off=102,r=102,imm=0) R4_w=P102
; if (udp + 1 > data_end) {
314: (bf) r4 = r3                     ; R3_w=pkt(off=102,r=102,imm=0) R4_w=pkt(off=102,r=102,imm=0)
315: (07) r4 += 8                     ; R4_w=pkt(off=110,r=102,imm=0)
; if (udp + 1 > data_end) {
316: (2d) if r4 > r8 goto pc+1541     ; R4_w=pkt(off=110,r=110,imm=0) R8=pkt_end(off=0,imm=0)
317: (7b) *(u64 *)(r10 -136) = r0     ; R0=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-136_w=
318: (b7) r4 = 1                      ; R4=1
; bool is_icmp = !((pckt->flags & F_ICMP) == 0);
319: (15) if r2 == 0x0 goto pc+1      ; R2=P1
320: (b7) r4 = 0                      ; R4_w=0
321: (67) r2 <<= 1                    ; R2_w=P2
; 
322: (bf) r5 = r3                     ; R3=pkt(off=102,r=110,imm=0) R5_w=pkt(off=102,r=110,imm=0)
323: (0f) r5 += r2                    ; R2_w=P2 R5_w=pkt(off=104,r=110,imm=0)
324: (69) r2 = *(u16 *)(r5 +0)        ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R5_w=pkt(off=104,r=110,imm=0)
325: (6b) *(u16 *)(r10 -48) = r2      ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-48=
326: (67) r4 <<= 1                    ; R4_w=0
327: (0f) r3 += r4
last_idx 327 first_idx 319
regs=10 stack=0 before 326: (67) r4 <<= 1
regs=10 stack=0 before 325: (6b) *(u16 *)(r10 -48) = r2
regs=10 stack=0 before 324: (69) r2 = *(u16 *)(r5 +0)
regs=10 stack=0 before 323: (0f) r5 += r2
regs=10 stack=0 before 322: (bf) r5 = r3
regs=10 stack=0 before 321: (67) r2 <<= 1
regs=10 stack=0 before 320: (b7) r4 = 0
328: R3_w=pkt(off=102,r=110,imm=0) R4_w=P0
328: (69) r2 = *(u16 *)(r3 +0)        ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R3_w=pkt(off=102,r=110,imm=0)
; 
329: (6b) *(u16 *)(r10 -46) = r2      ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-48=mmmmmmmm
; memcpy(vip.vipv6, pckt.flow.dstv6, 16);
330: (79) r3 = *(u64 *)(r10 -56)      ; R3_w=scalar() R10=fp0
331: (7b) *(u64 *)(r10 -96) = r3      ; R3_w=scalar() R10=fp0 fp-96_w=mmmmmmmm
332: (79) r3 = *(u64 *)(r10 -64)      ; R3_w=scalar() R10=fp0
333: (7b) *(u64 *)(r10 -104) = r3     ; R3_w=scalar() R10=fp0 fp-104_w=mmmmmmmm
; vip.proto = pckt.flow.proto;
334: (73) *(u8 *)(r10 -86) = r1       ; R1=17 R10=fp0 fp-88=????mmmm
; vip.port = pckt.flow.port16[1];
335: (6b) *(u16 *)(r10 -88) = r2      ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-88=
336: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; 
337: (07) r2 += -104                  ; R2_w=fp-104
; vip_info = bpf_map_lookup_elem(&vip_map, &vip);
338: (18) r1 = 0xffffa03557866800     ; R1_w=map_ptr(off=0,ks=20,vs=8,imm=0)
340: (85) call bpf_map_lookup_elem#1          ; R0=map_value_or_null(id=937,off=0,ks=20,vs=8,imm=0)
; if (!vip_info) {
341: (55) if r0 != 0x0 goto pc+16     ; R0=0
342: (05) goto pc+0
; vip.port = 0;
343: (6a) *(u16 *)(r10 -88) = 0       ; R10=fp0 fp-88=????mmmm
344: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
345: (07) r2 += -104                  ; R2_w=fp-104
; vip_info = bpf_map_lookup_elem(&vip_map, &vip);
346: (18) r1 = 0xffffa03557866800     ; R1_w=map_ptr(off=0,ks=20,vs=8,imm=0)
348: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=938,off=0,ks=20,vs=8,imm=0)
349: (b7) r9 = 2                      ; R9_w=2
350: (79) r1 = *(u64 *)(r10 -136)     ; R1=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; if (!vip_info) {
351: (15) if r0 == 0x0 goto pc+1506   ; R0=map_value(off=0,ks=20,vs=8,imm=0)
352: (7b) *(u64 *)(r10 -136) = r1     ; R1=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-136_w=
; if (!(vip_info->flags & F_HASH_DPORT_ONLY) &&
353: (61) r1 = *(u32 *)(r0 +0)        ; R0=map_value(off=0,ks=20,vs=8,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (!(vip_info->flags & F_HASH_DPORT_ONLY) &&
354: (57) r1 &= 136                   ; R1_w=scalar(umax=136,var_off=(0x0; 0x88))
355: (55) if r1 != 0x0 goto pc+2      ; R1_w=0
356: (05) goto pc+0
; pckt.flow.port16[1] = 0;
357: (6a) *(u16 *)(r10 -46) = 0       ; R10=fp0 fp-48=mmmmmmmm
; if (data_end - data > MAX_PCKT_SIZE) {
358: (bf) r1 = r8                     ; R1_w=pkt_end(off=0,imm=0) R8=pkt_end(off=0,imm=0)
359: (1f) r1 -= r7                    ; R1_w=scalar() R7=pkt(off=0,r=110,imm=0)
360: (b7) r9 = 1                      ; R9_w=1
361: (79) r2 = *(u64 *)(r10 -136)     ; R2=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; if (data_end - data > MAX_PCKT_SIZE) {
362: (65) if r1 s> 0x5ea goto pc+1495         ; R1=scalar(smax=1514)
363: (7b) *(u64 *)(r10 -144) = r0     ; R0=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-144_w=map_value
364: (7b) *(u64 *)(r10 -136) = r2     ; R2=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-136_w=
365: (05) goto pc+0
; __u32 stats_key = MAX_VIPS + LRU_CNTRS;
366: (62) *(u32 *)(r10 -116) = 512    ; R10=fp0 fp-120=mmmm????
367: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; 
368: (07) r2 += -116                  ; R2_w=fp-116
; data_stats = bpf_map_lookup_elem(&stats, &stats_key);
369: (18) r1 = 0xffffa03499be8000     ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
371: (85) call bpf_map_lookup_elem#1          ; R0=map_value_or_null(id=939,off=0,ks=4,vs=16,imm=0)
; if (!data_stats) {
372: (15) if r0 == 0x0 goto pc+1485   ; R0=map_value(off=0,ks=4,vs=16,imm=0)
; data_stats->v1 += 1;
373: (79) r1 = *(u64 *)(r0 +0)        ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
374: (07) r1 += 1                     ; R1_w=scalar()
375: (7b) *(u64 *)(r10 -160) = r0     ; R0=map_value(off=0,ks=4,vs=16,imm=0) R10=fp0 fp-160_w=map_value
376: (7b) *(u64 *)(r0 +0) = r1        ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
377: (79) r9 = *(u64 *)(r10 -144)     ; R9_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
; if ((vip_info->flags & F_HASH_NO_SRC_PORT)) {
378: (61) r1 = *(u32 *)(r9 +0)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9_w=map_value(off=0,ks=20,vs=8,imm=0)
; if ((vip_info->flags & F_HASH_NO_SRC_PORT)) {
379: (57) r1 &= 1                     ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
; if ((vip_info->flags & F_HASH_NO_SRC_PORT)) {
380: (15) if r1 == 0x0 goto pc+2      ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
381: (05) goto pc+0
; pckt.flow.port16[0] = 0;
382: (6a) *(u16 *)(r10 -48) = 0       ; R10=fp0 fp-48=mmmmmmmm
; vip_num = vip_info->vip_num;
383: (61) r1 = *(u32 *)(r9 +4)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9=map_value(off=0,ks=20,vs=8,imm=0)
384: (7b) *(u64 *)(r10 -168) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-168_w=
; vip_num = vip_info->vip_num;
385: (63) *(u32 *)(r10 -108) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-112=mmmmmmmm
; __u32 cpu_num = bpf_get_smp_processor_id();
386: (85) call bpf_get_smp_processor_id#8     ; R0_w=scalar()
; __u32 cpu_num = bpf_get_smp_processor_id();
387: (63) *(u32 *)(r10 -120) = r0     ; R0_w=scalar() R10=fp0 fp-120=mmmmmmmm
388: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; 
389: (07) r2 += -120                  ; R2_w=fp-120
; void* lru_map = bpf_map_lookup_elem(&lru_mapping, &cpu_num);
390: (18) r1 = 0xffffa0376748a000     ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
392: (85) call bpf_map_lookup_elem#1          ; R0=map_value_or_null(id=940,off=0,ks=4,vs=4,imm=0)
; if (!lru_map) {
393: (55) if r0 != 0x0 goto pc+14     ; R0=0
394: (05) goto pc+0
; __u32 lru_stats_key = MAX_VIPS + FALLBACK_LRU_CNTR;
395: (62) *(u32 *)(r10 -16) = 515     ; R10=fp0 fp-16=????mmmm
396: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
397: (07) r2 += -16                   ; R2_w=fp-16
; struct lb_stats* lru_stats = bpf_map_lookup_elem(&stats, &lru_stats_key);
398: (18) r1 = 0xffffa03499be8000     ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
400: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=941,off=0,ks=4,vs=16,imm=0)
; if (!lru_stats) {
401: (15) if r0 == 0x0 goto pc+1455   ; R0_w=map_value(off=0,ks=4,vs=16,imm=0)
; lru_stats->v1 += 1;
402: (79) r1 = *(u64 *)(r0 +0)        ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
403: (07) r1 += 1                     ; R1_w=scalar()
404: (7b) *(u64 *)(r0 +0) = r1        ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
405: (18) r0 = 0xffffa03557862800     ; R0_w=map_ptr(off=0,ks=40,vs=16,imm=0)
407: (79) r9 = *(u64 *)(r10 -144)     ; R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
408: (7b) *(u64 *)(r10 -152) = r0     ; R0=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0 fp-152_w=map_ptr
; if ((vip_info->flags & F_QUIC_VIP)) {
409: (61) r1 = *(u32 *)(r9 +0)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9=map_value(off=0,ks=20,vs=8,imm=0)
; if ((vip_info->flags & F_QUIC_VIP)) {
410: (57) r1 &= 4                     ; R1_w=scalar(umax=4,var_off=(0x0; 0x4))
; if ((vip_info->flags & F_QUIC_VIP)) {
411: (15) if r1 == 0x0 goto pc+457    ; R1_w=scalar(umax=4,var_off=(0x0; 0x4))
; bool is_icmp = (pckt.flags & F_ICMP);
412: (71) r1 = *(u8 *)(r10 -36)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; bool is_icmp = (pckt.flags & F_ICMP);
413: (57) r1 &= 1                     ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
; if (is_icmp) {
414: (15) if r1 == 0x0 goto pc+272    ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
415: (05) goto pc+0
; __u32 stats_key = MAX_VIPS + QUIC_ICMP_STATS;
416: (62) *(u32 *)(r10 -16) = 523     ; R10=fp0 fp-16=????mmmm
417: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
418: (07) r2 += -16                   ; R2_w=fp-16
; struct lb_stats* data_stats = bpf_map_lookup_elem(&stats, &stats_key);
419: (18) r1 = 0xffffa03499be8000     ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
421: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=942,off=0,ks=4,vs=16,imm=0)
; if (!data_stats) {
422: (15) if r0 == 0x0 goto pc+1434   ; R0_w=map_value(off=0,ks=4,vs=16,imm=0)
; data_stats->v1 += 1;
423: (79) r1 = *(u64 *)(r0 +0)        ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
424: (07) r1 += 1                     ; R1_w=scalar()
425: (7b) *(u64 *)(r0 +0) = r1        ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
; (icmp_hdr->icmp6_code == ICMPV6_ADDR_UNREACH) ||
426: (71) r1 = *(u8 *)(r7 +55)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=110,imm=0)
; (icmp_hdr->icmp6_code == ICMPV6_ADDR_UNREACH) ||
427: (07) r1 += -3                    ; R1_w=scalar(smin=-3,smax=252)
428: (57) r1 &= 255                   ; R1_w=scalar(umax=255,var_off=(0x0; 0xff))
429: (79) r9 = *(u64 *)(r10 -144)
430: safe

from 422 to 1857: safe

from 414 to 687: R0=map_ptr(off=0,ks=40,vs=16,imm=0) R1=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=110,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; pckt->flow.src = iph->daddr;
687: (05) goto pc+0
; __u32 quic_packets_stats_key = 0;
688: (62) *(u32 *)(r10 -28) = 0       ; R10=fp0 fp-32=mmmm????
689: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
690: (07) r2 += -28                   ; R2_w=fp-28
; bpf_map_lookup_elem(&quic_stats_map, &quic_packets_stats_key);
691: (18) r1 = 0xffffa03587064800     ; R1_w=map_ptr(off=0,ks=4,vs=104,imm=0)
693: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=943,off=0,ks=4,vs=104,imm=0)
694: (bf) r9 = r0                     ; R0_w=map_value_or_null(id=943,off=0,ks=4,vs=104,imm=0) R9_w=map_value_or_null(id=943,off=0,ks=4,vs=104,imm=0)
; if (!quic_packets_stats) {
695: (15) if r9 == 0x0 goto pc+1161   ; R9_w=map_value(off=0,ks=4,vs=104,imm=0)
; bool is_icmp = (pckt->flags & F_ICMP);
696: (71) r2 = *(u8 *)(r10 -36)       ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; bool is_icmp = (pckt->flags & F_ICMP);
697: (57) r2 &= 1                     ; R2_w=scalar(umax=1,var_off=(0x0; 0x1))
698: (b7) r1 = 54                     ; R1=54
; if (is_ipv6) {
699: (15) if r2 == 0x0 goto pc+1      ; R2=scalar(umax=1,var_off=(0x0; 0x1))
700: (b7) r1 = 102                    ; R1_w=102
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
701: (0f) r7 += r1
last_idx 701 first_idx 699
regs=2 stack=0 before 700: (b7) r1 = 102
702: R1_w=P102 R7_w=pkt(off=102,r=110,imm=0)
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
702: (bf) r1 = r7                     ; R1_w=pkt(off=102,r=110,imm=0) R7_w=pkt(off=102,r=110,imm=0)
703: (07) r1 += 9                     ; R1_w=pkt(off=111,r=110,imm=0)
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
704: (2d) if r1 > r8 goto pc+160      ; R1_w=pkt(off=111,r=111,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
705: (71) r2 = *(u8 *)(r7 +8)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=102,r=111,imm=0)
706: (67) r2 <<= 56                   ; R2_w=scalar(smax=9151314442816847872,umax=18374686479671623680,var_off=(0x0; 0xff00000000000000),s32_min=0,s32_max=0,u32_max=0)
707: (c7) r2 s>>= 56                  ; R2=scalar(smin=-128,smax=127)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
708: (65) if r2 s> 0xffffffff goto pc+40      ; R2=scalar(umin=18446744073709551488,var_off=(0xffffffffffffff80; 0x7f),u32_min=-128)
; if (quic_data + sizeof(struct quic_long_header) > data_end) {
709: (bf) r1 = r7                     ; R1_w=pkt(off=102,r=111,imm=0) R7=pkt(off=102,r=111,imm=0)
710: (07) r1 += 22                    ; R1_w=pkt(off=124,r=111,imm=0)
; if (quic_data + sizeof(struct quic_long_header) > data_end) {
711: (2d) if r1 > r8 goto pc+153      ; R1_w=pkt(off=124,r=124,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_PACKET_TYPE_MASK) < QUIC_HANDSHAKE) {
712: (57) r2 &= 32                    ; R2_w=scalar(umax=32,var_off=(0x0; 0x20))
; if ((*pkt_type & QUIC_PACKET_TYPE_MASK) < QUIC_HANDSHAKE) {
713: (15) if r2 == 0x0 goto pc+77     ; R2_w=scalar(umax=32,var_off=(0x0; 0x20))
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
714: (71) r1 = *(u8 *)(r7 +13)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=102,r=124,imm=0)
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
715: (07) r7 += 14
716: safe

from 713 to 791: safe

from 711 to 865: safe

from 708 to 749: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=pkt(off=111,r=111,imm=0) R2=scalar(umax=127,var_off=(0x0; 0x7f)) R6=ctx(off=0,imm=0) R7=pkt(off=102,r=111,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (quic_data + sizeof(struct quic_short_header) > data_end) {
749: (bf) r2 = r7                     ; R2_w=pkt(off=102,r=111,imm=0) R7=pkt(off=102,r=111,imm=0)
750: (07) r2 += 17                    ; R2_w=pkt(off=119,r=111,imm=0)
751: (bf) r7 = r1                     ; R1=pkt(off=111,r=111,imm=0) R7_w=pkt(off=111,r=111,imm=0)
; if (quic_data + sizeof(struct quic_short_header) > data_end) {
752: (2d) if r2 > r8 goto pc+112      ; R2_w=pkt(off=119,r=119,imm=0) R8=pkt_end(off=0,imm=0)
; if (!connId) {
753: (15) if r7 == 0x0 goto pc+111    ; R7_w=pkt(off=111,r=119,imm=0)
; __u8 connIdVersion = (connId[0] >> 6);
754: (71) r1 = *(u8 *)(r7 +0)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=111,r=119,imm=0)
755: (bf) r2 = r1                     ; R1_w=scalar(id=944,umax=255,var_off=(0x0; 0xff)) R2_w=scalar(id=944,umax=255,var_off=(0x0; 0xff))
756: (77) r2 >>= 6                    ; R2=scalar(umax=3,var_off=(0x0; 0x3))
; if (connIdVersion == QUIC_CONNID_VERSION_V1) {
757: (15) if r2 == 0x3 goto pc+48     ; R2=scalar(umax=3,var_off=(0x0; 0x3))
758: (15) if r2 == 0x2 goto pc+59     ; R2=scalar(umax=3,var_off=(0x0; 0x3))
759: (55) if r2 != 0x1 goto pc+105    ; R2=1
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
760: (57) r1 &= 63                    ; R1_w=scalar(umax=63,var_off=(0x0; 0x3f))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
761: (67) r1 <<= 10                   ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
762: (71) r8 = *(u8 *)(r7 +1)         ; R7=pkt(off=111,r=119,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
763: (67) r8 <<= 2                    ; R8_w=scalar(umax=1020,var_off=(0x0; 0x3fc))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
764: (4f) r8 |= r1                    ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00)) R8_w=scalar()
765: (18) r1 = 0x100000000            ; R1_w=4294967296
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
767: (71) r2 = *(u8 *)(r7 +2)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=111,r=119,imm=0)
768: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
769: (05) goto pc+56
frame 1: propagating r0
last_idx 826 first_idx 757
regs=2 stack=0 before 769: (05) goto pc+56
regs=2 stack=0 before 768: (77) r2 >>= 6
regs=2 stack=0 before 767: (71) r2 = *(u8 *)(r7 +2)
regs=2 stack=0 before 765: (18) r1 = 0x100000000
826: safe

from 759 to 865: safe

from 758 to 818: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=944,umax=255,var_off=(0x0; 0xff)) R2=2 R6=ctx(off=0,imm=0) R7=pkt(off=111,r=119,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
818: (71) r1 = *(u8 *)(r7 +1)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=111,r=119,imm=0)
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
819: (67) r1 <<= 16                   ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
820: (71) r8 = *(u8 *)(r7 +2)         ; R7=pkt(off=111,r=119,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
821: (67) r8 <<= 8                    ; R8_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
822: (4f) r8 |= r1                    ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000)) R8_w=scalar()
823: (18) r1 = 0x200000000            ; R1_w=8589934592
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
825: (71) r2 = *(u8 *)(r7 +3)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=111,r=119,imm=0)
826: (57) r2 &= 255                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
827: (4f) r8 |= r2                    ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
828: (bf) r2 = r8                     ; R2_w=scalar(id=945) R8_w=scalar(id=945)
829: (67) r2 <<= 32                   ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
830: (c7) r2 s>>= 32                  ; R2_w=scalar(smin=-2147483648,smax=2147483647)
831: (b7) r3 = 1                      ; R3_w=1
; if (qpr.server_id > 0) {
832: (6d) if r3 s> r2 goto pc+32      ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
833: (77) r1 >>= 32                   ; R1_w=2
; if (cid_version == QUIC_CONNID_VERSION_V1) {
834: (15) if r1 == 0x3 goto pc+5
last_idx 834 first_idx 818
regs=2 stack=0 before 833: (77) r1 >>= 32
regs=2 stack=0 before 832: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 831: (b7) r3 = 1
regs=2 stack=0 before 830: (c7) r2 s>>= 32
regs=2 stack=0 before 829: (67) r2 <<= 32
regs=2 stack=0 before 828: (bf) r2 = r8
regs=2 stack=0 before 827: (4f) r8 |= r2
regs=2 stack=0 before 826: (57) r2 &= 255
regs=2 stack=0 before 825: (71) r2 = *(u8 *)(r7 +3)
regs=2 stack=0 before 823: (18) r1 = 0x200000000
frame 1: propagating r0
835: safe

from 832 to 865: safe

from 757 to 806: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=944,umax=255,var_off=(0x0; 0xff)) R2=3 R6=ctx(off=0,imm=0) R7=pkt(off=111,r=119,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
806: (71) r1 = *(u8 *)(r7 +1)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=111,r=119,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
807: (67) r1 <<= 24                   ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
808: (71) r8 = *(u8 *)(r7 +2)         ; R7=pkt(off=111,r=119,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
809: (67) r8 <<= 16                   ; R8_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
810: (4f) r8 |= r1                    ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432) R8_w=scalar()
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
811: (71) r1 = *(u8 *)(r7 +3)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=111,r=119,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
812: (67) r1 <<= 8                    ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
813: (4f) r8 |= r1                    ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00)) R8_w=scalar()
814: (18) r1 = 0x300000000            ; R1_w=12884901888
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
816: (71) r2 = *(u8 *)(r7 +4)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=111,r=119,imm=0)
817: (05) goto pc+8
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
826: (57) r2 &= 255                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
827: (4f) r8 |= r2                    ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
828: (bf) r2 = r8                     ; R2_w=scalar(id=946) R8_w=scalar(id=946)
829: (67) r2 <<= 32                   ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
830: (c7) r2 s>>= 32                  ; R2_w=scalar(smin=-2147483648,smax=2147483647)
831: (b7) r3 = 1                      ; R3_w=1
; if (qpr.server_id > 0) {
832: (6d) if r3 s> r2 goto pc+32      ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
833: (77) r1 >>= 32
frame 1: propagating r0
last_idx 834 first_idx 806
regs=2 stack=0 before 833: (77) r1 >>= 32
regs=2 stack=0 before 832: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 831: (b7) r3 = 1
regs=2 stack=0 before 830: (c7) r2 s>>= 32
regs=2 stack=0 before 829: (67) r2 <<= 32
regs=2 stack=0 before 828: (bf) r2 = r8
regs=2 stack=0 before 827: (4f) r8 |= r2
regs=2 stack=0 before 826: (57) r2 &= 255
regs=2 stack=0 before 817: (05) goto pc+8
regs=2 stack=0 before 816: (71) r2 = *(u8 *)(r7 +4)
regs=2 stack=0 before 814: (18) r1 = 0x300000000
834: safe

from 832 to 865: safe

from 753 to 865: safe

from 752 to 865: safe

from 704 to 865: safe

from 699 to 701: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=54 R2=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=110,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
701: (0f) r7 += r1
last_idx 701 first_idx 701
parent didn't have regs=2 stack=0 marks: R0=map_value(off=0,ks=4,vs=104,imm=0) R1_r=P54 R2=0 R6=ctx(off=0,imm=0) R7_r=pkt(off=0,r=110,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
last_idx 699 first_idx 699
regs=2 stack=0 before 699: (15) if r2 == 0x0 goto pc+1
parent didn't have regs=2 stack=0 marks: R0_w=map_value(off=0,ks=4,vs=104,imm=0) R1_rw=P54 R2_rw=scalar(umax=1,var_off=(0x0; 0x1)) R6_r=ctx(off=0,imm=0) R7_r=pkt(off=0,r=110,imm=0) R8_r=pkt_end(off=0,imm=0) R9_rw=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16_r=????mmmm fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96_r=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=
last_idx 698 first_idx 687
regs=2 stack=0 before 698: (b7) r1 = 54
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
702: (bf) r1 = r7                     ; R1_w=pkt(off=54,r=110,imm=0) R7_w=pkt(off=54,r=110,imm=0)
703: (07) r1 += 9                     ; R1_w=pkt(off=63,r=110,imm=0)
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
704: (2d) if r1 > r8 goto pc+160      ; R1_w=pkt(off=63,r=110,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
705: (71) r2 = *(u8 *)(r7 +8)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=54,r=110,imm=0)
706: (67) r2 <<= 56                   ; R2_w=scalar(smax=9151314442816847872,umax=18374686479671623680,var_off=(0x0; 0xff00000000000000),s32_min=0,s32_max=0,u32_max=0)
707: (c7) r2 s>>= 56                  ; R2_w=scalar(smin=-128,smax=127)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
708: (65) if r2 s> 0xffffffff goto pc+40      ; R2_w=scalar(umin=18446744073709551488,var_off=(0xffffffffffffff80; 0x7f),u32_min=-128)
; if (quic_data + sizeof(struct quic_long_header) > data_end) {
709: (bf) r1 = r7                     ; R1_w=pkt(off=54,r=110,imm=0) R7_w=pkt(off=54,r=110,imm=0)
710: (07) r1 += 22                    ; R1=pkt(off=76,r=110,imm=0)
; if (quic_data + sizeof(struct quic_long_header) > data_end) {
711: (2d) if r1 > r8 goto pc+153      ; R1=pkt(off=76,r=110,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_PACKET_TYPE_MASK) < QUIC_HANDSHAKE) {
712: (57) r2 &= 32                    ; R2_w=scalar(umax=32,var_off=(0x0; 0x20))
; if ((*pkt_type & QUIC_PACKET_TYPE_MASK) < QUIC_HANDSHAKE) {
713: (15) if r2 == 0x0 goto pc+77     ; R2_w=scalar(umax=32,var_off=(0x0; 0x20))
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
714: (71) r1 = *(u8 *)(r7 +13)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=54,r=110,imm=0)
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
715: (07) r7 += 14                    ; R7_w=pkt(off=68,r=110,imm=0)
716: (25) if r1 > 0x7 goto pc+36      ; R1_w=scalar(umax=7,var_off=(0x0; 0x7))
717: (05) goto pc+147
865: safe

from 716 to 753: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(umin=8,umax=255,var_off=(0x0; 0xff)) R2=scalar(umax=32,var_off=(0x0; 0x20)) R6=ctx(off=0,imm=0) R7=pkt(off=68,r=110,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (!connId) {
753: (15) if r7 == 0x0 goto pc+111    ; R7=pkt(off=68,r=110,imm=0)
; __u8 connIdVersion = (connId[0] >> 6);
754: (71) r1 = *(u8 *)(r7 +0)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=68,r=110,imm=0)
755: (bf) r2 = r1                     ; R1_w=scalar(id=947,umax=255,var_off=(0x0; 0xff)) R2_w=scalar(id=947,umax=255,var_off=(0x0; 0xff))
756: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
; if (connIdVersion == QUIC_CONNID_VERSION_V1) {
757: (15) if r2 == 0x3 goto pc+48     ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
758: (15) if r2 == 0x2 goto pc+59     ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
759: (55) if r2 != 0x1 goto pc+105    ; R2_w=1
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
760: (57) r1 &= 63                    ; R1_w=scalar(umax=63,var_off=(0x0; 0x3f))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
761: (67) r1 <<= 10                   ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
762: (71) r8 = *(u8 *)(r7 +1)         ; R7=pkt(off=68,r=110,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
763: (67) r8 <<= 2                    ; R8_w=scalar(umax=1020,var_off=(0x0; 0x3fc))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
764: (4f) r8 |= r1                    ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00)) R8_w=scalar()
765: (18) r1 = 0x100000000            ; R1_w=4294967296
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
767: (71) r2 = *(u8 *)(r7 +2)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=68,r=110,imm=0)
768: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
769: (05) goto pc+56
frame 1: propagating r0
last_idx 826 first_idx 753
regs=2 stack=0 before 769: (05) goto pc+56
regs=2 stack=0 before 768: (77) r2 >>= 6
regs=2 stack=0 before 767: (71) r2 = *(u8 *)(r7 +2)
regs=2 stack=0 before 765: (18) r1 = 0x100000000
826: safe

from 759 to 865: safe

from 758 to 818: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=947,umax=255,var_off=(0x0; 0xff)) R2=2 R6=ctx(off=0,imm=0) R7=pkt(off=68,r=110,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
818: (71) r1 = *(u8 *)(r7 +1)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=68,r=110,imm=0)
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
819: (67) r1 <<= 16                   ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
820: (71) r8 = *(u8 *)(r7 +2)         ; R7=pkt(off=68,r=110,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
821: (67) r8 <<= 8                    ; R8_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
822: (4f) r8 |= r1                    ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000)) R8_w=scalar()
823: (18) r1 = 0x200000000            ; R1_w=8589934592
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
825: (71) r2 = *(u8 *)(r7 +3)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=68,r=110,imm=0)
826: (57) r2 &= 255                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
827: (4f) r8 |= r2                    ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
828: (bf) r2 = r8                     ; R2_w=scalar(id=948) R8_w=scalar(id=948)
829: (67) r2 <<= 32                   ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
830: (c7) r2 s>>= 32                  ; R2_w=scalar(smin=-2147483648,smax=2147483647)
831: (b7) r3 = 1                      ; R3_w=1
; if (qpr.server_id > 0) {
832: (6d) if r3 s> r2 goto pc+32      ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
833: (77) r1 >>= 32                   ; R1_w=2
; if (cid_version == QUIC_CONNID_VERSION_V1) {
834: (15) if r1 == 0x3 goto pc+5
last_idx 834 first_idx 818
regs=2 stack=0 before 833: (77) r1 >>= 32
regs=2 stack=0 before 832: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 831: (b7) r3 = 1
regs=2 stack=0 before 830: (c7) r2 s>>= 32
regs=2 stack=0 before 829: (67) r2 <<= 32
regs=2 stack=0 before 828: (bf) r2 = r8
regs=2 stack=0 before 827: (4f) r8 |= r2
regs=2 stack=0 before 826: (57) r2 &= 255
regs=2 stack=0 before 825: (71) r2 = *(u8 *)(r7 +3)
regs=2 stack=0 before 823: (18) r1 = 0x200000000
frame 1: propagating r0
835: safe

from 832 to 865: safe

from 757 to 806: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=947,umax=255,var_off=(0x0; 0xff)) R2=3 R6=ctx(off=0,imm=0) R7=pkt(off=68,r=110,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
806: (71) r1 = *(u8 *)(r7 +1)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=68,r=110,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
807: (67) r1 <<= 24                   ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
808: (71) r8 = *(u8 *)(r7 +2)         ; R7=pkt(off=68,r=110,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
809: (67) r8 <<= 16                   ; R8_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
810: (4f) r8 |= r1                    ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432) R8_w=scalar()
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
811: (71) r1 = *(u8 *)(r7 +3)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=68,r=110,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
812: (67) r1 <<= 8                    ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
813: (4f) r8 |= r1                    ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00)) R8_w=scalar()
814: (18) r1 = 0x300000000            ; R1_w=12884901888
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
816: (71) r2 = *(u8 *)(r7 +4)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=68,r=110,imm=0)
817: (05) goto pc+8
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
826: (57) r2 &= 255                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
827: (4f) r8 |= r2                    ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
828: (bf) r2 = r8                     ; R2_w=scalar(id=949) R8_w=scalar(id=949)
829: (67) r2 <<= 32                   ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
830: (c7) r2 s>>= 32                  ; R2_w=scalar(smin=-2147483648,smax=2147483647)
831: (b7) r3 = 1                      ; R3_w=1
; if (qpr.server_id > 0) {
832: (6d) if r3 s> r2 goto pc+32      ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
833: (77) r1 >>= 32
frame 1: propagating r0
last_idx 834 first_idx 806
regs=2 stack=0 before 833: (77) r1 >>= 32
regs=2 stack=0 before 832: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 831: (b7) r3 = 1
regs=2 stack=0 before 830: (c7) r2 s>>= 32
regs=2 stack=0 before 829: (67) r2 <<= 32
regs=2 stack=0 before 828: (bf) r2 = r8
regs=2 stack=0 before 827: (4f) r8 |= r2
regs=2 stack=0 before 826: (57) r2 &= 255
regs=2 stack=0 before 817: (05) goto pc+8
regs=2 stack=0 before 816: (71) r2 = *(u8 *)(r7 +4)
regs=2 stack=0 before 814: (18) r1 = 0x300000000
834: safe

from 832 to 865: safe

from 753 to 865: safe

from 713 to 791: safe

from 711 to 865: safe

from 708 to 749: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=pkt(off=63,r=110,imm=0) R2=scalar(umax=127,var_off=(0x0; 0x7f)) R6=ctx(off=0,imm=0) R7=pkt(off=54,r=110,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (quic_data + sizeof(struct quic_short_header) > data_end) {
749: (bf) r2 = r7                     ; R2_w=pkt(off=54,r=110,imm=0) R7=pkt(off=54,r=110,imm=0)
750: (07) r2 += 17                    ; R2_w=pkt(off=71,r=110,imm=0)
751: (bf) r7 = r1                     ; R1=pkt(off=63,r=110,imm=0) R7_w=pkt(off=63,r=110,imm=0)
; if (quic_data + sizeof(struct quic_short_header) > data_end) {
752: (2d) if r2 > r8 goto pc+112      ; R2_w=pkt(off=71,r=110,imm=0) R8=pkt_end(off=0,imm=0)
; if (!connId) {
753: (15) if r7 == 0x0 goto pc+111    ; R7_w=pkt(off=63,r=110,imm=0)
; __u8 connIdVersion = (connId[0] >> 6);
754: (71) r1 = *(u8 *)(r7 +0)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=63,r=110,imm=0)
755: (bf) r2 = r1                     ; R1_w=scalar(id=950,umax=255,var_off=(0x0; 0xff)) R2_w=scalar(id=950,umax=255,var_off=(0x0; 0xff))
756: (77) r2 >>= 6                    ; R2=scalar(umax=3,var_off=(0x0; 0x3))
; if (connIdVersion == QUIC_CONNID_VERSION_V1) {
757: (15) if r2 == 0x3 goto pc+48     ; R2=scalar(umax=3,var_off=(0x0; 0x3))
758: (15) if r2 == 0x2 goto pc+59     ; R2=scalar(umax=3,var_off=(0x0; 0x3))
759: (55) if r2 != 0x1 goto pc+105    ; R2=1
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
760: (57) r1 &= 63                    ; R1_w=scalar(umax=63,var_off=(0x0; 0x3f))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
761: (67) r1 <<= 10                   ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
762: (71) r8 = *(u8 *)(r7 +1)         ; R7=pkt(off=63,r=110,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
763: (67) r8 <<= 2                    ; R8_w=scalar(umax=1020,var_off=(0x0; 0x3fc))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
764: (4f) r8 |= r1                    ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00)) R8_w=scalar()
765: (18) r1 = 0x100000000            ; R1_w=4294967296
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
767: (71) r2 = *(u8 *)(r7 +2)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=63,r=110,imm=0)
768: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
769: (05) goto pc+56
frame 1: propagating r0
last_idx 826 first_idx 757
regs=2 stack=0 before 769: (05) goto pc+56
regs=2 stack=0 before 768: (77) r2 >>= 6
regs=2 stack=0 before 767: (71) r2 = *(u8 *)(r7 +2)
regs=2 stack=0 before 765: (18) r1 = 0x100000000
826: safe

from 759 to 865: safe

from 758 to 818: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=950,umax=255,var_off=(0x0; 0xff)) R2=2 R6=ctx(off=0,imm=0) R7=pkt(off=63,r=110,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
818: (71) r1 = *(u8 *)(r7 +1)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=63,r=110,imm=0)
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
819: (67) r1 <<= 16                   ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
820: (71) r8 = *(u8 *)(r7 +2)         ; R7=pkt(off=63,r=110,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
821: (67) r8 <<= 8                    ; R8_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
822: (4f) r8 |= r1                    ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000)) R8_w=scalar()
823: (18) r1 = 0x200000000            ; R1_w=8589934592
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
825: (71) r2 = *(u8 *)(r7 +3)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=63,r=110,imm=0)
826: (57) r2 &= 255                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
827: (4f) r8 |= r2                    ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
828: (bf) r2 = r8                     ; R2_w=scalar(id=951) R8_w=scalar(id=951)
829: (67) r2 <<= 32                   ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
830: (c7) r2 s>>= 32                  ; R2_w=scalar(smin=-2147483648,smax=2147483647)
831: (b7) r3 = 1                      ; R3_w=1
; if (qpr.server_id > 0) {
832: (6d) if r3 s> r2 goto pc+32      ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
833: (77) r1 >>= 32                   ; R1_w=2
; if (cid_version == QUIC_CONNID_VERSION_V1) {
834: (15) if r1 == 0x3 goto pc+5
last_idx 834 first_idx 818
regs=2 stack=0 before 833: (77) r1 >>= 32
regs=2 stack=0 before 832: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 831: (b7) r3 = 1
regs=2 stack=0 before 830: (c7) r2 s>>= 32
regs=2 stack=0 before 829: (67) r2 <<= 32
regs=2 stack=0 before 828: (bf) r2 = r8
regs=2 stack=0 before 827: (4f) r8 |= r2
regs=2 stack=0 before 826: (57) r2 &= 255
regs=2 stack=0 before 825: (71) r2 = *(u8 *)(r7 +3)
regs=2 stack=0 before 823: (18) r1 = 0x200000000
frame 1: propagating r0
835: safe

from 832 to 865: safe

from 757 to 806: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=950,umax=255,var_off=(0x0; 0xff)) R2=3 R6=ctx(off=0,imm=0) R7=pkt(off=63,r=110,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
806: (71) r1 = *(u8 *)(r7 +1)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=63,r=110,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
807: (67) r1 <<= 24                   ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
808: (71) r8 = *(u8 *)(r7 +2)         ; R7=pkt(off=63,r=110,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
809: (67) r8 <<= 16                   ; R8_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
810: (4f) r8 |= r1                    ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432) R8_w=scalar()
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
811: (71) r1 = *(u8 *)(r7 +3)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=63,r=110,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
812: (67) r1 <<= 8                    ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
813: (4f) r8 |= r1                    ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00)) R8_w=scalar()
814: (18) r1 = 0x300000000            ; R1_w=12884901888
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
816: (71) r2 = *(u8 *)(r7 +4)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=63,r=110,imm=0)
817: (05) goto pc+8
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
826: (57) r2 &= 255                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
827: (4f) r8 |= r2                    ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
828: (bf) r2 = r8                     ; R2_w=scalar(id=952) R8_w=scalar(id=952)
829: (67) r2 <<= 32                   ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
830: (c7) r2 s>>= 32                  ; R2_w=scalar(smin=-2147483648,smax=2147483647)
831: (b7) r3 = 1                      ; R3_w=1
; if (qpr.server_id > 0) {
832: (6d) if r3 s> r2 goto pc+32      ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
833: (77) r1 >>= 32
frame 1: propagating r0
last_idx 834 first_idx 806
regs=2 stack=0 before 833: (77) r1 >>= 32
regs=2 stack=0 before 832: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 831: (b7) r3 = 1
regs=2 stack=0 before 830: (c7) r2 s>>= 32
regs=2 stack=0 before 829: (67) r2 <<= 32
regs=2 stack=0 before 828: (bf) r2 = r8
regs=2 stack=0 before 827: (4f) r8 |= r2
regs=2 stack=0 before 826: (57) r2 &= 255
regs=2 stack=0 before 817: (05) goto pc+8
regs=2 stack=0 before 816: (71) r2 = *(u8 *)(r7 +4)
regs=2 stack=0 before 814: (18) r1 = 0x300000000
834: safe

from 832 to 865: safe

from 753 to 865: safe

from 752 to 865: safe

from 704 to 865: safe

from 695 to 1857: safe

from 411 to 869: safe

from 401 to 1857: safe

from 393 to 408: R0=map_ptr(off=0,ks=40,vs=16,imm=0) R6=ctx(off=0,imm=0) R7=pkt(off=0,r=110,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-160=map_value fp-168=
; lru_stats->v1 += 1;
408: (7b) *(u64 *)(r10 -152) = r0     ; R0=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0 fp-152_w=map_ptr
; if ((vip_info->flags & F_QUIC_VIP)) {
409: (61) r1 = *(u32 *)(r9 +0)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9=map_value(off=0,ks=20,vs=8,imm=0)
; if ((vip_info->flags & F_QUIC_VIP)) {
410: (57) r1 &= 4                     ; R1_w=scalar(umax=4,var_off=(0x0; 0x4))
; if ((vip_info->flags & F_QUIC_VIP)) {
411: (15) if r1 == 0x0 goto pc+457    ; R1_w=scalar(umax=4,var_off=(0x0; 0x4))
; bool is_icmp = (pckt.flags & F_ICMP);
412: (71) r1 = *(u8 *)(r10 -36)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; bool is_icmp = (pckt.flags & F_ICMP);
413: (57) r1 &= 1                     ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
; if (is_icmp) {
414: (15) if r1 == 0x0 goto pc+272    ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
415: (05) goto pc+0
; __u32 stats_key = MAX_VIPS + QUIC_ICMP_STATS;
416: (62) *(u32 *)(r10 -16) = 523     ; R10=fp0 fp-16=????mmmm
417: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
418: (07) r2 += -16                   ; R2_w=fp-16
; struct lb_stats* data_stats = bpf_map_lookup_elem(&stats, &stats_key);
419: (18) r1 = 0xffffa03499be8000     ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
421: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=953,off=0,ks=4,vs=16,imm=0)
; if (!data_stats) {
422: (15) if r0 == 0x0 goto pc+1434   ; R0_w=map_value(off=0,ks=4,vs=16,imm=0)
; data_stats->v1 += 1;
423: (79) r1 = *(u64 *)(r0 +0)        ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
424: (07) r1 += 1                     ; R1_w=scalar()
425: (7b) *(u64 *)(r0 +0) = r1        ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
; (icmp_hdr->icmp6_code == ICMPV6_ADDR_UNREACH) ||
426: (71) r1 = *(u8 *)(r7 +55)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=110,imm=0)
; (icmp_hdr->icmp6_code == ICMPV6_ADDR_UNREACH) ||
427: (07) r1 += -3                    ; R1_w=scalar(smin=-3,smax=252)
428: (57) r1 &= 255                   ; R1_w=scalar(umax=255,var_off=(0x0; 0xff))
429: (79) r9 = *(u64 *)(r10 -144)
430: safe

from 422 to 1857: safe

from 414 to 687: R0=map_ptr(off=0,ks=40,vs=16,imm=0) R1=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=110,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; pckt->flow.src = iph->daddr;
687: (05) goto pc+0
; __u32 quic_packets_stats_key = 0;
688: (62) *(u32 *)(r10 -28) = 0       ; R10=fp0 fp-32=mmmm????
689: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
690: (07) r2 += -28                   ; R2_w=fp-28
; bpf_map_lookup_elem(&quic_stats_map, &quic_packets_stats_key);
691: (18) r1 = 0xffffa03587064800     ; R1_w=map_ptr(off=0,ks=4,vs=104,imm=0)
693: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=954,off=0,ks=4,vs=104,imm=0)
694: (bf) r9 = r0                     ; R0_w=map_value_or_null(id=954,off=0,ks=4,vs=104,imm=0) R9_w=map_value_or_null(id=954,off=0,ks=4,vs=104,imm=0)
; if (!quic_packets_stats) {
695: (15) if r9 == 0x0 goto pc+1161   ; R9_w=map_value(off=0,ks=4,vs=104,imm=0)
; bool is_icmp = (pckt->flags & F_ICMP);
696: (71) r2 = *(u8 *)(r10 -36)       ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; bool is_icmp = (pckt->flags & F_ICMP);
697: (57) r2 &= 1                     ; R2_w=scalar(umax=1,var_off=(0x0; 0x1))
698: (b7) r1 = 54                     ; R1=54
; if (is_ipv6) {
699: (15) if r2 == 0x0 goto pc+1      ; R2=scalar(umax=1,var_off=(0x0; 0x1))
700: (b7) r1 = 102                    ; R1_w=102
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
701: (0f) r7 += r1
last_idx 701 first_idx 699
regs=2 stack=0 before 700: (b7) r1 = 102
702: R1_w=P102 R7_w=pkt(off=102,r=110,imm=0)
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
702: (bf) r1 = r7                     ; R1_w=pkt(off=102,r=110,imm=0) R7_w=pkt(off=102,r=110,imm=0)
703: (07) r1 += 9                     ; R1_w=pkt(off=111,r=110,imm=0)
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
704: (2d) if r1 > r8 goto pc+160      ; R1_w=pkt(off=111,r=111,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
705: (71) r2 = *(u8 *)(r7 +8)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=102,r=111,imm=0)
706: (67) r2 <<= 56                   ; R2_w=scalar(smax=9151314442816847872,umax=18374686479671623680,var_off=(0x0; 0xff00000000000000),s32_min=0,s32_max=0,u32_max=0)
707: (c7) r2 s>>= 56                  ; R2=scalar(smin=-128,smax=127)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
708: (65) if r2 s> 0xffffffff goto pc+40      ; R2=scalar(umin=18446744073709551488,var_off=(0xffffffffffffff80; 0x7f),u32_min=-128)
; if (quic_data + sizeof(struct quic_long_header) > data_end) {
709: (bf) r1 = r7                     ; R1_w=pkt(off=102,r=111,imm=0) R7=pkt(off=102,r=111,imm=0)
710: (07) r1 += 22                    ; R1_w=pkt(off=124,r=111,imm=0)
; if (quic_data + sizeof(struct quic_long_header) > data_end) {
711: (2d) if r1 > r8 goto pc+153      ; R1_w=pkt(off=124,r=124,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_PACKET_TYPE_MASK) < QUIC_HANDSHAKE) {
712: (57) r2 &= 32                    ; R2_w=scalar(umax=32,var_off=(0x0; 0x20))
; if ((*pkt_type & QUIC_PACKET_TYPE_MASK) < QUIC_HANDSHAKE) {
713: (15) if r2 == 0x0 goto pc+77     ; R2_w=scalar(umax=32,var_off=(0x0; 0x20))
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
714: (71) r1 = *(u8 *)(r7 +13)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=102,r=124,imm=0)
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
715: (07) r7 += 14
716: safe

from 713 to 791: safe

from 711 to 865: safe

from 708 to 749: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=pkt(off=111,r=111,imm=0) R2=scalar(umax=127,var_off=(0x0; 0x7f)) R6=ctx(off=0,imm=0) R7=pkt(off=102,r=111,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (quic_data + sizeof(struct quic_short_header) > data_end) {
749: (bf) r2 = r7                     ; R2_w=pkt(off=102,r=111,imm=0) R7=pkt(off=102,r=111,imm=0)
750: (07) r2 += 17                    ; R2_w=pkt(off=119,r=111,imm=0)
751: (bf) r7 = r1                     ; R1=pkt(off=111,r=111,imm=0) R7_w=pkt(off=111,r=111,imm=0)
; if (quic_data + sizeof(struct quic_short_header) > data_end) {
752: (2d) if r2 > r8 goto pc+112      ; R2_w=pkt(off=119,r=119,imm=0) R8=pkt_end(off=0,imm=0)
; if (!connId) {
753: (15) if r7 == 0x0 goto pc+111    ; R7_w=pkt(off=111,r=119,imm=0)
; __u8 connIdVersion = (connId[0] >> 6);
754: (71) r1 = *(u8 *)(r7 +0)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=111,r=119,imm=0)
755: (bf) r2 = r1                     ; R1_w=scalar(id=955,umax=255,var_off=(0x0; 0xff)) R2_w=scalar(id=955,umax=255,var_off=(0x0; 0xff))
756: (77) r2 >>= 6                    ; R2=scalar(umax=3,var_off=(0x0; 0x3))
; if (connIdVersion == QUIC_CONNID_VERSION_V1) {
757: (15) if r2 == 0x3 goto pc+48     ; R2=scalar(umax=3,var_off=(0x0; 0x3))
758: (15) if r2 == 0x2 goto pc+59     ; R2=scalar(umax=3,var_off=(0x0; 0x3))
759: (55) if r2 != 0x1 goto pc+105    ; R2=1
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
760: (57) r1 &= 63                    ; R1_w=scalar(umax=63,var_off=(0x0; 0x3f))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
761: (67) r1 <<= 10                   ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
762: (71) r8 = *(u8 *)(r7 +1)         ; R7=pkt(off=111,r=119,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
763: (67) r8 <<= 2                    ; R8_w=scalar(umax=1020,var_off=(0x0; 0x3fc))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
764: (4f) r8 |= r1                    ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00)) R8_w=scalar()
765: (18) r1 = 0x100000000            ; R1_w=4294967296
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
767: (71) r2 = *(u8 *)(r7 +2)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=111,r=119,imm=0)
768: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
769: (05) goto pc+56
frame 1: propagating r0
last_idx 826 first_idx 757
regs=2 stack=0 before 769: (05) goto pc+56
regs=2 stack=0 before 768: (77) r2 >>= 6
regs=2 stack=0 before 767: (71) r2 = *(u8 *)(r7 +2)
regs=2 stack=0 before 765: (18) r1 = 0x100000000
826: safe

from 759 to 865: safe

from 758 to 818: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=955,umax=255,var_off=(0x0; 0xff)) R2=2 R6=ctx(off=0,imm=0) R7=pkt(off=111,r=119,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
818: (71) r1 = *(u8 *)(r7 +1)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=111,r=119,imm=0)
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
819: (67) r1 <<= 16                   ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
820: (71) r8 = *(u8 *)(r7 +2)         ; R7=pkt(off=111,r=119,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
821: (67) r8 <<= 8                    ; R8_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
822: (4f) r8 |= r1                    ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000)) R8_w=scalar()
823: (18) r1 = 0x200000000            ; R1_w=8589934592
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
825: (71) r2 = *(u8 *)(r7 +3)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=111,r=119,imm=0)
826: (57) r2 &= 255                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
827: (4f) r8 |= r2                    ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
828: (bf) r2 = r8                     ; R2_w=scalar(id=956) R8_w=scalar(id=956)
829: (67) r2 <<= 32                   ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
830: (c7) r2 s>>= 32                  ; R2_w=scalar(smin=-2147483648,smax=2147483647)
831: (b7) r3 = 1                      ; R3_w=1
; if (qpr.server_id > 0) {
832: (6d) if r3 s> r2 goto pc+32      ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
833: (77) r1 >>= 32                   ; R1_w=2
; if (cid_version == QUIC_CONNID_VERSION_V1) {
834: (15) if r1 == 0x3 goto pc+5
last_idx 834 first_idx 818
regs=2 stack=0 before 833: (77) r1 >>= 32
regs=2 stack=0 before 832: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 831: (b7) r3 = 1
regs=2 stack=0 before 830: (c7) r2 s>>= 32
regs=2 stack=0 before 829: (67) r2 <<= 32
regs=2 stack=0 before 828: (bf) r2 = r8
regs=2 stack=0 before 827: (4f) r8 |= r2
regs=2 stack=0 before 826: (57) r2 &= 255
regs=2 stack=0 before 825: (71) r2 = *(u8 *)(r7 +3)
regs=2 stack=0 before 823: (18) r1 = 0x200000000
frame 1: propagating r0
835: safe

from 832 to 865: safe

from 757 to 806: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=955,umax=255,var_off=(0x0; 0xff)) R2=3 R6=ctx(off=0,imm=0) R7=pkt(off=111,r=119,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
806: (71) r1 = *(u8 *)(r7 +1)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=111,r=119,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
807: (67) r1 <<= 24                   ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
808: (71) r8 = *(u8 *)(r7 +2)         ; R7=pkt(off=111,r=119,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
809: (67) r8 <<= 16                   ; R8_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
810: (4f) r8 |= r1                    ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432) R8_w=scalar()
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
811: (71) r1 = *(u8 *)(r7 +3)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=111,r=119,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
812: (67) r1 <<= 8                    ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
813: (4f) r8 |= r1                    ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00)) R8_w=scalar()
814: (18) r1 = 0x300000000            ; R1_w=12884901888
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
816: (71) r2 = *(u8 *)(r7 +4)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=111,r=119,imm=0)
817: (05) goto pc+8
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
826: (57) r2 &= 255                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
827: (4f) r8 |= r2                    ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
828: (bf) r2 = r8                     ; R2_w=scalar(id=957) R8_w=scalar(id=957)
829: (67) r2 <<= 32                   ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
830: (c7) r2 s>>= 32                  ; R2_w=scalar(smin=-2147483648,smax=2147483647)
831: (b7) r3 = 1                      ; R3_w=1
; if (qpr.server_id > 0) {
832: (6d) if r3 s> r2 goto pc+32      ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
833: (77) r1 >>= 32
frame 1: propagating r0
last_idx 834 first_idx 806
regs=2 stack=0 before 833: (77) r1 >>= 32
regs=2 stack=0 before 832: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 831: (b7) r3 = 1
regs=2 stack=0 before 830: (c7) r2 s>>= 32
regs=2 stack=0 before 829: (67) r2 <<= 32
regs=2 stack=0 before 828: (bf) r2 = r8
regs=2 stack=0 before 827: (4f) r8 |= r2
regs=2 stack=0 before 826: (57) r2 &= 255
regs=2 stack=0 before 817: (05) goto pc+8
regs=2 stack=0 before 816: (71) r2 = *(u8 *)(r7 +4)
regs=2 stack=0 before 814: (18) r1 = 0x300000000
834: safe

from 832 to 865: safe

from 753 to 865: safe

from 752 to 865: safe

from 704 to 865: safe

from 699 to 701: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=54 R2=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=110,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
701: (0f) r7 += r1
last_idx 701 first_idx 701
parent didn't have regs=2 stack=0 marks: R0=map_value(off=0,ks=4,vs=104,imm=0) R1_r=P54 R2=0 R6=ctx(off=0,imm=0) R7_r=pkt(off=0,r=110,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
last_idx 699 first_idx 699
regs=2 stack=0 before 699: (15) if r2 == 0x0 goto pc+1
parent didn't have regs=2 stack=0 marks: R0_w=map_value(off=0,ks=4,vs=104,imm=0) R1_rw=P54 R2_rw=scalar(umax=1,var_off=(0x0; 0x1)) R6_r=ctx(off=0,imm=0) R7_r=pkt(off=0,r=110,imm=0) R8_r=pkt_end(off=0,imm=0) R9_rw=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16_r=????mmmm fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96_r=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=
last_idx 698 first_idx 687
regs=2 stack=0 before 698: (b7) r1 = 54
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
702: (bf) r1 = r7                     ; R1_w=pkt(off=54,r=110,imm=0) R7_w=pkt(off=54,r=110,imm=0)
703: (07) r1 += 9                     ; R1_w=pkt(off=63,r=110,imm=0)
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
704: (2d) if r1 > r8 goto pc+160      ; R1_w=pkt(off=63,r=110,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
705: (71) r2 = *(u8 *)(r7 +8)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=54,r=110,imm=0)
706: (67) r2 <<= 56                   ; R2_w=scalar(smax=9151314442816847872,umax=18374686479671623680,var_off=(0x0; 0xff00000000000000),s32_min=0,s32_max=0,u32_max=0)
707: (c7) r2 s>>= 56                  ; R2_w=scalar(smin=-128,smax=127)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
708: (65) if r2 s> 0xffffffff goto pc+40      ; R2_w=scalar(umin=18446744073709551488,var_off=(0xffffffffffffff80; 0x7f),u32_min=-128)
; if (quic_data + sizeof(struct quic_long_header) > data_end) {
709: (bf) r1 = r7                     ; R1_w=pkt(off=54,r=110,imm=0) R7_w=pkt(off=54,r=110,imm=0)
710: (07) r1 += 22                    ; R1=pkt(off=76,r=110,imm=0)
; if (quic_data + sizeof(struct quic_long_header) > data_end) {
711: (2d) if r1 > r8 goto pc+153      ; R1=pkt(off=76,r=110,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_PACKET_TYPE_MASK) < QUIC_HANDSHAKE) {
712: (57) r2 &= 32                    ; R2_w=scalar(umax=32,var_off=(0x0; 0x20))
; if ((*pkt_type & QUIC_PACKET_TYPE_MASK) < QUIC_HANDSHAKE) {
713: (15) if r2 == 0x0 goto pc+77     ; R2_w=scalar(umax=32,var_off=(0x0; 0x20))
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
714: (71) r1 = *(u8 *)(r7 +13)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=54,r=110,imm=0)
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
715: (07) r7 += 14                    ; R7_w=pkt(off=68,r=110,imm=0)
716: (25) if r1 > 0x7 goto pc+36      ; R1_w=scalar(umax=7,var_off=(0x0; 0x7))
717: (05) goto pc+147
865: safe

from 716 to 753: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(umin=8,umax=255,var_off=(0x0; 0xff)) R2=scalar(umax=32,var_off=(0x0; 0x20)) R6=ctx(off=0,imm=0) R7=pkt(off=68,r=110,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (!connId) {
753: (15) if r7 == 0x0 goto pc+111    ; R7=pkt(off=68,r=110,imm=0)
; __u8 connIdVersion = (connId[0] >> 6);
754: (71) r1 = *(u8 *)(r7 +0)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=68,r=110,imm=0)
755: (bf) r2 = r1                     ; R1_w=scalar(id=958,umax=255,var_off=(0x0; 0xff)) R2_w=scalar(id=958,umax=255,var_off=(0x0; 0xff))
756: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
; if (connIdVersion == QUIC_CONNID_VERSION_V1) {
757: (15) if r2 == 0x3 goto pc+48     ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
758: (15) if r2 == 0x2 goto pc+59     ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
759: (55) if r2 != 0x1 goto pc+105    ; R2_w=1
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
760: (57) r1 &= 63                    ; R1_w=scalar(umax=63,var_off=(0x0; 0x3f))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
761: (67) r1 <<= 10                   ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
762: (71) r8 = *(u8 *)(r7 +1)         ; R7=pkt(off=68,r=110,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
763: (67) r8 <<= 2                    ; R8_w=scalar(umax=1020,var_off=(0x0; 0x3fc))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
764: (4f) r8 |= r1                    ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00)) R8_w=scalar()
765: (18) r1 = 0x100000000            ; R1_w=4294967296
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
767: (71) r2 = *(u8 *)(r7 +2)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=68,r=110,imm=0)
768: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
769: (05) goto pc+56
frame 1: propagating r0
last_idx 826 first_idx 753
regs=2 stack=0 before 769: (05) goto pc+56
regs=2 stack=0 before 768: (77) r2 >>= 6
regs=2 stack=0 before 767: (71) r2 = *(u8 *)(r7 +2)
regs=2 stack=0 before 765: (18) r1 = 0x100000000
826: safe

from 759 to 865: safe

from 758 to 818: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=958,umax=255,var_off=(0x0; 0xff)) R2=2 R6=ctx(off=0,imm=0) R7=pkt(off=68,r=110,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
818: (71) r1 = *(u8 *)(r7 +1)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=68,r=110,imm=0)
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
819: (67) r1 <<= 16                   ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
820: (71) r8 = *(u8 *)(r7 +2)         ; R7=pkt(off=68,r=110,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
821: (67) r8 <<= 8                    ; R8_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
822: (4f) r8 |= r1                    ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000)) R8_w=scalar()
823: (18) r1 = 0x200000000            ; R1_w=8589934592
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
825: (71) r2 = *(u8 *)(r7 +3)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=68,r=110,imm=0)
826: (57) r2 &= 255                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
827: (4f) r8 |= r2                    ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
828: (bf) r2 = r8                     ; R2_w=scalar(id=959) R8_w=scalar(id=959)
829: (67) r2 <<= 32                   ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
830: (c7) r2 s>>= 32                  ; R2_w=scalar(smin=-2147483648,smax=2147483647)
831: (b7) r3 = 1                      ; R3_w=1
; if (qpr.server_id > 0) {
832: (6d) if r3 s> r2 goto pc+32      ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
833: (77) r1 >>= 32                   ; R1_w=2
; if (cid_version == QUIC_CONNID_VERSION_V1) {
834: (15) if r1 == 0x3 goto pc+5
last_idx 834 first_idx 818
regs=2 stack=0 before 833: (77) r1 >>= 32
regs=2 stack=0 before 832: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 831: (b7) r3 = 1
regs=2 stack=0 before 830: (c7) r2 s>>= 32
regs=2 stack=0 before 829: (67) r2 <<= 32
regs=2 stack=0 before 828: (bf) r2 = r8
regs=2 stack=0 before 827: (4f) r8 |= r2
regs=2 stack=0 before 826: (57) r2 &= 255
regs=2 stack=0 before 825: (71) r2 = *(u8 *)(r7 +3)
regs=2 stack=0 before 823: (18) r1 = 0x200000000
frame 1: propagating r0
835: safe

from 832 to 865: safe

from 757 to 806: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=958,umax=255,var_off=(0x0; 0xff)) R2=3 R6=ctx(off=0,imm=0) R7=pkt(off=68,r=110,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
806: (71) r1 = *(u8 *)(r7 +1)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=68,r=110,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
807: (67) r1 <<= 24                   ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
808: (71) r8 = *(u8 *)(r7 +2)         ; R7=pkt(off=68,r=110,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
809: (67) r8 <<= 16                   ; R8_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
810: (4f) r8 |= r1                    ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432) R8_w=scalar()
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
811: (71) r1 = *(u8 *)(r7 +3)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=68,r=110,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
812: (67) r1 <<= 8                    ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
813: (4f) r8 |= r1                    ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00)) R8_w=scalar()
814: (18) r1 = 0x300000000            ; R1_w=12884901888
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
816: (71) r2 = *(u8 *)(r7 +4)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=68,r=110,imm=0)
817: (05) goto pc+8
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
826: (57) r2 &= 255                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
827: (4f) r8 |= r2                    ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
828: (bf) r2 = r8                     ; R2_w=scalar(id=960) R8_w=scalar(id=960)
829: (67) r2 <<= 32                   ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
830: (c7) r2 s>>= 32                  ; R2_w=scalar(smin=-2147483648,smax=2147483647)
831: (b7) r3 = 1                      ; R3_w=1
; if (qpr.server_id > 0) {
832: (6d) if r3 s> r2 goto pc+32      ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
833: (77) r1 >>= 32
frame 1: propagating r0
last_idx 834 first_idx 806
regs=2 stack=0 before 833: (77) r1 >>= 32
regs=2 stack=0 before 832: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 831: (b7) r3 = 1
regs=2 stack=0 before 830: (c7) r2 s>>= 32
regs=2 stack=0 before 829: (67) r2 <<= 32
regs=2 stack=0 before 828: (bf) r2 = r8
regs=2 stack=0 before 827: (4f) r8 |= r2
regs=2 stack=0 before 826: (57) r2 &= 255
regs=2 stack=0 before 817: (05) goto pc+8
regs=2 stack=0 before 816: (71) r2 = *(u8 *)(r7 +4)
regs=2 stack=0 before 814: (18) r1 = 0x300000000
834: safe

from 832 to 865: safe

from 753 to 865: safe

from 713 to 791: safe

from 711 to 865: safe

from 708 to 749: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=pkt(off=63,r=110,imm=0) R2=scalar(umax=127,var_off=(0x0; 0x7f)) R6=ctx(off=0,imm=0) R7=pkt(off=54,r=110,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (quic_data + sizeof(struct quic_short_header) > data_end) {
749: (bf) r2 = r7                     ; R2_w=pkt(off=54,r=110,imm=0) R7=pkt(off=54,r=110,imm=0)
750: (07) r2 += 17                    ; R2_w=pkt(off=71,r=110,imm=0)
751: (bf) r7 = r1                     ; R1=pkt(off=63,r=110,imm=0) R7_w=pkt(off=63,r=110,imm=0)
; if (quic_data + sizeof(struct quic_short_header) > data_end) {
752: (2d) if r2 > r8 goto pc+112      ; R2_w=pkt(off=71,r=110,imm=0) R8=pkt_end(off=0,imm=0)
; if (!connId) {
753: (15) if r7 == 0x0 goto pc+111    ; R7_w=pkt(off=63,r=110,imm=0)
; __u8 connIdVersion = (connId[0] >> 6);
754: (71) r1 = *(u8 *)(r7 +0)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=63,r=110,imm=0)
755: (bf) r2 = r1                     ; R1_w=scalar(id=961,umax=255,var_off=(0x0; 0xff)) R2_w=scalar(id=961,umax=255,var_off=(0x0; 0xff))
756: (77) r2 >>= 6                    ; R2=scalar(umax=3,var_off=(0x0; 0x3))
; if (connIdVersion == QUIC_CONNID_VERSION_V1) {
757: (15) if r2 == 0x3 goto pc+48     ; R2=scalar(umax=3,var_off=(0x0; 0x3))
758: (15) if r2 == 0x2 goto pc+59     ; R2=scalar(umax=3,var_off=(0x0; 0x3))
759: (55) if r2 != 0x1 goto pc+105    ; R2=1
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
760: (57) r1 &= 63                    ; R1_w=scalar(umax=63,var_off=(0x0; 0x3f))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
761: (67) r1 <<= 10                   ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
762: (71) r8 = *(u8 *)(r7 +1)         ; R7=pkt(off=63,r=110,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
763: (67) r8 <<= 2                    ; R8_w=scalar(umax=1020,var_off=(0x0; 0x3fc))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
764: (4f) r8 |= r1                    ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00)) R8_w=scalar()
765: (18) r1 = 0x100000000            ; R1_w=4294967296
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
767: (71) r2 = *(u8 *)(r7 +2)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=63,r=110,imm=0)
768: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
769: (05) goto pc+56
frame 1: propagating r0
last_idx 826 first_idx 757
regs=2 stack=0 before 769: (05) goto pc+56
regs=2 stack=0 before 768: (77) r2 >>= 6
regs=2 stack=0 before 767: (71) r2 = *(u8 *)(r7 +2)
regs=2 stack=0 before 765: (18) r1 = 0x100000000
826: safe

from 759 to 865: safe

from 758 to 818: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=961,umax=255,var_off=(0x0; 0xff)) R2=2 R6=ctx(off=0,imm=0) R7=pkt(off=63,r=110,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
818: (71) r1 = *(u8 *)(r7 +1)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=63,r=110,imm=0)
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
819: (67) r1 <<= 16                   ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
820: (71) r8 = *(u8 *)(r7 +2)         ; R7=pkt(off=63,r=110,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
821: (67) r8 <<= 8                    ; R8_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
822: (4f) r8 |= r1                    ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000)) R8_w=scalar()
823: (18) r1 = 0x200000000            ; R1_w=8589934592
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
825: (71) r2 = *(u8 *)(r7 +3)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=63,r=110,imm=0)
826: (57) r2 &= 255                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
827: (4f) r8 |= r2                    ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
828: (bf) r2 = r8                     ; R2_w=scalar(id=962) R8_w=scalar(id=962)
829: (67) r2 <<= 32                   ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
830: (c7) r2 s>>= 32                  ; R2_w=scalar(smin=-2147483648,smax=2147483647)
831: (b7) r3 = 1                      ; R3_w=1
; if (qpr.server_id > 0) {
832: (6d) if r3 s> r2 goto pc+32      ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
833: (77) r1 >>= 32                   ; R1_w=2
; if (cid_version == QUIC_CONNID_VERSION_V1) {
834: (15) if r1 == 0x3 goto pc+5
last_idx 834 first_idx 818
regs=2 stack=0 before 833: (77) r1 >>= 32
regs=2 stack=0 before 832: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 831: (b7) r3 = 1
regs=2 stack=0 before 830: (c7) r2 s>>= 32
regs=2 stack=0 before 829: (67) r2 <<= 32
regs=2 stack=0 before 828: (bf) r2 = r8
regs=2 stack=0 before 827: (4f) r8 |= r2
regs=2 stack=0 before 826: (57) r2 &= 255
regs=2 stack=0 before 825: (71) r2 = *(u8 *)(r7 +3)
regs=2 stack=0 before 823: (18) r1 = 0x200000000
frame 1: propagating r0
835: safe

from 832 to 865: safe

from 757 to 806: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=961,umax=255,var_off=(0x0; 0xff)) R2=3 R6=ctx(off=0,imm=0) R7=pkt(off=63,r=110,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
806: (71) r1 = *(u8 *)(r7 +1)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=63,r=110,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
807: (67) r1 <<= 24                   ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
808: (71) r8 = *(u8 *)(r7 +2)         ; R7=pkt(off=63,r=110,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
809: (67) r8 <<= 16                   ; R8_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
810: (4f) r8 |= r1                    ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432) R8_w=scalar()
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
811: (71) r1 = *(u8 *)(r7 +3)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=63,r=110,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
812: (67) r1 <<= 8                    ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
813: (4f) r8 |= r1                    ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00)) R8_w=scalar()
814: (18) r1 = 0x300000000            ; R1_w=12884901888
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
816: (71) r2 = *(u8 *)(r7 +4)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=63,r=110,imm=0)
817: (05) goto pc+8
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
826: (57) r2 &= 255                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
827: (4f) r8 |= r2                    ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
828: (bf) r2 = r8                     ; R2_w=scalar(id=963) R8_w=scalar(id=963)
829: (67) r2 <<= 32                   ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
830: (c7) r2 s>>= 32                  ; R2_w=scalar(smin=-2147483648,smax=2147483647)
831: (b7) r3 = 1                      ; R3_w=1
; if (qpr.server_id > 0) {
832: (6d) if r3 s> r2 goto pc+32      ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
833: (77) r1 >>= 32
frame 1: propagating r0
last_idx 834 first_idx 806
regs=2 stack=0 before 833: (77) r1 >>= 32
regs=2 stack=0 before 832: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 831: (b7) r3 = 1
regs=2 stack=0 before 830: (c7) r2 s>>= 32
regs=2 stack=0 before 829: (67) r2 <<= 32
regs=2 stack=0 before 828: (bf) r2 = r8
regs=2 stack=0 before 827: (4f) r8 |= r2
regs=2 stack=0 before 826: (57) r2 &= 255
regs=2 stack=0 before 817: (05) goto pc+8
regs=2 stack=0 before 816: (71) r2 = *(u8 *)(r7 +4)
regs=2 stack=0 before 814: (18) r1 = 0x300000000
834: safe

from 832 to 865: safe

from 753 to 865: safe

from 752 to 865: safe

from 704 to 865: safe

from 695 to 1857: safe

from 411 to 869: safe

from 380 to 383: R0=map_value(off=0,ks=4,vs=16,imm=0) R1=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=110,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm fp-120=mmmm???? fp-136= fp-144=map_value fp-160=map_value
; vip_num = vip_info->vip_num;
383: (61) r1 = *(u32 *)(r9 +4)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9=map_value(off=0,ks=20,vs=8,imm=0)
384: (7b) *(u64 *)(r10 -168) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-168_w=
; vip_num = vip_info->vip_num;
385: (63) *(u32 *)(r10 -108) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-112=mmmmmmmm
; __u32 cpu_num = bpf_get_smp_processor_id();
386: (85) call bpf_get_smp_processor_id#8     ; R0_w=scalar()
; __u32 cpu_num = bpf_get_smp_processor_id();
387: (63) *(u32 *)(r10 -120) = r0     ; R0_w=scalar() R10=fp0 fp-120=mmmmmmmm
388: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; 
389: (07) r2 += -120                  ; R2_w=fp-120
; void* lru_map = bpf_map_lookup_elem(&lru_mapping, &cpu_num);
390: (18) r1 = 0xffffa0376748a000     ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
392: (85) call bpf_map_lookup_elem#1
393: safe

from 372 to 1858: safe

from 362 to 1858: safe

from 355 to 358: R0=map_value(off=0,ks=20,vs=8,imm=0) R1=scalar(umax=136,var_off=(0x0; 0x88)) R6=ctx(off=0,imm=0) R7=pkt(off=0,r=110,imm=0) R8=pkt_end(off=0,imm=0) R9=2 R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm fp-136=
; if (data_end - data > MAX_PCKT_SIZE) {
358: (bf) r1 = r8                     ; R1_w=pkt_end(off=0,imm=0) R8=pkt_end(off=0,imm=0)
359: (1f) r1 -= r7                    ; R1_w=scalar() R7=pkt(off=0,r=110,imm=0)
360: (b7) r9 = 1                      ; R9_w=1
361: (79) r2 = *(u64 *)(r10 -136)
362: safe

from 351 to 1858: safe

from 341 to 358: safe

from 316 to 1858: safe

from 495 to 1858: safe

from 488 to 492: R0=map_value(off=0,ks=4,vs=16,imm=0) R1=scalar(umin=1280) R6=ctx(off=0,imm=0) R7=pkt(off=0,r=62,imm=0) R8=pkt_end(off=0,imm=0) R9=1 R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm fp-136=
; icmp_ptb_v6_stats->v2 += 1;
492: (bf) r1 = r7                     ; R1_w=pkt(off=0,r=62,imm=0) R7=pkt(off=0,r=62,imm=0)
493: (07) r1 += 102                   ; R1_w=pkt(off=102,r=62,imm=0)
494: (79) r0 = *(u64 *)(r10 -136)     ; R0_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
495: (2d) if r1 > r8 goto pc+1362     ; R1_w=pkt(off=102,r=102,imm=0) R8=pkt_end(off=0,imm=0)
; pckt->flags |= F_ICMP;
496: (71) r2 = *(u8 *)(r10 -36)       ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
497: (05) goto pc+4
frame 2: propagating r0
last_idx 502 first_idx 488
regs=4 stack=0 before 497: (05) goto pc+4
regs=4 stack=0 before 496: (71) r2 = *(u8 *)(r10 -36)
regs=0 stack=10 before 495: (2d) if r1 > r8 goto pc+1362
regs=0 stack=10 before 494: (79) r0 = *(u64 *)(r10 -136)
regs=0 stack=10 before 493: (07) r1 += 102
regs=0 stack=10 before 492: (bf) r1 = r7
regs=0 stack=10 before 488: (25) if r1 > 0x4ff goto pc+3
parent already had regs=0 stack=0 marks: R0_rw=map_value(off=0,ks=4,vs=16,imm=0) R1_rw=scalar() R6_r=ctx(off=0,imm=0) R7_r=pkt(off=0,r=62,imm=0) R8_r=pkt_end(off=0,imm=0) R9_r=1 R10=fp0 fp-16_r=????mmmm fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112_r=????mmmm fp-136_rw=
502: safe

from 495 to 1858: safe

from 482 to 1858: safe

from 173 to 498: R0=scalar(umax=65535,var_off=(0x0; 0xffff)) R1=1 R2=pkt(off=54,r=62,imm=0) R3=scalar() R4=scalar(umax=15,var_off=(0x0; 0xf)) R6=ctx(off=0,imm=0) R7=pkt(off=0,r=62,imm=0) R8=pkt_end(off=0,imm=0) R9=1 R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm
498: (b7) r2 = 0                      ; R2_w=0
; if (ip6h + 1 > data_end) {
499: (bf) r1 = r7                     ; R1_w=pkt(off=0,r=62,imm=0) R7=pkt(off=0,r=62,imm=0)
500: (07) r1 += 102                   ; R1_w=pkt(off=102,r=62,imm=0)
; if (ip6h + 1 > data_end) {
501: (2d) if r1 > r8 goto pc+1356     ; R1_w=pkt(off=102,r=102,imm=0) R8=pkt_end(off=0,imm=0)
; pckt->flags |= F_ICMP;
502: (47) r2 |= 1                     ; R2_w=1
; pckt->flow.proto = ip6h->nexthdr;
503: (71) r1 = *(u8 *)(r7 +68)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=102,imm=0)
; pckt->flags |= F_ICMP;
504: (73) *(u8 *)(r10 -36) = r2       ; R2_w=1 R10=fp0 fp-40=mmmmmmmm
; pckt->flow.proto = ip6h->nexthdr;
505: (73) *(u8 *)(r10 -44) = r1       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0 fp-48=mmmmmmmm
; memcpy(pckt->flow.srcv6, ip6h->daddr.s6_addr32, 16);
506: (61) r3 = *(u32 *)(r7 +90)       ; R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R7=pkt(off=0,r=102,imm=0)
507: (67) r3 <<= 32                   ; R3_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
508: (61) r4 = *(u32 *)(r7 +86)       ; R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R7=pkt(off=0,r=102,imm=0)
509: (4f) r3 |= r4                    ; R3_w=scalar() R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
510: (7b) *(u64 *)(r10 -80) = r3      ; R3_w=scalar() R10=fp0 fp-80_w=mmmmmmmm
511: (61) r3 = *(u32 *)(r7 +98)       ; R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R7=pkt(off=0,r=102,imm=0)
512: (67) r3 <<= 32                   ; R3_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
513: (61) r4 = *(u32 *)(r7 +94)       ; R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R7=pkt(off=0,r=102,imm=0)
514: (4f) r3 |= r4                    ; R3_w=scalar() R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
515: (7b) *(u64 *)(r10 -72) = r3      ; R3_w=scalar() R10=fp0 fp-72_w=mmmmmmmm
; memcpy(pckt->flow.dstv6, ip6h->saddr.s6_addr32, 16);
516: (61) r3 = *(u32 *)(r7 +74)       ; R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R7=pkt(off=0,r=102,imm=0)
517: (67) r3 <<= 32                   ; R3_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
518: (61) r4 = *(u32 *)(r7 +70)       ; R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R7=pkt(off=0,r=102,imm=0)
519: (4f) r3 |= r4                    ; R3_w=scalar() R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
520: (7b) *(u64 *)(r10 -64) = r3      ; R3_w=scalar() R10=fp0 fp-64_w=mmmmmmmm
521: (61) r3 = *(u32 *)(r7 +78)       ; R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R7=pkt(off=0,r=102,imm=0)
522: (61) r4 = *(u32 *)(r7 +82)       ; R4_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R7=pkt(off=0,r=102,imm=0)
523: (67) r4 <<= 32                   ; R4_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
524: (4f) r4 |= r3                    ; R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R4_w=scalar()
525: (7b) *(u64 *)(r10 -56) = r4      ; R4_w=scalar() R10=fp0 fp-56_w=mmmmmmmm
526: (05) goto pc-252
; if (protocol == IPPROTO_TCP) {
275: (bf) r3 = r1                     ; R1=scalar(id=965,umax=255,var_off=(0x0; 0xff)) R3_w=scalar(id=965,umax=255,var_off=(0x0; 0xff))
276: (15) if r3 == 0x11 goto pc+31    ; R3_w=scalar(id=965,umax=255,var_off=(0x0; 0xff))
277: (b7) r9 = 2                      ; R9_w=2
278: (55) if r3 != 0x6 goto pc+1579   ; R3_w=6
; bool is_icmp = !((pckt->flags & F_ICMP) == 0);
279: (bf) r3 = r2                     ; R2=1 R3_w=1
280: (57) r3 &= 1                     ; R3_w=1
281: (b7) r5 = 54                     ; R5_w=54
; if (is_ipv6) {
282: (15) if r3 == 0x0 goto pc+1
last_idx 282 first_idx 275
regs=8 stack=0 before 281: (b7) r5 = 54
regs=8 stack=0 before 280: (57) r3 &= 1
regs=8 stack=0 before 279: (bf) r3 = r2
regs=4 stack=0 before 278: (55) if r3 != 0x6 goto pc+1579
regs=4 stack=0 before 277: (b7) r9 = 2
regs=4 stack=0 before 276: (15) if r3 == 0x11 goto pc+31
regs=4 stack=0 before 275: (bf) r3 = r1
parent didn't have regs=4 stack=0 marks: R0=scalar(umax=65535,var_off=(0x0; 0xffff)) R1_rw=scalar(umax=255,var_off=(0x0; 0xff)) R2_rw=P1 R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R4_w=scalar() R6=ctx(off=0,imm=0) R7=pkt(off=0,r=102,imm=0) R8=pkt_end(off=0,imm=0) R9=1 R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56_w=mmmmmmmm fp-64_w=mmmmmmmm fp-72_w=mmmmmmmm fp-80_w=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm
last_idx 526 first_idx 498
regs=4 stack=0 before 526: (05) goto pc-252
regs=4 stack=0 before 525: (7b) *(u64 *)(r10 -56) = r4
regs=4 stack=0 before 524: (4f) r4 |= r3
regs=4 stack=0 before 523: (67) r4 <<= 32
regs=4 stack=0 before 522: (61) r4 = *(u32 *)(r7 +82)
regs=4 stack=0 before 521: (61) r3 = *(u32 *)(r7 +78)
regs=4 stack=0 before 520: (7b) *(u64 *)(r10 -64) = r3
regs=4 stack=0 before 519: (4f) r3 |= r4
regs=4 stack=0 before 518: (61) r4 = *(u32 *)(r7 +70)
regs=4 stack=0 before 517: (67) r3 <<= 32
regs=4 stack=0 before 516: (61) r3 = *(u32 *)(r7 +74)
regs=4 stack=0 before 515: (7b) *(u64 *)(r10 -72) = r3
regs=4 stack=0 before 514: (4f) r3 |= r4
regs=4 stack=0 before 513: (61) r4 = *(u32 *)(r7 +94)
regs=4 stack=0 before 512: (67) r3 <<= 32
regs=4 stack=0 before 511: (61) r3 = *(u32 *)(r7 +98)
regs=4 stack=0 before 510: (7b) *(u64 *)(r10 -80) = r3
regs=4 stack=0 before 509: (4f) r3 |= r4
regs=4 stack=0 before 508: (61) r4 = *(u32 *)(r7 +86)
regs=4 stack=0 before 507: (67) r3 <<= 32
regs=4 stack=0 before 506: (61) r3 = *(u32 *)(r7 +90)
regs=4 stack=0 before 505: (73) *(u8 *)(r10 -44) = r1
regs=4 stack=0 before 504: (73) *(u8 *)(r10 -36) = r2
regs=4 stack=0 before 503: (71) r1 = *(u8 *)(r7 +68)
regs=4 stack=0 before 502: (47) r2 |= 1
regs=4 stack=0 before 501: (2d) if r1 > r8 goto pc+1356
regs=4 stack=0 before 500: (07) r1 += 102
regs=4 stack=0 before 499: (bf) r1 = r7
regs=4 stack=0 before 498: (b7) r2 = 0
283: (b7) r5 = 102                    ; R5=102
; tcp = data + off;
284: (bf) r4 = r7                     ; R4_w=pkt(off=0,r=102,imm=0) R7=pkt(off=0,r=102,imm=0)
285: (0f) r4 += r5
last_idx 285 first_idx 284
regs=20 stack=0 before 284: (bf) r4 = r7
parent didn't have regs=20 stack=0 marks: R0=scalar(umax=65535,var_off=(0x0; 0xffff)) R1=6 R2=1 R3_w=P1 R4=scalar() R5_rw=P102 R6=ctx(off=0,imm=0) R7_r=pkt(off=0,r=102,imm=0) R8=pkt_end(off=0,imm=0) R9_w=2 R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm
last_idx 283 first_idx 275
regs=20 stack=0 before 283: (b7) r5 = 102
; if (tcp + 1 > data_end) {
286: (bf) r5 = r4                     ; R4_w=pkt(off=102,r=102,imm=0) R5_w=pkt(off=102,r=102,imm=0)
287: (07) r5 += 20                    ; R5_w=pkt(off=122,r=102,imm=0)
288: (b7) r9 = 1                      ; R9_w=1
; if (tcp + 1 > data_end) {
289: (2d) if r5 > r8 goto pc+1568     ; R5_w=pkt(off=122,r=122,imm=0) R8=pkt_end(off=0,imm=0)
; if (tcp->syn) {
290: (69) r5 = *(u16 *)(r4 +12)       ; R4_w=pkt(off=102,r=122,imm=0) R5_w=scalar(umax=65535,var_off=(0x0; 0xffff))
; if (tcp->syn) {
291: (57) r5 &= 512                   ; R5_w=scalar(umax=512,var_off=(0x0; 0x200))
; if (tcp->syn) {
292: (15) if r5 == 0x0 goto pc+2      ; R5_w=scalar(umax=512,var_off=(0x0; 0x200))
; pckt->flags |= F_SYN_SET;
293: (47) r2 |= 2                     ; R2_w=3
294: (73) *(u8 *)(r10 -36) = r2       ; R2=3 R10=fp0 fp-40=mmmmmmmm
295: (7b) *(u64 *)(r10 -136) = r0     ; R0=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-136_w=
296: (b7) r2 = 1                      ; R2_w=1
; bool is_icmp = !((pckt->flags & F_ICMP) == 0);
297: (15) if r3 == 0x0 goto pc+1      ; R3=P1
298: (b7) r2 = 0                      ; R2_w=0
299: (67) r3 <<= 1                    ; R3_w=P2
; 
300: (bf) r5 = r4                     ; R4=pkt(off=102,r=122,imm=0) R5_w=pkt(off=102,r=122,imm=0)
301: (0f) r5 += r3                    ; R3_w=P2 R5_w=pkt(off=104,r=122,imm=0)
302: (69) r3 = *(u16 *)(r5 +0)        ; R3_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R5_w=pkt(off=104,r=122,imm=0)
303: (6b) *(u16 *)(r10 -48) = r3      ; R3_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-48=
304: (67) r2 <<= 1                    ; R2_w=0
305: (0f) r4 += r2
last_idx 305 first_idx 295
regs=4 stack=0 before 304: (67) r2 <<= 1
regs=4 stack=0 before 303: (6b) *(u16 *)(r10 -48) = r3
regs=4 stack=0 before 302: (69) r3 = *(u16 *)(r5 +0)
regs=4 stack=0 before 301: (0f) r5 += r3
regs=4 stack=0 before 300: (bf) r5 = r4
regs=4 stack=0 before 299: (67) r3 <<= 1
regs=4 stack=0 before 298: (b7) r2 = 0
306: R2_w=P0 R4_w=pkt(off=102,r=122,imm=0)
306: (69) r2 = *(u16 *)(r4 +0)        ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R4_w=pkt(off=102,r=122,imm=0)
307: (05) goto pc+21
; 
329: (6b) *(u16 *)(r10 -46) = r2      ; R2=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-48=mmmmmmmm
; memcpy(vip.vipv6, pckt.flow.dstv6, 16);
330: (79) r3 = *(u64 *)(r10 -56)      ; R3_w=scalar() R10=fp0
331: (7b) *(u64 *)(r10 -96) = r3      ; R3_w=scalar() R10=fp0 fp-96_w=mmmmmmmm
332: (79) r3 = *(u64 *)(r10 -64)      ; R3_w=scalar() R10=fp0
333: (7b) *(u64 *)(r10 -104) = r3     ; R3_w=scalar() R10=fp0 fp-104_w=mmmmmmmm
; vip.proto = pckt.flow.proto;
334: (73) *(u8 *)(r10 -86) = r1       ; R1=6 R10=fp0 fp-88=????mmmm
; vip.port = pckt.flow.port16[1];
335: (6b) *(u16 *)(r10 -88) = r2      ; R2=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-88=
336: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; 
337: (07) r2 += -104                  ; R2_w=fp-104
; vip_info = bpf_map_lookup_elem(&vip_map, &vip);
338: (18) r1 = 0xffffa03557866800     ; R1_w=map_ptr(off=0,ks=20,vs=8,imm=0)
340: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=967,off=0,ks=20,vs=8,imm=0)
; if (!vip_info) {
341: (55) if r0 != 0x0 goto pc+16     ; R0_w=0
342: (05) goto pc+0
; vip.port = 0;
343: (6a) *(u16 *)(r10 -88) = 0       ; R10=fp0 fp-88=????mmmm
344: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
345: (07) r2 += -104                  ; R2_w=fp-104
; vip_info = bpf_map_lookup_elem(&vip_map, &vip);
346: (18) r1 = 0xffffa03557866800     ; R1_w=map_ptr(off=0,ks=20,vs=8,imm=0)
348: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=968,off=0,ks=20,vs=8,imm=0)
349: (b7) r9 = 2                      ; R9_w=2
350: (79) r1 = *(u64 *)(r10 -136)     ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; if (!vip_info) {
351: (15) if r0 == 0x0 goto pc+1506   ; R0_w=map_value(off=0,ks=20,vs=8,imm=0)
352: (7b) *(u64 *)(r10 -136) = r1     ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-136_w=
; if (!(vip_info->flags & F_HASH_DPORT_ONLY) &&
353: (61) r1 = *(u32 *)(r0 +0)        ; R0_w=map_value(off=0,ks=20,vs=8,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (!(vip_info->flags & F_HASH_DPORT_ONLY) &&
354: (57) r1 &= 136                   ; R1=scalar(umax=136,var_off=(0x0; 0x88))
355: (55) if r1 != 0x0 goto pc+2      ; R1=0
356: (05) goto pc+0
; pckt.flow.port16[1] = 0;
357: (6a) *(u16 *)(r10 -46) = 0       ; R10=fp0 fp-48=mmmmmmmm
; if (data_end - data > MAX_PCKT_SIZE) {
358: (bf) r1 = r8                     ; R1_w=pkt_end(off=0,imm=0) R8=pkt_end(off=0,imm=0)
359: (1f) r1 -= r7                    ; R1_w=scalar() R7=pkt(off=0,r=122,imm=0)
360: (b7) r9 = 1                      ; R9_w=1
361: (79) r2 = *(u64 *)(r10 -136)     ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; if (data_end - data > MAX_PCKT_SIZE) {
362: (65) if r1 s> 0x5ea goto pc+1495         ; R1_w=scalar(smax=1514)
363: (7b) *(u64 *)(r10 -144) = r0     ; R0=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-144_w=map_value
364: (7b) *(u64 *)(r10 -136) = r2     ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-136_w=
365: (05) goto pc+0
; __u32 stats_key = MAX_VIPS + LRU_CNTRS;
366: (62) *(u32 *)(r10 -116) = 512    ; R10=fp0 fp-120=mmmm????
367: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; 
368: (07) r2 += -116                  ; R2_w=fp-116
; data_stats = bpf_map_lookup_elem(&stats, &stats_key);
369: (18) r1 = 0xffffa03499be8000     ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
371: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=969,off=0,ks=4,vs=16,imm=0)
; if (!data_stats) {
372: (15) if r0 == 0x0 goto pc+1485   ; R0_w=map_value(off=0,ks=4,vs=16,imm=0)
; data_stats->v1 += 1;
373: (79) r1 = *(u64 *)(r0 +0)        ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
374: (07) r1 += 1                     ; R1_w=scalar()
375: (7b) *(u64 *)(r10 -160) = r0     ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R10=fp0 fp-160_w=map_value
376: (7b) *(u64 *)(r0 +0) = r1        ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
377: (79) r9 = *(u64 *)(r10 -144)     ; R9_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
; if ((vip_info->flags & F_HASH_NO_SRC_PORT)) {
378: (61) r1 = *(u32 *)(r9 +0)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9_w=map_value(off=0,ks=20,vs=8,imm=0)
; if ((vip_info->flags & F_HASH_NO_SRC_PORT)) {
379: (57) r1 &= 1                     ; R1=scalar(umax=1,var_off=(0x0; 0x1))
; if ((vip_info->flags & F_HASH_NO_SRC_PORT)) {
380: (15) if r1 == 0x0 goto pc+2      ; R1=scalar(umax=1,var_off=(0x0; 0x1))
381: (05) goto pc+0
; pckt.flow.port16[0] = 0;
382: (6a) *(u16 *)(r10 -48) = 0       ; R10=fp0 fp-48=mmmmmmmm
; vip_num = vip_info->vip_num;
383: (61) r1 = *(u32 *)(r9 +4)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9=map_value(off=0,ks=20,vs=8,imm=0)
384: (7b) *(u64 *)(r10 -168) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-168_w=
; vip_num = vip_info->vip_num;
385: (63) *(u32 *)(r10 -108) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-112=mmmmmmmm
; __u32 cpu_num = bpf_get_smp_processor_id();
386: (85) call bpf_get_smp_processor_id#8     ; R0_w=scalar()
; __u32 cpu_num = bpf_get_smp_processor_id();
387: (63) *(u32 *)(r10 -120) = r0     ; R0_w=scalar() R10=fp0 fp-120=mmmmmmmm
388: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; 
389: (07) r2 += -120                  ; R2_w=fp-120
; void* lru_map = bpf_map_lookup_elem(&lru_mapping, &cpu_num);
390: (18) r1 = 0xffffa0376748a000     ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
392: (85) call bpf_map_lookup_elem#1          ; R0=map_value_or_null(id=970,off=0,ks=4,vs=4,imm=0)
; if (!lru_map) {
393: (55) if r0 != 0x0 goto pc+14     ; R0=0
394: (05) goto pc+0
; __u32 lru_stats_key = MAX_VIPS + FALLBACK_LRU_CNTR;
395: (62) *(u32 *)(r10 -16) = 515     ; R10=fp0 fp-16=????mmmm
396: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
397: (07) r2 += -16                   ; R2_w=fp-16
; struct lb_stats* lru_stats = bpf_map_lookup_elem(&stats, &lru_stats_key);
398: (18) r1 = 0xffffa03499be8000     ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
400: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=971,off=0,ks=4,vs=16,imm=0)
; if (!lru_stats) {
401: (15) if r0 == 0x0 goto pc+1455   ; R0_w=map_value(off=0,ks=4,vs=16,imm=0)
; lru_stats->v1 += 1;
402: (79) r1 = *(u64 *)(r0 +0)        ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
403: (07) r1 += 1                     ; R1_w=scalar()
404: (7b) *(u64 *)(r0 +0) = r1        ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
405: (18) r0 = 0xffffa03557862800     ; R0_w=map_ptr(off=0,ks=40,vs=16,imm=0)
407: (79) r9 = *(u64 *)(r10 -144)
408: safe

from 401 to 1857: safe

from 393 to 408: R0=map_ptr(off=0,ks=40,vs=16,imm=0) R6=ctx(off=0,imm=0) R7=pkt(off=0,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-160=map_value fp-168=
408: (7b) *(u64 *)(r10 -152) = r0     ; R0=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0 fp-152_w=map_ptr
; if ((vip_info->flags & F_QUIC_VIP)) {
409: (61) r1 = *(u32 *)(r9 +0)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9=map_value(off=0,ks=20,vs=8,imm=0)
; if ((vip_info->flags & F_QUIC_VIP)) {
410: (57) r1 &= 4                     ; R1_w=scalar(umax=4,var_off=(0x0; 0x4))
; if ((vip_info->flags & F_QUIC_VIP)) {
411: (15) if r1 == 0x0 goto pc+457    ; R1_w=scalar(umax=4,var_off=(0x0; 0x4))
; bool is_icmp = (pckt.flags & F_ICMP);
412: (71) r1 = *(u8 *)(r10 -36)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; bool is_icmp = (pckt.flags & F_ICMP);
413: (57) r1 &= 1                     ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
; if (is_icmp) {
414: (15) if r1 == 0x0 goto pc+272    ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
415: (05) goto pc+0
; __u32 stats_key = MAX_VIPS + QUIC_ICMP_STATS;
416: (62) *(u32 *)(r10 -16) = 523     ; R10=fp0 fp-16=????mmmm
417: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
418: (07) r2 += -16                   ; R2_w=fp-16
; struct lb_stats* data_stats = bpf_map_lookup_elem(&stats, &stats_key);
419: (18) r1 = 0xffffa03499be8000     ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
421: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=972,off=0,ks=4,vs=16,imm=0)
; if (!data_stats) {
422: (15) if r0 == 0x0 goto pc+1434   ; R0_w=map_value(off=0,ks=4,vs=16,imm=0)
; data_stats->v1 += 1;
423: (79) r1 = *(u64 *)(r0 +0)        ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
424: (07) r1 += 1                     ; R1_w=scalar()
425: (7b) *(u64 *)(r0 +0) = r1        ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
; (icmp_hdr->icmp6_code == ICMPV6_ADDR_UNREACH) ||
426: (71) r1 = *(u8 *)(r7 +55)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=122,imm=0)
; (icmp_hdr->icmp6_code == ICMPV6_ADDR_UNREACH) ||
427: (07) r1 += -3                    ; R1_w=scalar(smin=-3,smax=252)
428: (57) r1 &= 255                   ; R1_w=scalar(umax=255,var_off=(0x0; 0xff))
429: (79) r9 = *(u64 *)(r10 -144)
430: safe

from 422 to 1857: safe

from 414 to 687: R0=map_ptr(off=0,ks=40,vs=16,imm=0) R1=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; pckt->flow.src = iph->daddr;
687: (05) goto pc+0
; __u32 quic_packets_stats_key = 0;
688: (62) *(u32 *)(r10 -28) = 0       ; R10=fp0 fp-32=mmmm????
689: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
690: (07) r2 += -28                   ; R2_w=fp-28
; bpf_map_lookup_elem(&quic_stats_map, &quic_packets_stats_key);
691: (18) r1 = 0xffffa03587064800     ; R1_w=map_ptr(off=0,ks=4,vs=104,imm=0)
693: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=973,off=0,ks=4,vs=104,imm=0)
694: (bf) r9 = r0                     ; R0_w=map_value_or_null(id=973,off=0,ks=4,vs=104,imm=0) R9_w=map_value_or_null(id=973,off=0,ks=4,vs=104,imm=0)
; if (!quic_packets_stats) {
695: (15) if r9 == 0x0 goto pc+1161   ; R9_w=map_value(off=0,ks=4,vs=104,imm=0)
; bool is_icmp = (pckt->flags & F_ICMP);
696: (71) r2 = *(u8 *)(r10 -36)       ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; bool is_icmp = (pckt->flags & F_ICMP);
697: (57) r2 &= 1                     ; R2_w=scalar(umax=1,var_off=(0x0; 0x1))
698: (b7) r1 = 54                     ; R1=54
; if (is_ipv6) {
699: (15) if r2 == 0x0 goto pc+1      ; R2=scalar(umax=1,var_off=(0x0; 0x1))
700: (b7) r1 = 102                    ; R1_w=102
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
701: (0f) r7 += r1
last_idx 701 first_idx 699
regs=2 stack=0 before 700: (b7) r1 = 102
702: R1_w=P102 R7_w=pkt(off=102,r=122,imm=0)
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
702: (bf) r1 = r7                     ; R1_w=pkt(off=102,r=122,imm=0) R7_w=pkt(off=102,r=122,imm=0)
703: (07) r1 += 9                     ; R1_w=pkt(off=111,r=122,imm=0)
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
704: (2d) if r1 > r8 goto pc+160      ; R1_w=pkt(off=111,r=122,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
705: (71) r2 = *(u8 *)(r7 +8)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=102,r=122,imm=0)
706: (67) r2 <<= 56                   ; R2_w=scalar(smax=9151314442816847872,umax=18374686479671623680,var_off=(0x0; 0xff00000000000000),s32_min=0,s32_max=0,u32_max=0)
707: (c7) r2 s>>= 56                  ; R2=scalar(smin=-128,smax=127)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
708: (65) if r2 s> 0xffffffff goto pc+40      ; R2=scalar(umin=18446744073709551488,var_off=(0xffffffffffffff80; 0x7f),u32_min=-128)
; if (quic_data + sizeof(struct quic_long_header) > data_end) {
709: (bf) r1 = r7                     ; R1_w=pkt(off=102,r=122,imm=0) R7=pkt(off=102,r=122,imm=0)
710: (07) r1 += 22                    ; R1_w=pkt(off=124,r=122,imm=0)
; if (quic_data + sizeof(struct quic_long_header) > data_end) {
711: (2d) if r1 > r8 goto pc+153      ; R1_w=pkt(off=124,r=124,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_PACKET_TYPE_MASK) < QUIC_HANDSHAKE) {
712: (57) r2 &= 32                    ; R2_w=scalar(umax=32,var_off=(0x0; 0x20))
; if ((*pkt_type & QUIC_PACKET_TYPE_MASK) < QUIC_HANDSHAKE) {
713: (15) if r2 == 0x0 goto pc+77     ; R2_w=scalar(umax=32,var_off=(0x0; 0x20))
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
714: (71) r1 = *(u8 *)(r7 +13)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=102,r=124,imm=0)
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
715: (07) r7 += 14                    ; R7=pkt(off=116,r=124,imm=0)
716: (25) if r1 > 0x7 goto pc+36      ; R1=scalar(umax=7,var_off=(0x0; 0x7))
717: (05) goto pc+147
; 
865: (79) r1 = *(u64 *)(r9 +0)        ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
866: (07) r1 += 1                     ; R1_w=scalar()
867: (7b) *(u64 *)(r9 +0) = r1        ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
868: (79) r9 = *(u64 *)(r10 -144)     ; R9_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
; original_sport = pckt.flow.port16[0];
869: (69) r1 = *(u16 *)(r10 -48)      ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
870: (7b) *(u64 *)(r10 -200) = r1     ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-200_w=
871: (71) r1 = *(u8 *)(r10 -36)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
872: (57) r1 &= 2                     ; R1=scalar(umax=2,var_off=(0x0; 0x2))
; if (!dst && !(pckt.flags & F_SYN_SET) &&
873: (55) if r1 != 0x0 goto pc+29     ; R1=0
; !(vip_info->flags & F_LRU_BYPASS)) {
874: (61) r1 = *(u32 *)(r9 +0)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9=map_value(off=0,ks=20,vs=8,imm=0)
; !(vip_info->flags & F_LRU_BYPASS)) {
875: (57) r1 &= 2                     ; R1_w=scalar(umax=2,var_off=(0x0; 0x2))
; if (!dst && !(pckt.flags & F_SYN_SET) &&
876: (55) if r1 != 0x0 goto pc+26     ; R1_w=0
877: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; 
878: (07) r2 += -80                   ; R2_w=fp-80
; dst_lru = bpf_map_lookup_elem(lru_map, &pckt->flow);
879: (79) r1 = *(u64 *)(r10 -152)     ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0
880: (85) call bpf_map_lookup_elem#1          ; R0=map_value_or_null(id=974,off=0,ks=40,vs=16,imm=0)
881: (bf) r9 = r0                     ; R0=map_value_or_null(id=974,off=0,ks=40,vs=16,imm=0) R9_w=map_value_or_null(id=974,off=0,ks=40,vs=16,imm=0)
; if (!dst_lru) {
882: (15) if r9 == 0x0 goto pc+20     ; R9_w=map_value(off=0,ks=40,vs=16,imm=0)
; if (!isGlobalLru && pckt->flow.proto == IPPROTO_UDP) {
883: (71) r1 = *(u8 *)(r10 -44)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (!isGlobalLru && pckt->flow.proto == IPPROTO_UDP) {
884: (55) if r1 != 0x11 goto pc+8     ; R1_w=17
; cur_time = bpf_ktime_get_ns();
885: (85) call bpf_ktime_get_ns#5     ; R0_w=scalar()
; if (cur_time - dst_lru->atime > LRU_UDP_TIMEOUT) {
886: (79) r1 = *(u64 *)(r9 +8)        ; R1_w=scalar() R9_w=map_value(off=0,ks=40,vs=16,imm=0)
; if (cur_time - dst_lru->atime > LRU_UDP_TIMEOUT) {
887: (bf) r2 = r0                     ; R0_w=scalar(id=975) R2_w=scalar(id=975)
888: (1f) r2 -= r1                    ; R1_w=scalar() R2_w=scalar()
889: (18) r1 = 0x6fc23ac00            ; R1=30000000000
; if (cur_time - dst_lru->atime > LRU_UDP_TIMEOUT) {
891: (2d) if r2 > r1 goto pc+11       ; R1=30000000000 R2=scalar(umax=30000000000,var_off=(0x0; 0x7ffffffff))
; dst_lru->atime = cur_time;
892: (7b) *(u64 *)(r9 +8) = r0        ; R0=scalar(id=975) R9=map_value(off=0,ks=40,vs=16,imm=0)
; key = dst_lru->pos;
893: (61) r1 = *(u32 *)(r9 +0)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9=map_value(off=0,ks=40,vs=16,imm=0)
; pckt->real_index = key;
894: (63) *(u32 *)(r10 -40) = r1      ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
; key = dst_lru->pos;
895: (63) *(u32 *)(r10 -16) = r1      ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-16=
896: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; key = dst_lru->pos;
897: (07) r2 += -16                   ; R2_w=fp-16
; *real = bpf_map_lookup_elem(&reals, &key);
898: (18) r1 = 0xffffaeba8c207000     ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
900: (85) call bpf_map_lookup_elem#1
901: safe

from 891 to 903: R0=scalar(id=975) R1=30000000000 R2=scalar(umin=30000000001) R6=ctx(off=0,imm=0) R7=pkt(off=116,r=124,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=40,vs=16,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-200=
; if (pckt.flow.proto == IPPROTO_TCP) {
903: (71) r1 = *(u8 *)(r10 -44)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (pckt.flow.proto == IPPROTO_TCP) {
904: (55) if r1 != 0x6 goto pc+18     ; R1_w=6
905: (05) goto pc+0
; __u32 lru_stats_key = MAX_VIPS + LRU_MISS_CNTR;
906: (62) *(u32 *)(r10 -16) = 513     ; R10=fp0 fp-16=????mmmm
907: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
908: (07) r2 += -16                   ; R2_w=fp-16
; bpf_map_lookup_elem(&stats, &lru_stats_key);
909: (18) r1 = 0xffffa03499be8000     ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
911: (85) call bpf_map_lookup_elem#1          ; R0=map_value_or_null(id=977,off=0,ks=4,vs=16,imm=0)
; if (!lru_stats) {
912: (15) if r0 == 0x0 goto pc+944    ; R0=map_value(off=0,ks=4,vs=16,imm=0)
; if (pckt.flags & F_SYN_SET) {
913: (71) r2 = *(u8 *)(r10 -36)       ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (pckt.flags & F_SYN_SET) {
914: (57) r2 &= 2                     ; R2_w=scalar(umax=2,var_off=(0x0; 0x2))
915: (b7) r1 = 1
frame 1: propagating r0
last_idx 916 first_idx 912
regs=2 stack=0 before 915: (b7) r1 = 1
916: safe

from 912 to 1857: safe

from 904 to 923: safe

from 884 to 893: R0=map_value(off=0,ks=40,vs=16,imm=0) R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R6=ctx(off=0,imm=0) R7=pkt(off=116,r=124,imm=0) R8=pkt_end(off=0,imm=0) R9_w=map_value(off=0,ks=40,vs=16,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-200=
; key = dst_lru->pos;
893: (61) r1 = *(u32 *)(r9 +0)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9_w=map_value(off=0,ks=40,vs=16,imm=0)
; pckt->real_index = key;
894: (63) *(u32 *)(r10 -40) = r1      ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
; key = dst_lru->pos;
895: (63) *(u32 *)(r10 -16) = r1      ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-16=
896: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; key = dst_lru->pos;
897: (07) r2 += -16                   ; R2_w=fp-16
; *real = bpf_map_lookup_elem(&reals, &key);
898: (18) r1 = 0xffffaeba8c207000     ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
900: (85) call bpf_map_lookup_elem#1
901: safe

from 882 to 903: safe

from 876 to 903: safe

from 873 to 903: safe

from 716 to 753: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(umin=8,umax=255,var_off=(0x0; 0xff)) R2=scalar(umax=32,var_off=(0x0; 0x20)) R6=ctx(off=0,imm=0) R7=pkt(off=116,r=124,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (!connId) {
753: (15) if r7 == 0x0 goto pc+111    ; R7=pkt(off=116,r=124,imm=0)
; __u8 connIdVersion = (connId[0] >> 6);
754: (71) r1 = *(u8 *)(r7 +0)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=116,r=124,imm=0)
755: (bf) r2 = r1                     ; R1_w=scalar(id=979,umax=255,var_off=(0x0; 0xff)) R2_w=scalar(id=979,umax=255,var_off=(0x0; 0xff))
756: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
; if (connIdVersion == QUIC_CONNID_VERSION_V1) {
757: (15) if r2 == 0x3 goto pc+48     ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
758: (15) if r2 == 0x2 goto pc+59     ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
759: (55) if r2 != 0x1 goto pc+105    ; R2_w=1
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
760: (57) r1 &= 63                    ; R1_w=scalar(umax=63,var_off=(0x0; 0x3f))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
761: (67) r1 <<= 10                   ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
762: (71) r8 = *(u8 *)(r7 +1)         ; R7=pkt(off=116,r=124,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
763: (67) r8 <<= 2                    ; R8_w=scalar(umax=1020,var_off=(0x0; 0x3fc))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
764: (4f) r8 |= r1                    ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00)) R8_w=scalar()
765: (18) r1 = 0x100000000            ; R1_w=4294967296
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
767: (71) r2 = *(u8 *)(r7 +2)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=116,r=124,imm=0)
768: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
769: (05) goto pc+56
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
826: (57) r2 &= 255                   ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
; 
827: (4f) r8 |= r2                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
828: (bf) r2 = r8                     ; R2_w=scalar(id=980) R8_w=scalar(id=980)
829: (67) r2 <<= 32                   ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
830: (c7) r2 s>>= 32                  ; R2_w=scalar(smin=-2147483648,smax=2147483647)
831: (b7) r3 = 1                      ; R3_w=1
; if (qpr.server_id > 0) {
832: (6d) if r3 s> r2 goto pc+32      ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
833: (77) r1 >>= 32                   ; R1_w=1
; if (cid_version == QUIC_CONNID_VERSION_V1) {
834: (15) if r1 == 0x3 goto pc+5
last_idx 834 first_idx 826
regs=2 stack=0 before 833: (77) r1 >>= 32
regs=2 stack=0 before 832: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 831: (b7) r3 = 1
regs=2 stack=0 before 830: (c7) r2 s>>= 32
regs=2 stack=0 before 829: (67) r2 <<= 32
regs=2 stack=0 before 828: (bf) r2 = r8
regs=2 stack=0 before 827: (4f) r8 |= r2
regs=2 stack=0 before 826: (57) r2 &= 255
parent didn't have regs=2 stack=0 marks: R0=map_value(off=0,ks=4,vs=104,imm=0) R1_rw=P4294967296 R2_rw=scalar(umax=3,var_off=(0x0; 0x3)) R6=ctx(off=0,imm=0) R7=pkt(off=116,r=124,imm=0) R8_rw=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
last_idx 769 first_idx 753
regs=2 stack=0 before 769: (05) goto pc+56
regs=2 stack=0 before 768: (77) r2 >>= 6
regs=2 stack=0 before 767: (71) r2 = *(u8 *)(r7 +2)
regs=2 stack=0 before 765: (18) r1 = 0x100000000
835: (15) if r1 == 0x2 goto pc+7      ; R1=P1
836: (55) if r1 != 0x1 goto pc+9      ; R1=P1
; quic_packets_stats->cid_v1 += 1;
837: (bf) r1 = r9                     ; R1_w=map_value(off=0,ks=4,vs=104,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0)
838: (07) r1 += 56                    ; R1_w=map_value(off=56,ks=4,vs=104,imm=0)
839: (05) goto pc+8
; 
848: (79) r2 = *(u64 *)(r1 +0)        ; R1_w=map_value(off=56,ks=4,vs=104,imm=0) R2_w=scalar()
849: (07) r2 += 1                     ; R2_w=scalar()
850: (7b) *(u64 *)(r1 +0) = r2        ; R1_w=map_value(off=56,ks=4,vs=104,imm=0) R2_w=scalar()
; __u32 key = qpr.server_id;
851: (63) *(u32 *)(r10 -20) = r8      ; R8=scalar(id=980) R10=fp0 fp-24=mmmm????
852: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; 
853: (07) r2 += -20                   ; R2_w=fp-20
; __u32* real_pos = bpf_map_lookup_elem(&server_id_map, &key);
854: (18) r1 = 0xffffaebab0634000     ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
856: (85) call bpf_map_lookup_elem#1          ; R0=map_value_or_null(id=981,off=0,ks=4,vs=4,imm=0)
; if (real_pos) {
857: (15) if r0 == 0x0 goto pc+7      ; R0=map_value(off=0,ks=4,vs=4,imm=0)
; key = *real_pos;
858: (61) r1 = *(u32 *)(r0 +0)        ; R0=map_value(off=0,ks=4,vs=4,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; key = *real_pos;
859: (63) *(u32 *)(r10 -20) = r1      ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-24=mmmm????
; if (key == 0) {
860: (55) if r1 != 0x0 goto pc+667    ; R1_w=0
; quic_packets_stats->cid_invalid_server_id_sample = qpr.server_id;
861: (7b) *(u64 *)(r9 +24) = r8       ; R8=scalar(id=980) R9=map_value(off=0,ks=4,vs=104,imm=0)
; quic_packets_stats->cid_invalid_server_id += 1;
862: (79) r1 = *(u64 *)(r9 +16)       ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
863: (07) r1 += 1                     ; R1_w=scalar()
864: (7b) *(u64 *)(r9 +16) = r1       ; R1=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
; 
865: (79) r1 = *(u64 *)(r9 +0)        ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
866: (07) r1 += 1                     ; R1_w=scalar()
867: (7b) *(u64 *)(r9 +0) = r1        ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
868: (79) r9 = *(u64 *)(r10 -144)     ; R9_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
; original_sport = pckt.flow.port16[0];
869: (69) r1 = *(u16 *)(r10 -48)      ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
870: (7b) *(u64 *)(r10 -200) = r1     ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-200_w=
871: (71) r1 = *(u8 *)(r10 -36)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
872: (57) r1 &= 2
873: safe

from 860 to 1528: R0=map_value(off=0,ks=4,vs=4,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R6=ctx(off=0,imm=0) R7=pkt(off=116,r=124,imm=0) R8=scalar(id=980) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-24=mmmm???? fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; pckt.real_index = key;
1528: (63) *(u32 *)(r10 -40) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
1529: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1530: (07) r2 += -20                  ; R2_w=fp-20
; dst = bpf_map_lookup_elem(&reals, &key);
1531: (18) r1 = 0xffffaeba8c207000    ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
1533: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=982,off=0,ks=4,vs=20,imm=0)
1534: (7b) *(u64 *)(r10 -176) = r0    ; R0_w=map_value_or_null(id=982,off=0,ks=4,vs=20,imm=0) R10=fp0 fp-176_w=map_value_or_null
; if (!dst) {
1535: (55) if r0 != 0x0 goto pc+1     ; R0_w=0
1536: (05) goto pc+599
2136: safe

from 1535 to 1537: R0=map_value(off=0,ks=4,vs=20,imm=0) R6=ctx(off=0,imm=0) R7=pkt(off=116,r=124,imm=0) R8=scalar(id=980) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=map_value
1537: (05) goto pc+0
; __u32 flags_key = 0;
1538: (62) *(u32 *)(r10 -124) = 0     ; R10=fp0 fp-128=mmmm????
1539: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1540: (07) r2 += -124                 ; R2_w=fp-124
; bpf_map_lookup_elem(&server_id_flags, &flags_key);
1541: (18) r1 = 0xffffa03587066800    ; R1_w=map_ptr(off=0,ks=4,vs=1,imm=0)
1543: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=983,off=0,ks=4,vs=1,imm=0)
; flags_value && flags_value->update_quic_sid_based_dst_in_lru;
1544: (15) if r0 == 0x0 goto pc+656   ; R0_w=map_value(off=0,ks=4,vs=1,imm=0)
; flags_value && flags_value->update_quic_sid_based_dst_in_lru;
1545: (71) r7 = *(u8 *)(r0 +0)        ; R0_w=map_value(off=0,ks=4,vs=1,imm=0) R7_w=scalar(umax=255,var_off=(0x0; 0xff))
1546: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
1547: (07) r2 += -80                  ; R2_w=fp-80
; struct real_pos_lru* dst_lru = bpf_map_lookup_elem(lru_map, &pckt->flow);
1548: (79) r1 = *(u64 *)(r10 -152)    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0
1549: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=984,off=0,ks=40,vs=16,imm=0)
; if (dst_lru) {
1550: (15) if r0 == 0x0 goto pc+614   ; R0=map_value(off=0,ks=40,vs=16,imm=0)
; if (dst_lru->pos == pckt->real_index) {
1551: (61) r1 = *(u32 *)(r10 -40)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; if (dst_lru->pos == pckt->real_index) {
1552: (61) r2 = *(u32 *)(r0 +0)       ; R0=map_value(off=0,ks=40,vs=16,imm=0) R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; flags_value && flags_value->update_quic_sid_based_dst_in_lru;
1553: (bf) r3 = r7                    ; R3_w=scalar(id=985,umax=255,var_off=(0x0; 0xff)) R7=scalar(id=985,umax=255,var_off=(0x0; 0xff))
; if (dst_lru->pos == pckt->real_index) {
1554: (15) if r3 == 0x0 goto pc+669   ; R3_w=scalar(id=985,umax=255,var_off=(0x0; 0xff))
1555: (bf) r3 = r1                    ; R1_w=scalar(id=986,umax=4294967295,var_off=(0x0; 0xffffffff)) R3_w=scalar(id=986,umax=4294967295,var_off=(0x0; 0xffffffff))
1556: (bf) r4 = r2                    ; R2_w=scalar(id=987,umax=4294967295,var_off=(0x0; 0xffffffff)) R4_w=scalar(id=987,umax=4294967295,var_off=(0x0; 0xffffffff))
1557: (1d) if r4 == r3 goto pc+666    ; R3_w=scalar(id=986,umax=4294967295,var_off=(0x0; 0xffffffff)) R4_w=scalar(id=987,umax=4294967295,var_off=(0x0; 0xffffffff))
; dst_lru->pos = pckt->real_index;
1558: (63) *(u32 *)(r0 +0) = r1       ; R0=map_value(off=0,ks=40,vs=16,imm=0) R1_w=scalar(id=986,umax=4294967295,var_off=(0x0; 0xffffffff))
; vip_num, /* new conn */ false, /* mismatch in lru */ true);
1559: (61) r1 = *(u32 *)(r10 -108)    ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; if (res == DST_MATCH_IN_LRU) {
1560: (7b) *(u64 *)(r10 -168) = r1    ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-168_w=
1561: (05) goto pc+647
; quic_packets_stats->dst_mismatch_in_lru += 1;
2209: (79) r1 = *(u64 *)(r9 +88)      ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
2210: (07) r1 += 1                    ; R1_w=scalar()
2211: (7b) *(u64 *)(r9 +88) = r1      ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
2212: (79) r1 = *(u64 *)(r10 -168)    ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
2213: (63) *(u32 *)(r10 -16) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-16=
2214: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
2215: (07) r2 += -16                  ; R2_w=fp-16
; bpf_map_lookup_elem(&server_id_stats, &vip_num);
2216: (18) r1 = 0xffffa0364c1b2000    ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
2218: (85) call bpf_map_lookup_elem#1         ; R0_w=map_value_or_null(id=988,off=0,ks=4,vs=16,imm=0)
; if (!per_vip_stats) {
2219: (15) if r0 == 0x0 goto pc+8     ; R0_w=map_value(off=0,ks=4,vs=16,imm=0)
; per_vip_stats->v2 += 1;
2220: (79) r1 = *(u64 *)(r0 +8)       ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
2221: (07) r1 += 1                    ; R1_w=scalar()
2222: (7b) *(u64 *)(r0 +8) = r1       ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
2223: (05) goto pc+4
2228: safe

from 2219 to 2228: safe

from 1557 to 2224: R0=map_value(off=0,ks=40,vs=16,imm=0) R1=scalar(id=986,umax=4294967295,var_off=(0x0; 0xffffffff)) R2=scalar(id=987,umax=4294967295,var_off=(0x0; 0xffffffff)) R3=scalar(id=986,umax=4294967295,var_off=(0x0; 0xffffffff)) R4=scalar(id=987,umax=4294967295,var_off=(0x0; 0xffffffff)) R6=ctx(off=0,imm=0) R7=scalar(id=985,umax=255,var_off=(0x0; 0xff)) R8=scalar(id=980) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-128=mmmm???? fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=map_value
; if (res == DST_MATCH_IN_LRU) {
2224: (5d) if r2 != r1 goto pc-16     ; R1=scalar(id=986,umax=4294967295,var_off=(0x0; 0xffffffff)) R2=scalar(id=987,umax=4294967295,var_off=(0x0; 0xffffffff))
2225: safe

from 2224 to 2209: safe

from 1554 to 2224: safe

from 1550 to 2165: safe

from 1544 to 2201: R0_w=0 R6=ctx(off=0,imm=0) R7=pkt(off=116,r=124,imm=0) R8=scalar(id=980) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-24=mmmm???? fp-32=mmmm???? fp-40= fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-128=mmmm???? fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-176=map_value
; quic_packets_stats->dst_not_found_in_lru += 1;
2201: (bf) r2 = r10                   ; R2_w=fp0 R10=fp0
; 
2202: (07) r2 += -80                  ; R2_w=fp-80
; struct real_pos_lru* dst_lru = bpf_map_lookup_elem(lru_map, &pckt->flow);
2203: (79) r1 = *(u64 *)(r10 -152)    ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0
2204: (85) call bpf_map_lookup_elem#1         ; R0=map_value_or_null(id=989,off=0,ks=40,vs=16,imm=0)
; if (dst_lru) {
2205: (15) if r0 == 0x0 goto pc-27    ; R0=map_value(off=0,ks=40,vs=16,imm=0)
; if (dst_lru->pos == pckt->real_index) {
2206: (61) r1 = *(u32 *)(r0 +0)       ; R0=map_value(off=0,ks=40,vs=16,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (dst_lru->pos == pckt->real_index) {
2207: (61) r2 = *(u32 *)(r10 -40)     ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
; if (res == DST_MATCH_IN_LRU) {
2208: (1d) if r1 == r2 goto pc+16     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
2209: safe

from 2208 to 2225: safe

from 2205 to 2179: safe

from 857 to 865: safe

from 832 to 865: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=4294967296 R2=scalar(smin=-2147483648,smax=0) R3=1 R6=ctx(off=0,imm=0) R7=pkt(off=116,r=124,imm=0) R8=scalar(id=980) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; 
865: (79) r1 = *(u64 *)(r9 +0)        ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
866: (07) r1 += 1                     ; R1_w=scalar()
867: (7b) *(u64 *)(r9 +0) = r1        ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
868: (79) r9 = *(u64 *)(r10 -144)     ; R9_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
; original_sport = pckt.flow.port16[0];
869: (69) r1 = *(u16 *)(r10 -48)      ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
870: (7b) *(u64 *)(r10 -200) = r1     ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-200_w=
871: (71) r1 = *(u8 *)(r10 -36)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
872: (57) r1 &= 2
873: safe

from 759 to 865: safe

from 758 to 818: R0=map_value(off=0,ks=4,vs=104,imm=0) R1_w=scalar(id=979,umax=255,var_off=(0x0; 0xff)) R2_w=2 R6=ctx(off=0,imm=0) R7=pkt(off=116,r=124,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
818: (71) r1 = *(u8 *)(r7 +1)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=116,r=124,imm=0)
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
819: (67) r1 <<= 16                   ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
820: (71) r8 = *(u8 *)(r7 +2)         ; R7=pkt(off=116,r=124,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
821: (67) r8 <<= 8                    ; R8_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
822: (4f) r8 |= r1                    ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000)) R8_w=scalar()
823: (18) r1 = 0x200000000            ; R1_w=8589934592
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
825: (71) r2 = *(u8 *)(r7 +3)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=116,r=124,imm=0)
826: (57) r2 &= 255                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
827: (4f) r8 |= r2                    ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
828: (bf) r2 = r8                     ; R2_w=scalar(id=990) R8_w=scalar(id=990)
829: (67) r2 <<= 32                   ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
830: (c7) r2 s>>= 32                  ; R2_w=scalar(smin=-2147483648,smax=2147483647)
831: (b7) r3 = 1                      ; R3_w=1
; if (qpr.server_id > 0) {
832: (6d) if r3 s> r2 goto pc+32      ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
833: (77) r1 >>= 32                   ; R1_w=2
; if (cid_version == QUIC_CONNID_VERSION_V1) {
834: (15) if r1 == 0x3 goto pc+5
last_idx 834 first_idx 753
regs=2 stack=0 before 833: (77) r1 >>= 32
regs=2 stack=0 before 832: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 831: (b7) r3 = 1
regs=2 stack=0 before 830: (c7) r2 s>>= 32
regs=2 stack=0 before 829: (67) r2 <<= 32
regs=2 stack=0 before 828: (bf) r2 = r8
regs=2 stack=0 before 827: (4f) r8 |= r2
regs=2 stack=0 before 826: (57) r2 &= 255
regs=2 stack=0 before 825: (71) r2 = *(u8 *)(r7 +3)
regs=2 stack=0 before 823: (18) r1 = 0x200000000
835: R1=P2
835: (15) if r1 == 0x2 goto pc+7      ; R1=P2
; quic_packets_stats->cid_v2 += 1;
843: (bf) r1 = r9                     ; R1_w=map_value(off=0,ks=4,vs=104,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0)
844: (07) r1 += 64                    ; R1_w=map_value(off=64,ks=4,vs=104,imm=0)
845: (05) goto pc+2
; 
848: (79) r2 = *(u64 *)(r1 +0)        ; R1_w=map_value(off=64,ks=4,vs=104,imm=0) R2_w=scalar()
849: (07) r2 += 1                     ; R2_w=scalar()
850: (7b) *(u64 *)(r1 +0) = r2        ; R1_w=map_value(off=64,ks=4,vs=104,imm=0) R2_w=scalar()
; __u32 key = qpr.server_id;
851: (63) *(u32 *)(r10 -20) = r8      ; R8=scalar(id=990) R10=fp0 fp-24=mmmm????
852: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; 
853: (07) r2 += -20                   ; R2_w=fp-20
; __u32* real_pos = bpf_map_lookup_elem(&server_id_map, &key);
854: (18) r1 = 0xffffaebab0634000     ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
856: (85) call bpf_map_lookup_elem#1
857: safe

from 832 to 865: safe

from 757 to 806: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=979,umax=255,var_off=(0x0; 0xff)) R2=3 R6=ctx(off=0,imm=0) R7=pkt(off=116,r=124,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
806: (71) r1 = *(u8 *)(r7 +1)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=116,r=124,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
807: (67) r1 <<= 24                   ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
808: (71) r8 = *(u8 *)(r7 +2)         ; R7=pkt(off=116,r=124,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
809: (67) r8 <<= 16                   ; R8_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
810: (4f) r8 |= r1                    ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432) R8_w=scalar()
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
811: (71) r1 = *(u8 *)(r7 +3)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=116,r=124,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
812: (67) r1 <<= 8                    ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
813: (4f) r8 |= r1                    ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00)) R8_w=scalar()
814: (18) r1 = 0x300000000            ; R1_w=12884901888
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
816: (71) r2 = *(u8 *)(r7 +4)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=116,r=124,imm=0)
817: (05) goto pc+8
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
826: (57) r2 &= 255                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
827: (4f) r8 |= r2                    ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
828: (bf) r2 = r8                     ; R2_w=scalar(id=992) R8_w=scalar(id=992)
829: (67) r2 <<= 32                   ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
830: (c7) r2 s>>= 32                  ; R2_w=scalar(smin=-2147483648,smax=2147483647)
831: (b7) r3 = 1                      ; R3_w=1
; if (qpr.server_id > 0) {
832: (6d) if r3 s> r2 goto pc+32      ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
833: (77) r1 >>= 32                   ; R1=3
; if (cid_version == QUIC_CONNID_VERSION_V1) {
834: (15) if r1 == 0x3 goto pc+5
last_idx 834 first_idx 834
parent didn't have regs=2 stack=0 marks: R0=map_value(off=0,ks=4,vs=104,imm=0) R1_rw=P3 R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1 R6=ctx(off=0,imm=0) R7=pkt(off=116,r=124,imm=0) R8_w=scalar(id=992) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
last_idx 833 first_idx 806
regs=2 stack=0 before 833: (77) r1 >>= 32
regs=2 stack=0 before 832: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 831: (b7) r3 = 1
regs=2 stack=0 before 830: (c7) r2 s>>= 32
regs=2 stack=0 before 829: (67) r2 <<= 32
regs=2 stack=0 before 828: (bf) r2 = r8
regs=2 stack=0 before 827: (4f) r8 |= r2
regs=2 stack=0 before 826: (57) r2 &= 255
regs=2 stack=0 before 817: (05) goto pc+8
regs=2 stack=0 before 816: (71) r2 = *(u8 *)(r7 +4)
regs=2 stack=0 before 814: (18) r1 = 0x300000000
; quic_packets_stats->cid_v3 += 1;
840: (bf) r1 = r9                     ; R1_w=map_value(off=0,ks=4,vs=104,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0)
841: (07) r1 += 72                    ; R1_w=map_value(off=72,ks=4,vs=104,imm=0)
842: (05) goto pc+5
; 
848: (79) r2 = *(u64 *)(r1 +0)        ; R1_w=map_value(off=72,ks=4,vs=104,imm=0) R2_w=scalar()
849: (07) r2 += 1                     ; R2_w=scalar()
850: (7b) *(u64 *)(r1 +0) = r2        ; R1_w=map_value(off=72,ks=4,vs=104,imm=0) R2_w=scalar()
; __u32 key = qpr.server_id;
851: (63) *(u32 *)(r10 -20) = r8      ; R8=scalar(id=992) R10=fp0 fp-24=mmmm????
852: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; 
853: (07) r2 += -20                   ; R2_w=fp-20
; __u32* real_pos = bpf_map_lookup_elem(&server_id_map, &key);
854: (18) r1 = 0xffffaebab0634000     ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
856: (85) call bpf_map_lookup_elem#1
857: safe

from 832 to 865: safe

from 753 to 865: safe

from 713 to 791: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=pkt(off=124,r=124,imm=0) R2=0 R6=ctx(off=0,imm=0) R7=pkt(off=102,r=124,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; quic_packets_stats->cid_initial += 1;
791: (79) r1 = *(u64 *)(r9 +8)        ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
792: (07) r1 += 1                     ; R1_w=scalar()
793: (7b) *(u64 *)(r9 +8) = r1        ; R1_w=scalar() R9=map_value(off=0,ks=4,vs=104,imm=0)
794: (79) r1 = *(u64 *)(r10 -168)     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0
795: (63) *(u32 *)(r10 -16) = r1      ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-16=
796: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; 
797: (07) r2 += -16                   ; R2_w=fp-16
; bpf_map_lookup_elem(&server_id_stats, &vip_num);
798: (18) r1 = 0xffffa0364c1b2000     ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
800: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=994,off=0,ks=4,vs=16,imm=0)
; if (!per_vip_stats) {
801: (15) if r0 == 0x0 goto pc+66     ; R0_w=map_value(off=0,ks=4,vs=16,imm=0)
; per_vip_stats->v1 += 1;
802: (79) r1 = *(u64 *)(r0 +0)        ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
803: (07) r1 += 1                     ; R1_w=scalar()
804: (7b) *(u64 *)(r0 +0) = r1        ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
805: (05) goto pc+62
868: safe

from 801 to 868: safe

from 711 to 865: safe

from 708 to 749: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=pkt(off=111,r=122,imm=0) R2=scalar(umax=127,var_off=(0x0; 0x7f)) R6=ctx(off=0,imm=0) R7=pkt(off=102,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (quic_data + sizeof(struct quic_short_header) > data_end) {
749: (bf) r2 = r7                     ; R2_w=pkt(off=102,r=122,imm=0) R7=pkt(off=102,r=122,imm=0)
750: (07) r2 += 17                    ; R2_w=pkt(off=119,r=122,imm=0)
751: (bf) r7 = r1                     ; R1=pkt(off=111,r=122,imm=0) R7_w=pkt(off=111,r=122,imm=0)
; if (quic_data + sizeof(struct quic_short_header) > data_end) {
752: (2d) if r2 > r8 goto pc+112      ; R2_w=pkt(off=119,r=122,imm=0) R8=pkt_end(off=0,imm=0)
; if (!connId) {
753: (15) if r7 == 0x0 goto pc+111    ; R7_w=pkt(off=111,r=122,imm=0)
; __u8 connIdVersion = (connId[0] >> 6);
754: (71) r1 = *(u8 *)(r7 +0)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=111,r=122,imm=0)
755: (bf) r2 = r1                     ; R1_w=scalar(id=995,umax=255,var_off=(0x0; 0xff)) R2_w=scalar(id=995,umax=255,var_off=(0x0; 0xff))
756: (77) r2 >>= 6                    ; R2=scalar(umax=3,var_off=(0x0; 0x3))
; if (connIdVersion == QUIC_CONNID_VERSION_V1) {
757: (15) if r2 == 0x3 goto pc+48     ; R2=scalar(umax=3,var_off=(0x0; 0x3))
758: (15) if r2 == 0x2 goto pc+59     ; R2=scalar(umax=3,var_off=(0x0; 0x3))
759: (55) if r2 != 0x1 goto pc+105    ; R2=1
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
760: (57) r1 &= 63                    ; R1_w=scalar(umax=63,var_off=(0x0; 0x3f))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
761: (67) r1 <<= 10                   ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
762: (71) r8 = *(u8 *)(r7 +1)         ; R7=pkt(off=111,r=122,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
763: (67) r8 <<= 2                    ; R8_w=scalar(umax=1020,var_off=(0x0; 0x3fc))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
764: (4f) r8 |= r1                    ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00)) R8_w=scalar()
765: (18) r1 = 0x100000000            ; R1_w=4294967296
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
767: (71) r2 = *(u8 *)(r7 +2)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=111,r=122,imm=0)
768: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
769: (05) goto pc+56
frame 1: propagating r0
last_idx 826 first_idx 757
regs=2 stack=0 before 769: (05) goto pc+56
regs=2 stack=0 before 768: (77) r2 >>= 6
regs=2 stack=0 before 767: (71) r2 = *(u8 *)(r7 +2)
regs=2 stack=0 before 765: (18) r1 = 0x100000000
826: safe

from 759 to 865: safe

from 758 to 818: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=995,umax=255,var_off=(0x0; 0xff)) R2=2 R6=ctx(off=0,imm=0) R7=pkt(off=111,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
818: (71) r1 = *(u8 *)(r7 +1)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=111,r=122,imm=0)
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
819: (67) r1 <<= 16                   ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
820: (71) r8 = *(u8 *)(r7 +2)         ; R7=pkt(off=111,r=122,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
821: (67) r8 <<= 8                    ; R8_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
822: (4f) r8 |= r1                    ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000)) R8_w=scalar()
823: (18) r1 = 0x200000000            ; R1_w=8589934592
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
825: (71) r2 = *(u8 *)(r7 +3)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=111,r=122,imm=0)
826: (57) r2 &= 255                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
827: (4f) r8 |= r2                    ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
828: (bf) r2 = r8                     ; R2_w=scalar(id=996) R8_w=scalar(id=996)
829: (67) r2 <<= 32                   ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
830: (c7) r2 s>>= 32                  ; R2_w=scalar(smin=-2147483648,smax=2147483647)
831: (b7) r3 = 1                      ; R3_w=1
; if (qpr.server_id > 0) {
832: (6d) if r3 s> r2 goto pc+32      ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
833: (77) r1 >>= 32                   ; R1_w=2
; if (cid_version == QUIC_CONNID_VERSION_V1) {
834: (15) if r1 == 0x3 goto pc+5
last_idx 834 first_idx 818
regs=2 stack=0 before 833: (77) r1 >>= 32
regs=2 stack=0 before 832: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 831: (b7) r3 = 1
regs=2 stack=0 before 830: (c7) r2 s>>= 32
regs=2 stack=0 before 829: (67) r2 <<= 32
regs=2 stack=0 before 828: (bf) r2 = r8
regs=2 stack=0 before 827: (4f) r8 |= r2
regs=2 stack=0 before 826: (57) r2 &= 255
regs=2 stack=0 before 825: (71) r2 = *(u8 *)(r7 +3)
regs=2 stack=0 before 823: (18) r1 = 0x200000000
frame 1: propagating r0
835: safe

from 832 to 865: safe

from 757 to 806: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=995,umax=255,var_off=(0x0; 0xff)) R2=3 R6=ctx(off=0,imm=0) R7=pkt(off=111,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
806: (71) r1 = *(u8 *)(r7 +1)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=111,r=122,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
807: (67) r1 <<= 24                   ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
808: (71) r8 = *(u8 *)(r7 +2)         ; R7=pkt(off=111,r=122,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
809: (67) r8 <<= 16                   ; R8_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
810: (4f) r8 |= r1                    ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432) R8_w=scalar()
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
811: (71) r1 = *(u8 *)(r7 +3)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=111,r=122,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
812: (67) r1 <<= 8                    ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
813: (4f) r8 |= r1                    ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00)) R8_w=scalar()
814: (18) r1 = 0x300000000            ; R1_w=12884901888
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
816: (71) r2 = *(u8 *)(r7 +4)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=111,r=122,imm=0)
817: (05) goto pc+8
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
826: (57) r2 &= 255                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
827: (4f) r8 |= r2                    ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
828: (bf) r2 = r8                     ; R2_w=scalar(id=997) R8_w=scalar(id=997)
829: (67) r2 <<= 32                   ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
830: (c7) r2 s>>= 32                  ; R2_w=scalar(smin=-2147483648,smax=2147483647)
831: (b7) r3 = 1                      ; R3_w=1
; if (qpr.server_id > 0) {
832: (6d) if r3 s> r2 goto pc+32      ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
833: (77) r1 >>= 32
frame 1: propagating r0
last_idx 834 first_idx 806
regs=2 stack=0 before 833: (77) r1 >>= 32
regs=2 stack=0 before 832: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 831: (b7) r3 = 1
regs=2 stack=0 before 830: (c7) r2 s>>= 32
regs=2 stack=0 before 829: (67) r2 <<= 32
regs=2 stack=0 before 828: (bf) r2 = r8
regs=2 stack=0 before 827: (4f) r8 |= r2
regs=2 stack=0 before 826: (57) r2 &= 255
regs=2 stack=0 before 817: (05) goto pc+8
regs=2 stack=0 before 816: (71) r2 = *(u8 *)(r7 +4)
regs=2 stack=0 before 814: (18) r1 = 0x300000000
834: safe

from 832 to 865: safe

from 753 to 865: safe

from 752 to 865: safe

from 704 to 865: safe

from 699 to 701: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=54 R2=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
701: (0f) r7 += r1
last_idx 701 first_idx 701
parent didn't have regs=2 stack=0 marks: R0=map_value(off=0,ks=4,vs=104,imm=0) R1_r=P54 R2=0 R6=ctx(off=0,imm=0) R7_r=pkt(off=0,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
last_idx 699 first_idx 699
regs=2 stack=0 before 699: (15) if r2 == 0x0 goto pc+1
parent didn't have regs=2 stack=0 marks: R0_w=map_value(off=0,ks=4,vs=104,imm=0) R1_rw=P54 R2_rw=scalar(umax=1,var_off=(0x0; 0x1)) R6_r=ctx(off=0,imm=0) R7_r=pkt(off=0,r=122,imm=0) R8_r=pkt_end(off=0,imm=0) R9_rw=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96_r=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=
last_idx 698 first_idx 687
regs=2 stack=0 before 698: (b7) r1 = 54
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
702: (bf) r1 = r7                     ; R1_w=pkt(off=54,r=122,imm=0) R7_w=pkt(off=54,r=122,imm=0)
703: (07) r1 += 9                     ; R1_w=pkt(off=63,r=122,imm=0)
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
704: (2d) if r1 > r8 goto pc+160      ; R1_w=pkt(off=63,r=122,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
705: (71) r2 = *(u8 *)(r7 +8)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=54,r=122,imm=0)
706: (67) r2 <<= 56                   ; R2_w=scalar(smax=9151314442816847872,umax=18374686479671623680,var_off=(0x0; 0xff00000000000000),s32_min=0,s32_max=0,u32_max=0)
707: (c7) r2 s>>= 56                  ; R2_w=scalar(smin=-128,smax=127)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
708: (65) if r2 s> 0xffffffff goto pc+40      ; R2_w=scalar(umin=18446744073709551488,var_off=(0xffffffffffffff80; 0x7f),u32_min=-128)
; if (quic_data + sizeof(struct quic_long_header) > data_end) {
709: (bf) r1 = r7                     ; R1_w=pkt(off=54,r=122,imm=0) R7_w=pkt(off=54,r=122,imm=0)
710: (07) r1 += 22                    ; R1=pkt(off=76,r=122,imm=0)
; if (quic_data + sizeof(struct quic_long_header) > data_end) {
711: (2d) if r1 > r8 goto pc+153      ; R1=pkt(off=76,r=122,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_PACKET_TYPE_MASK) < QUIC_HANDSHAKE) {
712: (57) r2 &= 32                    ; R2_w=scalar(umax=32,var_off=(0x0; 0x20))
; if ((*pkt_type & QUIC_PACKET_TYPE_MASK) < QUIC_HANDSHAKE) {
713: (15) if r2 == 0x0 goto pc+77     ; R2_w=scalar(umax=32,var_off=(0x0; 0x20))
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
714: (71) r1 = *(u8 *)(r7 +13)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=54,r=122,imm=0)
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
715: (07) r7 += 14                    ; R7_w=pkt(off=68,r=122,imm=0)
716: (25) if r1 > 0x7 goto pc+36      ; R1_w=scalar(umax=7,var_off=(0x0; 0x7))
717: (05) goto pc+147
865: safe

from 716 to 753: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(umin=8,umax=255,var_off=(0x0; 0xff)) R2=scalar(umax=32,var_off=(0x0; 0x20)) R6=ctx(off=0,imm=0) R7=pkt(off=68,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (!connId) {
753: (15) if r7 == 0x0 goto pc+111    ; R7=pkt(off=68,r=122,imm=0)
; __u8 connIdVersion = (connId[0] >> 6);
754: (71) r1 = *(u8 *)(r7 +0)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=68,r=122,imm=0)
755: (bf) r2 = r1                     ; R1_w=scalar(id=998,umax=255,var_off=(0x0; 0xff)) R2_w=scalar(id=998,umax=255,var_off=(0x0; 0xff))
756: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
; if (connIdVersion == QUIC_CONNID_VERSION_V1) {
757: (15) if r2 == 0x3 goto pc+48     ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
758: (15) if r2 == 0x2 goto pc+59     ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
759: (55) if r2 != 0x1 goto pc+105    ; R2_w=1
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
760: (57) r1 &= 63                    ; R1_w=scalar(umax=63,var_off=(0x0; 0x3f))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
761: (67) r1 <<= 10                   ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
762: (71) r8 = *(u8 *)(r7 +1)         ; R7=pkt(off=68,r=122,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
763: (67) r8 <<= 2                    ; R8_w=scalar(umax=1020,var_off=(0x0; 0x3fc))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
764: (4f) r8 |= r1                    ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00)) R8_w=scalar()
765: (18) r1 = 0x100000000            ; R1_w=4294967296
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
767: (71) r2 = *(u8 *)(r7 +2)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=68,r=122,imm=0)
768: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
769: (05) goto pc+56
frame 1: propagating r0
last_idx 826 first_idx 753
regs=2 stack=0 before 769: (05) goto pc+56
regs=2 stack=0 before 768: (77) r2 >>= 6
regs=2 stack=0 before 767: (71) r2 = *(u8 *)(r7 +2)
regs=2 stack=0 before 765: (18) r1 = 0x100000000
826: safe

from 759 to 865: safe

from 758 to 818: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=998,umax=255,var_off=(0x0; 0xff)) R2=2 R6=ctx(off=0,imm=0) R7=pkt(off=68,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
818: (71) r1 = *(u8 *)(r7 +1)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=68,r=122,imm=0)
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
819: (67) r1 <<= 16                   ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
820: (71) r8 = *(u8 *)(r7 +2)         ; R7=pkt(off=68,r=122,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
821: (67) r8 <<= 8                    ; R8_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
822: (4f) r8 |= r1                    ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000)) R8_w=scalar()
823: (18) r1 = 0x200000000            ; R1_w=8589934592
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
825: (71) r2 = *(u8 *)(r7 +3)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=68,r=122,imm=0)
826: (57) r2 &= 255                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
827: (4f) r8 |= r2                    ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
828: (bf) r2 = r8                     ; R2_w=scalar(id=999) R8_w=scalar(id=999)
829: (67) r2 <<= 32                   ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
830: (c7) r2 s>>= 32                  ; R2_w=scalar(smin=-2147483648,smax=2147483647)
831: (b7) r3 = 1                      ; R3_w=1
; if (qpr.server_id > 0) {
832: (6d) if r3 s> r2 goto pc+32      ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
833: (77) r1 >>= 32                   ; R1_w=2
; if (cid_version == QUIC_CONNID_VERSION_V1) {
834: (15) if r1 == 0x3 goto pc+5
last_idx 834 first_idx 818
regs=2 stack=0 before 833: (77) r1 >>= 32
regs=2 stack=0 before 832: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 831: (b7) r3 = 1
regs=2 stack=0 before 830: (c7) r2 s>>= 32
regs=2 stack=0 before 829: (67) r2 <<= 32
regs=2 stack=0 before 828: (bf) r2 = r8
regs=2 stack=0 before 827: (4f) r8 |= r2
regs=2 stack=0 before 826: (57) r2 &= 255
regs=2 stack=0 before 825: (71) r2 = *(u8 *)(r7 +3)
regs=2 stack=0 before 823: (18) r1 = 0x200000000
frame 1: propagating r0
835: safe

from 832 to 865: safe

from 757 to 806: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=998,umax=255,var_off=(0x0; 0xff)) R2=3 R6=ctx(off=0,imm=0) R7=pkt(off=68,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
806: (71) r1 = *(u8 *)(r7 +1)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=68,r=122,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
807: (67) r1 <<= 24                   ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
808: (71) r8 = *(u8 *)(r7 +2)         ; R7=pkt(off=68,r=122,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
809: (67) r8 <<= 16                   ; R8_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
810: (4f) r8 |= r1                    ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432) R8_w=scalar()
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
811: (71) r1 = *(u8 *)(r7 +3)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=68,r=122,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
812: (67) r1 <<= 8                    ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
813: (4f) r8 |= r1                    ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00)) R8_w=scalar()
814: (18) r1 = 0x300000000            ; R1_w=12884901888
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
816: (71) r2 = *(u8 *)(r7 +4)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=68,r=122,imm=0)
817: (05) goto pc+8
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
826: (57) r2 &= 255                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
827: (4f) r8 |= r2                    ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
828: (bf) r2 = r8                     ; R2_w=scalar(id=1000) R8_w=scalar(id=1000)
829: (67) r2 <<= 32                   ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
830: (c7) r2 s>>= 32                  ; R2_w=scalar(smin=-2147483648,smax=2147483647)
831: (b7) r3 = 1                      ; R3_w=1
; if (qpr.server_id > 0) {
832: (6d) if r3 s> r2 goto pc+32      ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
833: (77) r1 >>= 32
frame 1: propagating r0
last_idx 834 first_idx 806
regs=2 stack=0 before 833: (77) r1 >>= 32
regs=2 stack=0 before 832: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 831: (b7) r3 = 1
regs=2 stack=0 before 830: (c7) r2 s>>= 32
regs=2 stack=0 before 829: (67) r2 <<= 32
regs=2 stack=0 before 828: (bf) r2 = r8
regs=2 stack=0 before 827: (4f) r8 |= r2
regs=2 stack=0 before 826: (57) r2 &= 255
regs=2 stack=0 before 817: (05) goto pc+8
regs=2 stack=0 before 816: (71) r2 = *(u8 *)(r7 +4)
regs=2 stack=0 before 814: (18) r1 = 0x300000000
834: safe

from 832 to 865: safe

from 753 to 865: safe

from 713 to 791: safe

from 711 to 865: safe

from 708 to 749: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=pkt(off=63,r=122,imm=0) R2=scalar(umax=127,var_off=(0x0; 0x7f)) R6=ctx(off=0,imm=0) R7=pkt(off=54,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (quic_data + sizeof(struct quic_short_header) > data_end) {
749: (bf) r2 = r7                     ; R2_w=pkt(off=54,r=122,imm=0) R7=pkt(off=54,r=122,imm=0)
750: (07) r2 += 17                    ; R2_w=pkt(off=71,r=122,imm=0)
751: (bf) r7 = r1                     ; R1=pkt(off=63,r=122,imm=0) R7_w=pkt(off=63,r=122,imm=0)
; if (quic_data + sizeof(struct quic_short_header) > data_end) {
752: (2d) if r2 > r8 goto pc+112      ; R2_w=pkt(off=71,r=122,imm=0) R8=pkt_end(off=0,imm=0)
; if (!connId) {
753: (15) if r7 == 0x0 goto pc+111    ; R7_w=pkt(off=63,r=122,imm=0)
; __u8 connIdVersion = (connId[0] >> 6);
754: (71) r1 = *(u8 *)(r7 +0)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=63,r=122,imm=0)
755: (bf) r2 = r1                     ; R1_w=scalar(id=1001,umax=255,var_off=(0x0; 0xff)) R2_w=scalar(id=1001,umax=255,var_off=(0x0; 0xff))
756: (77) r2 >>= 6                    ; R2=scalar(umax=3,var_off=(0x0; 0x3))
; if (connIdVersion == QUIC_CONNID_VERSION_V1) {
757: (15) if r2 == 0x3 goto pc+48     ; R2=scalar(umax=3,var_off=(0x0; 0x3))
758: (15) if r2 == 0x2 goto pc+59     ; R2=scalar(umax=3,var_off=(0x0; 0x3))
759: (55) if r2 != 0x1 goto pc+105    ; R2=1
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
760: (57) r1 &= 63                    ; R1_w=scalar(umax=63,var_off=(0x0; 0x3f))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
761: (67) r1 <<= 10                   ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
762: (71) r8 = *(u8 *)(r7 +1)         ; R7=pkt(off=63,r=122,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
763: (67) r8 <<= 2                    ; R8_w=scalar(umax=1020,var_off=(0x0; 0x3fc))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
764: (4f) r8 |= r1                    ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00)) R8_w=scalar()
765: (18) r1 = 0x100000000            ; R1_w=4294967296
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
767: (71) r2 = *(u8 *)(r7 +2)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=63,r=122,imm=0)
768: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
769: (05) goto pc+56
frame 1: propagating r0
last_idx 826 first_idx 757
regs=2 stack=0 before 769: (05) goto pc+56
regs=2 stack=0 before 768: (77) r2 >>= 6
regs=2 stack=0 before 767: (71) r2 = *(u8 *)(r7 +2)
regs=2 stack=0 before 765: (18) r1 = 0x100000000
826: safe

from 759 to 865: safe

from 758 to 818: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=1001,umax=255,var_off=(0x0; 0xff)) R2=2 R6=ctx(off=0,imm=0) R7=pkt(off=63,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
818: (71) r1 = *(u8 *)(r7 +1)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=63,r=122,imm=0)
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
819: (67) r1 <<= 16                   ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
820: (71) r8 = *(u8 *)(r7 +2)         ; R7=pkt(off=63,r=122,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
821: (67) r8 <<= 8                    ; R8_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
822: (4f) r8 |= r1                    ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000)) R8_w=scalar()
823: (18) r1 = 0x200000000            ; R1_w=8589934592
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
825: (71) r2 = *(u8 *)(r7 +3)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=63,r=122,imm=0)
826: (57) r2 &= 255                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
827: (4f) r8 |= r2                    ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
828: (bf) r2 = r8                     ; R2_w=scalar(id=1002) R8_w=scalar(id=1002)
829: (67) r2 <<= 32                   ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
830: (c7) r2 s>>= 32                  ; R2_w=scalar(smin=-2147483648,smax=2147483647)
831: (b7) r3 = 1                      ; R3_w=1
; if (qpr.server_id > 0) {
832: (6d) if r3 s> r2 goto pc+32      ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
833: (77) r1 >>= 32                   ; R1_w=2
; if (cid_version == QUIC_CONNID_VERSION_V1) {
834: (15) if r1 == 0x3 goto pc+5
last_idx 834 first_idx 818
regs=2 stack=0 before 833: (77) r1 >>= 32
regs=2 stack=0 before 832: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 831: (b7) r3 = 1
regs=2 stack=0 before 830: (c7) r2 s>>= 32
regs=2 stack=0 before 829: (67) r2 <<= 32
regs=2 stack=0 before 828: (bf) r2 = r8
regs=2 stack=0 before 827: (4f) r8 |= r2
regs=2 stack=0 before 826: (57) r2 &= 255
regs=2 stack=0 before 825: (71) r2 = *(u8 *)(r7 +3)
regs=2 stack=0 before 823: (18) r1 = 0x200000000
frame 1: propagating r0
835: safe

from 832 to 865: safe

from 757 to 806: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=1001,umax=255,var_off=(0x0; 0xff)) R2=3 R6=ctx(off=0,imm=0) R7=pkt(off=63,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
806: (71) r1 = *(u8 *)(r7 +1)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=63,r=122,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
807: (67) r1 <<= 24                   ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
808: (71) r8 = *(u8 *)(r7 +2)         ; R7=pkt(off=63,r=122,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
809: (67) r8 <<= 16                   ; R8_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
810: (4f) r8 |= r1                    ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432) R8_w=scalar()
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
811: (71) r1 = *(u8 *)(r7 +3)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=63,r=122,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
812: (67) r1 <<= 8                    ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
813: (4f) r8 |= r1                    ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00)) R8_w=scalar()
814: (18) r1 = 0x300000000            ; R1_w=12884901888
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
816: (71) r2 = *(u8 *)(r7 +4)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=63,r=122,imm=0)
817: (05) goto pc+8
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
826: (57) r2 &= 255                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
827: (4f) r8 |= r2                    ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
828: (bf) r2 = r8                     ; R2_w=scalar(id=1003) R8_w=scalar(id=1003)
829: (67) r2 <<= 32                   ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
830: (c7) r2 s>>= 32                  ; R2_w=scalar(smin=-2147483648,smax=2147483647)
831: (b7) r3 = 1                      ; R3_w=1
; if (qpr.server_id > 0) {
832: (6d) if r3 s> r2 goto pc+32      ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
833: (77) r1 >>= 32
frame 1: propagating r0
last_idx 834 first_idx 806
regs=2 stack=0 before 833: (77) r1 >>= 32
regs=2 stack=0 before 832: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 831: (b7) r3 = 1
regs=2 stack=0 before 830: (c7) r2 s>>= 32
regs=2 stack=0 before 829: (67) r2 <<= 32
regs=2 stack=0 before 828: (bf) r2 = r8
regs=2 stack=0 before 827: (4f) r8 |= r2
regs=2 stack=0 before 826: (57) r2 &= 255
regs=2 stack=0 before 817: (05) goto pc+8
regs=2 stack=0 before 816: (71) r2 = *(u8 *)(r7 +4)
regs=2 stack=0 before 814: (18) r1 = 0x300000000
834: safe

from 832 to 865: safe

from 753 to 865: safe

from 752 to 865: safe

from 704 to 865: safe

from 695 to 1857: safe

from 411 to 869: R0=map_ptr(off=0,ks=40,vs=16,imm=0) R1=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; original_sport = pckt.flow.port16[0];
869: (69) r1 = *(u16 *)(r10 -48)      ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
870: (7b) *(u64 *)(r10 -200) = r1     ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-200_w=
871: (71) r1 = *(u8 *)(r10 -36)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (!dst && !(pckt.flags & F_SYN_SET) &&
872: (57) r1 &= 2                     ; R1_w=scalar(umax=2,var_off=(0x0; 0x2))
; if (!dst && !(pckt.flags & F_SYN_SET) &&
873: (55) if r1 != 0x0 goto pc+29     ; R1_w=0
; !(vip_info->flags & F_LRU_BYPASS)) {
874: (61) r1 = *(u32 *)(r9 +0)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9=map_value(off=0,ks=20,vs=8,imm=0)
; !(vip_info->flags & F_LRU_BYPASS)) {
875: (57) r1 &= 2                     ; R1_w=scalar(umax=2,var_off=(0x0; 0x2))
; if (!dst && !(pckt.flags & F_SYN_SET) &&
876: (55) if r1 != 0x0 goto pc+26     ; R1_w=0
877: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; 
878: (07) r2 += -80                   ; R2_w=fp-80
; dst_lru = bpf_map_lookup_elem(lru_map, &pckt->flow);
879: (79) r1 = *(u64 *)(r10 -152)     ; R1_w=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0
880: (85) call bpf_map_lookup_elem#1          ; R0=map_value_or_null(id=1004,off=0,ks=40,vs=16,imm=0)
881: (bf) r9 = r0                     ; R0=map_value_or_null(id=1004,off=0,ks=40,vs=16,imm=0) R9_w=map_value_or_null(id=1004,off=0,ks=40,vs=16,imm=0)
; if (!dst_lru) {
882: (15) if r9 == 0x0 goto pc+20     ; R9_w=map_value(off=0,ks=40,vs=16,imm=0)
; if (!isGlobalLru && pckt->flow.proto == IPPROTO_UDP) {
883: (71) r1 = *(u8 *)(r10 -44)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (!isGlobalLru && pckt->flow.proto == IPPROTO_UDP) {
884: (55) if r1 != 0x11 goto pc+8     ; R1_w=17
; cur_time = bpf_ktime_get_ns();
885: (85) call bpf_ktime_get_ns#5     ; R0_w=scalar()
; if (cur_time - dst_lru->atime > LRU_UDP_TIMEOUT) {
886: (79) r1 = *(u64 *)(r9 +8)        ; R1_w=scalar() R9_w=map_value(off=0,ks=40,vs=16,imm=0)
; if (cur_time - dst_lru->atime > LRU_UDP_TIMEOUT) {
887: (bf) r2 = r0                     ; R0_w=scalar(id=1005) R2_w=scalar(id=1005)
888: (1f) r2 -= r1                    ; R1_w=scalar() R2_w=scalar()
889: (18) r1 = 0x6fc23ac00            ; R1=30000000000
; if (cur_time - dst_lru->atime > LRU_UDP_TIMEOUT) {
891: (2d) if r2 > r1 goto pc+11       ; R1=30000000000 R2=scalar(umax=30000000000,var_off=(0x0; 0x7ffffffff))
; dst_lru->atime = cur_time;
892: (7b) *(u64 *)(r9 +8) = r0        ; R0=scalar(id=1005) R9=map_value(off=0,ks=40,vs=16,imm=0)
; key = dst_lru->pos;
893: (61) r1 = *(u32 *)(r9 +0)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9=map_value(off=0,ks=40,vs=16,imm=0)
; pckt->real_index = key;
894: (63) *(u32 *)(r10 -40) = r1      ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
; key = dst_lru->pos;
895: (63) *(u32 *)(r10 -16) = r1      ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-16=
896: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; key = dst_lru->pos;
897: (07) r2 += -16                   ; R2_w=fp-16
; *real = bpf_map_lookup_elem(&reals, &key);
898: (18) r1 = 0xffffaeba8c207000     ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
900: (85) call bpf_map_lookup_elem#1
901: safe

from 891 to 903: R0=scalar(id=1005) R1=30000000000 R2=scalar(umin=30000000001) R6=ctx(off=0,imm=0) R7=pkt(off=0,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=40,vs=16,imm=0) R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-200=
; if (pckt.flow.proto == IPPROTO_TCP) {
903: (71) r1 = *(u8 *)(r10 -44)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (pckt.flow.proto == IPPROTO_TCP) {
904: (55) if r1 != 0x6 goto pc+18     ; R1_w=6
905: (05) goto pc+0
; __u32 lru_stats_key = MAX_VIPS + LRU_MISS_CNTR;
906: (62) *(u32 *)(r10 -16) = 513     ; R10=fp0 fp-16=????mmmm
907: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
908: (07) r2 += -16                   ; R2_w=fp-16
; bpf_map_lookup_elem(&stats, &lru_stats_key);
909: (18) r1 = 0xffffa03499be8000     ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
911: (85) call bpf_map_lookup_elem#1          ; R0=map_value_or_null(id=1007,off=0,ks=4,vs=16,imm=0)
; if (!lru_stats) {
912: (15) if r0 == 0x0 goto pc+944    ; R0=map_value(off=0,ks=4,vs=16,imm=0)
; if (pckt.flags & F_SYN_SET) {
913: (71) r2 = *(u8 *)(r10 -36)       ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; if (pckt.flags & F_SYN_SET) {
914: (57) r2 &= 2                     ; R2_w=scalar(umax=2,var_off=(0x0; 0x2))
915: (b7) r1 = 1
frame 1: propagating r0
last_idx 916 first_idx 912
regs=2 stack=0 before 915: (b7) r1 = 1
916: safe

from 912 to 1857: safe

from 904 to 923: safe

from 884 to 893: R0=map_value(off=0,ks=40,vs=16,imm=0) R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R6=ctx(off=0,imm=0) R7=pkt(off=0,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9_w=map_value(off=0,ks=40,vs=16,imm=0) R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168= fp-200=
; key = dst_lru->pos;
893: (61) r1 = *(u32 *)(r9 +0)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9_w=map_value(off=0,ks=40,vs=16,imm=0)
; pckt->real_index = key;
894: (63) *(u32 *)(r10 -40) = r1      ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-40=
; key = dst_lru->pos;
895: (63) *(u32 *)(r10 -16) = r1      ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-16=
896: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; key = dst_lru->pos;
897: (07) r2 += -16                   ; R2_w=fp-16
; *real = bpf_map_lookup_elem(&reals, &key);
898: (18) r1 = 0xffffaeba8c207000     ; R1_w=map_ptr(off=0,ks=4,vs=20,imm=0)
900: (85) call bpf_map_lookup_elem#1
901: safe

from 882 to 903: safe

from 876 to 903: safe

from 873 to 903: safe

from 380 to 383: R0=map_value(off=0,ks=4,vs=16,imm=0) R1=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm fp-120=mmmm???? fp-136= fp-144=map_value fp-160=map_value
; vip_num = vip_info->vip_num;
383: (61) r1 = *(u32 *)(r9 +4)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9=map_value(off=0,ks=20,vs=8,imm=0)
384: (7b) *(u64 *)(r10 -168) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-168_w=
; vip_num = vip_info->vip_num;
385: (63) *(u32 *)(r10 -108) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-112=mmmmmmmm
; __u32 cpu_num = bpf_get_smp_processor_id();
386: (85) call bpf_get_smp_processor_id#8     ; R0_w=scalar()
; __u32 cpu_num = bpf_get_smp_processor_id();
387: (63) *(u32 *)(r10 -120) = r0     ; R0_w=scalar() R10=fp0 fp-120=mmmmmmmm
388: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; 
389: (07) r2 += -120                  ; R2_w=fp-120
; void* lru_map = bpf_map_lookup_elem(&lru_mapping, &cpu_num);
390: (18) r1 = 0xffffa0376748a000     ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
392: (85) call bpf_map_lookup_elem#1
393: safe

from 372 to 1858: safe

from 362 to 1858: safe

from 355 to 358: R0=map_value(off=0,ks=20,vs=8,imm=0) R1=scalar(umax=136,var_off=(0x0; 0x88)) R6=ctx(off=0,imm=0) R7=pkt(off=0,r=122,imm=0) R8=pkt_end(off=0,imm=0) R9=2 R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm fp-136=
; if (data_end - data > MAX_PCKT_SIZE) {
358: (bf) r1 = r8                     ; R1_w=pkt_end(off=0,imm=0) R8=pkt_end(off=0,imm=0)
359: (1f) r1 -= r7                    ; R1_w=scalar() R7=pkt(off=0,r=122,imm=0)
360: (b7) r9 = 1                      ; R9_w=1
361: (79) r2 = *(u64 *)(r10 -136)     ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; if (data_end - data > MAX_PCKT_SIZE) {
362: (65) if r1 s> 0x5ea goto pc+1495         ; R1_w=scalar(smax=1514)
363: (7b) *(u64 *)(r10 -144) = r0     ; R0=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-144_w=map_value
364: (7b) *(u64 *)(r10 -136) = r2     ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-136_w=
365: (05) goto pc+0
366: safe

from 362 to 1858: safe

from 351 to 1858: safe

from 341 to 358: safe
frame 3: propagating r0

from 292 to 295: safe

from 289 to 1858: safe

from 278 to 1858: safe

from 276 to 308: R0=scalar(umax=65535,var_off=(0x0; 0xffff)) R1=17 R2=1 R3=17 R4=scalar() R6=ctx(off=0,imm=0) R7=pkt(off=0,r=102,imm=0) R8=pkt_end(off=0,imm=0) R9=1 R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm
; bool is_icmp = !((pckt->flags & F_ICMP) == 0);
308: (57) r2 &= 1                     ; R2_w=1
309: (b7) r4 = 54                     ; R4_w=54
; if (is_ipv6) {
310: (15) if r2 == 0x0 goto pc+1
last_idx 310 first_idx 308
regs=4 stack=0 before 309: (b7) r4 = 54
regs=4 stack=0 before 308: (57) r2 &= 1
parent didn't have regs=4 stack=0 marks: R0=scalar(umax=65535,var_off=(0x0; 0xffff)) R1=17 R2_r=P1 R3_w=17 R4=scalar() R6=ctx(off=0,imm=0) R7=pkt(off=0,r=102,imm=0) R8=pkt_end(off=0,imm=0) R9=1 R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm
last_idx 276 first_idx 275
regs=4 stack=0 before 276: (15) if r3 == 0x11 goto pc+31
regs=4 stack=0 before 275: (bf) r3 = r1
parent already had regs=4 stack=0 marks: R0_r=scalar(umax=65535,var_off=(0x0; 0xffff)) R1_rw=scalar(umax=255,var_off=(0x0; 0xff)) R2_rw=P1 R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R4_w=scalar() R6_r=ctx(off=0,imm=0) R7_r=pkt(off=0,r=102,imm=0) R8_r=pkt_end(off=0,imm=0) R9=1 R10=fp0 fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_rw=mmmmmmmm fp-64_rw=mmmmmmmm fp-72_rw=mmmmmmmm fp-80_rw=mmmmmmmm fp-88_r=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112_r=????mmmm
311: (b7) r4 = 102                    ; R4_w=102
; udp = data + off;
312: (bf) r3 = r7                     ; R3_w=pkt(off=0,r=102,imm=0) R7=pkt(off=0,r=102,imm=0)
313: (0f) r3 += r4
last_idx 313 first_idx 308
regs=10 stack=0 before 312: (bf) r3 = r7
regs=10 stack=0 before 311: (b7) r4 = 102
314: R3_w=pkt(off=102,r=102,imm=0) R4_w=P102
; if (udp + 1 > data_end) {
314: (bf) r4 = r3                     ; R3_w=pkt(off=102,r=102,imm=0) R4_w=pkt(off=102,r=102,imm=0)
315: (07) r4 += 8                     ; R4_w=pkt(off=110,r=102,imm=0)
; if (udp + 1 > data_end) {
316: (2d) if r4 > r8 goto pc+1541     ; R4_w=pkt(off=110,r=110,imm=0) R8=pkt_end(off=0,imm=0)
317: (7b) *(u64 *)(r10 -136) = r0     ; R0=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-136_w=
318: (b7) r4 = 1                      ; R4=1
; bool is_icmp = !((pckt->flags & F_ICMP) == 0);
319: (15) if r2 == 0x0 goto pc+1      ; R2=P1
320: (b7) r4 = 0                      ; R4_w=0
321: (67) r2 <<= 1                    ; R2_w=P2
; 
322: (bf) r5 = r3                     ; R3=pkt(off=102,r=110,imm=0) R5_w=pkt(off=102,r=110,imm=0)
323: (0f) r5 += r2                    ; R2_w=P2 R5_w=pkt(off=104,r=110,imm=0)
324: (69) r2 = *(u16 *)(r5 +0)        ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R5_w=pkt(off=104,r=110,imm=0)
325: (6b) *(u16 *)(r10 -48) = r2      ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-48=
326: (67) r4 <<= 1                    ; R4_w=0
327: (0f) r3 += r4
last_idx 327 first_idx 319
regs=10 stack=0 before 326: (67) r4 <<= 1
regs=10 stack=0 before 325: (6b) *(u16 *)(r10 -48) = r2
regs=10 stack=0 before 324: (69) r2 = *(u16 *)(r5 +0)
regs=10 stack=0 before 323: (0f) r5 += r2
regs=10 stack=0 before 322: (bf) r5 = r3
regs=10 stack=0 before 321: (67) r2 <<= 1
regs=10 stack=0 before 320: (b7) r4 = 0
328: R3_w=pkt(off=102,r=110,imm=0) R4_w=P0
328: (69) r2 = *(u16 *)(r3 +0)        ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R3_w=pkt(off=102,r=110,imm=0)
; 
329: (6b) *(u16 *)(r10 -46) = r2      ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-48=mmmmmmmm
; memcpy(vip.vipv6, pckt.flow.dstv6, 16);
330: (79) r3 = *(u64 *)(r10 -56)      ; R3_w=scalar() R10=fp0
331: (7b) *(u64 *)(r10 -96) = r3      ; R3_w=scalar() R10=fp0 fp-96_w=mmmmmmmm
332: (79) r3 = *(u64 *)(r10 -64)      ; R3_w=scalar() R10=fp0
333: (7b) *(u64 *)(r10 -104) = r3     ; R3_w=scalar() R10=fp0 fp-104_w=mmmmmmmm
; vip.proto = pckt.flow.proto;
334: (73) *(u8 *)(r10 -86) = r1       ; R1=17 R10=fp0 fp-88=????mmmm
; vip.port = pckt.flow.port16[1];
335: (6b) *(u16 *)(r10 -88) = r2      ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-88=
336: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; 
337: (07) r2 += -104                  ; R2_w=fp-104
; vip_info = bpf_map_lookup_elem(&vip_map, &vip);
338: (18) r1 = 0xffffa03557866800     ; R1_w=map_ptr(off=0,ks=20,vs=8,imm=0)
340: (85) call bpf_map_lookup_elem#1          ; R0=map_value_or_null(id=1010,off=0,ks=20,vs=8,imm=0)
; if (!vip_info) {
341: (55) if r0 != 0x0 goto pc+16     ; R0=0
342: (05) goto pc+0
; vip.port = 0;
343: (6a) *(u16 *)(r10 -88) = 0       ; R10=fp0 fp-88=????mmmm
344: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
345: (07) r2 += -104                  ; R2_w=fp-104
; vip_info = bpf_map_lookup_elem(&vip_map, &vip);
346: (18) r1 = 0xffffa03557866800     ; R1_w=map_ptr(off=0,ks=20,vs=8,imm=0)
348: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=1011,off=0,ks=20,vs=8,imm=0)
349: (b7) r9 = 2                      ; R9_w=2
350: (79) r1 = *(u64 *)(r10 -136)     ; R1=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; if (!vip_info) {
351: (15) if r0 == 0x0 goto pc+1506   ; R0=map_value(off=0,ks=20,vs=8,imm=0)
352: (7b) *(u64 *)(r10 -136) = r1     ; R1=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-136_w=
; if (!(vip_info->flags & F_HASH_DPORT_ONLY) &&
353: (61) r1 = *(u32 *)(r0 +0)        ; R0=map_value(off=0,ks=20,vs=8,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (!(vip_info->flags & F_HASH_DPORT_ONLY) &&
354: (57) r1 &= 136                   ; R1_w=scalar(umax=136,var_off=(0x0; 0x88))
355: (55) if r1 != 0x0 goto pc+2      ; R1_w=0
356: (05) goto pc+0
; pckt.flow.port16[1] = 0;
357: (6a) *(u16 *)(r10 -46) = 0       ; R10=fp0 fp-48=mmmmmmmm
; if (data_end - data > MAX_PCKT_SIZE) {
358: (bf) r1 = r8                     ; R1_w=pkt_end(off=0,imm=0) R8=pkt_end(off=0,imm=0)
359: (1f) r1 -= r7                    ; R1_w=scalar() R7=pkt(off=0,r=110,imm=0)
360: (b7) r9 = 1                      ; R9_w=1
361: (79) r2 = *(u64 *)(r10 -136)     ; R2=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; if (data_end - data > MAX_PCKT_SIZE) {
362: (65) if r1 s> 0x5ea goto pc+1495         ; R1=scalar(smax=1514)
363: (7b) *(u64 *)(r10 -144) = r0     ; R0=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-144_w=map_value
364: (7b) *(u64 *)(r10 -136) = r2     ; R2=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-136_w=
365: (05) goto pc+0
; __u32 stats_key = MAX_VIPS + LRU_CNTRS;
366: (62) *(u32 *)(r10 -116) = 512    ; R10=fp0 fp-120=mmmm????
367: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; 
368: (07) r2 += -116                  ; R2_w=fp-116
; data_stats = bpf_map_lookup_elem(&stats, &stats_key);
369: (18) r1 = 0xffffa03499be8000     ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
371: (85) call bpf_map_lookup_elem#1          ; R0=map_value_or_null(id=1012,off=0,ks=4,vs=16,imm=0)
; if (!data_stats) {
372: (15) if r0 == 0x0 goto pc+1485   ; R0=map_value(off=0,ks=4,vs=16,imm=0)
; data_stats->v1 += 1;
373: (79) r1 = *(u64 *)(r0 +0)        ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
374: (07) r1 += 1                     ; R1_w=scalar()
375: (7b) *(u64 *)(r10 -160) = r0     ; R0=map_value(off=0,ks=4,vs=16,imm=0) R10=fp0 fp-160_w=map_value
376: (7b) *(u64 *)(r0 +0) = r1        ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
377: (79) r9 = *(u64 *)(r10 -144)     ; R9_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
; if ((vip_info->flags & F_HASH_NO_SRC_PORT)) {
378: (61) r1 = *(u32 *)(r9 +0)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9_w=map_value(off=0,ks=20,vs=8,imm=0)
; if ((vip_info->flags & F_HASH_NO_SRC_PORT)) {
379: (57) r1 &= 1                     ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
; if ((vip_info->flags & F_HASH_NO_SRC_PORT)) {
380: (15) if r1 == 0x0 goto pc+2      ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
381: (05) goto pc+0
; pckt.flow.port16[0] = 0;
382: (6a) *(u16 *)(r10 -48) = 0       ; R10=fp0 fp-48=mmmmmmmm
; vip_num = vip_info->vip_num;
383: (61) r1 = *(u32 *)(r9 +4)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9=map_value(off=0,ks=20,vs=8,imm=0)
384: (7b) *(u64 *)(r10 -168) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-168_w=
; vip_num = vip_info->vip_num;
385: (63) *(u32 *)(r10 -108) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-112=mmmmmmmm
; __u32 cpu_num = bpf_get_smp_processor_id();
386: (85) call bpf_get_smp_processor_id#8     ; R0_w=scalar()
; __u32 cpu_num = bpf_get_smp_processor_id();
387: (63) *(u32 *)(r10 -120) = r0     ; R0_w=scalar() R10=fp0 fp-120=mmmmmmmm
388: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; 
389: (07) r2 += -120                  ; R2_w=fp-120
; void* lru_map = bpf_map_lookup_elem(&lru_mapping, &cpu_num);
390: (18) r1 = 0xffffa0376748a000     ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
392: (85) call bpf_map_lookup_elem#1          ; R0=map_value_or_null(id=1013,off=0,ks=4,vs=4,imm=0)
; if (!lru_map) {
393: (55) if r0 != 0x0 goto pc+14     ; R0=0
394: (05) goto pc+0
; __u32 lru_stats_key = MAX_VIPS + FALLBACK_LRU_CNTR;
395: (62) *(u32 *)(r10 -16) = 515     ; R10=fp0 fp-16=????mmmm
396: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
397: (07) r2 += -16                   ; R2_w=fp-16
; struct lb_stats* lru_stats = bpf_map_lookup_elem(&stats, &lru_stats_key);
398: (18) r1 = 0xffffa03499be8000     ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
400: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=1014,off=0,ks=4,vs=16,imm=0)
; if (!lru_stats) {
401: (15) if r0 == 0x0 goto pc+1455   ; R0_w=map_value(off=0,ks=4,vs=16,imm=0)
; lru_stats->v1 += 1;
402: (79) r1 = *(u64 *)(r0 +0)        ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
403: (07) r1 += 1                     ; R1_w=scalar()
404: (7b) *(u64 *)(r0 +0) = r1        ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
405: (18) r0 = 0xffffa03557862800     ; R0_w=map_ptr(off=0,ks=40,vs=16,imm=0)
407: (79) r9 = *(u64 *)(r10 -144)
408: safe

from 401 to 1857: safe

from 393 to 408: R0=map_ptr(off=0,ks=40,vs=16,imm=0) R6=ctx(off=0,imm=0) R7=pkt(off=0,r=110,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-160=map_value fp-168=
408: (7b) *(u64 *)(r10 -152) = r0     ; R0=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0 fp-152_w=map_ptr
; if ((vip_info->flags & F_QUIC_VIP)) {
409: (61) r1 = *(u32 *)(r9 +0)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9=map_value(off=0,ks=20,vs=8,imm=0)
; if ((vip_info->flags & F_QUIC_VIP)) {
410: (57) r1 &= 4                     ; R1_w=scalar(umax=4,var_off=(0x0; 0x4))
; if ((vip_info->flags & F_QUIC_VIP)) {
411: (15) if r1 == 0x0 goto pc+457    ; R1_w=scalar(umax=4,var_off=(0x0; 0x4))
; bool is_icmp = (pckt.flags & F_ICMP);
412: (71) r1 = *(u8 *)(r10 -36)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; bool is_icmp = (pckt.flags & F_ICMP);
413: (57) r1 &= 1                     ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
; if (is_icmp) {
414: (15) if r1 == 0x0 goto pc+272    ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
415: (05) goto pc+0
; __u32 stats_key = MAX_VIPS + QUIC_ICMP_STATS;
416: (62) *(u32 *)(r10 -16) = 523     ; R10=fp0 fp-16=????mmmm
417: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
418: (07) r2 += -16                   ; R2_w=fp-16
; struct lb_stats* data_stats = bpf_map_lookup_elem(&stats, &stats_key);
419: (18) r1 = 0xffffa03499be8000     ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
421: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=1015,off=0,ks=4,vs=16,imm=0)
; if (!data_stats) {
422: (15) if r0 == 0x0 goto pc+1434   ; R0_w=map_value(off=0,ks=4,vs=16,imm=0)
; data_stats->v1 += 1;
423: (79) r1 = *(u64 *)(r0 +0)        ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
424: (07) r1 += 1                     ; R1_w=scalar()
425: (7b) *(u64 *)(r0 +0) = r1        ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
; (icmp_hdr->icmp6_code == ICMPV6_ADDR_UNREACH) ||
426: (71) r1 = *(u8 *)(r7 +55)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=110,imm=0)
; (icmp_hdr->icmp6_code == ICMPV6_ADDR_UNREACH) ||
427: (07) r1 += -3                    ; R1_w=scalar(smin=-3,smax=252)
428: (57) r1 &= 255                   ; R1_w=scalar(umax=255,var_off=(0x0; 0xff))
429: (79) r9 = *(u64 *)(r10 -144)
430: safe

from 422 to 1857: safe

from 414 to 687: R0=map_ptr(off=0,ks=40,vs=16,imm=0) R1=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=110,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; pckt->flow.src = iph->daddr;
687: (05) goto pc+0
; __u32 quic_packets_stats_key = 0;
688: (62) *(u32 *)(r10 -28) = 0       ; R10=fp0 fp-32=mmmm????
689: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
690: (07) r2 += -28                   ; R2_w=fp-28
; bpf_map_lookup_elem(&quic_stats_map, &quic_packets_stats_key);
691: (18) r1 = 0xffffa03587064800     ; R1_w=map_ptr(off=0,ks=4,vs=104,imm=0)
693: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=1016,off=0,ks=4,vs=104,imm=0)
694: (bf) r9 = r0                     ; R0_w=map_value_or_null(id=1016,off=0,ks=4,vs=104,imm=0) R9_w=map_value_or_null(id=1016,off=0,ks=4,vs=104,imm=0)
; if (!quic_packets_stats) {
695: (15) if r9 == 0x0 goto pc+1161   ; R9_w=map_value(off=0,ks=4,vs=104,imm=0)
; bool is_icmp = (pckt->flags & F_ICMP);
696: (71) r2 = *(u8 *)(r10 -36)       ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; bool is_icmp = (pckt->flags & F_ICMP);
697: (57) r2 &= 1                     ; R2_w=scalar(umax=1,var_off=(0x0; 0x1))
698: (b7) r1 = 54                     ; R1=54
; if (is_ipv6) {
699: (15) if r2 == 0x0 goto pc+1      ; R2=scalar(umax=1,var_off=(0x0; 0x1))
700: (b7) r1 = 102                    ; R1_w=102
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
701: (0f) r7 += r1
last_idx 701 first_idx 699
regs=2 stack=0 before 700: (b7) r1 = 102
702: R1_w=P102 R7_w=pkt(off=102,r=110,imm=0)
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
702: (bf) r1 = r7                     ; R1_w=pkt(off=102,r=110,imm=0) R7_w=pkt(off=102,r=110,imm=0)
703: (07) r1 += 9                     ; R1_w=pkt(off=111,r=110,imm=0)
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
704: (2d) if r1 > r8 goto pc+160      ; R1_w=pkt(off=111,r=111,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
705: (71) r2 = *(u8 *)(r7 +8)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=102,r=111,imm=0)
706: (67) r2 <<= 56                   ; R2_w=scalar(smax=9151314442816847872,umax=18374686479671623680,var_off=(0x0; 0xff00000000000000),s32_min=0,s32_max=0,u32_max=0)
707: (c7) r2 s>>= 56                  ; R2=scalar(smin=-128,smax=127)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
708: (65) if r2 s> 0xffffffff goto pc+40      ; R2=scalar(umin=18446744073709551488,var_off=(0xffffffffffffff80; 0x7f),u32_min=-128)
; if (quic_data + sizeof(struct quic_long_header) > data_end) {
709: (bf) r1 = r7                     ; R1_w=pkt(off=102,r=111,imm=0) R7=pkt(off=102,r=111,imm=0)
710: (07) r1 += 22                    ; R1_w=pkt(off=124,r=111,imm=0)
; if (quic_data + sizeof(struct quic_long_header) > data_end) {
711: (2d) if r1 > r8 goto pc+153      ; R1_w=pkt(off=124,r=124,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_PACKET_TYPE_MASK) < QUIC_HANDSHAKE) {
712: (57) r2 &= 32                    ; R2_w=scalar(umax=32,var_off=(0x0; 0x20))
; if ((*pkt_type & QUIC_PACKET_TYPE_MASK) < QUIC_HANDSHAKE) {
713: (15) if r2 == 0x0 goto pc+77     ; R2_w=scalar(umax=32,var_off=(0x0; 0x20))
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
714: (71) r1 = *(u8 *)(r7 +13)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=102,r=124,imm=0)
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
715: (07) r7 += 14
716: safe

from 713 to 791: safe

from 711 to 865: safe

from 708 to 749: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=pkt(off=111,r=111,imm=0) R2=scalar(umax=127,var_off=(0x0; 0x7f)) R6=ctx(off=0,imm=0) R7=pkt(off=102,r=111,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (quic_data + sizeof(struct quic_short_header) > data_end) {
749: (bf) r2 = r7                     ; R2_w=pkt(off=102,r=111,imm=0) R7=pkt(off=102,r=111,imm=0)
750: (07) r2 += 17                    ; R2_w=pkt(off=119,r=111,imm=0)
751: (bf) r7 = r1                     ; R1=pkt(off=111,r=111,imm=0) R7_w=pkt(off=111,r=111,imm=0)
; if (quic_data + sizeof(struct quic_short_header) > data_end) {
752: (2d) if r2 > r8 goto pc+112      ; R2_w=pkt(off=119,r=119,imm=0) R8=pkt_end(off=0,imm=0)
; if (!connId) {
753: (15) if r7 == 0x0 goto pc+111    ; R7_w=pkt(off=111,r=119,imm=0)
; __u8 connIdVersion = (connId[0] >> 6);
754: (71) r1 = *(u8 *)(r7 +0)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=111,r=119,imm=0)
755: (bf) r2 = r1                     ; R1_w=scalar(id=1017,umax=255,var_off=(0x0; 0xff)) R2_w=scalar(id=1017,umax=255,var_off=(0x0; 0xff))
756: (77) r2 >>= 6                    ; R2=scalar(umax=3,var_off=(0x0; 0x3))
; if (connIdVersion == QUIC_CONNID_VERSION_V1) {
757: (15) if r2 == 0x3 goto pc+48     ; R2=scalar(umax=3,var_off=(0x0; 0x3))
758: (15) if r2 == 0x2 goto pc+59     ; R2=scalar(umax=3,var_off=(0x0; 0x3))
759: (55) if r2 != 0x1 goto pc+105    ; R2=1
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
760: (57) r1 &= 63                    ; R1_w=scalar(umax=63,var_off=(0x0; 0x3f))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
761: (67) r1 <<= 10                   ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
762: (71) r8 = *(u8 *)(r7 +1)         ; R7=pkt(off=111,r=119,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
763: (67) r8 <<= 2                    ; R8_w=scalar(umax=1020,var_off=(0x0; 0x3fc))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
764: (4f) r8 |= r1                    ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00)) R8_w=scalar()
765: (18) r1 = 0x100000000            ; R1_w=4294967296
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
767: (71) r2 = *(u8 *)(r7 +2)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=111,r=119,imm=0)
768: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
769: (05) goto pc+56
frame 1: propagating r0
last_idx 826 first_idx 757
regs=2 stack=0 before 769: (05) goto pc+56
regs=2 stack=0 before 768: (77) r2 >>= 6
regs=2 stack=0 before 767: (71) r2 = *(u8 *)(r7 +2)
regs=2 stack=0 before 765: (18) r1 = 0x100000000
826: safe

from 759 to 865: safe

from 758 to 818: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=1017,umax=255,var_off=(0x0; 0xff)) R2=2 R6=ctx(off=0,imm=0) R7=pkt(off=111,r=119,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
818: (71) r1 = *(u8 *)(r7 +1)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=111,r=119,imm=0)
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
819: (67) r1 <<= 16                   ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
820: (71) r8 = *(u8 *)(r7 +2)         ; R7=pkt(off=111,r=119,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
821: (67) r8 <<= 8                    ; R8_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
822: (4f) r8 |= r1                    ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000)) R8_w=scalar()
823: (18) r1 = 0x200000000            ; R1_w=8589934592
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
825: (71) r2 = *(u8 *)(r7 +3)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=111,r=119,imm=0)
826: (57) r2 &= 255                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
827: (4f) r8 |= r2                    ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
828: (bf) r2 = r8                     ; R2_w=scalar(id=1018) R8_w=scalar(id=1018)
829: (67) r2 <<= 32                   ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
830: (c7) r2 s>>= 32                  ; R2_w=scalar(smin=-2147483648,smax=2147483647)
831: (b7) r3 = 1                      ; R3_w=1
; if (qpr.server_id > 0) {
832: (6d) if r3 s> r2 goto pc+32      ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
833: (77) r1 >>= 32                   ; R1_w=2
; if (cid_version == QUIC_CONNID_VERSION_V1) {
834: (15) if r1 == 0x3 goto pc+5
last_idx 834 first_idx 818
regs=2 stack=0 before 833: (77) r1 >>= 32
regs=2 stack=0 before 832: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 831: (b7) r3 = 1
regs=2 stack=0 before 830: (c7) r2 s>>= 32
regs=2 stack=0 before 829: (67) r2 <<= 32
regs=2 stack=0 before 828: (bf) r2 = r8
regs=2 stack=0 before 827: (4f) r8 |= r2
regs=2 stack=0 before 826: (57) r2 &= 255
regs=2 stack=0 before 825: (71) r2 = *(u8 *)(r7 +3)
regs=2 stack=0 before 823: (18) r1 = 0x200000000
frame 1: propagating r0
835: safe

from 832 to 865: safe

from 757 to 806: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=1017,umax=255,var_off=(0x0; 0xff)) R2=3 R6=ctx(off=0,imm=0) R7=pkt(off=111,r=119,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
806: (71) r1 = *(u8 *)(r7 +1)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=111,r=119,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
807: (67) r1 <<= 24                   ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
808: (71) r8 = *(u8 *)(r7 +2)         ; R7=pkt(off=111,r=119,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
809: (67) r8 <<= 16                   ; R8_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
810: (4f) r8 |= r1                    ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432) R8_w=scalar()
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
811: (71) r1 = *(u8 *)(r7 +3)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=111,r=119,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
812: (67) r1 <<= 8                    ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
813: (4f) r8 |= r1                    ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00)) R8_w=scalar()
814: (18) r1 = 0x300000000            ; R1_w=12884901888
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
816: (71) r2 = *(u8 *)(r7 +4)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=111,r=119,imm=0)
817: (05) goto pc+8
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
826: (57) r2 &= 255                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
827: (4f) r8 |= r2                    ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
828: (bf) r2 = r8                     ; R2_w=scalar(id=1019) R8_w=scalar(id=1019)
829: (67) r2 <<= 32                   ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
830: (c7) r2 s>>= 32                  ; R2_w=scalar(smin=-2147483648,smax=2147483647)
831: (b7) r3 = 1                      ; R3_w=1
; if (qpr.server_id > 0) {
832: (6d) if r3 s> r2 goto pc+32      ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
833: (77) r1 >>= 32
frame 1: propagating r0
last_idx 834 first_idx 806
regs=2 stack=0 before 833: (77) r1 >>= 32
regs=2 stack=0 before 832: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 831: (b7) r3 = 1
regs=2 stack=0 before 830: (c7) r2 s>>= 32
regs=2 stack=0 before 829: (67) r2 <<= 32
regs=2 stack=0 before 828: (bf) r2 = r8
regs=2 stack=0 before 827: (4f) r8 |= r2
regs=2 stack=0 before 826: (57) r2 &= 255
regs=2 stack=0 before 817: (05) goto pc+8
regs=2 stack=0 before 816: (71) r2 = *(u8 *)(r7 +4)
regs=2 stack=0 before 814: (18) r1 = 0x300000000
834: safe

from 832 to 865: safe

from 753 to 865: safe

from 752 to 865: safe

from 704 to 865: safe

from 699 to 701: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=54 R2=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=110,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
701: (0f) r7 += r1
last_idx 701 first_idx 701
parent didn't have regs=2 stack=0 marks: R0=map_value(off=0,ks=4,vs=104,imm=0) R1_r=P54 R2=0 R6=ctx(off=0,imm=0) R7_r=pkt(off=0,r=110,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
last_idx 699 first_idx 699
regs=2 stack=0 before 699: (15) if r2 == 0x0 goto pc+1
parent didn't have regs=2 stack=0 marks: R0_w=map_value(off=0,ks=4,vs=104,imm=0) R1_rw=P54 R2_rw=scalar(umax=1,var_off=(0x0; 0x1)) R6_r=ctx(off=0,imm=0) R7_r=pkt(off=0,r=110,imm=0) R8_r=pkt_end(off=0,imm=0) R9_rw=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96_r=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=
last_idx 698 first_idx 687
regs=2 stack=0 before 698: (b7) r1 = 54
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
702: (bf) r1 = r7                     ; R1_w=pkt(off=54,r=110,imm=0) R7_w=pkt(off=54,r=110,imm=0)
703: (07) r1 += 9                     ; R1_w=pkt(off=63,r=110,imm=0)
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
704: (2d) if r1 > r8 goto pc+160      ; R1_w=pkt(off=63,r=110,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
705: (71) r2 = *(u8 *)(r7 +8)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=54,r=110,imm=0)
706: (67) r2 <<= 56                   ; R2_w=scalar(smax=9151314442816847872,umax=18374686479671623680,var_off=(0x0; 0xff00000000000000),s32_min=0,s32_max=0,u32_max=0)
707: (c7) r2 s>>= 56                  ; R2_w=scalar(smin=-128,smax=127)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
708: (65) if r2 s> 0xffffffff goto pc+40      ; R2_w=scalar(umin=18446744073709551488,var_off=(0xffffffffffffff80; 0x7f),u32_min=-128)
; if (quic_data + sizeof(struct quic_long_header) > data_end) {
709: (bf) r1 = r7                     ; R1_w=pkt(off=54,r=110,imm=0) R7_w=pkt(off=54,r=110,imm=0)
710: (07) r1 += 22                    ; R1=pkt(off=76,r=110,imm=0)
; if (quic_data + sizeof(struct quic_long_header) > data_end) {
711: (2d) if r1 > r8 goto pc+153      ; R1=pkt(off=76,r=110,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_PACKET_TYPE_MASK) < QUIC_HANDSHAKE) {
712: (57) r2 &= 32                    ; R2_w=scalar(umax=32,var_off=(0x0; 0x20))
; if ((*pkt_type & QUIC_PACKET_TYPE_MASK) < QUIC_HANDSHAKE) {
713: (15) if r2 == 0x0 goto pc+77     ; R2_w=scalar(umax=32,var_off=(0x0; 0x20))
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
714: (71) r1 = *(u8 *)(r7 +13)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=54,r=110,imm=0)
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
715: (07) r7 += 14                    ; R7_w=pkt(off=68,r=110,imm=0)
716: (25) if r1 > 0x7 goto pc+36      ; R1_w=scalar(umax=7,var_off=(0x0; 0x7))
717: (05) goto pc+147
865: safe

from 716 to 753: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(umin=8,umax=255,var_off=(0x0; 0xff)) R2=scalar(umax=32,var_off=(0x0; 0x20)) R6=ctx(off=0,imm=0) R7=pkt(off=68,r=110,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (!connId) {
753: (15) if r7 == 0x0 goto pc+111    ; R7=pkt(off=68,r=110,imm=0)
; __u8 connIdVersion = (connId[0] >> 6);
754: (71) r1 = *(u8 *)(r7 +0)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=68,r=110,imm=0)
755: (bf) r2 = r1                     ; R1_w=scalar(id=1020,umax=255,var_off=(0x0; 0xff)) R2_w=scalar(id=1020,umax=255,var_off=(0x0; 0xff))
756: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
; if (connIdVersion == QUIC_CONNID_VERSION_V1) {
757: (15) if r2 == 0x3 goto pc+48     ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
758: (15) if r2 == 0x2 goto pc+59     ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
759: (55) if r2 != 0x1 goto pc+105    ; R2_w=1
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
760: (57) r1 &= 63                    ; R1_w=scalar(umax=63,var_off=(0x0; 0x3f))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
761: (67) r1 <<= 10                   ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
762: (71) r8 = *(u8 *)(r7 +1)         ; R7=pkt(off=68,r=110,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
763: (67) r8 <<= 2                    ; R8_w=scalar(umax=1020,var_off=(0x0; 0x3fc))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
764: (4f) r8 |= r1                    ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00)) R8_w=scalar()
765: (18) r1 = 0x100000000            ; R1_w=4294967296
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
767: (71) r2 = *(u8 *)(r7 +2)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=68,r=110,imm=0)
768: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
769: (05) goto pc+56
frame 1: propagating r0
last_idx 826 first_idx 753
regs=2 stack=0 before 769: (05) goto pc+56
regs=2 stack=0 before 768: (77) r2 >>= 6
regs=2 stack=0 before 767: (71) r2 = *(u8 *)(r7 +2)
regs=2 stack=0 before 765: (18) r1 = 0x100000000
826: safe

from 759 to 865: safe

from 758 to 818: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=1020,umax=255,var_off=(0x0; 0xff)) R2=2 R6=ctx(off=0,imm=0) R7=pkt(off=68,r=110,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
818: (71) r1 = *(u8 *)(r7 +1)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=68,r=110,imm=0)
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
819: (67) r1 <<= 16                   ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
820: (71) r8 = *(u8 *)(r7 +2)         ; R7=pkt(off=68,r=110,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
821: (67) r8 <<= 8                    ; R8_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
822: (4f) r8 |= r1                    ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000)) R8_w=scalar()
823: (18) r1 = 0x200000000            ; R1_w=8589934592
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
825: (71) r2 = *(u8 *)(r7 +3)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=68,r=110,imm=0)
826: (57) r2 &= 255                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
827: (4f) r8 |= r2                    ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
828: (bf) r2 = r8                     ; R2_w=scalar(id=1021) R8_w=scalar(id=1021)
829: (67) r2 <<= 32                   ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
830: (c7) r2 s>>= 32                  ; R2_w=scalar(smin=-2147483648,smax=2147483647)
831: (b7) r3 = 1                      ; R3_w=1
; if (qpr.server_id > 0) {
832: (6d) if r3 s> r2 goto pc+32      ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
833: (77) r1 >>= 32                   ; R1_w=2
; if (cid_version == QUIC_CONNID_VERSION_V1) {
834: (15) if r1 == 0x3 goto pc+5
last_idx 834 first_idx 818
regs=2 stack=0 before 833: (77) r1 >>= 32
regs=2 stack=0 before 832: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 831: (b7) r3 = 1
regs=2 stack=0 before 830: (c7) r2 s>>= 32
regs=2 stack=0 before 829: (67) r2 <<= 32
regs=2 stack=0 before 828: (bf) r2 = r8
regs=2 stack=0 before 827: (4f) r8 |= r2
regs=2 stack=0 before 826: (57) r2 &= 255
regs=2 stack=0 before 825: (71) r2 = *(u8 *)(r7 +3)
regs=2 stack=0 before 823: (18) r1 = 0x200000000
frame 1: propagating r0
835: safe

from 832 to 865: safe

from 757 to 806: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=1020,umax=255,var_off=(0x0; 0xff)) R2=3 R6=ctx(off=0,imm=0) R7=pkt(off=68,r=110,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
806: (71) r1 = *(u8 *)(r7 +1)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=68,r=110,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
807: (67) r1 <<= 24                   ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
808: (71) r8 = *(u8 *)(r7 +2)         ; R7=pkt(off=68,r=110,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
809: (67) r8 <<= 16                   ; R8_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
810: (4f) r8 |= r1                    ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432) R8_w=scalar()
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
811: (71) r1 = *(u8 *)(r7 +3)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=68,r=110,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
812: (67) r1 <<= 8                    ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
813: (4f) r8 |= r1                    ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00)) R8_w=scalar()
814: (18) r1 = 0x300000000            ; R1_w=12884901888
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
816: (71) r2 = *(u8 *)(r7 +4)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=68,r=110,imm=0)
817: (05) goto pc+8
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
826: (57) r2 &= 255                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
827: (4f) r8 |= r2                    ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
828: (bf) r2 = r8                     ; R2_w=scalar(id=1022) R8_w=scalar(id=1022)
829: (67) r2 <<= 32                   ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
830: (c7) r2 s>>= 32                  ; R2_w=scalar(smin=-2147483648,smax=2147483647)
831: (b7) r3 = 1                      ; R3_w=1
; if (qpr.server_id > 0) {
832: (6d) if r3 s> r2 goto pc+32      ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
833: (77) r1 >>= 32
frame 1: propagating r0
last_idx 834 first_idx 806
regs=2 stack=0 before 833: (77) r1 >>= 32
regs=2 stack=0 before 832: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 831: (b7) r3 = 1
regs=2 stack=0 before 830: (c7) r2 s>>= 32
regs=2 stack=0 before 829: (67) r2 <<= 32
regs=2 stack=0 before 828: (bf) r2 = r8
regs=2 stack=0 before 827: (4f) r8 |= r2
regs=2 stack=0 before 826: (57) r2 &= 255
regs=2 stack=0 before 817: (05) goto pc+8
regs=2 stack=0 before 816: (71) r2 = *(u8 *)(r7 +4)
regs=2 stack=0 before 814: (18) r1 = 0x300000000
834: safe

from 832 to 865: safe

from 753 to 865: safe

from 713 to 791: safe

from 711 to 865: safe

from 708 to 749: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=pkt(off=63,r=110,imm=0) R2=scalar(umax=127,var_off=(0x0; 0x7f)) R6=ctx(off=0,imm=0) R7=pkt(off=54,r=110,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (quic_data + sizeof(struct quic_short_header) > data_end) {
749: (bf) r2 = r7                     ; R2_w=pkt(off=54,r=110,imm=0) R7=pkt(off=54,r=110,imm=0)
750: (07) r2 += 17                    ; R2_w=pkt(off=71,r=110,imm=0)
751: (bf) r7 = r1                     ; R1=pkt(off=63,r=110,imm=0) R7_w=pkt(off=63,r=110,imm=0)
; if (quic_data + sizeof(struct quic_short_header) > data_end) {
752: (2d) if r2 > r8 goto pc+112      ; R2_w=pkt(off=71,r=110,imm=0) R8=pkt_end(off=0,imm=0)
; if (!connId) {
753: (15) if r7 == 0x0 goto pc+111    ; R7_w=pkt(off=63,r=110,imm=0)
; __u8 connIdVersion = (connId[0] >> 6);
754: (71) r1 = *(u8 *)(r7 +0)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=63,r=110,imm=0)
755: (bf) r2 = r1                     ; R1_w=scalar(id=1023,umax=255,var_off=(0x0; 0xff)) R2_w=scalar(id=1023,umax=255,var_off=(0x0; 0xff))
756: (77) r2 >>= 6                    ; R2=scalar(umax=3,var_off=(0x0; 0x3))
; if (connIdVersion == QUIC_CONNID_VERSION_V1) {
757: (15) if r2 == 0x3 goto pc+48     ; R2=scalar(umax=3,var_off=(0x0; 0x3))
758: (15) if r2 == 0x2 goto pc+59     ; R2=scalar(umax=3,var_off=(0x0; 0x3))
759: (55) if r2 != 0x1 goto pc+105    ; R2=1
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
760: (57) r1 &= 63                    ; R1_w=scalar(umax=63,var_off=(0x0; 0x3f))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
761: (67) r1 <<= 10                   ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
762: (71) r8 = *(u8 *)(r7 +1)         ; R7=pkt(off=63,r=110,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
763: (67) r8 <<= 2                    ; R8_w=scalar(umax=1020,var_off=(0x0; 0x3fc))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
764: (4f) r8 |= r1                    ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00)) R8_w=scalar()
765: (18) r1 = 0x100000000            ; R1_w=4294967296
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
767: (71) r2 = *(u8 *)(r7 +2)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=63,r=110,imm=0)
768: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
769: (05) goto pc+56
frame 1: propagating r0
last_idx 826 first_idx 757
regs=2 stack=0 before 769: (05) goto pc+56
regs=2 stack=0 before 768: (77) r2 >>= 6
regs=2 stack=0 before 767: (71) r2 = *(u8 *)(r7 +2)
regs=2 stack=0 before 765: (18) r1 = 0x100000000
826: safe

from 759 to 865: safe

from 758 to 818: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=1023,umax=255,var_off=(0x0; 0xff)) R2=2 R6=ctx(off=0,imm=0) R7=pkt(off=63,r=110,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
818: (71) r1 = *(u8 *)(r7 +1)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=63,r=110,imm=0)
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
819: (67) r1 <<= 16                   ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
820: (71) r8 = *(u8 *)(r7 +2)         ; R7=pkt(off=63,r=110,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
821: (67) r8 <<= 8                    ; R8_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
822: (4f) r8 |= r1                    ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000)) R8_w=scalar()
823: (18) r1 = 0x200000000            ; R1_w=8589934592
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
825: (71) r2 = *(u8 *)(r7 +3)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=63,r=110,imm=0)
826: (57) r2 &= 255                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
827: (4f) r8 |= r2                    ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
828: (bf) r2 = r8                     ; R2_w=scalar(id=1024) R8_w=scalar(id=1024)
829: (67) r2 <<= 32                   ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
830: (c7) r2 s>>= 32                  ; R2_w=scalar(smin=-2147483648,smax=2147483647)
831: (b7) r3 = 1                      ; R3_w=1
; if (qpr.server_id > 0) {
832: (6d) if r3 s> r2 goto pc+32      ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
833: (77) r1 >>= 32                   ; R1_w=2
; if (cid_version == QUIC_CONNID_VERSION_V1) {
834: (15) if r1 == 0x3 goto pc+5
last_idx 834 first_idx 818
regs=2 stack=0 before 833: (77) r1 >>= 32
regs=2 stack=0 before 832: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 831: (b7) r3 = 1
regs=2 stack=0 before 830: (c7) r2 s>>= 32
regs=2 stack=0 before 829: (67) r2 <<= 32
regs=2 stack=0 before 828: (bf) r2 = r8
regs=2 stack=0 before 827: (4f) r8 |= r2
regs=2 stack=0 before 826: (57) r2 &= 255
regs=2 stack=0 before 825: (71) r2 = *(u8 *)(r7 +3)
regs=2 stack=0 before 823: (18) r1 = 0x200000000
frame 1: propagating r0
835: safe

from 832 to 865: safe

from 757 to 806: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=1023,umax=255,var_off=(0x0; 0xff)) R2=3 R6=ctx(off=0,imm=0) R7=pkt(off=63,r=110,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
806: (71) r1 = *(u8 *)(r7 +1)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=63,r=110,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
807: (67) r1 <<= 24                   ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
808: (71) r8 = *(u8 *)(r7 +2)         ; R7=pkt(off=63,r=110,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
809: (67) r8 <<= 16                   ; R8_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
810: (4f) r8 |= r1                    ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432) R8_w=scalar()
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
811: (71) r1 = *(u8 *)(r7 +3)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=63,r=110,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
812: (67) r1 <<= 8                    ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
813: (4f) r8 |= r1                    ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00)) R8_w=scalar()
814: (18) r1 = 0x300000000            ; R1_w=12884901888
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
816: (71) r2 = *(u8 *)(r7 +4)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=63,r=110,imm=0)
817: (05) goto pc+8
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
826: (57) r2 &= 255                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
827: (4f) r8 |= r2                    ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
828: (bf) r2 = r8                     ; R2_w=scalar(id=1025) R8_w=scalar(id=1025)
829: (67) r2 <<= 32                   ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
830: (c7) r2 s>>= 32                  ; R2_w=scalar(smin=-2147483648,smax=2147483647)
831: (b7) r3 = 1                      ; R3_w=1
; if (qpr.server_id > 0) {
832: (6d) if r3 s> r2 goto pc+32      ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
833: (77) r1 >>= 32
frame 1: propagating r0
last_idx 834 first_idx 806
regs=2 stack=0 before 833: (77) r1 >>= 32
regs=2 stack=0 before 832: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 831: (b7) r3 = 1
regs=2 stack=0 before 830: (c7) r2 s>>= 32
regs=2 stack=0 before 829: (67) r2 <<= 32
regs=2 stack=0 before 828: (bf) r2 = r8
regs=2 stack=0 before 827: (4f) r8 |= r2
regs=2 stack=0 before 826: (57) r2 &= 255
regs=2 stack=0 before 817: (05) goto pc+8
regs=2 stack=0 before 816: (71) r2 = *(u8 *)(r7 +4)
regs=2 stack=0 before 814: (18) r1 = 0x300000000
834: safe

from 832 to 865: safe

from 753 to 865: safe

from 752 to 865: safe

from 704 to 865: safe

from 695 to 1857: safe

from 411 to 869: safe

from 380 to 383: R0=map_value(off=0,ks=4,vs=16,imm=0) R1=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=110,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm fp-120=mmmm???? fp-136= fp-144=map_value fp-160=map_value
; vip_num = vip_info->vip_num;
383: (61) r1 = *(u32 *)(r9 +4)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9=map_value(off=0,ks=20,vs=8,imm=0)
384: (7b) *(u64 *)(r10 -168) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-168_w=
; vip_num = vip_info->vip_num;
385: (63) *(u32 *)(r10 -108) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-112=mmmmmmmm
; __u32 cpu_num = bpf_get_smp_processor_id();
386: (85) call bpf_get_smp_processor_id#8     ; R0_w=scalar()
; __u32 cpu_num = bpf_get_smp_processor_id();
387: (63) *(u32 *)(r10 -120) = r0     ; R0_w=scalar() R10=fp0 fp-120=mmmmmmmm
388: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; 
389: (07) r2 += -120                  ; R2_w=fp-120
; void* lru_map = bpf_map_lookup_elem(&lru_mapping, &cpu_num);
390: (18) r1 = 0xffffa0376748a000     ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
392: (85) call bpf_map_lookup_elem#1
393: safe

from 372 to 1858: safe

from 362 to 1858: safe

from 355 to 358: R0=map_value(off=0,ks=20,vs=8,imm=0) R1=scalar(umax=136,var_off=(0x0; 0x88)) R6=ctx(off=0,imm=0) R7=pkt(off=0,r=110,imm=0) R8=pkt_end(off=0,imm=0) R9=2 R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm fp-136=
; if (data_end - data > MAX_PCKT_SIZE) {
358: (bf) r1 = r8                     ; R1_w=pkt_end(off=0,imm=0) R8=pkt_end(off=0,imm=0)
359: (1f) r1 -= r7                    ; R1_w=scalar() R7=pkt(off=0,r=110,imm=0)
360: (b7) r9 = 1                      ; R9_w=1
361: (79) r2 = *(u64 *)(r10 -136)
362: safe

from 351 to 1858: safe

from 341 to 358: safe

from 316 to 1858: safe

from 501 to 1858: safe

from 171 to 1858: safe

from 168 to 254: R0_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R1=scalar(umax=255,var_off=(0x0; 0xff)) R2=pkt(off=54,r=54,imm=0) R3=scalar() R4=scalar(umax=15,var_off=(0x0; 0xf)) R6=ctx(off=0,imm=0) R7=pkt(off=0,r=54,imm=0) R8=pkt_end(off=0,imm=0) R9=1 R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm
; memcpy(pckt->flow.srcv6, ip6h->saddr.s6_addr32, 16);
254: (61) r2 = *(u32 *)(r7 +34)       ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R7=pkt(off=0,r=54,imm=0)
255: (67) r2 <<= 32                   ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
256: (61) r3 = *(u32 *)(r7 +30)       ; R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R7=pkt(off=0,r=54,imm=0)
257: (4f) r2 |= r3                    ; R2_w=scalar() R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
258: (7b) *(u64 *)(r10 -72) = r2      ; R2_w=scalar() R10=fp0 fp-72_w=mmmmmmmm
259: (61) r2 = *(u32 *)(r7 +26)       ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R7=pkt(off=0,r=54,imm=0)
260: (67) r2 <<= 32                   ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
261: (61) r3 = *(u32 *)(r7 +22)       ; R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R7=pkt(off=0,r=54,imm=0)
262: (4f) r2 |= r3                    ; R2_w=scalar() R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
263: (7b) *(u64 *)(r10 -80) = r2      ; R2_w=scalar() R10=fp0 fp-80_w=mmmmmmmm
; memcpy(pckt->flow.dstv6, ip6h->daddr.s6_addr32, 16);
264: (61) r2 = *(u32 *)(r7 +50)       ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R7=pkt(off=0,r=54,imm=0)
265: (67) r2 <<= 32                   ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
266: (61) r3 = *(u32 *)(r7 +46)       ; R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R7=pkt(off=0,r=54,imm=0)
267: (4f) r2 |= r3                    ; R2_w=scalar() R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
268: (7b) *(u64 *)(r10 -56) = r2      ; R2_w=scalar() R10=fp0 fp-56_w=mmmmmmmm
269: (61) r2 = *(u32 *)(r7 +38)       ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R7=pkt(off=0,r=54,imm=0)
270: (61) r3 = *(u32 *)(r7 +42)       ; R3_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R7=pkt(off=0,r=54,imm=0)
271: (67) r3 <<= 32                   ; R3_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
272: (4f) r3 |= r2                    ; R2_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R3_w=scalar()
273: (7b) *(u64 *)(r10 -64) = r3      ; R3_w=scalar() R10=fp0 fp-64_w=mmmmmmmm
274: (b7) r2 = 0                      ; R2_w=0
; if (protocol == IPPROTO_TCP) {
275: (bf) r3 = r1                     ; R1=scalar(id=1027,umax=255,var_off=(0x0; 0xff)) R3_w=scalar(id=1027,umax=255,var_off=(0x0; 0xff))
276: (15) if r3 == 0x11 goto pc+31    ; R3_w=scalar(id=1027,umax=255,var_off=(0x0; 0xff))
277: (b7) r9 = 2                      ; R9_w=2
278: (55) if r3 != 0x6 goto pc+1579   ; R3_w=6
; bool is_icmp = !((pckt->flags & F_ICMP) == 0);
279: (bf) r3 = r2                     ; R2_w=0 R3_w=0
280: (57) r3 &= 1                     ; R3_w=0
281: (b7) r5 = 54                     ; R5=54
; if (is_ipv6) {
282: (15) if r3 == 0x0 goto pc+1
last_idx 282 first_idx 282
parent didn't have regs=8 stack=0 marks: R0_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R1=6 R2_w=0 R3_rw=P0 R4=scalar(umax=15,var_off=(0x0; 0xf)) R5_w=54 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=54,imm=0) R8=pkt_end(off=0,imm=0) R9_w=2 R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56_w=mmmmmmmm fp-64_w=mmmmmmmm fp-72_w=mmmmmmmm fp-80_w=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm
last_idx 281 first_idx 166
regs=8 stack=0 before 281: (b7) r5 = 54
regs=8 stack=0 before 280: (57) r3 &= 1
regs=8 stack=0 before 279: (bf) r3 = r2
regs=4 stack=0 before 278: (55) if r3 != 0x6 goto pc+1579
regs=4 stack=0 before 277: (b7) r9 = 2
regs=4 stack=0 before 276: (15) if r3 == 0x11 goto pc+31
regs=4 stack=0 before 275: (bf) r3 = r1
regs=4 stack=0 before 274: (b7) r2 = 0
; tcp = data + off;
284: (bf) r4 = r7                     ; R4_w=pkt(off=0,r=54,imm=0) R7=pkt(off=0,r=54,imm=0)
285: (0f) r4 += r5
last_idx 285 first_idx 282
regs=20 stack=0 before 284: (bf) r4 = r7
regs=20 stack=0 before 282: (15) if r3 == 0x0 goto pc+1
parent didn't have regs=20 stack=0 marks: R0_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R1=6 R2_w=0 R3_rw=P0 R4=scalar(umax=15,var_off=(0x0; 0xf)) R5_rw=P54 R6=ctx(off=0,imm=0) R7_r=pkt(off=0,r=54,imm=0) R8=pkt_end(off=0,imm=0) R9_w=2 R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56_w=mmmmmmmm fp-64_w=mmmmmmmm fp-72_w=mmmmmmmm fp-80_w=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm
last_idx 281 first_idx 166
regs=20 stack=0 before 281: (b7) r5 = 54
; if (tcp + 1 > data_end) {
286: (bf) r5 = r4                     ; R4_w=pkt(off=54,r=54,imm=0) R5_w=pkt(off=54,r=54,imm=0)
287: (07) r5 += 20                    ; R5_w=pkt(off=74,r=54,imm=0)
288: (b7) r9 = 1                      ; R9_w=1
; if (tcp + 1 > data_end) {
289: (2d) if r5 > r8 goto pc+1568     ; R5_w=pkt(off=74,r=74,imm=0) R8=pkt_end(off=0,imm=0)
; if (tcp->syn) {
290: (69) r5 = *(u16 *)(r4 +12)       ; R4_w=pkt(off=54,r=74,imm=0) R5_w=scalar(umax=65535,var_off=(0x0; 0xffff))
; if (tcp->syn) {
291: (57) r5 &= 512                   ; R5=scalar(umax=512,var_off=(0x0; 0x200))
; if (tcp->syn) {
292: (15) if r5 == 0x0 goto pc+2      ; R5=scalar(umax=512,var_off=(0x0; 0x200))
; pckt->flags |= F_SYN_SET;
293: (47) r2 |= 2                     ; R2_w=2
294: (73) *(u8 *)(r10 -36) = r2       ; R2_w=2 R10=fp0 fp-40=mmmmmmmm
295: (7b) *(u64 *)(r10 -136) = r0     ; R0=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-136_w=
296: (b7) r2 = 1                      ; R2_w=1
; bool is_icmp = !((pckt->flags & F_ICMP) == 0);
297: (15) if r3 == 0x0 goto pc+1      ; R3=P0
299: (67) r3 <<= 1                    ; R3_w=P0
; 
300: (bf) r5 = r4                     ; R4=pkt(off=54,r=74,imm=0) R5_w=pkt(off=54,r=74,imm=0)
301: (0f) r5 += r3                    ; R3_w=P0 R5_w=pkt(off=54,r=74,imm=0)
302: (69) r3 = *(u16 *)(r5 +0)        ; R3_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R5_w=pkt(off=54,r=74,imm=0)
303: (6b) *(u16 *)(r10 -48) = r3      ; R3_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-48=
304: (67) r2 <<= 1                    ; R2_w=2
305: (0f) r4 += r2
last_idx 305 first_idx 292
regs=4 stack=0 before 304: (67) r2 <<= 1
regs=4 stack=0 before 303: (6b) *(u16 *)(r10 -48) = r3
regs=4 stack=0 before 302: (69) r3 = *(u16 *)(r5 +0)
regs=4 stack=0 before 301: (0f) r5 += r3
regs=4 stack=0 before 300: (bf) r5 = r4
regs=4 stack=0 before 299: (67) r3 <<= 1
regs=4 stack=0 before 297: (15) if r3 == 0x0 goto pc+1
regs=4 stack=0 before 296: (b7) r2 = 1
306: R2_w=P2 R4_w=pkt(off=56,r=74,imm=0)
306: (69) r2 = *(u16 *)(r4 +0)        ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R4_w=pkt(off=56,r=74,imm=0)
307: (05) goto pc+21
; 
329: (6b) *(u16 *)(r10 -46) = r2      ; R2=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-48=mmmmmmmm
; memcpy(vip.vipv6, pckt.flow.dstv6, 16);
330: (79) r3 = *(u64 *)(r10 -56)      ; R3_w=scalar() R10=fp0
331: (7b) *(u64 *)(r10 -96) = r3      ; R3_w=scalar() R10=fp0 fp-96_w=mmmmmmmm
332: (79) r3 = *(u64 *)(r10 -64)      ; R3_w=scalar() R10=fp0
333: (7b) *(u64 *)(r10 -104) = r3     ; R3_w=scalar() R10=fp0 fp-104_w=mmmmmmmm
; vip.proto = pckt.flow.proto;
334: (73) *(u8 *)(r10 -86) = r1       ; R1=6 R10=fp0 fp-88=????mmmm
; vip.port = pckt.flow.port16[1];
335: (6b) *(u16 *)(r10 -88) = r2      ; R2=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-88=
336: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; 
337: (07) r2 += -104                  ; R2_w=fp-104
; vip_info = bpf_map_lookup_elem(&vip_map, &vip);
338: (18) r1 = 0xffffa03557866800     ; R1_w=map_ptr(off=0,ks=20,vs=8,imm=0)
340: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=1029,off=0,ks=20,vs=8,imm=0)
; if (!vip_info) {
341: (55) if r0 != 0x0 goto pc+16     ; R0_w=0
342: (05) goto pc+0
; vip.port = 0;
343: (6a) *(u16 *)(r10 -88) = 0       ; R10=fp0 fp-88=????mmmm
344: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
345: (07) r2 += -104                  ; R2_w=fp-104
; vip_info = bpf_map_lookup_elem(&vip_map, &vip);
346: (18) r1 = 0xffffa03557866800     ; R1_w=map_ptr(off=0,ks=20,vs=8,imm=0)
348: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=1030,off=0,ks=20,vs=8,imm=0)
349: (b7) r9 = 2                      ; R9_w=2
350: (79) r1 = *(u64 *)(r10 -136)     ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; if (!vip_info) {
351: (15) if r0 == 0x0 goto pc+1506   ; R0_w=map_value(off=0,ks=20,vs=8,imm=0)
352: (7b) *(u64 *)(r10 -136) = r1     ; R1_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-136_w=
; if (!(vip_info->flags & F_HASH_DPORT_ONLY) &&
353: (61) r1 = *(u32 *)(r0 +0)        ; R0_w=map_value(off=0,ks=20,vs=8,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (!(vip_info->flags & F_HASH_DPORT_ONLY) &&
354: (57) r1 &= 136                   ; R1=scalar(umax=136,var_off=(0x0; 0x88))
355: (55) if r1 != 0x0 goto pc+2      ; R1=0
356: (05) goto pc+0
; pckt.flow.port16[1] = 0;
357: (6a) *(u16 *)(r10 -46) = 0       ; R10=fp0 fp-48=mmmmmmmm
; if (data_end - data > MAX_PCKT_SIZE) {
358: (bf) r1 = r8                     ; R1_w=pkt_end(off=0,imm=0) R8=pkt_end(off=0,imm=0)
359: (1f) r1 -= r7                    ; R1_w=scalar() R7=pkt(off=0,r=74,imm=0)
360: (b7) r9 = 1                      ; R9_w=1
361: (79) r2 = *(u64 *)(r10 -136)     ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; if (data_end - data > MAX_PCKT_SIZE) {
362: (65) if r1 s> 0x5ea goto pc+1495         ; R1_w=scalar(smax=1514)
363: (7b) *(u64 *)(r10 -144) = r0     ; R0=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-144_w=map_value
364: (7b) *(u64 *)(r10 -136) = r2     ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-136_w=
365: (05) goto pc+0
; __u32 stats_key = MAX_VIPS + LRU_CNTRS;
366: (62) *(u32 *)(r10 -116) = 512    ; R10=fp0 fp-120=mmmm????
367: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; 
368: (07) r2 += -116                  ; R2_w=fp-116
; data_stats = bpf_map_lookup_elem(&stats, &stats_key);
369: (18) r1 = 0xffffa03499be8000     ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
371: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=1031,off=0,ks=4,vs=16,imm=0)
; if (!data_stats) {
372: (15) if r0 == 0x0 goto pc+1485   ; R0_w=map_value(off=0,ks=4,vs=16,imm=0)
; data_stats->v1 += 1;
373: (79) r1 = *(u64 *)(r0 +0)        ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
374: (07) r1 += 1                     ; R1_w=scalar()
375: (7b) *(u64 *)(r10 -160) = r0     ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R10=fp0 fp-160_w=map_value
376: (7b) *(u64 *)(r0 +0) = r1        ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
377: (79) r9 = *(u64 *)(r10 -144)     ; R9_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
; if ((vip_info->flags & F_HASH_NO_SRC_PORT)) {
378: (61) r1 = *(u32 *)(r9 +0)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9_w=map_value(off=0,ks=20,vs=8,imm=0)
; if ((vip_info->flags & F_HASH_NO_SRC_PORT)) {
379: (57) r1 &= 1                     ; R1=scalar(umax=1,var_off=(0x0; 0x1))
; if ((vip_info->flags & F_HASH_NO_SRC_PORT)) {
380: (15) if r1 == 0x0 goto pc+2      ; R1=scalar(umax=1,var_off=(0x0; 0x1))
381: (05) goto pc+0
; pckt.flow.port16[0] = 0;
382: (6a) *(u16 *)(r10 -48) = 0       ; R10=fp0 fp-48=mmmmmmmm
; vip_num = vip_info->vip_num;
383: (61) r1 = *(u32 *)(r9 +4)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9=map_value(off=0,ks=20,vs=8,imm=0)
384: (7b) *(u64 *)(r10 -168) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-168_w=
; vip_num = vip_info->vip_num;
385: (63) *(u32 *)(r10 -108) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-112=mmmmmmmm
; __u32 cpu_num = bpf_get_smp_processor_id();
386: (85) call bpf_get_smp_processor_id#8     ; R0_w=scalar()
; __u32 cpu_num = bpf_get_smp_processor_id();
387: (63) *(u32 *)(r10 -120) = r0     ; R0_w=scalar() R10=fp0 fp-120=mmmmmmmm
388: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; 
389: (07) r2 += -120                  ; R2_w=fp-120
; void* lru_map = bpf_map_lookup_elem(&lru_mapping, &cpu_num);
390: (18) r1 = 0xffffa0376748a000     ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
392: (85) call bpf_map_lookup_elem#1          ; R0=map_value_or_null(id=1032,off=0,ks=4,vs=4,imm=0)
; if (!lru_map) {
393: (55) if r0 != 0x0 goto pc+14     ; R0=0
394: (05) goto pc+0
; __u32 lru_stats_key = MAX_VIPS + FALLBACK_LRU_CNTR;
395: (62) *(u32 *)(r10 -16) = 515     ; R10=fp0 fp-16=????mmmm
396: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
397: (07) r2 += -16                   ; R2_w=fp-16
; struct lb_stats* lru_stats = bpf_map_lookup_elem(&stats, &lru_stats_key);
398: (18) r1 = 0xffffa03499be8000     ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
400: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=1033,off=0,ks=4,vs=16,imm=0)
; if (!lru_stats) {
401: (15) if r0 == 0x0 goto pc+1455   ; R0_w=map_value(off=0,ks=4,vs=16,imm=0)
; lru_stats->v1 += 1;
402: (79) r1 = *(u64 *)(r0 +0)        ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
403: (07) r1 += 1                     ; R1_w=scalar()
404: (7b) *(u64 *)(r0 +0) = r1        ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
405: (18) r0 = 0xffffa03557862800     ; R0_w=map_ptr(off=0,ks=40,vs=16,imm=0)
407: (79) r9 = *(u64 *)(r10 -144)     ; R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
408: (7b) *(u64 *)(r10 -152) = r0     ; R0=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0 fp-152_w=map_ptr
; if ((vip_info->flags & F_QUIC_VIP)) {
409: (61) r1 = *(u32 *)(r9 +0)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9=map_value(off=0,ks=20,vs=8,imm=0)
; if ((vip_info->flags & F_QUIC_VIP)) {
410: (57) r1 &= 4                     ; R1_w=scalar(umax=4,var_off=(0x0; 0x4))
; if ((vip_info->flags & F_QUIC_VIP)) {
411: (15) if r1 == 0x0 goto pc+457    ; R1_w=scalar(umax=4,var_off=(0x0; 0x4))
; bool is_icmp = (pckt.flags & F_ICMP);
412: (71) r1 = *(u8 *)(r10 -36)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; bool is_icmp = (pckt.flags & F_ICMP);
413: (57) r1 &= 1                     ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
; if (is_icmp) {
414: (15) if r1 == 0x0 goto pc+272    ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
415: (05) goto pc+0
; __u32 stats_key = MAX_VIPS + QUIC_ICMP_STATS;
416: (62) *(u32 *)(r10 -16) = 523     ; R10=fp0 fp-16=????mmmm
417: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
418: (07) r2 += -16                   ; R2_w=fp-16
; struct lb_stats* data_stats = bpf_map_lookup_elem(&stats, &stats_key);
419: (18) r1 = 0xffffa03499be8000     ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
421: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=1034,off=0,ks=4,vs=16,imm=0)
; if (!data_stats) {
422: (15) if r0 == 0x0 goto pc+1434   ; R0_w=map_value(off=0,ks=4,vs=16,imm=0)
; data_stats->v1 += 1;
423: (79) r1 = *(u64 *)(r0 +0)        ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
424: (07) r1 += 1                     ; R1_w=scalar()
425: (7b) *(u64 *)(r0 +0) = r1        ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
; (icmp_hdr->icmp6_code == ICMPV6_ADDR_UNREACH) ||
426: (71) r1 = *(u8 *)(r7 +55)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=74,imm=0)
; (icmp_hdr->icmp6_code == ICMPV6_ADDR_UNREACH) ||
427: (07) r1 += -3                    ; R1_w=scalar(smin=-3,smax=252)
428: (57) r1 &= 255                   ; R1_w=scalar(umax=255,var_off=(0x0; 0xff))
429: (79) r9 = *(u64 *)(r10 -144)
430: safe

from 422 to 1857: safe

from 414 to 687: R0=map_ptr(off=0,ks=40,vs=16,imm=0) R1=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=74,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; pckt->flow.src = iph->daddr;
687: (05) goto pc+0
; __u32 quic_packets_stats_key = 0;
688: (62) *(u32 *)(r10 -28) = 0       ; R10=fp0 fp-32=mmmm????
689: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
690: (07) r2 += -28                   ; R2_w=fp-28
; bpf_map_lookup_elem(&quic_stats_map, &quic_packets_stats_key);
691: (18) r1 = 0xffffa03587064800     ; R1_w=map_ptr(off=0,ks=4,vs=104,imm=0)
693: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=1035,off=0,ks=4,vs=104,imm=0)
694: (bf) r9 = r0                     ; R0_w=map_value_or_null(id=1035,off=0,ks=4,vs=104,imm=0) R9_w=map_value_or_null(id=1035,off=0,ks=4,vs=104,imm=0)
; if (!quic_packets_stats) {
695: (15) if r9 == 0x0 goto pc+1161   ; R9_w=map_value(off=0,ks=4,vs=104,imm=0)
; bool is_icmp = (pckt->flags & F_ICMP);
696: (71) r2 = *(u8 *)(r10 -36)       ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; bool is_icmp = (pckt->flags & F_ICMP);
697: (57) r2 &= 1                     ; R2_w=scalar(umax=1,var_off=(0x0; 0x1))
698: (b7) r1 = 54                     ; R1=54
; if (is_ipv6) {
699: (15) if r2 == 0x0 goto pc+1      ; R2=scalar(umax=1,var_off=(0x0; 0x1))
700: (b7) r1 = 102                    ; R1_w=102
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
701: (0f) r7 += r1
last_idx 701 first_idx 699
regs=2 stack=0 before 700: (b7) r1 = 102
702: R1_w=P102 R7_w=pkt(off=102,r=74,imm=0)
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
702: (bf) r1 = r7                     ; R1_w=pkt(off=102,r=74,imm=0) R7_w=pkt(off=102,r=74,imm=0)
703: (07) r1 += 9                     ; R1_w=pkt(off=111,r=74,imm=0)
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
704: (2d) if r1 > r8 goto pc+160      ; R1_w=pkt(off=111,r=111,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
705: (71) r2 = *(u8 *)(r7 +8)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=102,r=111,imm=0)
706: (67) r2 <<= 56                   ; R2_w=scalar(smax=9151314442816847872,umax=18374686479671623680,var_off=(0x0; 0xff00000000000000),s32_min=0,s32_max=0,u32_max=0)
707: (c7) r2 s>>= 56
708: safe

from 704 to 865: safe

from 699 to 701: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=54 R2=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=74,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
701: (0f) r7 += r1
last_idx 701 first_idx 701
parent didn't have regs=2 stack=0 marks: R0=map_value(off=0,ks=4,vs=104,imm=0) R1_r=P54 R2=0 R6=ctx(off=0,imm=0) R7_r=pkt(off=0,r=74,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
last_idx 699 first_idx 699
regs=2 stack=0 before 699: (15) if r2 == 0x0 goto pc+1
parent didn't have regs=2 stack=0 marks: R0_w=map_value(off=0,ks=4,vs=104,imm=0) R1_rw=P54 R2_rw=scalar(umax=1,var_off=(0x0; 0x1)) R6_r=ctx(off=0,imm=0) R7_r=pkt(off=0,r=74,imm=0) R8_r=pkt_end(off=0,imm=0) R9_rw=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16_r=????mmmm fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96_r=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=
last_idx 698 first_idx 687
regs=2 stack=0 before 698: (b7) r1 = 54
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
702: (bf) r1 = r7                     ; R1_w=pkt(off=54,r=74,imm=0) R7_w=pkt(off=54,r=74,imm=0)
703: (07) r1 += 9                     ; R1_w=pkt(off=63,r=74,imm=0)
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
704: (2d) if r1 > r8 goto pc+160      ; R1_w=pkt(off=63,r=74,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
705: (71) r2 = *(u8 *)(r7 +8)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=54,r=74,imm=0)
706: (67) r2 <<= 56                   ; R2_w=scalar(smax=9151314442816847872,umax=18374686479671623680,var_off=(0x0; 0xff00000000000000),s32_min=0,s32_max=0,u32_max=0)
707: (c7) r2 s>>= 56                  ; R2_w=scalar(smin=-128,smax=127)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
708: (65) if r2 s> 0xffffffff goto pc+40      ; R2_w=scalar(umin=18446744073709551488,var_off=(0xffffffffffffff80; 0x7f),u32_min=-128)
; if (quic_data + sizeof(struct quic_long_header) > data_end) {
709: (bf) r1 = r7                     ; R1_w=pkt(off=54,r=74,imm=0) R7_w=pkt(off=54,r=74,imm=0)
710: (07) r1 += 22                    ; R1=pkt(off=76,r=74,imm=0)
; if (quic_data + sizeof(struct quic_long_header) > data_end) {
711: (2d) if r1 > r8 goto pc+153      ; R1=pkt(off=76,r=76,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_PACKET_TYPE_MASK) < QUIC_HANDSHAKE) {
712: (57) r2 &= 32                    ; R2_w=scalar(umax=32,var_off=(0x0; 0x20))
; if ((*pkt_type & QUIC_PACKET_TYPE_MASK) < QUIC_HANDSHAKE) {
713: (15) if r2 == 0x0 goto pc+77     ; R2_w=scalar(umax=32,var_off=(0x0; 0x20))
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
714: (71) r1 = *(u8 *)(r7 +13)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=54,r=76,imm=0)
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
715: (07) r7 += 14                    ; R7_w=pkt(off=68,r=76,imm=0)
716: (25) if r1 > 0x7 goto pc+36      ; R1_w=scalar(umax=7,var_off=(0x0; 0x7))
717: (05) goto pc+147
865: safe

from 716 to 753: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(umin=8,umax=255,var_off=(0x0; 0xff)) R2=scalar(umax=32,var_off=(0x0; 0x20)) R6=ctx(off=0,imm=0) R7=pkt(off=68,r=76,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (!connId) {
753: (15) if r7 == 0x0 goto pc+111    ; R7=pkt(off=68,r=76,imm=0)
; __u8 connIdVersion = (connId[0] >> 6);
754: (71) r1 = *(u8 *)(r7 +0)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=68,r=76,imm=0)
755: (bf) r2 = r1                     ; R1_w=scalar(id=1036,umax=255,var_off=(0x0; 0xff)) R2_w=scalar(id=1036,umax=255,var_off=(0x0; 0xff))
756: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
; if (connIdVersion == QUIC_CONNID_VERSION_V1) {
757: (15) if r2 == 0x3 goto pc+48     ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
758: (15) if r2 == 0x2 goto pc+59     ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
759: (55) if r2 != 0x1 goto pc+105    ; R2_w=1
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
760: (57) r1 &= 63                    ; R1_w=scalar(umax=63,var_off=(0x0; 0x3f))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
761: (67) r1 <<= 10                   ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
762: (71) r8 = *(u8 *)(r7 +1)         ; R7=pkt(off=68,r=76,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
763: (67) r8 <<= 2                    ; R8_w=scalar(umax=1020,var_off=(0x0; 0x3fc))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
764: (4f) r8 |= r1                    ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00)) R8_w=scalar()
765: (18) r1 = 0x100000000            ; R1_w=4294967296
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
767: (71) r2 = *(u8 *)(r7 +2)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=68,r=76,imm=0)
768: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
769: (05) goto pc+56
frame 1: propagating r0
last_idx 826 first_idx 753
regs=2 stack=0 before 769: (05) goto pc+56
regs=2 stack=0 before 768: (77) r2 >>= 6
regs=2 stack=0 before 767: (71) r2 = *(u8 *)(r7 +2)
regs=2 stack=0 before 765: (18) r1 = 0x100000000
826: safe

from 759 to 865: safe

from 758 to 818: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=1036,umax=255,var_off=(0x0; 0xff)) R2=2 R6=ctx(off=0,imm=0) R7=pkt(off=68,r=76,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
818: (71) r1 = *(u8 *)(r7 +1)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=68,r=76,imm=0)
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
819: (67) r1 <<= 16                   ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
820: (71) r8 = *(u8 *)(r7 +2)         ; R7=pkt(off=68,r=76,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
821: (67) r8 <<= 8                    ; R8_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
822: (4f) r8 |= r1                    ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000)) R8_w=scalar()
823: (18) r1 = 0x200000000            ; R1_w=8589934592
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
825: (71) r2 = *(u8 *)(r7 +3)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=68,r=76,imm=0)
826: (57) r2 &= 255                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
827: (4f) r8 |= r2                    ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
828: (bf) r2 = r8                     ; R2_w=scalar(id=1037) R8_w=scalar(id=1037)
829: (67) r2 <<= 32                   ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
830: (c7) r2 s>>= 32                  ; R2_w=scalar(smin=-2147483648,smax=2147483647)
831: (b7) r3 = 1                      ; R3_w=1
; if (qpr.server_id > 0) {
832: (6d) if r3 s> r2 goto pc+32      ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
833: (77) r1 >>= 32                   ; R1_w=2
; if (cid_version == QUIC_CONNID_VERSION_V1) {
834: (15) if r1 == 0x3 goto pc+5
last_idx 834 first_idx 818
regs=2 stack=0 before 833: (77) r1 >>= 32
regs=2 stack=0 before 832: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 831: (b7) r3 = 1
regs=2 stack=0 before 830: (c7) r2 s>>= 32
regs=2 stack=0 before 829: (67) r2 <<= 32
regs=2 stack=0 before 828: (bf) r2 = r8
regs=2 stack=0 before 827: (4f) r8 |= r2
regs=2 stack=0 before 826: (57) r2 &= 255
regs=2 stack=0 before 825: (71) r2 = *(u8 *)(r7 +3)
regs=2 stack=0 before 823: (18) r1 = 0x200000000
frame 1: propagating r0
835: safe

from 832 to 865: safe

from 757 to 806: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=1036,umax=255,var_off=(0x0; 0xff)) R2=3 R6=ctx(off=0,imm=0) R7=pkt(off=68,r=76,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
806: (71) r1 = *(u8 *)(r7 +1)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=68,r=76,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
807: (67) r1 <<= 24                   ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
808: (71) r8 = *(u8 *)(r7 +2)         ; R7=pkt(off=68,r=76,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
809: (67) r8 <<= 16                   ; R8_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
810: (4f) r8 |= r1                    ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432) R8_w=scalar()
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
811: (71) r1 = *(u8 *)(r7 +3)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=68,r=76,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
812: (67) r1 <<= 8                    ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
813: (4f) r8 |= r1                    ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00)) R8_w=scalar()
814: (18) r1 = 0x300000000            ; R1_w=12884901888
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
816: (71) r2 = *(u8 *)(r7 +4)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=68,r=76,imm=0)
817: (05) goto pc+8
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
826: (57) r2 &= 255                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
827: (4f) r8 |= r2                    ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
828: (bf) r2 = r8                     ; R2_w=scalar(id=1038) R8_w=scalar(id=1038)
829: (67) r2 <<= 32                   ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
830: (c7) r2 s>>= 32                  ; R2_w=scalar(smin=-2147483648,smax=2147483647)
831: (b7) r3 = 1                      ; R3_w=1
; if (qpr.server_id > 0) {
832: (6d) if r3 s> r2 goto pc+32      ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
833: (77) r1 >>= 32
frame 1: propagating r0
last_idx 834 first_idx 806
regs=2 stack=0 before 833: (77) r1 >>= 32
regs=2 stack=0 before 832: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 831: (b7) r3 = 1
regs=2 stack=0 before 830: (c7) r2 s>>= 32
regs=2 stack=0 before 829: (67) r2 <<= 32
regs=2 stack=0 before 828: (bf) r2 = r8
regs=2 stack=0 before 827: (4f) r8 |= r2
regs=2 stack=0 before 826: (57) r2 &= 255
regs=2 stack=0 before 817: (05) goto pc+8
regs=2 stack=0 before 816: (71) r2 = *(u8 *)(r7 +4)
regs=2 stack=0 before 814: (18) r1 = 0x300000000
834: safe

from 832 to 865: safe

from 753 to 865: safe

from 713 to 791: safe

from 711 to 865: safe

from 708 to 749: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=pkt(off=63,r=74,imm=0) R2=scalar(umax=127,var_off=(0x0; 0x7f)) R6=ctx(off=0,imm=0) R7=pkt(off=54,r=74,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (quic_data + sizeof(struct quic_short_header) > data_end) {
749: (bf) r2 = r7                     ; R2_w=pkt(off=54,r=74,imm=0) R7=pkt(off=54,r=74,imm=0)
750: (07) r2 += 17                    ; R2_w=pkt(off=71,r=74,imm=0)
751: (bf) r7 = r1                     ; R1=pkt(off=63,r=74,imm=0) R7_w=pkt(off=63,r=74,imm=0)
; if (quic_data + sizeof(struct quic_short_header) > data_end) {
752: (2d) if r2 > r8 goto pc+112      ; R2_w=pkt(off=71,r=74,imm=0) R8=pkt_end(off=0,imm=0)
; if (!connId) {
753: (15) if r7 == 0x0 goto pc+111    ; R7_w=pkt(off=63,r=74,imm=0)
; __u8 connIdVersion = (connId[0] >> 6);
754: (71) r1 = *(u8 *)(r7 +0)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=63,r=74,imm=0)
755: (bf) r2 = r1                     ; R1_w=scalar(id=1039,umax=255,var_off=(0x0; 0xff)) R2_w=scalar(id=1039,umax=255,var_off=(0x0; 0xff))
756: (77) r2 >>= 6                    ; R2=scalar(umax=3,var_off=(0x0; 0x3))
; if (connIdVersion == QUIC_CONNID_VERSION_V1) {
757: (15) if r2 == 0x3 goto pc+48     ; R2=scalar(umax=3,var_off=(0x0; 0x3))
758: (15) if r2 == 0x2 goto pc+59     ; R2=scalar(umax=3,var_off=(0x0; 0x3))
759: (55) if r2 != 0x1 goto pc+105    ; R2=1
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
760: (57) r1 &= 63                    ; R1_w=scalar(umax=63,var_off=(0x0; 0x3f))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
761: (67) r1 <<= 10                   ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
762: (71) r8 = *(u8 *)(r7 +1)         ; R7=pkt(off=63,r=74,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
763: (67) r8 <<= 2                    ; R8_w=scalar(umax=1020,var_off=(0x0; 0x3fc))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
764: (4f) r8 |= r1                    ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00)) R8_w=scalar()
765: (18) r1 = 0x100000000            ; R1_w=4294967296
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
767: (71) r2 = *(u8 *)(r7 +2)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=63,r=74,imm=0)
768: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
769: (05) goto pc+56
frame 1: propagating r0
last_idx 826 first_idx 757
regs=2 stack=0 before 769: (05) goto pc+56
regs=2 stack=0 before 768: (77) r2 >>= 6
regs=2 stack=0 before 767: (71) r2 = *(u8 *)(r7 +2)
regs=2 stack=0 before 765: (18) r1 = 0x100000000
826: safe

from 759 to 865: safe

from 758 to 818: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=1039,umax=255,var_off=(0x0; 0xff)) R2=2 R6=ctx(off=0,imm=0) R7=pkt(off=63,r=74,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
818: (71) r1 = *(u8 *)(r7 +1)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=63,r=74,imm=0)
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
819: (67) r1 <<= 16                   ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
820: (71) r8 = *(u8 *)(r7 +2)         ; R7=pkt(off=63,r=74,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
821: (67) r8 <<= 8                    ; R8_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
822: (4f) r8 |= r1                    ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000)) R8_w=scalar()
823: (18) r1 = 0x200000000            ; R1_w=8589934592
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
825: (71) r2 = *(u8 *)(r7 +3)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=63,r=74,imm=0)
826: (57) r2 &= 255                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
827: (4f) r8 |= r2                    ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
828: (bf) r2 = r8                     ; R2_w=scalar(id=1040) R8_w=scalar(id=1040)
829: (67) r2 <<= 32                   ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
830: (c7) r2 s>>= 32                  ; R2_w=scalar(smin=-2147483648,smax=2147483647)
831: (b7) r3 = 1                      ; R3_w=1
; if (qpr.server_id > 0) {
832: (6d) if r3 s> r2 goto pc+32      ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
833: (77) r1 >>= 32                   ; R1_w=2
; if (cid_version == QUIC_CONNID_VERSION_V1) {
834: (15) if r1 == 0x3 goto pc+5
last_idx 834 first_idx 818
regs=2 stack=0 before 833: (77) r1 >>= 32
regs=2 stack=0 before 832: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 831: (b7) r3 = 1
regs=2 stack=0 before 830: (c7) r2 s>>= 32
regs=2 stack=0 before 829: (67) r2 <<= 32
regs=2 stack=0 before 828: (bf) r2 = r8
regs=2 stack=0 before 827: (4f) r8 |= r2
regs=2 stack=0 before 826: (57) r2 &= 255
regs=2 stack=0 before 825: (71) r2 = *(u8 *)(r7 +3)
regs=2 stack=0 before 823: (18) r1 = 0x200000000
frame 1: propagating r0
835: safe

from 832 to 865: safe

from 757 to 806: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=1039,umax=255,var_off=(0x0; 0xff)) R2=3 R6=ctx(off=0,imm=0) R7=pkt(off=63,r=74,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
806: (71) r1 = *(u8 *)(r7 +1)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=63,r=74,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
807: (67) r1 <<= 24                   ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
808: (71) r8 = *(u8 *)(r7 +2)         ; R7=pkt(off=63,r=74,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
809: (67) r8 <<= 16                   ; R8_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
810: (4f) r8 |= r1                    ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432) R8_w=scalar()
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
811: (71) r1 = *(u8 *)(r7 +3)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=63,r=74,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
812: (67) r1 <<= 8                    ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
813: (4f) r8 |= r1                    ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00)) R8_w=scalar()
814: (18) r1 = 0x300000000            ; R1_w=12884901888
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
816: (71) r2 = *(u8 *)(r7 +4)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=63,r=74,imm=0)
817: (05) goto pc+8
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
826: (57) r2 &= 255                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
827: (4f) r8 |= r2                    ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
828: (bf) r2 = r8                     ; R2_w=scalar(id=1041) R8_w=scalar(id=1041)
829: (67) r2 <<= 32                   ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
830: (c7) r2 s>>= 32                  ; R2_w=scalar(smin=-2147483648,smax=2147483647)
831: (b7) r3 = 1                      ; R3_w=1
; if (qpr.server_id > 0) {
832: (6d) if r3 s> r2 goto pc+32      ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
833: (77) r1 >>= 32
frame 1: propagating r0
last_idx 834 first_idx 806
regs=2 stack=0 before 833: (77) r1 >>= 32
regs=2 stack=0 before 832: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 831: (b7) r3 = 1
regs=2 stack=0 before 830: (c7) r2 s>>= 32
regs=2 stack=0 before 829: (67) r2 <<= 32
regs=2 stack=0 before 828: (bf) r2 = r8
regs=2 stack=0 before 827: (4f) r8 |= r2
regs=2 stack=0 before 826: (57) r2 &= 255
regs=2 stack=0 before 817: (05) goto pc+8
regs=2 stack=0 before 816: (71) r2 = *(u8 *)(r7 +4)
regs=2 stack=0 before 814: (18) r1 = 0x300000000
834: safe

from 832 to 865: safe

from 753 to 865: safe

from 752 to 865: safe

from 704 to 865: safe

from 695 to 1857: safe

from 411 to 869: safe

from 401 to 1857: safe

from 393 to 408: R0=map_ptr(off=0,ks=40,vs=16,imm=0) R6=ctx(off=0,imm=0) R7=pkt(off=0,r=74,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-160=map_value fp-168=
; lru_stats->v1 += 1;
408: (7b) *(u64 *)(r10 -152) = r0     ; R0=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0 fp-152_w=map_ptr
; if ((vip_info->flags & F_QUIC_VIP)) {
409: (61) r1 = *(u32 *)(r9 +0)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9=map_value(off=0,ks=20,vs=8,imm=0)
; if ((vip_info->flags & F_QUIC_VIP)) {
410: (57) r1 &= 4                     ; R1_w=scalar(umax=4,var_off=(0x0; 0x4))
; if ((vip_info->flags & F_QUIC_VIP)) {
411: (15) if r1 == 0x0 goto pc+457    ; R1_w=scalar(umax=4,var_off=(0x0; 0x4))
; bool is_icmp = (pckt.flags & F_ICMP);
412: (71) r1 = *(u8 *)(r10 -36)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; bool is_icmp = (pckt.flags & F_ICMP);
413: (57) r1 &= 1                     ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
; if (is_icmp) {
414: (15) if r1 == 0x0 goto pc+272    ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
415: (05) goto pc+0
; __u32 stats_key = MAX_VIPS + QUIC_ICMP_STATS;
416: (62) *(u32 *)(r10 -16) = 523     ; R10=fp0 fp-16=????mmmm
417: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
418: (07) r2 += -16                   ; R2_w=fp-16
; struct lb_stats* data_stats = bpf_map_lookup_elem(&stats, &stats_key);
419: (18) r1 = 0xffffa03499be8000     ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
421: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=1042,off=0,ks=4,vs=16,imm=0)
; if (!data_stats) {
422: (15) if r0 == 0x0 goto pc+1434   ; R0_w=map_value(off=0,ks=4,vs=16,imm=0)
; data_stats->v1 += 1;
423: (79) r1 = *(u64 *)(r0 +0)        ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
424: (07) r1 += 1                     ; R1_w=scalar()
425: (7b) *(u64 *)(r0 +0) = r1        ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
; (icmp_hdr->icmp6_code == ICMPV6_ADDR_UNREACH) ||
426: (71) r1 = *(u8 *)(r7 +55)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=74,imm=0)
; (icmp_hdr->icmp6_code == ICMPV6_ADDR_UNREACH) ||
427: (07) r1 += -3                    ; R1_w=scalar(smin=-3,smax=252)
428: (57) r1 &= 255                   ; R1_w=scalar(umax=255,var_off=(0x0; 0xff))
429: (79) r9 = *(u64 *)(r10 -144)
430: safe

from 422 to 1857: safe

from 414 to 687: R0=map_ptr(off=0,ks=40,vs=16,imm=0) R1=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=74,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; pckt->flow.src = iph->daddr;
687: (05) goto pc+0
; __u32 quic_packets_stats_key = 0;
688: (62) *(u32 *)(r10 -28) = 0       ; R10=fp0 fp-32=mmmm????
689: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
690: (07) r2 += -28                   ; R2_w=fp-28
; bpf_map_lookup_elem(&quic_stats_map, &quic_packets_stats_key);
691: (18) r1 = 0xffffa03587064800     ; R1_w=map_ptr(off=0,ks=4,vs=104,imm=0)
693: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=1043,off=0,ks=4,vs=104,imm=0)
694: (bf) r9 = r0                     ; R0_w=map_value_or_null(id=1043,off=0,ks=4,vs=104,imm=0) R9_w=map_value_or_null(id=1043,off=0,ks=4,vs=104,imm=0)
; if (!quic_packets_stats) {
695: (15) if r9 == 0x0 goto pc+1161   ; R9_w=map_value(off=0,ks=4,vs=104,imm=0)
; bool is_icmp = (pckt->flags & F_ICMP);
696: (71) r2 = *(u8 *)(r10 -36)       ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; bool is_icmp = (pckt->flags & F_ICMP);
697: (57) r2 &= 1                     ; R2_w=scalar(umax=1,var_off=(0x0; 0x1))
698: (b7) r1 = 54                     ; R1=54
; if (is_ipv6) {
699: (15) if r2 == 0x0 goto pc+1      ; R2=scalar(umax=1,var_off=(0x0; 0x1))
700: (b7) r1 = 102                    ; R1_w=102
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
701: (0f) r7 += r1
last_idx 701 first_idx 699
regs=2 stack=0 before 700: (b7) r1 = 102
702: R1_w=P102 R7_w=pkt(off=102,r=74,imm=0)
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
702: (bf) r1 = r7                     ; R1_w=pkt(off=102,r=74,imm=0) R7_w=pkt(off=102,r=74,imm=0)
703: (07) r1 += 9                     ; R1_w=pkt(off=111,r=74,imm=0)
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
704: (2d) if r1 > r8 goto pc+160      ; R1_w=pkt(off=111,r=111,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
705: (71) r2 = *(u8 *)(r7 +8)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=102,r=111,imm=0)
706: (67) r2 <<= 56                   ; R2_w=scalar(smax=9151314442816847872,umax=18374686479671623680,var_off=(0x0; 0xff00000000000000),s32_min=0,s32_max=0,u32_max=0)
707: (c7) r2 s>>= 56
708: safe

from 704 to 865: safe

from 699 to 701: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=54 R2=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=74,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
701: (0f) r7 += r1
last_idx 701 first_idx 701
parent didn't have regs=2 stack=0 marks: R0=map_value(off=0,ks=4,vs=104,imm=0) R1_r=P54 R2=0 R6=ctx(off=0,imm=0) R7_r=pkt(off=0,r=74,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
last_idx 699 first_idx 699
regs=2 stack=0 before 699: (15) if r2 == 0x0 goto pc+1
parent didn't have regs=2 stack=0 marks: R0_w=map_value(off=0,ks=4,vs=104,imm=0) R1_rw=P54 R2_rw=scalar(umax=1,var_off=(0x0; 0x1)) R6_r=ctx(off=0,imm=0) R7_r=pkt(off=0,r=74,imm=0) R8_r=pkt_end(off=0,imm=0) R9_rw=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96_r=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=
last_idx 698 first_idx 687
regs=2 stack=0 before 698: (b7) r1 = 54
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
702: (bf) r1 = r7                     ; R1_w=pkt(off=54,r=74,imm=0) R7_w=pkt(off=54,r=74,imm=0)
703: (07) r1 += 9                     ; R1_w=pkt(off=63,r=74,imm=0)
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
704: (2d) if r1 > r8 goto pc+160      ; R1_w=pkt(off=63,r=74,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
705: (71) r2 = *(u8 *)(r7 +8)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=54,r=74,imm=0)
706: (67) r2 <<= 56                   ; R2_w=scalar(smax=9151314442816847872,umax=18374686479671623680,var_off=(0x0; 0xff00000000000000),s32_min=0,s32_max=0,u32_max=0)
707: (c7) r2 s>>= 56                  ; R2_w=scalar(smin=-128,smax=127)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
708: (65) if r2 s> 0xffffffff goto pc+40      ; R2_w=scalar(umin=18446744073709551488,var_off=(0xffffffffffffff80; 0x7f),u32_min=-128)
; if (quic_data + sizeof(struct quic_long_header) > data_end) {
709: (bf) r1 = r7                     ; R1_w=pkt(off=54,r=74,imm=0) R7_w=pkt(off=54,r=74,imm=0)
710: (07) r1 += 22                    ; R1=pkt(off=76,r=74,imm=0)
; if (quic_data + sizeof(struct quic_long_header) > data_end) {
711: (2d) if r1 > r8 goto pc+153      ; R1=pkt(off=76,r=76,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_PACKET_TYPE_MASK) < QUIC_HANDSHAKE) {
712: (57) r2 &= 32                    ; R2_w=scalar(umax=32,var_off=(0x0; 0x20))
; if ((*pkt_type & QUIC_PACKET_TYPE_MASK) < QUIC_HANDSHAKE) {
713: (15) if r2 == 0x0 goto pc+77     ; R2_w=scalar(umax=32,var_off=(0x0; 0x20))
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
714: (71) r1 = *(u8 *)(r7 +13)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=54,r=76,imm=0)
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
715: (07) r7 += 14                    ; R7_w=pkt(off=68,r=76,imm=0)
716: (25) if r1 > 0x7 goto pc+36      ; R1_w=scalar(umax=7,var_off=(0x0; 0x7))
717: (05) goto pc+147
865: safe

from 716 to 753: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(umin=8,umax=255,var_off=(0x0; 0xff)) R2=scalar(umax=32,var_off=(0x0; 0x20)) R6=ctx(off=0,imm=0) R7=pkt(off=68,r=76,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (!connId) {
753: (15) if r7 == 0x0 goto pc+111    ; R7=pkt(off=68,r=76,imm=0)
; __u8 connIdVersion = (connId[0] >> 6);
754: (71) r1 = *(u8 *)(r7 +0)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=68,r=76,imm=0)
755: (bf) r2 = r1                     ; R1_w=scalar(id=1044,umax=255,var_off=(0x0; 0xff)) R2_w=scalar(id=1044,umax=255,var_off=(0x0; 0xff))
756: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
; if (connIdVersion == QUIC_CONNID_VERSION_V1) {
757: (15) if r2 == 0x3 goto pc+48     ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
758: (15) if r2 == 0x2 goto pc+59     ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
759: (55) if r2 != 0x1 goto pc+105    ; R2_w=1
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
760: (57) r1 &= 63                    ; R1_w=scalar(umax=63,var_off=(0x0; 0x3f))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
761: (67) r1 <<= 10                   ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
762: (71) r8 = *(u8 *)(r7 +1)         ; R7=pkt(off=68,r=76,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
763: (67) r8 <<= 2                    ; R8_w=scalar(umax=1020,var_off=(0x0; 0x3fc))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
764: (4f) r8 |= r1                    ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00)) R8_w=scalar()
765: (18) r1 = 0x100000000            ; R1_w=4294967296
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
767: (71) r2 = *(u8 *)(r7 +2)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=68,r=76,imm=0)
768: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
769: (05) goto pc+56
frame 1: propagating r0
last_idx 826 first_idx 753
regs=2 stack=0 before 769: (05) goto pc+56
regs=2 stack=0 before 768: (77) r2 >>= 6
regs=2 stack=0 before 767: (71) r2 = *(u8 *)(r7 +2)
regs=2 stack=0 before 765: (18) r1 = 0x100000000
826: safe

from 759 to 865: safe

from 758 to 818: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=1044,umax=255,var_off=(0x0; 0xff)) R2=2 R6=ctx(off=0,imm=0) R7=pkt(off=68,r=76,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
818: (71) r1 = *(u8 *)(r7 +1)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=68,r=76,imm=0)
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
819: (67) r1 <<= 16                   ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
820: (71) r8 = *(u8 *)(r7 +2)         ; R7=pkt(off=68,r=76,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
821: (67) r8 <<= 8                    ; R8_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
822: (4f) r8 |= r1                    ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000)) R8_w=scalar()
823: (18) r1 = 0x200000000            ; R1_w=8589934592
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
825: (71) r2 = *(u8 *)(r7 +3)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=68,r=76,imm=0)
826: (57) r2 &= 255                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
827: (4f) r8 |= r2                    ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
828: (bf) r2 = r8                     ; R2_w=scalar(id=1045) R8_w=scalar(id=1045)
829: (67) r2 <<= 32                   ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
830: (c7) r2 s>>= 32                  ; R2_w=scalar(smin=-2147483648,smax=2147483647)
831: (b7) r3 = 1                      ; R3_w=1
; if (qpr.server_id > 0) {
832: (6d) if r3 s> r2 goto pc+32      ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
833: (77) r1 >>= 32                   ; R1_w=2
; if (cid_version == QUIC_CONNID_VERSION_V1) {
834: (15) if r1 == 0x3 goto pc+5
last_idx 834 first_idx 818
regs=2 stack=0 before 833: (77) r1 >>= 32
regs=2 stack=0 before 832: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 831: (b7) r3 = 1
regs=2 stack=0 before 830: (c7) r2 s>>= 32
regs=2 stack=0 before 829: (67) r2 <<= 32
regs=2 stack=0 before 828: (bf) r2 = r8
regs=2 stack=0 before 827: (4f) r8 |= r2
regs=2 stack=0 before 826: (57) r2 &= 255
regs=2 stack=0 before 825: (71) r2 = *(u8 *)(r7 +3)
regs=2 stack=0 before 823: (18) r1 = 0x200000000
frame 1: propagating r0
835: safe

from 832 to 865: safe

from 757 to 806: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=1044,umax=255,var_off=(0x0; 0xff)) R2=3 R6=ctx(off=0,imm=0) R7=pkt(off=68,r=76,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
806: (71) r1 = *(u8 *)(r7 +1)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=68,r=76,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
807: (67) r1 <<= 24                   ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
808: (71) r8 = *(u8 *)(r7 +2)         ; R7=pkt(off=68,r=76,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
809: (67) r8 <<= 16                   ; R8_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
810: (4f) r8 |= r1                    ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432) R8_w=scalar()
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
811: (71) r1 = *(u8 *)(r7 +3)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=68,r=76,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
812: (67) r1 <<= 8                    ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
813: (4f) r8 |= r1                    ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00)) R8_w=scalar()
814: (18) r1 = 0x300000000            ; R1_w=12884901888
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
816: (71) r2 = *(u8 *)(r7 +4)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=68,r=76,imm=0)
817: (05) goto pc+8
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
826: (57) r2 &= 255                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
827: (4f) r8 |= r2                    ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
828: (bf) r2 = r8                     ; R2_w=scalar(id=1046) R8_w=scalar(id=1046)
829: (67) r2 <<= 32                   ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
830: (c7) r2 s>>= 32                  ; R2_w=scalar(smin=-2147483648,smax=2147483647)
831: (b7) r3 = 1                      ; R3_w=1
; if (qpr.server_id > 0) {
832: (6d) if r3 s> r2 goto pc+32      ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
833: (77) r1 >>= 32
frame 1: propagating r0
last_idx 834 first_idx 806
regs=2 stack=0 before 833: (77) r1 >>= 32
regs=2 stack=0 before 832: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 831: (b7) r3 = 1
regs=2 stack=0 before 830: (c7) r2 s>>= 32
regs=2 stack=0 before 829: (67) r2 <<= 32
regs=2 stack=0 before 828: (bf) r2 = r8
regs=2 stack=0 before 827: (4f) r8 |= r2
regs=2 stack=0 before 826: (57) r2 &= 255
regs=2 stack=0 before 817: (05) goto pc+8
regs=2 stack=0 before 816: (71) r2 = *(u8 *)(r7 +4)
regs=2 stack=0 before 814: (18) r1 = 0x300000000
834: safe

from 832 to 865: safe

from 753 to 865: safe

from 713 to 791: safe

from 711 to 865: safe

from 708 to 749: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=pkt(off=63,r=74,imm=0) R2=scalar(umax=127,var_off=(0x0; 0x7f)) R6=ctx(off=0,imm=0) R7=pkt(off=54,r=74,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (quic_data + sizeof(struct quic_short_header) > data_end) {
749: (bf) r2 = r7                     ; R2_w=pkt(off=54,r=74,imm=0) R7=pkt(off=54,r=74,imm=0)
750: (07) r2 += 17                    ; R2_w=pkt(off=71,r=74,imm=0)
751: (bf) r7 = r1                     ; R1=pkt(off=63,r=74,imm=0) R7_w=pkt(off=63,r=74,imm=0)
; if (quic_data + sizeof(struct quic_short_header) > data_end) {
752: (2d) if r2 > r8 goto pc+112      ; R2_w=pkt(off=71,r=74,imm=0) R8=pkt_end(off=0,imm=0)
; if (!connId) {
753: (15) if r7 == 0x0 goto pc+111    ; R7_w=pkt(off=63,r=74,imm=0)
; __u8 connIdVersion = (connId[0] >> 6);
754: (71) r1 = *(u8 *)(r7 +0)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=63,r=74,imm=0)
755: (bf) r2 = r1                     ; R1_w=scalar(id=1047,umax=255,var_off=(0x0; 0xff)) R2_w=scalar(id=1047,umax=255,var_off=(0x0; 0xff))
756: (77) r2 >>= 6                    ; R2=scalar(umax=3,var_off=(0x0; 0x3))
; if (connIdVersion == QUIC_CONNID_VERSION_V1) {
757: (15) if r2 == 0x3 goto pc+48     ; R2=scalar(umax=3,var_off=(0x0; 0x3))
758: (15) if r2 == 0x2 goto pc+59     ; R2=scalar(umax=3,var_off=(0x0; 0x3))
759: (55) if r2 != 0x1 goto pc+105    ; R2=1
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
760: (57) r1 &= 63                    ; R1_w=scalar(umax=63,var_off=(0x0; 0x3f))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
761: (67) r1 <<= 10                   ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
762: (71) r8 = *(u8 *)(r7 +1)         ; R7=pkt(off=63,r=74,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
763: (67) r8 <<= 2                    ; R8_w=scalar(umax=1020,var_off=(0x0; 0x3fc))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
764: (4f) r8 |= r1                    ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00)) R8_w=scalar()
765: (18) r1 = 0x100000000            ; R1_w=4294967296
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
767: (71) r2 = *(u8 *)(r7 +2)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=63,r=74,imm=0)
768: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
769: (05) goto pc+56
frame 1: propagating r0
last_idx 826 first_idx 757
regs=2 stack=0 before 769: (05) goto pc+56
regs=2 stack=0 before 768: (77) r2 >>= 6
regs=2 stack=0 before 767: (71) r2 = *(u8 *)(r7 +2)
regs=2 stack=0 before 765: (18) r1 = 0x100000000
826: safe

from 759 to 865: safe

from 758 to 818: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=1047,umax=255,var_off=(0x0; 0xff)) R2=2 R6=ctx(off=0,imm=0) R7=pkt(off=63,r=74,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
818: (71) r1 = *(u8 *)(r7 +1)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=63,r=74,imm=0)
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
819: (67) r1 <<= 16                   ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
820: (71) r8 = *(u8 *)(r7 +2)         ; R7=pkt(off=63,r=74,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
821: (67) r8 <<= 8                    ; R8_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
822: (4f) r8 |= r1                    ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000)) R8_w=scalar()
823: (18) r1 = 0x200000000            ; R1_w=8589934592
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
825: (71) r2 = *(u8 *)(r7 +3)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=63,r=74,imm=0)
826: (57) r2 &= 255                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
827: (4f) r8 |= r2                    ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
828: (bf) r2 = r8                     ; R2_w=scalar(id=1048) R8_w=scalar(id=1048)
829: (67) r2 <<= 32                   ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
830: (c7) r2 s>>= 32                  ; R2_w=scalar(smin=-2147483648,smax=2147483647)
831: (b7) r3 = 1                      ; R3_w=1
; if (qpr.server_id > 0) {
832: (6d) if r3 s> r2 goto pc+32      ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
833: (77) r1 >>= 32                   ; R1_w=2
; if (cid_version == QUIC_CONNID_VERSION_V1) {
834: (15) if r1 == 0x3 goto pc+5
last_idx 834 first_idx 818
regs=2 stack=0 before 833: (77) r1 >>= 32
regs=2 stack=0 before 832: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 831: (b7) r3 = 1
regs=2 stack=0 before 830: (c7) r2 s>>= 32
regs=2 stack=0 before 829: (67) r2 <<= 32
regs=2 stack=0 before 828: (bf) r2 = r8
regs=2 stack=0 before 827: (4f) r8 |= r2
regs=2 stack=0 before 826: (57) r2 &= 255
regs=2 stack=0 before 825: (71) r2 = *(u8 *)(r7 +3)
regs=2 stack=0 before 823: (18) r1 = 0x200000000
frame 1: propagating r0
835: safe

from 832 to 865: safe

from 757 to 806: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=1047,umax=255,var_off=(0x0; 0xff)) R2=3 R6=ctx(off=0,imm=0) R7=pkt(off=63,r=74,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
806: (71) r1 = *(u8 *)(r7 +1)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=63,r=74,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
807: (67) r1 <<= 24                   ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
808: (71) r8 = *(u8 *)(r7 +2)         ; R7=pkt(off=63,r=74,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
809: (67) r8 <<= 16                   ; R8_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
810: (4f) r8 |= r1                    ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432) R8_w=scalar()
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
811: (71) r1 = *(u8 *)(r7 +3)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=63,r=74,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
812: (67) r1 <<= 8                    ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
813: (4f) r8 |= r1                    ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00)) R8_w=scalar()
814: (18) r1 = 0x300000000            ; R1_w=12884901888
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
816: (71) r2 = *(u8 *)(r7 +4)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=63,r=74,imm=0)
817: (05) goto pc+8
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
826: (57) r2 &= 255                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
827: (4f) r8 |= r2                    ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
828: (bf) r2 = r8                     ; R2_w=scalar(id=1049) R8_w=scalar(id=1049)
829: (67) r2 <<= 32                   ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
830: (c7) r2 s>>= 32                  ; R2_w=scalar(smin=-2147483648,smax=2147483647)
831: (b7) r3 = 1                      ; R3_w=1
; if (qpr.server_id > 0) {
832: (6d) if r3 s> r2 goto pc+32      ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
833: (77) r1 >>= 32
frame 1: propagating r0
last_idx 834 first_idx 806
regs=2 stack=0 before 833: (77) r1 >>= 32
regs=2 stack=0 before 832: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 831: (b7) r3 = 1
regs=2 stack=0 before 830: (c7) r2 s>>= 32
regs=2 stack=0 before 829: (67) r2 <<= 32
regs=2 stack=0 before 828: (bf) r2 = r8
regs=2 stack=0 before 827: (4f) r8 |= r2
regs=2 stack=0 before 826: (57) r2 &= 255
regs=2 stack=0 before 817: (05) goto pc+8
regs=2 stack=0 before 816: (71) r2 = *(u8 *)(r7 +4)
regs=2 stack=0 before 814: (18) r1 = 0x300000000
834: safe

from 832 to 865: safe

from 753 to 865: safe

from 752 to 865: safe

from 704 to 865: safe

from 695 to 1857: safe

from 411 to 869: safe

from 380 to 383: R0=map_value(off=0,ks=4,vs=16,imm=0) R1=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=74,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm fp-120=mmmm???? fp-136= fp-144=map_value fp-160=map_value
; vip_num = vip_info->vip_num;
383: (61) r1 = *(u32 *)(r9 +4)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9=map_value(off=0,ks=20,vs=8,imm=0)
384: (7b) *(u64 *)(r10 -168) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-168_w=
; vip_num = vip_info->vip_num;
385: (63) *(u32 *)(r10 -108) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-112=mmmmmmmm
; __u32 cpu_num = bpf_get_smp_processor_id();
386: (85) call bpf_get_smp_processor_id#8     ; R0_w=scalar()
; __u32 cpu_num = bpf_get_smp_processor_id();
387: (63) *(u32 *)(r10 -120) = r0     ; R0_w=scalar() R10=fp0 fp-120=mmmmmmmm
388: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; 
389: (07) r2 += -120                  ; R2_w=fp-120
; void* lru_map = bpf_map_lookup_elem(&lru_mapping, &cpu_num);
390: (18) r1 = 0xffffa0376748a000     ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
392: (85) call bpf_map_lookup_elem#1
393: safe

from 372 to 1858: safe

from 362 to 1858: safe

from 355 to 358: R0=map_value(off=0,ks=20,vs=8,imm=0) R1=scalar(umax=136,var_off=(0x0; 0x88)) R6=ctx(off=0,imm=0) R7=pkt(off=0,r=74,imm=0) R8=pkt_end(off=0,imm=0) R9=2 R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm fp-136=
; if (data_end - data > MAX_PCKT_SIZE) {
358: (bf) r1 = r8                     ; R1_w=pkt_end(off=0,imm=0) R8=pkt_end(off=0,imm=0)
359: (1f) r1 -= r7                    ; R1_w=scalar() R7=pkt(off=0,r=74,imm=0)
360: (b7) r9 = 1                      ; R9_w=1
361: (79) r2 = *(u64 *)(r10 -136)     ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; if (data_end - data > MAX_PCKT_SIZE) {
362: (65) if r1 s> 0x5ea goto pc+1495         ; R1_w=scalar(smax=1514)
363: (7b) *(u64 *)(r10 -144) = r0     ; R0=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-144_w=map_value
364: (7b) *(u64 *)(r10 -136) = r2     ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-136_w=
365: (05) goto pc+0
366: safe

from 362 to 1858: safe

from 351 to 1858: safe

from 341 to 358: safe

from 292 to 295: R0=scalar(umax=65535,var_off=(0x0; 0xffff)) R1=6 R2=0 R3=P0 R4=pkt(off=54,r=74,imm=0) R5=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=74,imm=0) R8=pkt_end(off=0,imm=0) R9=1 R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm
; pckt->flags |= F_SYN_SET;
295: (7b) *(u64 *)(r10 -136) = r0     ; R0=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-136_w=
296: (b7) r2 = 1                      ; R2_w=1
; bool is_icmp = !((pckt->flags & F_ICMP) == 0);
297: (15) if r3 == 0x0 goto pc+1      ; R3=P0
299: (67) r3 <<= 1                    ; R3_w=P0
; 
300: (bf) r5 = r4                     ; R4=pkt(off=54,r=74,imm=0) R5_w=pkt(off=54,r=74,imm=0)
301: (0f) r5 += r3                    ; R3_w=P0 R5_w=pkt(off=54,r=74,imm=0)
302: (69) r3 = *(u16 *)(r5 +0)        ; R3_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R5_w=pkt(off=54,r=74,imm=0)
303: (6b) *(u16 *)(r10 -48) = r3      ; R3_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-48=
304: (67) r2 <<= 1                    ; R2_w=2
305: (0f) r4 += r2
last_idx 305 first_idx 295
regs=4 stack=0 before 304: (67) r2 <<= 1
regs=4 stack=0 before 303: (6b) *(u16 *)(r10 -48) = r3
regs=4 stack=0 before 302: (69) r3 = *(u16 *)(r5 +0)
regs=4 stack=0 before 301: (0f) r5 += r3
regs=4 stack=0 before 300: (bf) r5 = r4
regs=4 stack=0 before 299: (67) r3 <<= 1
regs=4 stack=0 before 297: (15) if r3 == 0x0 goto pc+1
regs=4 stack=0 before 296: (b7) r2 = 1
306: R2_w=P2 R4_w=pkt(off=56,r=74,imm=0)
306: (69) r2 = *(u16 *)(r4 +0)        ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R4_w=pkt(off=56,r=74,imm=0)
307: (05) goto pc+21
329: safe

from 289 to 1858: safe

from 278 to 1858: safe

from 276 to 308: R0=scalar(umax=65535,var_off=(0x0; 0xffff)) R1=17 R2=0 R3=17 R4=scalar(umax=15,var_off=(0x0; 0xf)) R6=ctx(off=0,imm=0) R7=pkt(off=0,r=54,imm=0) R8=pkt_end(off=0,imm=0) R9=1 R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm
; bool is_icmp = !((pckt->flags & F_ICMP) == 0);
308: (57) r2 &= 1                     ; R2_w=0
309: (b7) r4 = 54                     ; R4_w=54
; if (is_ipv6) {
310: (15) if r2 == 0x0 goto pc+1
last_idx 310 first_idx 308
regs=4 stack=0 before 309: (b7) r4 = 54
regs=4 stack=0 before 308: (57) r2 &= 1
parent didn't have regs=4 stack=0 marks: R0_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R1=17 R2_rw=P0 R3_w=17 R4=scalar(umax=15,var_off=(0x0; 0xf)) R6=ctx(off=0,imm=0) R7=pkt(off=0,r=54,imm=0) R8=pkt_end(off=0,imm=0) R9=1 R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56_w=mmmmmmmm fp-64_w=mmmmmmmm fp-72_w=mmmmmmmm fp-80_w=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm
last_idx 276 first_idx 166
regs=4 stack=0 before 276: (15) if r3 == 0x11 goto pc+31
regs=4 stack=0 before 275: (bf) r3 = r1
regs=4 stack=0 before 274: (b7) r2 = 0
; udp = data + off;
312: (bf) r3 = r7                     ; R3_w=pkt(off=0,r=54,imm=0) R7=pkt(off=0,r=54,imm=0)
313: (0f) r3 += r4
last_idx 313 first_idx 308
regs=10 stack=0 before 312: (bf) r3 = r7
regs=10 stack=0 before 310: (15) if r2 == 0x0 goto pc+1
regs=10 stack=0 before 309: (b7) r4 = 54
314: R3_w=pkt(off=54,r=54,imm=0) R4_w=P54
; if (udp + 1 > data_end) {
314: (bf) r4 = r3                     ; R3_w=pkt(off=54,r=54,imm=0) R4_w=pkt(off=54,r=54,imm=0)
315: (07) r4 += 8                     ; R4_w=pkt(off=62,r=54,imm=0)
; if (udp + 1 > data_end) {
316: (2d) if r4 > r8 goto pc+1541     ; R4_w=pkt(off=62,r=62,imm=0) R8=pkt_end(off=0,imm=0)
317: (7b) *(u64 *)(r10 -136) = r0     ; R0=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-136_w=
318: (b7) r4 = 1                      ; R4=1
; bool is_icmp = !((pckt->flags & F_ICMP) == 0);
319: (15) if r2 == 0x0 goto pc+1      ; R2=P0
321: (67) r2 <<= 1                    ; R2_w=P0
; 
322: (bf) r5 = r3                     ; R3=pkt(off=54,r=62,imm=0) R5_w=pkt(off=54,r=62,imm=0)
323: (0f) r5 += r2                    ; R2_w=P0 R5_w=pkt(off=54,r=62,imm=0)
324: (69) r2 = *(u16 *)(r5 +0)        ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R5_w=pkt(off=54,r=62,imm=0)
325: (6b) *(u16 *)(r10 -48) = r2      ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-48=
326: (67) r4 <<= 1                    ; R4_w=2
327: (0f) r3 += r4
last_idx 327 first_idx 319
regs=10 stack=0 before 326: (67) r4 <<= 1
regs=10 stack=0 before 325: (6b) *(u16 *)(r10 -48) = r2
regs=10 stack=0 before 324: (69) r2 = *(u16 *)(r5 +0)
regs=10 stack=0 before 323: (0f) r5 += r2
regs=10 stack=0 before 322: (bf) r5 = r3
regs=10 stack=0 before 321: (67) r2 <<= 1
regs=10 stack=0 before 319: (15) if r2 == 0x0 goto pc+1
parent didn't have regs=10 stack=0 marks: R0=scalar(umax=65535,var_off=(0x0; 0xffff)) R1=17 R2_rw=P0 R3_rw=pkt(off=54,r=62,imm=0) R4_rw=P1 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=62,imm=0) R8=pkt_end(off=0,imm=0) R9=1 R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm fp-136_w=
last_idx 318 first_idx 308
regs=10 stack=0 before 318: (b7) r4 = 1
328: (69) r2 = *(u16 *)(r3 +0)        ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R3_w=pkt(off=56,r=62,imm=0)
; 
329: (6b) *(u16 *)(r10 -46) = r2      ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-48=mmmmmmmm
; memcpy(vip.vipv6, pckt.flow.dstv6, 16);
330: (79) r3 = *(u64 *)(r10 -56)      ; R3_w=scalar() R10=fp0
331: (7b) *(u64 *)(r10 -96) = r3      ; R3_w=scalar() R10=fp0 fp-96_w=mmmmmmmm
332: (79) r3 = *(u64 *)(r10 -64)      ; R3_w=scalar() R10=fp0
333: (7b) *(u64 *)(r10 -104) = r3     ; R3_w=scalar() R10=fp0 fp-104_w=mmmmmmmm
; vip.proto = pckt.flow.proto;
334: (73) *(u8 *)(r10 -86) = r1       ; R1=17 R10=fp0 fp-88=????mmmm
; vip.port = pckt.flow.port16[1];
335: (6b) *(u16 *)(r10 -88) = r2      ; R2_w=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-88=
336: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; 
337: (07) r2 += -104                  ; R2_w=fp-104
; vip_info = bpf_map_lookup_elem(&vip_map, &vip);
338: (18) r1 = 0xffffa03557866800     ; R1_w=map_ptr(off=0,ks=20,vs=8,imm=0)
340: (85) call bpf_map_lookup_elem#1          ; R0=map_value_or_null(id=1051,off=0,ks=20,vs=8,imm=0)
; if (!vip_info) {
341: (55) if r0 != 0x0 goto pc+16     ; R0=0
342: (05) goto pc+0
; vip.port = 0;
343: (6a) *(u16 *)(r10 -88) = 0       ; R10=fp0 fp-88=????mmmm
344: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
345: (07) r2 += -104                  ; R2_w=fp-104
; vip_info = bpf_map_lookup_elem(&vip_map, &vip);
346: (18) r1 = 0xffffa03557866800     ; R1_w=map_ptr(off=0,ks=20,vs=8,imm=0)
348: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=1052,off=0,ks=20,vs=8,imm=0)
349: (b7) r9 = 2                      ; R9_w=2
350: (79) r1 = *(u64 *)(r10 -136)     ; R1=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; if (!vip_info) {
351: (15) if r0 == 0x0 goto pc+1506   ; R0=map_value(off=0,ks=20,vs=8,imm=0)
352: (7b) *(u64 *)(r10 -136) = r1     ; R1=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-136_w=
; if (!(vip_info->flags & F_HASH_DPORT_ONLY) &&
353: (61) r1 = *(u32 *)(r0 +0)        ; R0=map_value(off=0,ks=20,vs=8,imm=0) R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff))
; if (!(vip_info->flags & F_HASH_DPORT_ONLY) &&
354: (57) r1 &= 136                   ; R1_w=scalar(umax=136,var_off=(0x0; 0x88))
355: (55) if r1 != 0x0 goto pc+2      ; R1_w=0
356: (05) goto pc+0
; pckt.flow.port16[1] = 0;
357: (6a) *(u16 *)(r10 -46) = 0       ; R10=fp0 fp-48=mmmmmmmm
; if (data_end - data > MAX_PCKT_SIZE) {
358: (bf) r1 = r8                     ; R1_w=pkt_end(off=0,imm=0) R8=pkt_end(off=0,imm=0)
359: (1f) r1 -= r7                    ; R1_w=scalar() R7=pkt(off=0,r=62,imm=0)
360: (b7) r9 = 1                      ; R9_w=1
361: (79) r2 = *(u64 *)(r10 -136)     ; R2=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0
; if (data_end - data > MAX_PCKT_SIZE) {
362: (65) if r1 s> 0x5ea goto pc+1495         ; R1=scalar(smax=1514)
363: (7b) *(u64 *)(r10 -144) = r0     ; R0=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-144_w=map_value
364: (7b) *(u64 *)(r10 -136) = r2     ; R2=scalar(umax=65535,var_off=(0x0; 0xffff)) R10=fp0 fp-136_w=
365: (05) goto pc+0
; __u32 stats_key = MAX_VIPS + LRU_CNTRS;
366: (62) *(u32 *)(r10 -116) = 512    ; R10=fp0 fp-120=mmmm????
367: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; 
368: (07) r2 += -116                  ; R2_w=fp-116
; data_stats = bpf_map_lookup_elem(&stats, &stats_key);
369: (18) r1 = 0xffffa03499be8000     ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
371: (85) call bpf_map_lookup_elem#1          ; R0=map_value_or_null(id=1053,off=0,ks=4,vs=16,imm=0)
; if (!data_stats) {
372: (15) if r0 == 0x0 goto pc+1485   ; R0=map_value(off=0,ks=4,vs=16,imm=0)
; data_stats->v1 += 1;
373: (79) r1 = *(u64 *)(r0 +0)        ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
374: (07) r1 += 1                     ; R1_w=scalar()
375: (7b) *(u64 *)(r10 -160) = r0     ; R0=map_value(off=0,ks=4,vs=16,imm=0) R10=fp0 fp-160_w=map_value
376: (7b) *(u64 *)(r0 +0) = r1        ; R0=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
377: (79) r9 = *(u64 *)(r10 -144)     ; R9_w=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
; if ((vip_info->flags & F_HASH_NO_SRC_PORT)) {
378: (61) r1 = *(u32 *)(r9 +0)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9_w=map_value(off=0,ks=20,vs=8,imm=0)
; if ((vip_info->flags & F_HASH_NO_SRC_PORT)) {
379: (57) r1 &= 1                     ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
; if ((vip_info->flags & F_HASH_NO_SRC_PORT)) {
380: (15) if r1 == 0x0 goto pc+2      ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
381: (05) goto pc+0
; pckt.flow.port16[0] = 0;
382: (6a) *(u16 *)(r10 -48) = 0       ; R10=fp0 fp-48=mmmmmmmm
; vip_num = vip_info->vip_num;
383: (61) r1 = *(u32 *)(r9 +4)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9=map_value(off=0,ks=20,vs=8,imm=0)
384: (7b) *(u64 *)(r10 -168) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-168_w=
; vip_num = vip_info->vip_num;
385: (63) *(u32 *)(r10 -108) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-112=mmmmmmmm
; __u32 cpu_num = bpf_get_smp_processor_id();
386: (85) call bpf_get_smp_processor_id#8     ; R0_w=scalar()
; __u32 cpu_num = bpf_get_smp_processor_id();
387: (63) *(u32 *)(r10 -120) = r0     ; R0_w=scalar() R10=fp0 fp-120=mmmmmmmm
388: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; 
389: (07) r2 += -120                  ; R2_w=fp-120
; void* lru_map = bpf_map_lookup_elem(&lru_mapping, &cpu_num);
390: (18) r1 = 0xffffa0376748a000     ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
392: (85) call bpf_map_lookup_elem#1          ; R0=map_value_or_null(id=1054,off=0,ks=4,vs=4,imm=0)
; if (!lru_map) {
393: (55) if r0 != 0x0 goto pc+14     ; R0=0
394: (05) goto pc+0
; __u32 lru_stats_key = MAX_VIPS + FALLBACK_LRU_CNTR;
395: (62) *(u32 *)(r10 -16) = 515     ; R10=fp0 fp-16=????mmmm
396: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
397: (07) r2 += -16                   ; R2_w=fp-16
; struct lb_stats* lru_stats = bpf_map_lookup_elem(&stats, &lru_stats_key);
398: (18) r1 = 0xffffa03499be8000     ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
400: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=1055,off=0,ks=4,vs=16,imm=0)
; if (!lru_stats) {
401: (15) if r0 == 0x0 goto pc+1455   ; R0_w=map_value(off=0,ks=4,vs=16,imm=0)
; lru_stats->v1 += 1;
402: (79) r1 = *(u64 *)(r0 +0)        ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
403: (07) r1 += 1                     ; R1_w=scalar()
404: (7b) *(u64 *)(r0 +0) = r1        ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
405: (18) r0 = 0xffffa03557862800     ; R0_w=map_ptr(off=0,ks=40,vs=16,imm=0)
407: (79) r9 = *(u64 *)(r10 -144)     ; R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0
408: (7b) *(u64 *)(r10 -152) = r0     ; R0=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0 fp-152_w=map_ptr
; if ((vip_info->flags & F_QUIC_VIP)) {
409: (61) r1 = *(u32 *)(r9 +0)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9=map_value(off=0,ks=20,vs=8,imm=0)
; if ((vip_info->flags & F_QUIC_VIP)) {
410: (57) r1 &= 4                     ; R1_w=scalar(umax=4,var_off=(0x0; 0x4))
; if ((vip_info->flags & F_QUIC_VIP)) {
411: (15) if r1 == 0x0 goto pc+457    ; R1_w=scalar(umax=4,var_off=(0x0; 0x4))
; bool is_icmp = (pckt.flags & F_ICMP);
412: (71) r1 = *(u8 *)(r10 -36)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; bool is_icmp = (pckt.flags & F_ICMP);
413: (57) r1 &= 1                     ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
; if (is_icmp) {
414: (15) if r1 == 0x0 goto pc+272    ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
415: (05) goto pc+0
; __u32 stats_key = MAX_VIPS + QUIC_ICMP_STATS;
416: (62) *(u32 *)(r10 -16) = 523     ; R10=fp0 fp-16=????mmmm
417: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
418: (07) r2 += -16                   ; R2_w=fp-16
; struct lb_stats* data_stats = bpf_map_lookup_elem(&stats, &stats_key);
419: (18) r1 = 0xffffa03499be8000     ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
421: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=1056,off=0,ks=4,vs=16,imm=0)
; if (!data_stats) {
422: (15) if r0 == 0x0 goto pc+1434   ; R0_w=map_value(off=0,ks=4,vs=16,imm=0)
; data_stats->v1 += 1;
423: (79) r1 = *(u64 *)(r0 +0)        ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
424: (07) r1 += 1                     ; R1_w=scalar()
425: (7b) *(u64 *)(r0 +0) = r1        ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
; (icmp_hdr->icmp6_code == ICMPV6_ADDR_UNREACH) ||
426: (71) r1 = *(u8 *)(r7 +55)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=62,imm=0)
; (icmp_hdr->icmp6_code == ICMPV6_ADDR_UNREACH) ||
427: (07) r1 += -3                    ; R1_w=scalar(smin=-3,smax=252)
428: (57) r1 &= 255                   ; R1_w=scalar(umax=255,var_off=(0x0; 0xff))
429: (79) r9 = *(u64 *)(r10 -144)
430: safe

from 422 to 1857: safe

from 414 to 687: R0=map_ptr(off=0,ks=40,vs=16,imm=0) R1=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=62,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-16=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; pckt->flow.src = iph->daddr;
687: (05) goto pc+0
; __u32 quic_packets_stats_key = 0;
688: (62) *(u32 *)(r10 -28) = 0       ; R10=fp0 fp-32=mmmm????
689: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
690: (07) r2 += -28                   ; R2_w=fp-28
; bpf_map_lookup_elem(&quic_stats_map, &quic_packets_stats_key);
691: (18) r1 = 0xffffa03587064800     ; R1_w=map_ptr(off=0,ks=4,vs=104,imm=0)
693: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=1057,off=0,ks=4,vs=104,imm=0)
694: (bf) r9 = r0                     ; R0_w=map_value_or_null(id=1057,off=0,ks=4,vs=104,imm=0) R9_w=map_value_or_null(id=1057,off=0,ks=4,vs=104,imm=0)
; if (!quic_packets_stats) {
695: (15) if r9 == 0x0 goto pc+1161   ; R9_w=map_value(off=0,ks=4,vs=104,imm=0)
; bool is_icmp = (pckt->flags & F_ICMP);
696: (71) r2 = *(u8 *)(r10 -36)       ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; bool is_icmp = (pckt->flags & F_ICMP);
697: (57) r2 &= 1                     ; R2_w=scalar(umax=1,var_off=(0x0; 0x1))
698: (b7) r1 = 54                     ; R1=54
; if (is_ipv6) {
699: (15) if r2 == 0x0 goto pc+1      ; R2=scalar(umax=1,var_off=(0x0; 0x1))
700: (b7) r1 = 102                    ; R1_w=102
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
701: (0f) r7 += r1
last_idx 701 first_idx 699
regs=2 stack=0 before 700: (b7) r1 = 102
702: R1_w=P102 R7_w=pkt(off=102,r=62,imm=0)
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
702: (bf) r1 = r7                     ; R1_w=pkt(off=102,r=62,imm=0) R7_w=pkt(off=102,r=62,imm=0)
703: (07) r1 += 9                     ; R1_w=pkt(off=111,r=62,imm=0)
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
704: (2d) if r1 > r8 goto pc+160      ; R1_w=pkt(off=111,r=111,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
705: (71) r2 = *(u8 *)(r7 +8)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=102,r=111,imm=0)
706: (67) r2 <<= 56                   ; R2_w=scalar(smax=9151314442816847872,umax=18374686479671623680,var_off=(0x0; 0xff00000000000000),s32_min=0,s32_max=0,u32_max=0)
707: (c7) r2 s>>= 56
708: safe

from 704 to 865: safe

from 699 to 701: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=54 R2=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=62,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
701: (0f) r7 += r1
last_idx 701 first_idx 701
parent didn't have regs=2 stack=0 marks: R0=map_value(off=0,ks=4,vs=104,imm=0) R1_r=P54 R2=0 R6=ctx(off=0,imm=0) R7_r=pkt(off=0,r=62,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
last_idx 699 first_idx 699
regs=2 stack=0 before 699: (15) if r2 == 0x0 goto pc+1
parent didn't have regs=2 stack=0 marks: R0_w=map_value(off=0,ks=4,vs=104,imm=0) R1_rw=P54 R2_rw=scalar(umax=1,var_off=(0x0; 0x1)) R6_r=ctx(off=0,imm=0) R7_r=pkt(off=0,r=62,imm=0) R8_r=pkt_end(off=0,imm=0) R9_rw=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16_r=????mmmm fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96_r=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=
last_idx 698 first_idx 687
regs=2 stack=0 before 698: (b7) r1 = 54
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
702: (bf) r1 = r7                     ; R1_w=pkt(off=54,r=62,imm=0) R7_w=pkt(off=54,r=62,imm=0)
703: (07) r1 += 9                     ; R1_w=pkt(off=63,r=62,imm=0)
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
704: (2d) if r1 > r8 goto pc+160      ; R1_w=pkt(off=63,r=63,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
705: (71) r2 = *(u8 *)(r7 +8)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=54,r=63,imm=0)
706: (67) r2 <<= 56                   ; R2_w=scalar(smax=9151314442816847872,umax=18374686479671623680,var_off=(0x0; 0xff00000000000000),s32_min=0,s32_max=0,u32_max=0)
707: (c7) r2 s>>= 56                  ; R2_w=scalar(smin=-128,smax=127)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
708: (65) if r2 s> 0xffffffff goto pc+40      ; R2_w=scalar(umin=18446744073709551488,var_off=(0xffffffffffffff80; 0x7f),u32_min=-128)
; if (quic_data + sizeof(struct quic_long_header) > data_end) {
709: (bf) r1 = r7                     ; R1_w=pkt(off=54,r=63,imm=0) R7_w=pkt(off=54,r=63,imm=0)
710: (07) r1 += 22                    ; R1=pkt(off=76,r=63,imm=0)
; if (quic_data + sizeof(struct quic_long_header) > data_end) {
711: (2d) if r1 > r8 goto pc+153      ; R1=pkt(off=76,r=76,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_PACKET_TYPE_MASK) < QUIC_HANDSHAKE) {
712: (57) r2 &= 32                    ; R2_w=scalar(umax=32,var_off=(0x0; 0x20))
; if ((*pkt_type & QUIC_PACKET_TYPE_MASK) < QUIC_HANDSHAKE) {
713: (15) if r2 == 0x0 goto pc+77     ; R2_w=scalar(umax=32,var_off=(0x0; 0x20))
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
714: (71) r1 = *(u8 *)(r7 +13)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=54,r=76,imm=0)
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
715: (07) r7 += 14                    ; R7_w=pkt(off=68,r=76,imm=0)
716: (25) if r1 > 0x7 goto pc+36      ; R1_w=scalar(umax=7,var_off=(0x0; 0x7))
717: (05) goto pc+147
865: safe

from 716 to 753: safe

from 713 to 791: safe

from 711 to 865: safe

from 708 to 749: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=pkt(off=63,r=63,imm=0) R2=scalar(umax=127,var_off=(0x0; 0x7f)) R6=ctx(off=0,imm=0) R7=pkt(off=54,r=63,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (quic_data + sizeof(struct quic_short_header) > data_end) {
749: (bf) r2 = r7                     ; R2_w=pkt(off=54,r=63,imm=0) R7=pkt(off=54,r=63,imm=0)
750: (07) r2 += 17                    ; R2_w=pkt(off=71,r=63,imm=0)
751: (bf) r7 = r1                     ; R1=pkt(off=63,r=63,imm=0) R7_w=pkt(off=63,r=63,imm=0)
; if (quic_data + sizeof(struct quic_short_header) > data_end) {
752: (2d) if r2 > r8 goto pc+112      ; R2_w=pkt(off=71,r=71,imm=0) R8=pkt_end(off=0,imm=0)
; if (!connId) {
753: (15) if r7 == 0x0 goto pc+111    ; R7_w=pkt(off=63,r=71,imm=0)
; __u8 connIdVersion = (connId[0] >> 6);
754: (71) r1 = *(u8 *)(r7 +0)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=63,r=71,imm=0)
755: (bf) r2 = r1                     ; R1_w=scalar(id=1058,umax=255,var_off=(0x0; 0xff)) R2_w=scalar(id=1058,umax=255,var_off=(0x0; 0xff))
756: (77) r2 >>= 6                    ; R2=scalar(umax=3,var_off=(0x0; 0x3))
; if (connIdVersion == QUIC_CONNID_VERSION_V1) {
757: (15) if r2 == 0x3 goto pc+48     ; R2=scalar(umax=3,var_off=(0x0; 0x3))
758: (15) if r2 == 0x2 goto pc+59     ; R2=scalar(umax=3,var_off=(0x0; 0x3))
759: (55) if r2 != 0x1 goto pc+105    ; R2=1
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
760: (57) r1 &= 63                    ; R1_w=scalar(umax=63,var_off=(0x0; 0x3f))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
761: (67) r1 <<= 10                   ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
762: (71) r8 = *(u8 *)(r7 +1)         ; R7=pkt(off=63,r=71,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
763: (67) r8 <<= 2                    ; R8_w=scalar(umax=1020,var_off=(0x0; 0x3fc))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
764: (4f) r8 |= r1                    ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00)) R8_w=scalar()
765: (18) r1 = 0x100000000            ; R1_w=4294967296
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
767: (71) r2 = *(u8 *)(r7 +2)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=63,r=71,imm=0)
768: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
769: (05) goto pc+56
frame 1: propagating r0
last_idx 826 first_idx 757
regs=2 stack=0 before 769: (05) goto pc+56
regs=2 stack=0 before 768: (77) r2 >>= 6
regs=2 stack=0 before 767: (71) r2 = *(u8 *)(r7 +2)
regs=2 stack=0 before 765: (18) r1 = 0x100000000
826: safe

from 759 to 865: safe

from 758 to 818: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=1058,umax=255,var_off=(0x0; 0xff)) R2=2 R6=ctx(off=0,imm=0) R7=pkt(off=63,r=71,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
818: (71) r1 = *(u8 *)(r7 +1)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=63,r=71,imm=0)
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
819: (67) r1 <<= 16                   ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
820: (71) r8 = *(u8 *)(r7 +2)         ; R7=pkt(off=63,r=71,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
821: (67) r8 <<= 8                    ; R8_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
822: (4f) r8 |= r1                    ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000)) R8_w=scalar()
823: (18) r1 = 0x200000000            ; R1_w=8589934592
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
825: (71) r2 = *(u8 *)(r7 +3)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=63,r=71,imm=0)
826: (57) r2 &= 255                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
827: (4f) r8 |= r2                    ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
828: (bf) r2 = r8                     ; R2_w=scalar(id=1059) R8_w=scalar(id=1059)
829: (67) r2 <<= 32                   ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
830: (c7) r2 s>>= 32                  ; R2_w=scalar(smin=-2147483648,smax=2147483647)
831: (b7) r3 = 1                      ; R3_w=1
; if (qpr.server_id > 0) {
832: (6d) if r3 s> r2 goto pc+32      ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
833: (77) r1 >>= 32                   ; R1_w=2
; if (cid_version == QUIC_CONNID_VERSION_V1) {
834: (15) if r1 == 0x3 goto pc+5
last_idx 834 first_idx 818
regs=2 stack=0 before 833: (77) r1 >>= 32
regs=2 stack=0 before 832: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 831: (b7) r3 = 1
regs=2 stack=0 before 830: (c7) r2 s>>= 32
regs=2 stack=0 before 829: (67) r2 <<= 32
regs=2 stack=0 before 828: (bf) r2 = r8
regs=2 stack=0 before 827: (4f) r8 |= r2
regs=2 stack=0 before 826: (57) r2 &= 255
regs=2 stack=0 before 825: (71) r2 = *(u8 *)(r7 +3)
regs=2 stack=0 before 823: (18) r1 = 0x200000000
frame 1: propagating r0
835: safe

from 832 to 865: safe

from 757 to 806: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=1058,umax=255,var_off=(0x0; 0xff)) R2=3 R6=ctx(off=0,imm=0) R7=pkt(off=63,r=71,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-16=????mmmm fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
806: (71) r1 = *(u8 *)(r7 +1)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=63,r=71,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
807: (67) r1 <<= 24                   ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
808: (71) r8 = *(u8 *)(r7 +2)         ; R7=pkt(off=63,r=71,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
809: (67) r8 <<= 16                   ; R8_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
810: (4f) r8 |= r1                    ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432) R8_w=scalar()
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
811: (71) r1 = *(u8 *)(r7 +3)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=63,r=71,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
812: (67) r1 <<= 8                    ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
813: (4f) r8 |= r1                    ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00)) R8_w=scalar()
814: (18) r1 = 0x300000000            ; R1_w=12884901888
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
816: (71) r2 = *(u8 *)(r7 +4)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=63,r=71,imm=0)
817: (05) goto pc+8
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
826: (57) r2 &= 255                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
827: (4f) r8 |= r2                    ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
828: (bf) r2 = r8                     ; R2_w=scalar(id=1060) R8_w=scalar(id=1060)
829: (67) r2 <<= 32                   ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
830: (c7) r2 s>>= 32                  ; R2_w=scalar(smin=-2147483648,smax=2147483647)
831: (b7) r3 = 1                      ; R3_w=1
; if (qpr.server_id > 0) {
832: (6d) if r3 s> r2 goto pc+32      ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
833: (77) r1 >>= 32
frame 1: propagating r0
last_idx 834 first_idx 806
regs=2 stack=0 before 833: (77) r1 >>= 32
regs=2 stack=0 before 832: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 831: (b7) r3 = 1
regs=2 stack=0 before 830: (c7) r2 s>>= 32
regs=2 stack=0 before 829: (67) r2 <<= 32
regs=2 stack=0 before 828: (bf) r2 = r8
regs=2 stack=0 before 827: (4f) r8 |= r2
regs=2 stack=0 before 826: (57) r2 &= 255
regs=2 stack=0 before 817: (05) goto pc+8
regs=2 stack=0 before 816: (71) r2 = *(u8 *)(r7 +4)
regs=2 stack=0 before 814: (18) r1 = 0x300000000
834: safe

from 832 to 865: safe

from 753 to 865: safe

from 752 to 865: safe

from 704 to 865: safe

from 695 to 1857: safe

from 411 to 869: safe

from 401 to 1857: safe

from 393 to 408: R0=map_ptr(off=0,ks=40,vs=16,imm=0) R6=ctx(off=0,imm=0) R7=pkt(off=0,r=62,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-160=map_value fp-168=
; lru_stats->v1 += 1;
408: (7b) *(u64 *)(r10 -152) = r0     ; R0=map_ptr(off=0,ks=40,vs=16,imm=0) R10=fp0 fp-152_w=map_ptr
; if ((vip_info->flags & F_QUIC_VIP)) {
409: (61) r1 = *(u32 *)(r9 +0)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9=map_value(off=0,ks=20,vs=8,imm=0)
; if ((vip_info->flags & F_QUIC_VIP)) {
410: (57) r1 &= 4                     ; R1_w=scalar(umax=4,var_off=(0x0; 0x4))
; if ((vip_info->flags & F_QUIC_VIP)) {
411: (15) if r1 == 0x0 goto pc+457    ; R1_w=scalar(umax=4,var_off=(0x0; 0x4))
; bool is_icmp = (pckt.flags & F_ICMP);
412: (71) r1 = *(u8 *)(r10 -36)       ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; bool is_icmp = (pckt.flags & F_ICMP);
413: (57) r1 &= 1                     ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
; if (is_icmp) {
414: (15) if r1 == 0x0 goto pc+272    ; R1_w=scalar(umax=1,var_off=(0x0; 0x1))
415: (05) goto pc+0
; __u32 stats_key = MAX_VIPS + QUIC_ICMP_STATS;
416: (62) *(u32 *)(r10 -16) = 523     ; R10=fp0 fp-16=????mmmm
417: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
418: (07) r2 += -16                   ; R2_w=fp-16
; struct lb_stats* data_stats = bpf_map_lookup_elem(&stats, &stats_key);
419: (18) r1 = 0xffffa03499be8000     ; R1_w=map_ptr(off=0,ks=4,vs=16,imm=0)
421: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=1061,off=0,ks=4,vs=16,imm=0)
; if (!data_stats) {
422: (15) if r0 == 0x0 goto pc+1434   ; R0_w=map_value(off=0,ks=4,vs=16,imm=0)
; data_stats->v1 += 1;
423: (79) r1 = *(u64 *)(r0 +0)        ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
424: (07) r1 += 1                     ; R1_w=scalar()
425: (7b) *(u64 *)(r0 +0) = r1        ; R0_w=map_value(off=0,ks=4,vs=16,imm=0) R1_w=scalar()
; (icmp_hdr->icmp6_code == ICMPV6_ADDR_UNREACH) ||
426: (71) r1 = *(u8 *)(r7 +55)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=0,r=62,imm=0)
; (icmp_hdr->icmp6_code == ICMPV6_ADDR_UNREACH) ||
427: (07) r1 += -3                    ; R1_w=scalar(smin=-3,smax=252)
428: (57) r1 &= 255                   ; R1_w=scalar(umax=255,var_off=(0x0; 0xff))
429: (79) r9 = *(u64 *)(r10 -144)
430: safe

from 422 to 1857: safe

from 414 to 687: R0=map_ptr(off=0,ks=40,vs=16,imm=0) R1=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=62,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; pckt->flow.src = iph->daddr;
687: (05) goto pc+0
; __u32 quic_packets_stats_key = 0;
688: (62) *(u32 *)(r10 -28) = 0       ; R10=fp0 fp-32=mmmm????
689: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
690: (07) r2 += -28                   ; R2_w=fp-28
; bpf_map_lookup_elem(&quic_stats_map, &quic_packets_stats_key);
691: (18) r1 = 0xffffa03587064800     ; R1_w=map_ptr(off=0,ks=4,vs=104,imm=0)
693: (85) call bpf_map_lookup_elem#1          ; R0_w=map_value_or_null(id=1062,off=0,ks=4,vs=104,imm=0)
694: (bf) r9 = r0                     ; R0_w=map_value_or_null(id=1062,off=0,ks=4,vs=104,imm=0) R9_w=map_value_or_null(id=1062,off=0,ks=4,vs=104,imm=0)
; if (!quic_packets_stats) {
695: (15) if r9 == 0x0 goto pc+1161   ; R9_w=map_value(off=0,ks=4,vs=104,imm=0)
; bool is_icmp = (pckt->flags & F_ICMP);
696: (71) r2 = *(u8 *)(r10 -36)       ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R10=fp0
; bool is_icmp = (pckt->flags & F_ICMP);
697: (57) r2 &= 1                     ; R2_w=scalar(umax=1,var_off=(0x0; 0x1))
698: (b7) r1 = 54                     ; R1=54
; if (is_ipv6) {
699: (15) if r2 == 0x0 goto pc+1      ; R2=scalar(umax=1,var_off=(0x0; 0x1))
700: (b7) r1 = 102                    ; R1_w=102
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
701: (0f) r7 += r1
last_idx 701 first_idx 699
regs=2 stack=0 before 700: (b7) r1 = 102
702: R1_w=P102 R7_w=pkt(off=102,r=62,imm=0)
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
702: (bf) r1 = r7                     ; R1_w=pkt(off=102,r=62,imm=0) R7_w=pkt(off=102,r=62,imm=0)
703: (07) r1 += 9                     ; R1_w=pkt(off=111,r=62,imm=0)
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
704: (2d) if r1 > r8 goto pc+160      ; R1_w=pkt(off=111,r=111,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
705: (71) r2 = *(u8 *)(r7 +8)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=102,r=111,imm=0)
706: (67) r2 <<= 56                   ; R2_w=scalar(smax=9151314442816847872,umax=18374686479671623680,var_off=(0x0; 0xff00000000000000),s32_min=0,s32_max=0,u32_max=0)
707: (c7) r2 s>>= 56
708: safe

from 704 to 865: safe

from 699 to 701: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=54 R2=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=62,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
701: (0f) r7 += r1
last_idx 701 first_idx 701
parent didn't have regs=2 stack=0 marks: R0=map_value(off=0,ks=4,vs=104,imm=0) R1_r=P54 R2=0 R6=ctx(off=0,imm=0) R7_r=pkt(off=0,r=62,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
last_idx 699 first_idx 699
regs=2 stack=0 before 699: (15) if r2 == 0x0 goto pc+1
parent didn't have regs=2 stack=0 marks: R0_w=map_value(off=0,ks=4,vs=104,imm=0) R1_rw=P54 R2_rw=scalar(umax=1,var_off=(0x0; 0x1)) R6_r=ctx(off=0,imm=0) R7_r=pkt(off=0,r=62,imm=0) R8_r=pkt_end(off=0,imm=0) R9_rw=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32_r=mmmm???? fp-40_r=mmmmmmmm fp-48_r=mmmmmmmm fp-56_r=mmmmmmmm fp-64_r=mmmmmmmm fp-72_r=mmmmmmmm fp-80_r=mmmmmmmm fp-88_r=????mmmm fp-96_r=mmmmmmmm fp-104_r=mmmmmmmm fp-112_r=mmmmmmmm fp-120=mmmmmmmm fp-136_r= fp-144_r=map_value fp-152_r=map_ptr fp-160_r=map_value fp-168_r=
last_idx 698 first_idx 687
regs=2 stack=0 before 698: (b7) r1 = 54
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
702: (bf) r1 = r7                     ; R1_w=pkt(off=54,r=62,imm=0) R7_w=pkt(off=54,r=62,imm=0)
703: (07) r1 += 9                     ; R1_w=pkt(off=63,r=62,imm=0)
; if ((data + off + sizeof(struct udphdr) + sizeof(__u8)) > data_end) {
704: (2d) if r1 > r8 goto pc+160      ; R1_w=pkt(off=63,r=63,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
705: (71) r2 = *(u8 *)(r7 +8)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=54,r=63,imm=0)
706: (67) r2 <<= 56                   ; R2_w=scalar(smax=9151314442816847872,umax=18374686479671623680,var_off=(0x0; 0xff00000000000000),s32_min=0,s32_max=0,u32_max=0)
707: (c7) r2 s>>= 56                  ; R2_w=scalar(smin=-128,smax=127)
; if ((*pkt_type & QUIC_LONG_HEADER) == QUIC_LONG_HEADER) {
708: (65) if r2 s> 0xffffffff goto pc+40      ; R2_w=scalar(umin=18446744073709551488,var_off=(0xffffffffffffff80; 0x7f),u32_min=-128)
; if (quic_data + sizeof(struct quic_long_header) > data_end) {
709: (bf) r1 = r7                     ; R1_w=pkt(off=54,r=63,imm=0) R7_w=pkt(off=54,r=63,imm=0)
710: (07) r1 += 22                    ; R1=pkt(off=76,r=63,imm=0)
; if (quic_data + sizeof(struct quic_long_header) > data_end) {
711: (2d) if r1 > r8 goto pc+153      ; R1=pkt(off=76,r=76,imm=0) R8=pkt_end(off=0,imm=0)
; if ((*pkt_type & QUIC_PACKET_TYPE_MASK) < QUIC_HANDSHAKE) {
712: (57) r2 &= 32                    ; R2_w=scalar(umax=32,var_off=(0x0; 0x20))
; if ((*pkt_type & QUIC_PACKET_TYPE_MASK) < QUIC_HANDSHAKE) {
713: (15) if r2 == 0x0 goto pc+77     ; R2_w=scalar(umax=32,var_off=(0x0; 0x20))
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
714: (71) r1 = *(u8 *)(r7 +13)        ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=54,r=76,imm=0)
; if (long_header->conn_id_lens < QUIC_MIN_CONNID_LEN) {
715: (07) r7 += 14                    ; R7_w=pkt(off=68,r=76,imm=0)
716: (25) if r1 > 0x7 goto pc+36      ; R1_w=scalar(umax=7,var_off=(0x0; 0x7))
717: (05) goto pc+147
865: safe

from 716 to 753: safe

from 713 to 791: safe

from 711 to 865: safe

from 708 to 749: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=pkt(off=63,r=63,imm=0) R2=scalar(umax=127,var_off=(0x0; 0x7f)) R6=ctx(off=0,imm=0) R7=pkt(off=54,r=63,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; if (quic_data + sizeof(struct quic_short_header) > data_end) {
749: (bf) r2 = r7                     ; R2_w=pkt(off=54,r=63,imm=0) R7=pkt(off=54,r=63,imm=0)
750: (07) r2 += 17                    ; R2_w=pkt(off=71,r=63,imm=0)
751: (bf) r7 = r1                     ; R1=pkt(off=63,r=63,imm=0) R7_w=pkt(off=63,r=63,imm=0)
; if (quic_data + sizeof(struct quic_short_header) > data_end) {
752: (2d) if r2 > r8 goto pc+112      ; R2_w=pkt(off=71,r=71,imm=0) R8=pkt_end(off=0,imm=0)
; if (!connId) {
753: (15) if r7 == 0x0 goto pc+111    ; R7_w=pkt(off=63,r=71,imm=0)
; __u8 connIdVersion = (connId[0] >> 6);
754: (71) r1 = *(u8 *)(r7 +0)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7_w=pkt(off=63,r=71,imm=0)
755: (bf) r2 = r1                     ; R1_w=scalar(id=1063,umax=255,var_off=(0x0; 0xff)) R2_w=scalar(id=1063,umax=255,var_off=(0x0; 0xff))
756: (77) r2 >>= 6                    ; R2=scalar(umax=3,var_off=(0x0; 0x3))
; if (connIdVersion == QUIC_CONNID_VERSION_V1) {
757: (15) if r2 == 0x3 goto pc+48     ; R2=scalar(umax=3,var_off=(0x0; 0x3))
758: (15) if r2 == 0x2 goto pc+59     ; R2=scalar(umax=3,var_off=(0x0; 0x3))
759: (55) if r2 != 0x1 goto pc+105    ; R2=1
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
760: (57) r1 &= 63                    ; R1_w=scalar(umax=63,var_off=(0x0; 0x3f))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
761: (67) r1 <<= 10                   ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
762: (71) r8 = *(u8 *)(r7 +1)         ; R7=pkt(off=63,r=71,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
763: (67) r8 <<= 2                    ; R8_w=scalar(umax=1020,var_off=(0x0; 0x3fc))
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
764: (4f) r8 |= r1                    ; R1_w=scalar(umax=64512,var_off=(0x0; 0xfc00)) R8_w=scalar()
765: (18) r1 = 0x100000000            ; R1_w=4294967296
; ((connId[0] & 0x3F) << 10) | (connId[1] << 2) | (connId[2] >> 6);
767: (71) r2 = *(u8 *)(r7 +2)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=63,r=71,imm=0)
768: (77) r2 >>= 6                    ; R2_w=scalar(umax=3,var_off=(0x0; 0x3))
769: (05) goto pc+56
frame 1: propagating r0
last_idx 826 first_idx 757
regs=2 stack=0 before 769: (05) goto pc+56
regs=2 stack=0 before 768: (77) r2 >>= 6
regs=2 stack=0 before 767: (71) r2 = *(u8 *)(r7 +2)
regs=2 stack=0 before 765: (18) r1 = 0x100000000
826: safe

from 759 to 865: safe

from 758 to 818: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=1063,umax=255,var_off=(0x0; 0xff)) R2=2 R6=ctx(off=0,imm=0) R7=pkt(off=63,r=71,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
818: (71) r1 = *(u8 *)(r7 +1)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=63,r=71,imm=0)
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
819: (67) r1 <<= 16                   ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
820: (71) r8 = *(u8 *)(r7 +2)         ; R7=pkt(off=63,r=71,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
821: (67) r8 <<= 8                    ; R8_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
822: (4f) r8 |= r1                    ; R1_w=scalar(umax=16711680,var_off=(0x0; 0xff0000)) R8_w=scalar()
823: (18) r1 = 0x200000000            ; R1_w=8589934592
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
825: (71) r2 = *(u8 *)(r7 +3)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=63,r=71,imm=0)
826: (57) r2 &= 255                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
827: (4f) r8 |= r2                    ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
828: (bf) r2 = r8                     ; R2_w=scalar(id=1064) R8_w=scalar(id=1064)
829: (67) r2 <<= 32                   ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
830: (c7) r2 s>>= 32                  ; R2_w=scalar(smin=-2147483648,smax=2147483647)
831: (b7) r3 = 1                      ; R3_w=1
; if (qpr.server_id > 0) {
832: (6d) if r3 s> r2 goto pc+32      ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
833: (77) r1 >>= 32                   ; R1_w=2
; if (cid_version == QUIC_CONNID_VERSION_V1) {
834: (15) if r1 == 0x3 goto pc+5
last_idx 834 first_idx 818
regs=2 stack=0 before 833: (77) r1 >>= 32
regs=2 stack=0 before 832: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 831: (b7) r3 = 1
regs=2 stack=0 before 830: (c7) r2 s>>= 32
regs=2 stack=0 before 829: (67) r2 <<= 32
regs=2 stack=0 before 828: (bf) r2 = r8
regs=2 stack=0 before 827: (4f) r8 |= r2
regs=2 stack=0 before 826: (57) r2 &= 255
regs=2 stack=0 before 825: (71) r2 = *(u8 *)(r7 +3)
regs=2 stack=0 before 823: (18) r1 = 0x200000000
frame 1: propagating r0
835: safe

from 832 to 865: safe

from 757 to 806: R0=map_value(off=0,ks=4,vs=104,imm=0) R1=scalar(id=1063,umax=255,var_off=(0x0; 0xff)) R2=3 R6=ctx(off=0,imm=0) R7=pkt(off=63,r=71,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=4,vs=104,imm=0) R10=fp0 fp-32=mmmm???? fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=mmmmmmmm fp-120=mmmmmmmm fp-136= fp-144=map_value fp-152=map_ptr fp-160=map_value fp-168=
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
806: (71) r1 = *(u8 *)(r7 +1)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=63,r=71,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
807: (67) r1 <<= 24                   ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
808: (71) r8 = *(u8 *)(r7 +2)         ; R7=pkt(off=63,r=71,imm=0) R8_w=scalar(umax=255,var_off=(0x0; 0xff))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
809: (67) r8 <<= 16                   ; R8_w=scalar(umax=16711680,var_off=(0x0; 0xff0000))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
810: (4f) r8 |= r1                    ; R1_w=scalar(umax=4278190080,var_off=(0x0; 0xff000000),s32_max=2130706432) R8_w=scalar()
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
811: (71) r1 = *(u8 *)(r7 +3)         ; R1_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=63,r=71,imm=0)
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
812: (67) r1 <<= 8                    ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00))
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
813: (4f) r8 |= r1                    ; R1_w=scalar(umax=65280,var_off=(0x0; 0xff00)) R8_w=scalar()
814: (18) r1 = 0x300000000            ; R1_w=12884901888
; (connId[1] << 24) | (connId[2] << 16) | (connId[3] << 8) | (connId[4]);
816: (71) r2 = *(u8 *)(r7 +4)         ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R7=pkt(off=63,r=71,imm=0)
817: (05) goto pc+8
; result.server_id = (connId[1] << 16) | (connId[2] << 8) | (connId[3]);
826: (57) r2 &= 255                   ; R2_w=scalar(umax=255,var_off=(0x0; 0xff))
; 
827: (4f) r8 |= r2                    ; R2_w=scalar(umax=255,var_off=(0x0; 0xff)) R8_w=scalar()
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
828: (bf) r2 = r8                     ; R2_w=scalar(id=1065) R8_w=scalar(id=1065)
829: (67) r2 <<= 32                   ; R2_w=scalar(smax=9223372032559808512,umax=18446744069414584320,var_off=(0x0; 0xffffffff00000000),s32_min=0,s32_max=0,u32_max=0)
830: (c7) r2 s>>= 32                  ; R2_w=scalar(smin=-2147483648,smax=2147483647)
831: (b7) r3 = 1                      ; R3_w=1
; if (qpr.server_id > 0) {
832: (6d) if r3 s> r2 goto pc+32      ; R2_w=scalar(umin=1,umax=2147483647,var_off=(0x0; 0x7fffffff)) R3_w=1
; struct quic_parse_result qpr = parse_quic(data, data_end, is_ipv6, &pckt);
833: (77) r1 >>= 32
frame 1: propagating r0
last_idx 834 first_idx 806
regs=2 stack=0 before 833: (77) r1 >>= 32
regs=2 stack=0 before 832: (6d) if r3 s> r2 goto pc+32
regs=2 stack=0 before 831: (b7) r3 = 1
regs=2 stack=0 before 830: (c7) r2 s>>= 32
regs=2 stack=0 before 829: (67) r2 <<= 32
regs=2 stack=0 before 828: (bf) r2 = r8
regs=2 stack=0 before 827: (4f) r8 |= r2
regs=2 stack=0 before 826: (57) r2 &= 255
regs=2 stack=0 before 817: (05) goto pc+8
regs=2 stack=0 before 816: (71) r2 = *(u8 *)(r7 +4)
regs=2 stack=0 before 814: (18) r1 = 0x300000000
834: safe

from 832 to 865: safe

from 753 to 865: safe

from 752 to 865: safe

from 704 to 865: safe

from 695 to 1857: safe

from 411 to 869: safe

from 380 to 383: R0=map_value(off=0,ks=4,vs=16,imm=0) R1=0 R6=ctx(off=0,imm=0) R7=pkt(off=0,r=62,imm=0) R8=pkt_end(off=0,imm=0) R9=map_value(off=0,ks=20,vs=8,imm=0) R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm fp-120=mmmm???? fp-136= fp-144=map_value fp-160=map_value
; vip_num = vip_info->vip_num;
383: (61) r1 = *(u32 *)(r9 +4)        ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R9=map_value(off=0,ks=20,vs=8,imm=0)
384: (7b) *(u64 *)(r10 -168) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-168_w=
; vip_num = vip_info->vip_num;
385: (63) *(u32 *)(r10 -108) = r1     ; R1_w=scalar(umax=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-112=mmmmmmmm
; __u32 cpu_num = bpf_get_smp_processor_id();
386: (85) call bpf_get_smp_processor_id#8     ; R0_w=scalar()
; __u32 cpu_num = bpf_get_smp_processor_id();
387: (63) *(u32 *)(r10 -120) = r0     ; R0_w=scalar() R10=fp0 fp-120=mmmmmmmm
388: (bf) r2 = r10                    ; R2_w=fp0 R10=fp0
; 
389: (07) r2 += -120                  ; R2_w=fp-120
; void* lru_map = bpf_map_lookup_elem(&lru_mapping, &cpu_num);
390: (18) r1 = 0xffffa0376748a000     ; R1_w=map_ptr(off=0,ks=4,vs=4,imm=0)
392: (85) call bpf_map_lookup_elem#1
393: safe

from 372 to 1858: safe

from 362 to 1858: safe

from 355 to 358: R0=map_value(off=0,ks=20,vs=8,imm=0) R1=scalar(umax=136,var_off=(0x0; 0x88)) R6=ctx(off=0,imm=0) R7=pkt(off=0,r=62,imm=0) R8=pkt_end(off=0,imm=0) R9=2 R10=fp0 fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=mmmmmmmm fp-80=mmmmmmmm fp-88=????mmmm fp-96=mmmmmmmm fp-104=mmmmmmmm fp-112=????mmmm fp-136=
; if (data_end - data > MAX_PCKT_SIZE) {
358: (bf) r1 = r8                     ; R1_w=pkt_end(off=0,imm=0) R8=pkt_end(off=0,imm=0)
359: (1f) r1 -= r7                    ; R1_w=scalar() R7=pkt(off=0,r=62,imm=0)
360: (b7) r9 = 1                      ; R9_w=1
361: (79) r2 = *(u64 *)(r10 -136)
362: safe

from 351 to 1858: safe

from 341 to 358: safe

from 316 to 1858: safe

from 166 to 1858: safe

from 156 to 1858: safe

from 6 to 1858: safe
verification time 37529 usec
stack depth 208
processed 16753 insns (limit 1000000) max_states_per_insn 7 total_states 1299 peak_states 736 mark_read 58
-- END PROG LOAD LOG --
Error: failed to pin program xdp
Warning: bpftool is now running in libbpf strict mode and has more stringent requirements about BPF programs.
If it used to work for this object file but now doesn't, see --legacy option for more details.

